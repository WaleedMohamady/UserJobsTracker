{"version":3,"sources":["raw-mjs/kendo.dataviz.sparkline.js"],"names":["window","kendo","dataviz","constants","Chart","elementSize","deepExtend","SharedTooltip$1","SharedTooltip","extend","_slotAnchor","coords","slot","vertical","this","plotArea","categoryAxis","options","align","horizontal","point","Point","box","x2","center","y","x","_defaultAnchor","NO_CROSSHAIR","BAR","BULLET","hide","children","state","idx","length","child","style","display","show","wrapNumber","value","isNumber","Sparkline","_setElementClass","element","addClass","_initElement","fn","call","_initialWidth","Math","floor","width","_resize","childNodes","_modelOptions","chartOptions","stage","_surfaceWrap","displayState","space","document","createElement","innerHTML","appendChild","_autoWidth","height","transitions","chartArea","inline","removeChild","surface","resize","_createPlotArea","skipSeries","_calculateWidth","margin","getSpacing","charts","total","i","currentChart","firstSeries","series","type","PIE","pointsCount","categoriesCount","isStacked","inArray","COLUMN","VERTICAL_BULLET","seriesOptions","max","size","pointWidth","left","right","_createSharedTooltip","_plotArea","normalizeOptions","userOptions","isArray","seriesDefaults","data","crosshair","visible","setDefaultOptions","axisDefaults","majorGridLines","valueAxis","narrowRange","area","line","bar","stack","padding","overlay","gradient","highlight","border","markers","tooltip","shared","legend","panes","clip","$","ui","KendoSparkline","ChartInstanceObserver","init","ObservableArray","_createChart","themeOptions","_instance","observer","sender","rtl","_isRtl","_createTooltip","SparklineTooltip","name","plugin","Tooltip","animation","duration","_hideElement","remove","jQuery","__meta__","id","category","description","depends","kendo$1"],"mappings":"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","file":"kendo.dataviz.sparkline.js","sourcesContent":["import './kendo.dataviz.chart.js';\n\n/***********************************************************************\n * WARNING: this file is auto-generated.  If you change it directly,\n * your modifications will eventually be lost.  The source code is in\n * `kendo-charts` repository, you should make your changes there and\n * run `src-modules/sync.sh` in this repository.\n */\n\n(function() {\n/* eslint-disable space-before-blocks, space-before-function-paren */\n\nwindow.kendo.dataviz = window.kendo.dataviz || {};\nvar dataviz = kendo.dataviz;\nvar constants = dataviz.constants;\nvar Chart = dataviz.Chart;\nvar elementSize = dataviz.elementSize;\nvar deepExtend = dataviz.deepExtend;\n\nvar TOP_OFFSET = -2;\n\nvar SharedTooltip$1 = dataviz.SharedTooltip.extend({\n    _slotAnchor: function(coords, slot) {\n        var axis = this.plotArea.categoryAxis;\n        var vertical = axis.options.vertical;\n        var align = vertical ? {\n            horizontal: \"left\",\n            vertical: \"center\"\n        } : {\n            horizontal: \"center\",\n            vertical: \"bottom\"\n        };\n\n        var point;\n\n        if (vertical) {\n            point = new dataviz.Point(this.plotArea.box.x2, slot.center().y);\n        } else {\n            point = new dataviz.Point(slot.center().x, TOP_OFFSET);\n        }\n\n        return {\n            point: point,\n            align: align\n        };\n    },\n\n    _defaultAnchor: function(point, slot) {\n        return this._slotAnchor({}, slot);\n    }\n});\n\nvar DEAULT_BAR_WIDTH = 150;\nvar DEAULT_BULLET_WIDTH = 150;\nvar NO_CROSSHAIR = [ constants.BAR, constants.BULLET ];\n\nfunction hide(children) {\n    var state = [];\n    for (var idx = 0; idx < children.length; idx++) {\n        var child = children[idx];\n        state[idx] = child.style.display;\n        child.style.display = \"none\";\n    }\n\n    return state;\n}\n\nfunction show(children, state) {\n    for (var idx = 0; idx < children.length; idx++) {\n        children[idx].style.display = state[idx];\n    }\n}\n\nfunction wrapNumber(value) {\n    return dataviz.isNumber(value) ? [ value ] : value;\n}\n\nvar Sparkline = Chart.extend({\n    _setElementClass: function(element) {\n        dataviz.addClass(element, 'k-sparkline');\n    },\n\n    _initElement: function(element) {\n        Chart.fn._initElement.call(this, element);\n\n        this._initialWidth = Math.floor(elementSize(element).width);\n    },\n\n    _resize: function() {\n        var element = this.element;\n        var state = hide(element.childNodes);\n\n        this._initialWidth = Math.floor(elementSize(element).width);\n\n        show(element.childNodes, state);\n\n        Chart.fn._resize.call(this);\n    },\n\n    _modelOptions: function() {\n        var chartOptions = this.options;\n        var stage = this._surfaceWrap();\n        var displayState = hide(stage.childNodes);\n\n        var space = document.createElement('span');\n        space.innerHTML = '&nbsp;';\n\n        stage.appendChild(space);\n\n        var options = deepExtend({\n            width: this._autoWidth,\n            height: elementSize(stage).height,\n            transitions: chartOptions.transitions\n        }, chartOptions.chartArea, {\n            inline: true,\n            align: false\n        });\n\n        elementSize(stage, {\n            width: options.width,\n            height: options.height\n        });\n\n        stage.removeChild(space);\n\n        show(stage.childNodes, displayState);\n\n        if (this.surface) {\n            this.surface.resize();\n        }\n\n        return options;\n    },\n\n    _surfaceWrap: function() {\n        if (!this.stage) {\n            var stage = this.stage = document.createElement('span');\n            this.element.appendChild(stage);\n        }\n        return this.stage;\n    },\n\n    _createPlotArea: function(skipSeries) {\n        var plotArea = Chart.fn._createPlotArea.call(this, skipSeries);\n        this._autoWidth = this._initialWidth || this._calculateWidth(plotArea);\n\n        return plotArea;\n    },\n\n    _calculateWidth: function(plotArea) {\n        var options = this.options;\n        var margin = dataviz.getSpacing(options.chartArea.margin);\n        var charts = plotArea.charts;\n        var stage = this._surfaceWrap();\n        var total = 0;\n\n        for (var i = 0; i < charts.length; i++) {\n            var currentChart = charts[i];\n            var firstSeries = (currentChart.options.series || [])[0];\n            if (!firstSeries) {\n                continue;\n            }\n\n            if (firstSeries.type === constants.BAR) {\n                return DEAULT_BAR_WIDTH;\n            }\n\n            if (firstSeries.type === constants.BULLET) {\n                return DEAULT_BULLET_WIDTH;\n            }\n\n            if (firstSeries.type === constants.PIE) {\n                return elementSize(stage).height;\n            }\n\n            var categoryAxis = currentChart.categoryAxis;\n            if (categoryAxis) {\n                var pointsCount = categoryAxis.categoriesCount() *\n                    (!currentChart.options.isStacked && dataviz.inArray(firstSeries.type, [ constants.COLUMN, constants.VERTICAL_BULLET ]) ? currentChart.seriesOptions.length : 1);\n\n                total = Math.max(total, pointsCount);\n            }\n        }\n\n        var size = total * options.pointWidth;\n        if (size > 0) {\n            size += margin.left + margin.right;\n        }\n\n        return size;\n    },\n\n    _createSharedTooltip: function(options) {\n        return new SharedTooltip$1(this._plotArea, options);\n    }\n});\n\nSparkline.normalizeOptions = function(userOptions) {\n    var options = wrapNumber(userOptions);\n\n    if (dataviz.isArray(options)) {\n        options = { seriesDefaults: { data: options } };\n    } else {\n        options = deepExtend({}, options);\n    }\n\n    if (!options.series) {\n        options.series = [ { data: wrapNumber(options.data) } ];\n    }\n\n    deepExtend(options, {\n        seriesDefaults: {\n            type: options.type\n        }\n    });\n\n    if (dataviz.inArray(options.series[0].type, NO_CROSSHAIR) ||\n        dataviz.inArray(options.seriesDefaults.type, NO_CROSSHAIR)) {\n        options = deepExtend({}, {\n            categoryAxis: {\n                crosshair: {\n                    visible: false\n                }\n            }\n        }, options);\n    }\n\n    return options;\n};\n\ndataviz.setDefaultOptions(Sparkline, {\n    chartArea: {\n        margin: 2\n    },\n    axisDefaults: {\n        visible: false,\n        majorGridLines: {\n            visible: false\n        },\n        valueAxis: {\n            narrowRange: true\n        }\n    },\n    seriesDefaults: {\n        type: \"line\",\n        area: {\n            line: {\n                width: 0.5\n            }\n        },\n        bar: {\n            stack: true\n        },\n        padding: 2,\n        width: 0.5,\n        overlay: {\n            gradient: null\n        },\n        highlight: {\n            visible: false\n        },\n        border: {\n            width: 0\n        },\n        markers: {\n            size: 2,\n            visible: false\n        }\n    },\n    tooltip: {\n        visible: true,\n        shared: true\n    },\n    categoryAxis: {\n        crosshair: {\n            visible: true,\n            tooltip: {\n                visible: false\n            }\n        }\n    },\n    legend: {\n        visible: false\n    },\n    transitions: false,\n\n    pointWidth: 5,\n\n    panes: [ { clip: false } ]\n});\n\nkendo.deepExtend(kendo.dataviz, {\n    Sparkline: Sparkline\n});\n\n})();\n\n(function($) {\n\nvar dataviz = kendo.dataviz;\nvar Chart = dataviz.ui.Chart;\nvar KendoSparkline = dataviz.Sparkline;\nvar ChartInstanceObserver = dataviz.ChartInstanceObserver;\n\nvar extend = $.extend;\n\nvar Sparkline = Chart.extend({\n\n    init: function(element, userOptions) {\n        var options = userOptions;\n        if (options instanceof kendo.data.ObservableArray) {\n            options = { seriesDefaults: { data: options } };\n        }\n\n        Chart.fn.init.call(this, element, KendoSparkline.normalizeOptions(options));\n    },\n\n    _createChart: function(options, themeOptions) {\n        this._instance = new KendoSparkline(this.element[0], options, themeOptions, {\n            observer: new ChartInstanceObserver(this),\n            sender: this,\n            rtl: this._isRtl()\n        });\n    },\n\n    _createTooltip: function() {\n        return new SparklineTooltip(this.element, extend({}, this.options.tooltip, {\n            rtl: this._isRtl()\n        }));\n    },\n\n    options: {\n        name: \"Sparkline\",\n        chartArea: {\n            margin: 2\n        },\n        axisDefaults: {\n            visible: false,\n            majorGridLines: {\n                visible: false\n            },\n            valueAxis: {\n                narrowRange: true\n            }\n        },\n        seriesDefaults: {\n            type: \"line\",\n            area: {\n                line: {\n                    width: 0.5\n                }\n            },\n            bar: {\n                stack: true\n            },\n            padding: 2,\n            width: 0.5,\n            overlay: {\n                gradient: null\n            },\n            highlight: {\n                visible: false\n            },\n            border: {\n                width: 0\n            },\n            markers: {\n                size: 2,\n                visible: false\n            }\n        },\n        tooltip: {\n            visible: true,\n            shared: true\n        },\n        categoryAxis: {\n            crosshair: {\n                visible: true,\n                tooltip: {\n                    visible: false\n                }\n            }\n        },\n        legend: {\n            visible: false\n        },\n        transitions: false,\n\n        pointWidth: 5,\n\n        panes: [{\n            clip: false\n        }]\n    }\n});\n\ndataviz.ui.plugin(Sparkline);\n\nvar SparklineTooltip = dataviz.Tooltip.extend({\n    options: {\n        animation: {\n            duration: 0\n        }\n    },\n\n    _hideElement: function() {\n        if (this.element) {\n            this.element.hide().remove();\n        }\n    }\n});\n\ndataviz.SparklineTooltip = SparklineTooltip;\n\n})(window.kendo.jQuery);\n\nvar __meta__ = {\n    id: \"dataviz.sparkline\",\n    name: \"Sparkline\",\n    category: \"dataviz\",\n    description: \"Sparkline widgets.\",\n    depends: [ \"dataviz.chart\" ]\n};\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}