{"version":3,"sources":["raw-mjs/kendo.gantt.editors.js"],"names":["__meta__","id","name","category","description","depends","hidden","$","undefined$1","kendo","window","ui","Observable","Widget","encode","htmlEncode","extend","GRID_HEIGHT","ganttStyles","form","editForm","formContainer","resourcesFormContainer","message","buttonsContainer","button","buttonDefaults","editField","editLabel","resourcesField","PopupEditor","init","element","options","fn","call","this","destroy","close","unbind","that","editable","container","data","popup","is","trigger","bind","editTask","task","plannedEditors","_createPopupEditor","fields","customFields","model","template","map","value","key","field","general","_fieldsGeneral","resources","dependencies","_fieldsDependencies","Object","keys","GanttTask","length","other","_fieldsOther","showDialog","buttonsEl","popupStyles","wrapper","dialogEl","format","uid","appendTo","messages","append","text","kendoButton","themeColor","icon","click","e","preventDefault","callback","cancel","kendoWindow","modal","autoFocus","resizable","draggable","title","visible","deactivate","getKendoWindow","center","open","find","_buildButtons","save","_onSave","_onCancel","fillMode","_onDelete","_buildEditTemplate","settings","Template","templateSettings","html","unescape","renderForm","attr","formEl","applyStylesFromKendoAttributes","editableWidget","width","editor","editorTitle","actions","userTriggered","_initForm","kendoEditable","clearContainer","validateOnBlur","target","cycleForm","nameDdlDs","dataSource","filter","i","typeDs","fullData","excluded","ddlData","modelFields","startText","actualStart","start","endText","actualEnd","end","colSpan","push","plannedStart","validation","editorOptions","componentType","plannedEnd","taskAllChildren","n","some","percentComplete","hint","percentCompleteHint","parent","optionLabel","parentOptionLabel","enable","dataValueField","dataTextField","valuePrimitive","toString","item","label","_readonlyEditor","_gridOptions","type","keyType","taskId","dependencyData","view","d","schema","from","required","defaultValue","columns","selectable","values","dependencyType","toolbar","addNew","remove","grid","closest","getKendoGrid","ds","selected","select","items","each","row","dataItem","sortable","navigatable","height","edit","setOptions","resourceField","get","tabStripDs","_tabStripSource","kendoTabStrip","dataContentField","tabStrip","sender","contentElement","index","validatable","validate","validator","_initGeneral","resourceEditor","kendoGrid","_initOther","kendoForm","layout","cols","gutter","rows","formData","buttonsTemplate","Date","found","prevData","newData","updateInfo","predeGrid","sucGrid","args","createdData","updatedData","successorId","concat","predecessorId","toJSON","dirty","updateDependencies","destroyed","created","updated","Array","isArray","val","updateModel","content","predecessors","successors","ResourceEditor","_resourceGrid","ddlDs","Grid","resourcesHeader","unitsHeader","valueFormat","filterable","selectedKeyNames","unitsValidation","ddl","currentId","filters","r","f","operator","logic","gantt","jQuery","kendo$1"],"mappings":"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","file":"kendo.gantt.editors.js","sourcesContent":["import './kendo.data.js';\nimport './kendo.popup.js';\nimport './kendo.window.js';\nimport './kendo.gantt.data.js';\nimport './kendo.grid.js';\nimport './kendo.datetimepicker.js';\nimport './kendo.numerictextbox.js';\nimport './kendo.textbox.js';\nimport './kendo.form.js';\nimport './kendo.tabstrip.js';\n\nvar __meta__ = {\n    id: \"gantt.editors\",\n    name: \"GanttEditors\",\n    category: \"web\",\n    description: \"The Gantt component editors.\",\n    depends: [ \"data\", \"popup\", \"window\", \"gantt.data\", \"grid\", \"datetimepicker\", \"numerictextbox\", \"textbox\", \"form\", \"tabstrip\"],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Observable = kendo.Observable,\n        Widget = ui.Widget,\n        encode = kendo.htmlEncode,\n        extend = $.extend,\n        PERCENTAGE_FORMAT = \"p0\",\n        GRID_HEIGHT = \"23em\",\n        TAB_HEIGHT = \"28em\",\n        STRING = \"string\";\n\n    var ganttStyles = {\n        buttonDelete: \"k-gantt-delete\",\n        buttonCancel: \"k-gantt-cancel\",\n        buttonSave: \"k-gantt-update\",\n        focused: \"k-focus\",\n        gridContent: \"k-grid-content\",\n        hovered: \"k-hover\",\n        item: \"k-item k-menu-item\",\n        popupWrapper: \"k-popup k-menu-popup\",\n        popupList: \"k-menu-group k-menu-group-md k-reset\",\n        popup: {\n            form: \"k-popup-edit-form\",\n            editForm: \"k-gantt-edit-form\",\n            formContainer: \"k-edit-form-container\",\n            resourcesFormContainer: \"k-resources-form-container\",\n            message: \"k-popup-message\",\n            buttonsContainer: \"k-edit-buttons k-actions\",\n            button: \"k-button\",\n            buttonDefaults: \"k-button-md k-rounded-md k-button-solid k-button-solid-base\",\n            editField: \"k-edit-field\",\n            editLabel: \"k-edit-label\",\n            resourcesField: \"k-gantt-resources\"\n        },\n        primary: \"k-button-solid-primary\",\n        toolbar: {\n            appendButton: \"k-gantt-create\"\n        }\n    };\n\n    var PopupEditor = Observable.extend({\n        init: function(element, options) {\n            Observable.fn.init.call(this);\n\n            this.element = element;\n            this.options = extend(true, {}, this.options, options);\n        },\n\n        destroy: function() {\n            this.close();\n            this.unbind();\n        },\n\n        close: function() {\n            var that = this;\n\n            var destroy = function() {\n                if (that.editable) {\n                    that.container.data(\"kendoWindow\").destroy();\n                    that.editable = null;\n                    that.container = null;\n                }\n\n                if (that.popup) {\n                    that.popup.destroy();\n                    that.popup = null;\n                }\n            };\n\n            if (that.editable && that.container.is(\":visible\")) {\n                that.trigger(\"close\", { window: that.container });\n                that.container.data(\"kendoWindow\").bind(\"deactivate\", destroy).close();\n            } else {\n                destroy();\n            }\n        },\n\n        editTask: function(task, plannedEditors) {\n            this.task = task;\n            this.plannedEditors = plannedEditors;\n            this.editable = this._createPopupEditor();\n        },\n\n        fields: function() {\n            var options = this.options,\n                model = this.task,\n                fields = {},\n                customFields;\n\n            if (options.editable.template) {\n                return $.map(model.fields, function(value, key) {\n                    return { field: key };\n                });\n            } else {\n                fields.general = this._fieldsGeneral();\n\n                if (options.resources) {\n                    fields.resources = [ { field: \"resources\" } ];\n                }\n\n                if (options.dependencies) {\n                    fields.dependencies = this._fieldsDependencies(model);\n                }\n\n                customFields = extend(true, {}, model.fields);\n                Object.keys(kendo.data.GanttTask.fields).map(key => {\n                    delete customFields[key];\n                });\n\n                if (Object.keys(customFields).length > 0) {\n                    fields.other = this._fieldsOther(customFields);\n                }\n            }\n\n            return fields;\n        },\n\n\n        showDialog: function(options) {\n            var popupStyles = ganttStyles.popup,\n                wrapper = this.element,\n                task = options.model,\n                that = this,\n                dialogEl = $(kendo.format('<div class=\"' + popupStyles.formContainer + '\" data-uid=\"' + task.uid + '\">')).appendTo(wrapper),\n                messages = this.options.messages,\n                buttonsEl;\n\n            dialogEl.append($(\"<p>\" + options.text + \"</p>\"));\n            buttonsEl = $('<div class=\"' + popupStyles.buttonsContainer + '\">');\n            dialogEl.append(buttonsEl);\n\n            buttonsEl.append($(\"<button class='\" + ganttStyles.buttonDelete + \"'>\" + encode(messages.destroy) + \"</button>\").kendoButton({\n                name: \"delete\",\n                themeColor: \"primary\",\n                icon: \"trash\",\n                click: (e) => {\n                    e.preventDefault();\n                    popup.close();\n                    options.callback();\n                }\n            }));\n\n            buttonsEl.append($(\"<button class='\" + ganttStyles.buttonCancel + \"'>\" + encode(messages.cancel) + \"</button>\").kendoButton({\n                name: \"cancel\",\n                icon: \"cancel\",\n                click: (e) => {\n                    e.preventDefault();\n                    popup.close();\n                    options.callback(true);\n                }\n            }));\n\n            if (this.popup) {\n                this.popup.destroy();\n            }\n\n            var popup = this.popup = dialogEl.kendoWindow({\n                modal: true,\n                autoFocus: false,\n                resizable: false,\n                draggable: false,\n                title: options.title,\n                visible: false,\n                deactivate: function() {\n                    this.destroy();\n                    that.trigger(\"close\", { window: dialogEl });\n                }\n            })\n            .getKendoWindow();\n\n            popup.center().open();\n\n            popup.element.find(\".k-button-solid-primary\").trigger(\"focus\");\n        },\n\n        _buildButtons: function(dialogEl) {\n            var messages = this.options.messages,\n                buttonsEl = $('<div class=\"' + ganttStyles.popup.buttonsContainer + '\">');\n\n            buttonsEl.appendTo(dialogEl);\n\n            buttonsEl.append($(\"<button class='\" + ganttStyles.buttonSave + \"'>\" + encode(messages.save) + \"</button>\").kendoButton({\n                name: \"update\",\n                themeColor: \"primary\",\n                icon: \"save\",\n                click: this._onSave.bind(this)\n            }));\n            buttonsEl.append($(\"<button class='\" + ganttStyles.buttonCancel + \"'>\" + encode(messages.cancel) + \"</button>\").kendoButton({\n                name: \"cancel\",\n                icon: \"cancel\",\n                click: this._onCancel.bind(this)\n            }));\n            buttonsEl.append($(\"<span class='k-spacer'>\"));\n\n            if (this.options.editable.destroy !== false) {\n                buttonsEl.append($(\"<button class='\" + ganttStyles.buttonDelete + \"'>\" + encode(messages.destroy) + \"</button>\").kendoButton({\n                    name: \"delete\",\n                    themeColor: \"primary\",\n                    icon: \"trash\",\n                    fillMode: \"flat\",\n                    click: this._onDelete.bind(this)\n                }));\n            }\n        },\n\n        _buildEditTemplate: function(model, dialogEl) {\n            var template = this.options.editable.template;\n            var settings = extend({}, kendo.Template, this.options.templateSettings);\n            var html = \"\";\n\n            if (template) {\n                if (typeof template === STRING) {\n                    template = kendo.unescape(template);\n                }\n\n                html += (kendo.template(template, settings))(model);\n            } else {\n                this.renderForm = true;\n                html += `<div role=\"form\" class=\"k-gantt-edit-tabstrip\" ${kendo.attr(\"style-min-height\")}=\"${TAB_HEIGHT}\"></div>`;\n            }\n\n            var formEl = $(html);\n            kendo.applyStylesFromKendoAttributes(formEl, [\"min-height\"]);\n            formEl.appendTo(dialogEl);\n        },\n\n        _createPopupEditor: function() {\n            var that = this;\n            var options = {};\n            var messages = this.options.messages;\n            var popupStyles = ganttStyles.popup;\n            var editableWidget;\n            var task = this.task;\n            var container = $(kendo.format('<div {0}=\"{1}\" class=\"{2} {3}\">', kendo.attr(\"uid\"), task.uid, popupStyles.form, popupStyles.editForm));\n\n            container.appendTo(this.element);\n\n            this._buildEditTemplate(task, container);\n            this._buildButtons(container);\n\n            this.container = container.kendoWindow(extend({\n                width: 554,\n                modal: true,\n                resizable: false,\n                draggable: true,\n                title: messages.editor.editorTitle,\n                visible: false,\n                actions: [ \"Minimize\", \"Maximize\", \"Close\" ],\n                close: function(e) {\n                    if (e.userTriggered) {\n                        if (that.trigger(\"cancel\", { container: container, model: task })) {\n                            e.preventDefault();\n                        }\n                    }\n                }\n            }, options));\n\n            if (this.renderForm) {\n                editableWidget = this._initForm();\n            } else {\n                editableWidget = container.kendoEditable({\n                    model: task,\n                    clearContainer: false,\n                    validateOnBlur: true,\n                    target: that.options.target\n                })\n                .data(\"kendoEditable\");\n            }\n\n            kendo.cycleForm(container);\n\n            if (!this.trigger(\"edit\", { container: container, model: task })) {\n                container.data(\"kendoWindow\").center().open();\n            } else {\n                that.trigger(\"cancel\", { container: container, model: task });\n            }\n\n            return editableWidget;\n        },\n\n        _fieldsDependencies: function(model) {\n            var options = this.options,\n                ds = options.target.dataSource,\n                nameDdlDs = ds.data().filter(i => i.id !== model.id).map(i => ({ text: i.title, value: i.id })),\n                typeDs = [\n                    { value: 0, text: \"Finish-Finish\" },\n                    { value: 1, text: \"Finish-Start\" },\n                    { value: 2, text: \"Start-Finish\" },\n                    { value: 3, text: \"Start-Start\" }\n                ];\n\n            return {\n                nameDdlDs, typeDs\n            };\n        },\n\n        _fieldsGeneral: function() {\n            var that = this,\n                options = this.options,\n                dataSource = options.target.dataSource,\n                messages = options.messages.editor,\n                task = this.task,\n                modelFields = task.fields,\n                startText = this.plannedEditors ? messages.actualStart : messages.start,\n                endText = this.plannedEditors ? messages.actualEnd : messages.end,\n                fullData, excluded, ddlData;\n\n            var general = [\n                { field: \"title\", title: messages.title, colSpan: 4 }\n            ];\n\n            if (this.plannedEditors) {\n                general.push({\n                    field: \"plannedStart\",\n                    title: messages.plannedStart,\n                    colSpan: 2,\n                    editor: \"DateTimePicker\",\n                    validation: modelFields.plannedStart.validation,\n                    editorOptions: {\n                        componentType: \"modern\"\n                    }\n                });\n\n                general.push({\n                    field: \"plannedEnd\",\n                    title: messages.plannedEnd,\n                    colSpan: 2,\n                    editor: \"DateTimePicker\",\n                    validation: modelFields.plannedEnd.validation,\n                    editorOptions: {\n                        componentType: \"modern\"\n                    }\n                });\n            }\n\n            fullData = dataSource.data();\n            excluded = dataSource.taskAllChildren(task);\n            excluded.push(task);\n            ddlData = fullData.filter(n => !excluded.some(e => e.id === n.id));\n\n            general.push({\n                field: \"start\",\n                title: startText,\n                colSpan: 2,\n                editor: \"DateTimePicker\",\n                validation: modelFields.start.validation,\n                editorOptions: {\n                    componentType: \"modern\"\n                }\n            });\n            general.push({\n                field: \"end\",\n                title: endText,\n                colSpan: 2,\n                editor: \"DateTimePicker\",\n                validation: modelFields.start.validation,\n                editorOptions: {\n                    componentType: \"modern\"\n                }\n            });\n            general.push({\n                field: \"percentComplete\",\n                title: messages.percentComplete,\n                format: PERCENTAGE_FORMAT,\n                colSpan: 1,\n                hint: messages.percentCompleteHint\n            });\n            general.push({\n                field: \"parentId\",\n                title: messages.parent,\n                colSpan: 4,\n                editor: \"DropDownList\",\n                editorOptions: {\n                    optionLabel: messages.parentOptionLabel,\n                    filter: \"contains\",\n                    dataSource: ddlData,\n                    enable: ddlData.length > 0,\n                    dataValueField: \"id\",\n                    dataTextField: \"title\",\n                    valuePrimitive: true,\n                    template: ({ title, start, end }) => `<span>${title} ${kendo.toString(start, \"d\")}-${kendo.toString(end, \"d\")}</span>`\n                }\n            });\n\n            general = general.map(function(item) {\n                item = extend(true, {\n                    label: item.title\n                }, item);\n\n                if (!task.editable || task.editable(item.field)) {\n                    return item;\n                } else {\n                    return extend(true, item, {\n                        editor: that._readonlyEditor.bind(that)\n                    });\n                }\n            });\n\n            return general;\n        },\n\n        _fieldsOther: function(other) {\n            var that = this,\n                task = this.task;\n\n            other = Object.keys(other).map(function(key) {\n                var item = other[key];\n\n                item = extend(true, {\n                    field: key,\n                    label: item.title\n                }, item);\n\n                if (!task.editable || task.editable(item.field)) {\n                    return item;\n                } else {\n                    return extend(true, item, {\n                        editor: that._readonlyEditor.bind(that)\n                    });\n                }\n            });\n\n            return other;\n        },\n\n        _gridOptions: function(dependencies, type, keyType, taskId) {\n            var messages = this.options.messages,\n                data;\n\n            if (!this.dependencyData) {\n                this.dependencyData = {};\n            }\n\n            data = this.dependencyData[type] = this.options.target.dependencies.view().filter(d => d[keyType] === taskId);\n\n            return {\n                dataSource: {\n                    data: data,\n                    schema: {\n                        model: {\n                            fields: {\n                                id: { from: \"id\" },\n                                [type]: { from: type, validation: { required: { message: messages.editor.name + \" is required\" } } },\n                                type: { from: \"type\", validation: { required: true }, defaultValue: 1 }\n                            }\n                        }\n                    }\n                },\n                columns: [{\n                    selectable: true,\n                    width: 50\n                },{\n                    field: type,\n                    title: messages.editor.name,\n                    values: dependencies.nameDdlDs\n                }, {\n                    field: \"type\",\n                    title: messages.editor.dependencyType,\n                    values: dependencies.typeDs,\n                    width: \"9em\"\n                }],\n                toolbar: [{\n                    name: \"create\",\n                    text: messages.editor.addNew\n                },{\n                    name: \"remove\",\n                    icon: \"minus\",\n                    text: messages.editor.remove,\n                    click: (e) => {\n                        var grid = e.target.closest(\".k-grid\").getKendoGrid(),\n                            ds = grid.dataSource,\n                            selected = grid.select(),\n                            items = [];\n\n                        if (selected && selected.length > 0) {\n                            selected.each((i, row) => {\n                                items.push(grid.dataItem($(row)));\n                            });\n\n                            items.map(i => {\n                                ds.remove(i);\n                            });\n                        }\n                    }\n                }],\n                editable: true,\n                sortable: true,\n                navigatable: true,\n                height: GRID_HEIGHT,\n                edit: function() {\n                    var select = $(\"[name=predecessorId], [name=successorId]\"),\n                        ddl;\n\n                    if (select.length) {\n                        ddl = select.data(\"kendoDropDownList\");\n                        ddl.setOptions({\n                            filter: \"contains\"\n                        });\n                    }\n                },\n            };\n        },\n\n        _initForm: function() {\n            var that = this,\n                task = that.task,\n                container = that.container,\n                resources = that.options.resources,\n                resourceField = task.get(resources.field),\n                fields = that.fields(),\n                tabStripDs = that._tabStripSource(fields, resourceField);\n\n            container.find(\".k-gantt-edit-tabstrip\").kendoTabStrip({\n                dataTextField: \"name\",\n                dataContentField: \"content\",\n                dataSource: tabStripDs,\n                value: that.options.messages.editor.general,\n                select: (e) => {\n                    var tabStrip = e.sender,\n                        contentElement = $(tabStrip.contentElement(tabStrip.select().index())),\n                        grid = contentElement.find(\".k-grid\").data(\"kendoGrid\"),\n                        form = contentElement.find(\".k-form\").data(\"kendoForm\");\n\n                    if (grid && grid.editable && grid.editable.validatable && !grid.editable.validatable.validate()) {\n                        e.preventDefault();\n                    } else if (form && !form.validator.validate()) {\n                        e.preventDefault();\n                    }\n                }\n            });\n\n            that._initGeneral(fields.general, task);\n\n            if (resourceField) {\n                that.resourceEditor = resources.editor(container.find(\".k-gantt-resources\"), task);\n            }\n\n            if (fields.dependencies) {\n                container.find(\".k-gantt-predecessors\").kendoGrid(that._gridOptions(fields.dependencies, \"predecessorId\", \"successorId\", task.id));\n                container.find(\".k-gantt-successors\").kendoGrid(that._gridOptions(fields.dependencies, \"successorId\", \"predecessorId\", task.id));\n            }\n\n            if (fields.other) {\n                that._initOther(fields.other, task);\n            }\n\n            return that.form.editable;\n        },\n\n        _initGeneral: function(items, task) {\n            this.form = this.container.find(\".k-gantt-form-default\").kendoForm({\n                layout: \"grid\",\n                grid: {\n                    cols: 4,\n                    gutter: {\n                        rows: 0,\n                        cols: 8\n                    }\n                },\n                items: items,\n                formData: task,\n                buttonsTemplate: () => \"\",\n                validatable: {\n                    validateOnBlur: true\n                }\n            }).data(\"kendoForm\");\n        },\n\n        _initOther: function(items, task) {\n            this.container.find(\".k-gantt-form-other\").kendoForm({\n                items: items,\n                formData: task,\n                buttonsTemplate: () => \"\",\n                validatable: {\n                    validateOnBlur: true\n                }\n            });\n        },\n\n        _readonlyEditor: function(container, options) {\n            var field = options.field,\n                value = '',\n                ds = this.options.target.dataSource;\n\n            if (options.model.get(field) !== null) {\n                value = options.model.get(field);\n\n                if (value instanceof Date) {\n                    value = kendo.toString(value, \"g\");\n                } else if (field === \"percentComplete\") {\n                    value = kendo.toString(value, options.format);\n                } else if (field === \"parentId\") {\n                    value = ds.get(value).title;\n                }\n            }\n\n            container.append(\"<span>\" + value + \"</span>\");\n        },\n\n        _onCancel: function() {\n            this.trigger(\"cancel\", { container: this.container, model: this.task });\n        },\n\n        _onDelete: function() {\n            this.trigger(\"remove\", { container: this.container, model: this.task });\n        },\n\n        _onSave: function() {\n            var task = this.task,\n                fields = [],\n                updateInfo = {},\n                field,\n                container = this.container,\n                predeGrid = container.find(\".k-gantt-predecessors\").getKendoGrid(),\n                sucGrid = container.find(\".k-gantt-successors\").getKendoGrid(),\n                found, prevData, newData, args = {}, createdData = [], updatedData = [];\n\n            if (predeGrid) {\n                prevData = this.dependencyData.successorId.concat(this.dependencyData.predecessorId);\n                newData = predeGrid.dataSource.view().toJSON().concat(sucGrid.dataSource.view().toJSON());\n\n                if (predeGrid && predeGrid.editable && predeGrid.editable.validatable && !predeGrid.editable.validatable.validate() ||\n                    sucGrid && sucGrid.editable && sucGrid.editable.validatable && !sucGrid.editable.validatable.validate()) {\n                        return;\n                    }\n\n                newData.map(n => {\n                    found = prevData.find(i => i.id === n.id);\n\n                    if (found) {\n                        if (found.dirty) {\n                            updatedData.push(n);\n                        }\n\n                        newData = newData.filter(i => i.id !== n.id);\n                        prevData = prevData.filter(i => i.id !== n.id);\n                    }\n                });\n\n                newData.map(i => {\n                    if (i.successorId) {\n                        if (!i.predecessorId) {\n                            i.predecessorId = task.get(\"id\");\n                        }\n\n                        createdData.push(i);\n                    } else if (i.predecessorId) {\n                        if (!i.successorId) {\n                            i.successorId = task.get(\"id\");\n                        }\n\n                        createdData.push(i);\n                    }\n                });\n\n                if (createdData.length > 0 || prevData.length > 0 || updatedData.length > 0) {\n                    args.updateDependencies = {\n                        destroyed: prevData,\n                        created: createdData,\n                        updated: updatedData\n                    };\n                }\n            }\n\n            if (Array.isArray(this.fields())) {\n                fields = this.fields();\n            } else {\n                Object.values(this.fields()).map((val) => {\n                    if (Array.isArray(val)) {\n                        fields.push(...val);\n                    }\n                });\n            }\n\n            if (this.resourceEditor) {\n                if (!this.resourceEditor.updateModel()) {\n                    return;\n                }\n            }\n\n            for (var i = 0, length = fields.length; i < length; i++) {\n                field = fields[i].field;\n                updateInfo[field] = task.get(field);\n            }\n\n            this.trigger(\"save\", $.extend({}, args, {\n                container: container,\n                model: task,\n                updateInfo: updateInfo\n            }));\n        },\n\n        _tabStripSource: function(fields, resourceField) {\n            var messages = this.options.messages.editor,\n                dependencies = fields.dependencies,\n                tabStripDs = [{\n                    name: messages.general,\n                    content: \"<div class='k-gantt-form-default'></div>\"\n                }];\n\n            if (resourceField) {\n                tabStripDs.push({\n                    name: messages.resources,\n                    content: \"<div class='k-gantt-resources'></div>\"\n                });\n            }\n\n            if (dependencies) {\n                tabStripDs.push({\n                    name: messages.predecessors,\n                    content: \"<div class='k-gantt-predecessors'></div>\"\n                });\n                tabStripDs.push({\n                    name: messages.successors,\n                    content: \"<div class='k-gantt-successors'></div>\"\n                });\n            }\n\n            if (fields.other) {\n                tabStripDs.push({\n                    name: messages.other,\n                    content: \"<div class='k-gantt-form-other'></div>\"\n                });\n            }\n\n            return tabStripDs;\n        }\n    });\n    var ResourceEditor = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this.wrapper = this.element;\n            this.model = this.options.model;\n            this.resourcesField = this.options.resourcesField;\n\n            this._resourceGrid();\n        },\n\n        destroy: function() {\n            this.grid = null;\n\n            Widget.fn.destroy.call(this);\n\n            this.element = this.wrapper = null;\n        },\n\n        updateModel: function() {\n            var resources = [];\n            var item, value;\n            var grid = this.grid;\n            var data = grid.dataSource.data();\n            var editable = grid.editable;\n\n            if (editable && editable.validatable && !editable.validatable.validate()) {\n                return false;\n            }\n\n            for (var i = 0, length = data.length; i < length; i++) {\n                item = data[i];\n                value = item.get(\"value\");\n\n                if (item.id !== undefined$1 && value !== null && value > 0) {\n                    resources.push(data[i]);\n                }\n            }\n\n            this.model[this.resourcesField] = resources;\n\n            return true;\n        },\n\n        _resourceGrid: function() {\n            var that = this;\n            var messages = this.options.messages;\n            var options = that.options;\n            var element = this.wrapper;\n            var ddlDs = options.resources;\n\n            that.grid = new kendo.ui.Grid(element, {\n                columns: [{\n                    selectable: true,\n                    width: 50\n                },{\n                    field: \"id\",\n                    title: messages.resourcesHeader,\n                    values: ddlDs\n                },{\n                    field: \"value\",\n                    title: messages.unitsHeader,\n                    template: function(dataItem) {\n                        var valueFormat = dataItem.format || PERCENTAGE_FORMAT;\n                        var value = dataItem.value !== null ? dataItem.value : \"\";\n\n                        return valueFormat ? kendo.toString(value, valueFormat) : value;\n                    },\n                    width: 120\n                }],\n                height: GRID_HEIGHT,\n                sortable: true,\n                editable: true,\n                filterable: true,\n                navigatable: true,\n                toolbar: [{\n                    name: \"create\",\n                    text: messages.addNew\n                },{\n                    name: \"remove\",\n                    icon: \"minus\",\n                    text: messages.remove,\n                    click: () => {\n                        var grid = that.grid,\n                            ds = grid.dataSource,\n                            selected = grid.selectedKeyNames();\n\n                        if (selected && selected.length > 0) {\n                            selected.map(i => {\n                                ds.remove(ds.get(i));\n                            });\n                        }\n                    }\n                }],\n                dataSource: {\n                    data: this.model.resources,\n                    schema: {\n                        model: {\n                            id: \"id\",\n                            fields: {\n                                id: { from: \"id\", defaultValue: undefined$1, validation: { required: { message: messages.resourcesHeader + \" is required\" } } },\n                                value: { from: \"value\", type: \"number\", defaultValue: 1, validation: this.options.unitsValidation },\n                                format: { from: \"format\", type: \"string\" }\n                            }\n                        }\n                    }\n                },\n                edit: function(e) {\n                    var select = e.container.find(\"select\"),\n                        ddl = select.data(\"kendoDropDownList\"),\n                        currentId = e.model.id,\n                        filterOut = options.model.resources.map(r => r.id).filter(r => r !== currentId),\n                        filters = filterOut.map(f => ({\n                            field: \"value\",\n                            operator: \"neq\",\n                            value: f\n                        }));\n\n                    if (ddl) {\n                        ddl.dataSource.filter({\n                            logic: \"and\",\n                            filters: filters\n                        });\n\n                        ddl.setOptions({\n                            filter: \"contains\"\n                        });\n                    }\n                }\n            });\n        }\n    });\n\n    kendo.gantt = {\n        PopupEditor: PopupEditor,\n        ResourceEditor: ResourceEditor\n    };\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}