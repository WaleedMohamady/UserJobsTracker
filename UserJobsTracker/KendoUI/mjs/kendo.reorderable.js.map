{"version":3,"sources":["raw-mjs/kendo.reorderable.js"],"names":["__meta__","id","name","category","depends","advanced","$","undefined$1","kendo","window","outerWidth","_outerWidth","outerHeight","_outerHeight","getOffset","Widget","ui","CHANGE","Reorderable","extend","init","element","options","draggable","that","this","group","guid","fn","call","addClass","Draggable","autoScroll","filter","hint","dropFilter","reorderDropCue","find","kendoDropTarget","dragenter","e","externalDraggableInstance","_externalDraggable","_draggable","_handleExternalDraggable","offset","dropTarget","denied","_isPartOfSortable","_dropTargetAllowed","_isLastDraggable","toggleHintClass","cueOffset","top","left","isHorizontal","orientation","smartPosition","inSameContainer","source","target","sourceIndex","_index","targetIndex","_dropTarget","css","height","zIndex","appendTo","document","body","positionDropCue","dragleave","remove","drop","dropIndex","isAfter","trigger","oldIndex","newIndex","position","bind","dragcancel","_dragcancel","dragend","_dragend","dragstart","_dragstart","drag","_drag","deniedIcon","allowIcon","events","length","icon","eq","draggableFilter","trimStart","substring","_dragcancelHandler","_dragendHandler","_dragstartHandler","_dragHandler","currentTarget","closest","_draggableInstance","_elements","unbind","is","sender","dropStartOffset","width","pageX","dropStartTop","pageY","dragOverContainers","clickMoveClick","hasClass","elementUnderCursor","index","externalDraggable","item","elements","get","found","pop","destroy","each","data","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.reorderable.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.draganddrop.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"reorderable\",\n    name: \"Reorderable\",\n    category: \"framework\",\n    depends: [ \"core\", \"draganddrop\", \"icons\" ],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        getOffset = kendo.getOffset,\n        Widget = kendo.ui.Widget,\n        CHANGE = \"change\",\n        KREORDERABLE = \"k-reorderable\";\n\n    var Reorderable = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                draggable,\n                group = kendo.guid() + \"-reorderable\";\n\n            Widget.fn.init.call(that, element, options);\n\n            element = that.element.addClass(KREORDERABLE);\n            options = that.options;\n\n            that.draggable = draggable = options.draggable || new kendo.ui.Draggable(element, {\n                group: group,\n                autoScroll: true,\n                filter: options.filter,\n                hint: options.hint\n            });\n\n            if (!that.options.dropFilter) {\n                that.options.dropFilter = draggable.options.filter;\n            }\n\n            that.reorderDropCue = that.options.reorderDropCue;\n\n            element.find(options.dropFilter).kendoDropTarget({\n                group: draggable.options.group,\n                dragenter: function(e) {\n                    var externalDraggableInstance = that._externalDraggable(e);\n\n                    if (!that._draggable && !externalDraggableInstance) {\n                        return;\n                    }\n\n                    if (externalDraggableInstance) {\n                        that._handleExternalDraggable(externalDraggableInstance);\n                    }\n\n                    var dropTarget = this.element, offset;\n\n                    var denied = that._isPartOfSortable(that._draggable) ? (!that._dropTargetAllowed(dropTarget) || that._isLastDraggable()) : false;\n\n                    that.toggleHintClass(e.draggable.hint, denied);\n\n                    if (!denied) {\n                        offset = getOffset(dropTarget);\n                        var cueOffset = { top: offset.top, left: offset.left };\n                        var isHorizontal = options.orientation === \"horizontal\";\n\n                        if (!options.smartPosition || (options.inSameContainer && !options.inSameContainer({\n                            source: dropTarget,\n                            target: that._draggable,\n                            sourceIndex: that._index(dropTarget),\n                            targetIndex: that._index(that._draggable)\n                        }))) {\n                            that._dropTarget = dropTarget;\n                        } else {\n                            if (that._index(dropTarget) > that._index(that._draggable) && options.smartPosition) {\n                                cueOffset[isHorizontal ? \"left\" : \"top\"] += isHorizontal ? outerWidth(dropTarget) : outerHeight(dropTarget);\n                            }\n                        }\n\n                        that.reorderDropCue.css({\n                            height: outerHeight(dropTarget),\n                            top: cueOffset.top,\n                            left: cueOffset.left,\n                            zIndex: 19000\n                        })\n                        .appendTo(document.body);\n\n                        if (options.positionDropCue) {\n                            options.positionDropCue(that.reorderDropCue, dropTarget);\n                        }\n                    }\n                },\n                dragleave: function(e) {\n                    that.toggleHintClass(e.draggable.hint, true);\n                    that.reorderDropCue.remove();\n                    that._dropTarget = null;\n                },\n                drop: function() {\n                    that._dropTarget = null;\n\n                    if (!that._draggable) {\n                        return;\n                    }\n                    var dropTarget = this.element;\n                    var draggable = that._draggable;\n                    var dropIndex = that._index(dropTarget);\n\n                    var isAfter = that.options.orientation === \"horizontal\" ?\n                        getOffset(that.reorderDropCue).left > getOffset(dropTarget).left :\n                        getOffset(that.reorderDropCue).top > getOffset(dropTarget).top;\n\n                    dropIndex = isAfter ? dropIndex + 1 : dropIndex;\n\n                    if (that._dropTargetAllowed(dropTarget) && !that._isLastDraggable() && that._index(draggable) !== dropIndex) {\n                        that.trigger(CHANGE, {\n                            element: that._draggable,\n                            target: dropTarget,\n                            oldIndex: that._index(draggable),\n                            newIndex: that._index(dropTarget),\n                            position: isAfter ? \"after\" : \"before\"\n                        });\n                    }\n\n                    if (that.reorderDropCue) {\n                        that.reorderDropCue.remove();\n                    }\n                }\n            });\n\n            draggable.bind([ \"dragcancel\", \"dragend\", \"dragstart\", \"drag\" ], {\n                dragcancel: that._dragcancel.bind(that),\n                dragend: that._dragend.bind(that),\n                dragstart: that._dragstart.bind(that),\n                drag: that._drag.bind(that)\n            });\n        },\n\n        options: {\n            name: \"Reorderable\",\n            filter: \"*\",\n            orientation: \"horizontal\",\n            deniedIcon: \"cancel\",\n            allowIcon: \"plus\",\n            reorderDropCue: $('<div class=\"k-reorder-cue\"></div></div>'),\n            smartPosition: true\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        toggleHintClass: function(hint, denied) {\n            var that = this,\n                options = that.options;\n\n            hint = $(hint);\n\n            if (hint.find(\".k-drag-status\").length > 0) {\n                kendo.ui.icon(hint.find(\".k-drag-status\").eq(0), { icon: denied ? options.deniedIcon : options.allowIcon });\n            }\n        },\n\n        _handleExternalDraggable: function(draggable) {\n            var that = this;\n            var draggableFilter = that.options.dropFilter.trimStart();\n\n            // make direct child selectors compatible with .closest()\n            if (draggableFilter && draggableFilter[0] == \">\") {\n                draggableFilter = draggableFilter.substring(1);\n            }\n\n            that._dragcancelHandler = that._dragcancel.bind(that);\n            that._dragendHandler = that._dragend.bind(that);\n            that._dragstartHandler = that._dragstart.bind(that);\n            that._dragHandler = that._drag.bind(that);\n\n            that._draggable = draggable.currentTarget.closest(draggableFilter);\n            that._draggableInstance = draggable;\n            that._elements = that.element.find(that.options.dropFilter);\n\n            draggable.bind([ \"dragcancel\", \"dragend\", \"dragstart\", \"drag\" ], {\n                dragcancel: that._dragcancelHandler,\n                dragend: that._dragendHandler,\n                dragstart: that._dragstartHandler,\n                drag: that._dragHandler\n            });\n        },\n\n        _dragcancel: function() {\n            var that = this;\n\n            if (that._draggableInstance && (that._dragcancelHandler || that._dragendHandler ||\n                that._dragstartHandler || that._dragHandler)) {\n\n                    that._draggableInstance.unbind({\n                    dragcancel: that._dragcancelHandler,\n                    dragend: that._dragendHandler,\n                    dragstart: that._dragstartHandler,\n                    drag: that._dragHandler\n                });\n            }\n\n            if (that.reorderDropCue) {\n                that.reorderDropCue.remove();\n            }\n\n            that._draggable = null;\n            that._elements = null;\n\n        },\n        _dragend: function() {\n            var that = this;\n\n            if (that._draggableInstance && (that._dragcancelHandler || that._dragendHandler ||\n                that._dragstartHandler || that._dragHandler)) {\n\n                    that._draggableInstance.unbind({\n                    dragcancel: that._dragcancelHandler,\n                    dragend: that._dragendHandler,\n                    dragstart: that._dragstartHandler,\n                    drag: that._dragHandler\n                });\n            }\n\n            if (that.reorderDropCue) {\n                that.reorderDropCue.remove();\n            }\n\n            that._draggable = null;\n            that._elements = null;\n        },\n        _dragstart: function(e) {\n            var that = this;\n            var target = $(e.currentTarget);\n            var draggableFilter = that.options.dropFilter.trimStart();\n\n            // make direct child selectors compatible with .closest()\n            if (draggableFilter && draggableFilter[0] == \">\") {\n                draggableFilter = draggableFilter.substring(1);\n            }\n\n            that._draggable = target.is(draggableFilter) ? target : target.closest(draggableFilter);\n            that._elements = that.element.find(that.options.dropFilter);\n        },\n        _drag: function(e) {\n            var that = this,\n                dropIndex, sourceIndex, denied,\n                offset = {},\n                target,\n                draggableFilter = that.options.dropFilter.trimStart();\n\n            // make direct child selectors compatible with .closest()\n            if (draggableFilter && draggableFilter[0] == \">\") {\n                draggableFilter = draggableFilter.substring(1);\n            }\n\n            target = $(e.currentTarget).closest(draggableFilter);\n\n            if (!that._dropTarget || (that.options.smartPosition && e.sender.hint.find(\".k-drag-status\").is(\".k-i-cancel,.k-svg-i-cancel\"))) {\n                return;\n            }\n\n            dropIndex = that._index(that._dropTarget);\n            sourceIndex = that._index(target);\n            sourceIndex = dropIndex > sourceIndex ? sourceIndex + 1 : sourceIndex;\n\n            if (that.options.orientation === \"horizontal\") {\n                var dropStartOffset = getOffset(that._dropTarget).left;\n                var width = outerWidth(that._dropTarget);\n\n                if (e.pageX > dropStartOffset + width / 2) {\n                    offset.left = dropStartOffset + width;\n                    dropIndex += 1;\n                } else {\n                    offset.left = dropStartOffset;\n                }\n            } else {\n                var dropStartTop = getOffset(that._dropTarget).top;\n                var height = outerHeight(that._dropTarget);\n\n                if (e.pageY > dropStartTop + height / 2) {\n                    offset.top = dropStartTop + height;\n                    dropIndex += 1;\n                } else {\n                    offset.top = dropStartTop;\n                }\n            }\n\n            that.reorderDropCue.css(offset);\n\n            if (that.options.positionDropCue) {\n                that.options.positionDropCue(that.reorderDropCue, that._dropTarget);\n            }\n\n            if (that._isPartOfSortable(target)) {\n\n                denied = sourceIndex === dropIndex ||\n                    (that.options.dragOverContainers && !that.options.dragOverContainers(sourceIndex, dropIndex)) ||\n                    e.clickMoveClick && e.currentTarget.hasClass(\"k-drag-cell\") && $(e.elementUnderCursor).closest(\".k-drag-cell\").length === 0;\n\n                that.toggleHintClass(e.sender.hint, denied);\n            }\n        },\n\n        _isPartOfSortable: function(draggable) {\n            var that = this;\n\n            return that._elements.index(draggable) >= 0;\n        },\n\n        _externalDraggable: function(e) {\n            var that = this,\n                options = that.options;\n\n            if (!that._draggable && options.externalDraggable) {\n                return options.externalDraggable(e);\n            }\n\n            return null;\n        },\n\n        _isLastDraggable: function() {\n            var inSameContainer = this.options.inSameContainer,\n                draggable = this._draggable[0],\n                elements = this._elements.get(),\n                found = false,\n                item;\n\n            if (!inSameContainer) {\n                return false;\n            }\n\n            while (!found && elements.length > 0) {\n                item = elements.pop();\n                found = draggable !== item && inSameContainer({\n                    source: draggable,\n                    target: item,\n                    sourceIndex: this._index(draggable),\n                    targetIndex: this._index(item)\n                });\n            }\n\n            return !found;\n        },\n\n        _dropTargetAllowed: function(dropTarget) {\n            var inSameContainer = this.options.inSameContainer,\n                dragOverContainers = this.options.dragOverContainers,\n                draggable = this._draggable;\n\n            if (draggable[0] === dropTarget[0]) {\n                return false;\n            }\n\n            if (!inSameContainer || !dragOverContainers) {\n                return true;\n            }\n\n            if (inSameContainer({ source: draggable,\n                target: dropTarget,\n                sourceIndex: this._index(draggable),\n                targetIndex: this._index(dropTarget)\n            })) {\n                return true;\n            }\n\n            return dragOverContainers(this._index(draggable), this._index(dropTarget));\n        },\n\n        _index: function(element) {\n            return this._elements.index(element);\n        },\n\n        destroy: function() {\n           var that = this;\n\n\n           Widget.fn.destroy.call(that);\n\n           that.element.find(that.options.dropFilter).each(function() {\n               var item = $(this);\n               if (item.data(\"kendoDropTarget\")) {\n                   item.data(\"kendoDropTarget\").destroy();\n                }\n            });\n\n            if (that.draggable) {\n                that.draggable.destroy();\n\n                that.draggable.element = that.draggable = null;\n            }\n\n            that.reorderDropCue.remove();\n            that.elements = that.reorderDropCue = that._elements = that._draggable = null;\n       }\n    });\n\n    kendo.ui.plugin(Reorderable);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}