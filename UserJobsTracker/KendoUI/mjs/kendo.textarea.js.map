{"version":3,"sources":["raw-mjs/kendo.textarea.js"],"names":["$","kendo","jQuery","addInputPrefixSuffixContainers","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefixContainer","suffixContainer","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","__meta__","id","name","category","description","depends","undefined$1","window","Widget","ui","isPlainObject","NS","CHANGE","DISABLED","READONLY","FOCUSED","STATEDISABLED","STATEREADONLY","ARIA_DISABLED","TextArea","extend","init","element","that","this","fn","call","value","val","readonly","Boolean","attr","enable","placeholder","replace","length","_wrapper","_label","_editable","disable","_applyAttributes","_applyCssClasses","addClass","floatingLabel","refresh","notify","events","attributes","label","resizable","maxLength","cols","rows","rounded","size","fillMode","resize","overflow","action","cssProperties","getValidClass","propName","property","_value","focus","destroy","off","setOptions","toggleClass","prop","removeClass","on","_focusin","bind","_focusout","floating","labelText","content","_floatingLabelContainer","wrap","parent","FloatingLabel","isFunction","guid","_inputLabel","newValue","trigger","DOMElement","style","cssText","width","className","registerPrefix","registerValues","values","roundedValues","concat","plugin","kendo$1"],"mappings":"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","file":"kendo.textarea.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.floatinglabel.js';\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"textarea\",\n    name: \"TextArea\",\n    category: \"web\",\n    description: \"The TextArea widget represents a multi-line plain-text editing control which enables you to style and provide a floating label functionality to textarea elements\",\n    depends: [\"core\", \"floatinglabel\"]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        ui = kendo.ui,\n        isPlainObject = $.isPlainObject,\n        NS = \".kendoTextArea\",\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        INPUT = \"k-input-inner\",\n        FOCUSED = \"k-focus\",\n        LABELCLASSES = \"k-label k-input-label\",\n        FLOATINGLABELCLASS = \"k-floating-label\",\n        STATEDISABLED = \"k-disabled\",\n        STATEREADONLY = \"k-readonly\",\n        ARIA_DISABLED = \"aria-disabled\",\n        TEXTAREACONTAINER = \"k-textarea-container\";\n\n    var TextArea = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n            options = $.extend(true, {}, options);\n\n            that.options.value = options.value || that.element.val();\n            that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n            that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.attr(\"disabled\")));\n            that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n\n            if (!that.options.value.replace(/\\s/g, '').length) {\n                that.options.value = '';\n                that.element.val('');\n            }\n\n            that.value(that.options.value);\n            that._wrapper();\n            that._label();\n            that._editable({\n                readonly: that.options.readonly,\n                disable: !(that.options.enable)\n            });\n            that._applyAttributes();\n            that._applyCssClasses();\n            that.element\n                .addClass(INPUT)\n                .attr(\"autocomplete\", \"off\");\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options });\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        attributes: [\n            \"maxLength\",\n            \"rows\",\n            \"placeholder\"\n        ],\n\n        options: {\n            name: 'TextArea',\n            value: '',\n            readonly: false,\n            enable: true,\n            placeholder: '',\n            label: null,\n            resizable: \"none\",\n            maxLength: null,\n            cols: 20,\n            rows: 1,\n            rounded: \"medium\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            resize: \"none\",\n            overflow: \"auto\",\n            layoutFlow: \"vertical\",\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            }\n        },\n\n        _applyCssClasses: function(action) {\n            var that = this,\n                options = that.options,\n                resize = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"resize\",\n                    value: options.resize\n                }),\n                overflow = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"overflow\",\n                    value: options.overflow\n                }),\n                layoutFlow = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"layoutFlow\",\n                    value: options.layoutFlow\n                });\n\n            Widget.fn._applyCssClasses.call(that);\n\n            if (!resize && options.resize === \"none\") {\n                resize = \"k-resize-none\";\n            }\n\n            if (overflow) {\n                overflow = \"!\" + overflow;\n            }\n\n            action = action || \"addClass\";\n\n            that.element[action](resize);\n            that.element[action](overflow);\n            that.wrapper[action](layoutFlow);\n            if (options.layoutFlow == \"vertical\") {\n                that.element[action](\"!k-flex-none\");\n            }\n        },\n\n        _applyAttributes: function() {\n            var that = this;\n            var property;\n            var attributes = {};\n\n            for (property in that.attributes) {\n                attributes[that.attributes[property]] = that.options[that.attributes[property]];\n            }\n\n            that.element.attr(attributes);\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            that._value = value;\n            that.element.val(value);\n        },\n\n        readonly: function(readonly) {\n            var that = this;\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        focus: function() {\n            var that = this;\n\n            that.element[0].focus();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.floatingLabel) {\n                that.floatingLabel.destroy();\n            }\n\n            that.element.off(NS);\n            Widget.fn.destroy.call(that);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            that._applyCssClasses(\"removeClass\");\n            Widget.fn.setOptions.call(that, options);\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var wrapper = that.wrapper;\n            var disable = options.disable;\n            var readonly = options.readonly;\n\n            element.off(NS);\n\n            if (!readonly && !disable) {\n                element.prop(DISABLED, false)\n                       .prop(READONLY, false)\n                       .attr(ARIA_DISABLED, false);\n\n                wrapper.removeClass(STATEDISABLED)\n                        .removeClass(STATEREADONLY);\n\n                element.on(\"focusin\" + NS, that._focusin.bind(that));\n                element.on(\"focusout\" + NS, that._focusout.bind(that));\n            } else {\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable);\n\n                wrapper.toggleClass(STATEDISABLED, disable)\n                        .toggleClass(STATEREADONLY, readonly);\n            }\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n                floating = isPlainObject(options.label) ? options.label.floating : false;\n                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                if (floating) {\n                    that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                    that._floatingLabelContainer.addClass(TEXTAREACONTAINER);\n                }\n\n                if (kendo.isFunction(labelText)) {\n                    labelText = labelText.call(that);\n                }\n\n                if (!labelText) {\n                    labelText = \"\";\n                }\n\n                if (!id) {\n                    id = options.name + \"_\" + kendo.guid();\n                    element.attr(\"id\", id);\n                }\n\n                that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n            }\n        },\n\n        _focusin: function() {\n            var that = this;\n\n            that.wrapper.addClass(FOCUSED);\n        },\n\n        _focusout: function() {\n            var that = this;\n            var value = that._value;\n            var newValue = that.element.val();\n\n            that.wrapper.removeClass(FOCUSED);\n\n            if (value === null) {\n                value = \"\";\n            }\n\n            if (value !== newValue) {\n                that._value = newValue;\n\n                that.trigger(CHANGE);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var element = that.element;\n            var DOMElement = element[0];\n            var wrapper;\n\n            wrapper = element.wrap(\"<span class='k-input k-textarea'></span>\").parent();\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"\";\n\n            that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"TextArea\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"TextArea\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(TextArea);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}