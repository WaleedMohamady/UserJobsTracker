{"version":3,"sources":["raw-mjs/kendo.chat.js"],"names":["$","undefined$1","kendo","window","Widget","ui","extend","NS","keys","ChatMessageBox","init","element","options","fn","call","this","_wrapper","_attachEvents","_typing","events","messages","placeholder","toggleButton","sendButton","destroy","input","off","remove","empty","styles","inputId","guid","inputWrapper","addClass","appendTo","attr","separator","inputSuffix","toolbar","toggleable","buttons","length","html","renderButton","buttonToggle","toolbarId","icon","buttonToggleIcon","fillMode","size","buttonSend","buttonSendIcon","on","_keydown","bind","_input","_inputFocusout","_buttonClick","_toggleToolbar","start","val","_triggerTyping","e","keyCode","ENTER","preventDefault","_sendMessage","F10","trigger","value","args","text","ev","originalEvent","button","buttonFlat","iconButton","buttonIcon","hidden","chat","jQuery","DATA_K_BUTTON_NAME","SCROLL_LEFT_NAME","SCROLL_RIGHT_NAME","VISIBLE","TABINDEX","DEFAULT_ANIMATION","effects","duration","NO_ANIMATION","expand","show","collapse","hide","ChatToolBar","toolbarOptions","name","buttonsDefined","_createButtonList","scrollable","buttonsWidth","width","_initScrolling","_setupAnimation","toggle","_onClick","_onKeydown","buttonList","i","_createButton","append","first","removeAttr","btnOptions","attributes","buttonElm","title","type","tabindex","data","buttonDefaults","iconClass","prepend","renderIcon","target","closest","is","scrollButton","_scrolling","_scroll","key","LEFT","_focusButton","RIGHT","dir","current","not","candidate","index","removeAttribute","focus","scrollButtonLeft","scrollButtonLeftIcon","class","scrollButtonRight","scrollButtonRightIcon","_refreshScrollButtons","commandName","that","buttonWidth","maxScrollSize","scrollAmmount","scrollValue","currentScrollLeft","Math","min","max","scrollLeft","isNaN","parseInt","animation","defaultExpandAnimation","defaultCollapseAnimation","reverse","_animationComplete","_animationCompleteExpand","round","scrollWidth","clientWidth","children","last","outerWidth","skipAnimation","complete","kendoStop","kendoAnimate","encode","htmlEncode","DOT","AVATAR_TEMPLATE","url","IMG_TEMPLATE","MESSAGE_GROUP_TEMPLATE","messageGroup","noAvatar","author","SELF_MESSAGE_GROUP_TEMPLATE","self","TEXT_MESSAGE_TEMPLATE","timestamp","message","messageTime","toString","parseDate","bubble","TYPING_INDICATOR_TEMPLATE","messageListContent","typingIndicatorBubble","typingIndicator","CARD_ACTIONS_TEMPLATE","cardActions","cardActionsVertical","map","cardAction","buttonPrimary","CARD_ACTION_BUTTON_TEMPLATE","join","HERO_CARD_TEMPLATE","images","subtitle","card","cardRich","alt","cardMedia","HERO_IMG_TEMPLATE","cardBody","cardTitle","cardSubtitle","Templates","Components","registerTemplate","templateName","template","getTemplate","suggestedActions","action","suggestedAction","SUGGESTED_ACTION_TEMPLATE","registerComponent","componentName","component","getComponent","Component","Class","view","Calendar","kendoCalendar","change","viewStyles","wrapper","messageList","only","middle","avatar","scrollButtonIconLeft","scrollButtonIconRight","cardWrapper","cardDeckScrollWrap","cardDeck","cardList","cardActionsHorizontal","cardActionsStart","cardActionsCenter","cardActionsEnd","cardActionsStretched","selected","ChatView","_list","_lastSender","typingParticipants","_scrollable","isTyping","areTyping","and","_scrollDraggable","list","messageListLabel","_listClick","_messageClick","_suggestedActionClick","_cardActionClick","_suggestedActionKeydown","_scrollButtonClick","currentTarget","scrollToLeft","find","scrollContainer","siblings","cardWidth","renderMessage","sender","Date","bubbleElement","_renderTemplate","_renderBubble","_removeTypingParticipant","id","renderSuggestedActions","_removeSuggestedActions","_scrollToBottom","renderAttachments","_renderAttachmentWrapper","attachmentLayout","cardContainer","attachments","cardElement","contentType","content","_removeTypingIndicator","renderComponent","layout","buttonLeft","_renderScrollButton","buttonRight","directionClass","targetElement","hasClass","parents","_clearSelection","SPACEBAR","messageType","group","_getMessageGroup","_appendToGroup","componentType","templateOptions","_getMessageGroupTemplate","appendTarget","iconUrl","user","messageElement","childrenCount","filter","removeClass","_renderTypingIndicator","participants","indicator","_addTypingParticipant","_composeTypingParticipantsText","found","push","splice","typingAction","typingText","replace","trimRight","selectedClass","scrollTop","prop","__meta__","category","description","depends","chatStyles","canvas","viewWrapper","messageBoxWrapper","toolbarBoxWrapper","Chat","_events","_user","_view","_toolbar","_messageBox","notify","setOptions","_setEvents","messageBox","unbind","_resetToolbarButtons","getUser","height","uiElements","toolbarElement","css","postMessage","toggleToolbar","postArgs","from","renderUserTypingIndicator","clearUserTypingIndicator","removeTypingIndicator","plugin","kendo$1"],"mappings":"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","file":"kendo.chat.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.html.button.js';\nimport './kendo.icons.js';\nimport './kendo.draganddrop.js';\n\n(function($, undefined$1) {\n\n    var kendo = window.kendo;\n    var Widget = kendo.ui.Widget;\n    var extend = $.extend;\n    var DOT = \".\";\n    var NS = \".kendoChat\";\n    var keys = kendo.keys;\n\n    var messageBoxStyles = {\n        input: \"k-input-inner\",\n        inputWrapper: \"k-textbox k-input k-input-md k-input-solid k-rounded-md\",\n        button: \"k-button\",\n        buttonFlat: \"k-button-lg k-button-flat k-button-flat-base\",\n        iconButton: \"k-icon-button\",\n        buttonIcon: \"k-button-icon\",\n        buttonSend: \"k-chat-send\",\n        buttonSendIcon: \"paper-plane\",\n        buttonToggle: \"k-button-toggle\",\n        buttonToggleIcon: \"more-horizontal\",\n        hidden: \"k-hidden\",\n        inputSuffix: \"k-input-suffix k-input-suffix-horizontal\",\n        separator: \"k-input-separator k-input-separator-vertical\"\n    };\n\n    var ChatMessageBox = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this._wrapper();\n\n            this._attachEvents();\n\n            this._typing = false;\n        },\n\n        events: [\n            \"focusToolbar\",\n            \"sendMessage\",\n            \"toggleToolbar\",\n            \"typingEnd\",\n            \"typingStart\"\n        ],\n\n        options: {\n            messages: {\n                placeholder: \"Type a message...\",\n                toggleButton: \"Toggle toolbar\",\n                sendButton: \"Send message\"\n            }\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            if (this.input) {\n                this.input.off(NS);\n                this.input.remove();\n                this.input = null;\n            }\n\n            this.element.off(NS);\n            this.element.empty();\n        },\n\n        _wrapper: function() {\n            var styles = ChatMessageBox.styles;\n            var options = this.options;\n            var messages = options.messages;\n            var inputId = \"inputId_\" + kendo.guid();\n\n            this.inputWrapper = this.element\n                .addClass(styles.inputWrapper)\n                .appendTo(this.element);\n\n            this.input = $(\"<input type='text'>\")\n                .addClass(styles.input)\n                .attr(\"id\", inputId)\n                .attr(\"aria-label\", messages.placeholder)\n                .attr(\"placeholder\", messages.placeholder)\n                .appendTo(this.inputWrapper);\n\n            this.separator = $(\"<span></span>\")\n                .addClass(styles.separator)\n                .appendTo(this.inputWrapper);\n\n            this.inputSuffix = $(\"<span></span>\")\n                .addClass(styles.inputSuffix)\n                .appendTo(this.inputWrapper);\n\n            if (options.toolbar && options.toolbar.toggleable && options.toolbar.buttons && options.toolbar.buttons.length) {\n                $(kendo.html.renderButton(`<button class=\"${styles.buttonToggle}\" title=\"${messages.toggleButton}\" aria-label=\"${messages.toggleButton}\" aria-controls=\"${options.toolbarId}\"></button>`,\n                    {\n                        icon: styles.buttonToggleIcon,\n                        fillMode: \"flat\",\n                        size: \"medium\"\n                    }))\n                .appendTo(this.inputSuffix);\n            }\n\n            $(kendo.html.renderButton(`<button class=\"${styles.buttonSend}\" title=\"${messages.sendButton}\" aria-label=\"${messages.sendButton}\"></button>`,\n                {\n                    icon: styles.buttonSendIcon,\n                    fillMode: \"flat\",\n                    size: \"medium\"\n                }))\n            .appendTo(this.inputSuffix);\n        },\n\n        _attachEvents: function() {\n            var styles = ChatMessageBox.styles;\n\n            this.input\n                .on(\"keydown\" + NS, this._keydown.bind(this))\n                .on(\"input\" + NS, this._input.bind(this))\n                .on(\"focusout\" + NS, this._inputFocusout.bind(this));\n\n            this.element\n                .on(\"click\" + NS, DOT + styles.buttonSend, this._buttonClick.bind(this));\n\n            this.element\n                .on(\"click\" + NS, DOT + styles.buttonToggle, this._toggleToolbar.bind(this));\n        },\n\n        _input: function() {\n            var currentValue = this.input.val();\n            var start = currentValue.length > 0;\n\n            this._triggerTyping(start);\n        },\n\n        _keydown: function(e) {\n            var key = e.keyCode;\n\n            switch (key) {\n                case keys.ENTER:\n                    e.preventDefault();\n\n                    this._sendMessage();\n                    break;\n                case keys.F10:\n                    e.preventDefault();\n\n                    this.trigger(\"focusToolbar\");\n                    break;\n            }\n        },\n\n        _buttonClick: function(e) {\n            e.preventDefault();\n\n            this._sendMessage();\n        },\n\n        _sendMessage: function() {\n            var value = this.input.val();\n\n            if (!value.length) {\n                return;\n            }\n\n            this._triggerTyping(false);\n\n            var args = {\n                text: value\n            };\n\n            this.trigger(\"sendMessage\", args);\n\n            this.input.val(\"\");\n        },\n\n        _inputFocusout: function() {\n            this._triggerTyping(false);\n        },\n\n        _triggerTyping: function(start) {\n            if (start) {\n                if (!this._typing) {\n                    this.trigger(\"typingStart\", {});\n                    this._typing = true;\n                }\n            } else {\n                if (this._typing) {\n                    this.trigger(\"typingEnd\", {});\n                    this._typing = false;\n                }\n            }\n        },\n\n        _toggleToolbar: function(ev) {\n            this.trigger(\"toggleToolbar\", { originalEvent: ev });\n        }\n    });\n\n    extend(true, ChatMessageBox, { styles: messageBoxStyles });\n    extend(kendo, {\n        chat: {\n            ChatMessageBox: ChatMessageBox\n        }\n    });\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\n    var kendo = window.kendo;\n    var Widget = kendo.ui.Widget;\n    var extend = $.extend;\n    var DOT = \".\";\n    var NS = \".kendoChat\";\n\n    var DATA_K_BUTTON_NAME = \"kButtonName\";\n    var SCROLL_LEFT_NAME = \"chatToolbarScrollLeft\";\n    var SCROLL_RIGHT_NAME = \"chatToolbarScrollRight\";\n    var VISIBLE = \":visible\";\n    var TABINDEX = \"tabindex\";\n\n    var DEFAULT_ANIMATION = {\n        effects: \"expand:vertical\",\n        duration: 200\n    };\n    var NO_ANIMATION = {\n        expand: {\n            show: true\n        },\n        collapse: {\n            hide: true\n        }\n    };\n\n    var toolbarStyles = {\n        button: \"k-button\",\n        buttonDefaults: \"k-button-md k-rounded-md k-button-solid k-button-solid-base\",\n        buttonList: \"k-button-list k-toolbar-group\",\n        scrollButton: \"k-scroll-button\",\n        scrollButtonLeft: \"k-scroll-button-left\",\n        scrollButtonRight: \"k-scroll-button-right\",\n        scrollButtonLeftIcon: \"chevron-left\",\n        scrollButtonRightIcon: \"chevron-right\",\n        iconButton: \"k-icon-button\"\n    };\n\n    var ChatToolBar = Widget.extend({\n        init: function(element, options) {\n            options = extend({}, options, { name: \"ChatToolbar\" });\n            var toolbarOptions = options.toolbar;\n            var buttonsDefined = toolbarOptions.buttons && toolbarOptions.buttons.length;\n\n            Widget.fn.init.call(this, element, options);\n\n            if (buttonsDefined) {\n                this._createButtonList();\n            }\n\n            if (buttonsDefined && toolbarOptions.scrollable &&\n                    this.buttonsWidth() > this.element.width()) {\n                this._initScrolling();\n            }\n\n            this._setupAnimation();\n\n            if (buttonsDefined && toolbarOptions.toggleable) {\n                this.toggle(true);\n            }\n\n            this.element\n                .on(\"click\" + NS, this._onClick.bind(this))\n                .on(\"keydown\" + NS, this._onKeydown.bind(this));\n        },\n\n        events: [\n            \"click\"\n        ],\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.element.off(NS);\n            this.element.empty();\n        },\n\n        _createButtonList: function() {\n            var that = this;\n            var styles = ChatToolBar.styles;\n            var buttons = that.options.toolbar.buttons;\n            var buttonList = $(\"<div class='\" + styles.buttonList + \"'></div>\");\n\n            for (var i = 0; i < buttons.length; i++) {\n                var button = that._createButton(buttons[i]);\n                buttonList.append(button);\n            }\n\n            buttonList.appendTo(this.element);\n\n            this.buttonList = buttonList;\n            this.buttons().first().removeAttr(TABINDEX);\n        },\n\n        _createButton: function(btnOptions) {\n            var styles = ChatToolBar.styles;\n            var buttonElm = $(\"<button>\");\n            var attributes;\n\n            if (typeof btnOptions === \"string\") {\n                btnOptions = {\n                    name: btnOptions\n                };\n            }\n\n            attributes = $.extend({}, btnOptions.attr || {}, {\n                title: btnOptions.text || btnOptions.name,\n                \"aria-label\": btnOptions.text || btnOptions.name,\n                type: \"button\",\n                tabindex: -1\n            });\n\n            buttonElm\n                .attr(attributes)\n                .addClass(btnOptions.name)\n                .data(DATA_K_BUTTON_NAME, btnOptions.name)\n                .addClass(styles.button)\n                .addClass(styles.buttonDefaults);\n\n            if (btnOptions.icon || btnOptions.iconClass) {\n                buttonElm.addClass(styles.iconButton);\n                buttonElm.prepend(kendo.html.renderIcon({ icon: btnOptions.icon, iconClass: \"k-button-icon\" + (btnOptions.iconClass ? ` ${btnOptions.iconClass}` : \"\") }));\n            }\n\n            return buttonElm;\n        },\n\n        _onClick: function(ev) {\n            var styles = ChatToolBar.styles;\n            var target = $(ev.target).closest(DOT + styles.button);\n\n            if (target.is(DOT + styles.scrollButton) && !this._scrolling) {\n                this._scroll(target.data(DATA_K_BUTTON_NAME));\n            }\n\n            if (target.data(DATA_K_BUTTON_NAME)) {\n                this.buttons().attr(TABINDEX, -1);\n                target.removeAttr(TABINDEX);\n\n                this.trigger(\"click\", {\n                    button: target[0],\n                    name: target.data(DATA_K_BUTTON_NAME),\n                    originalEvent: ev\n                });\n            }\n        },\n\n        _onKeydown: function(e) {\n            var key = e.keyCode,\n                keys = kendo.keys;\n\n            switch (key) {\n                case keys.LEFT:\n                    this._focusButton(-1);\n                    break;\n                case keys.RIGHT:\n                    this._focusButton(1);\n                    break;\n            }\n        },\n\n        _focusButton: function(dir) {\n            var buttons = this.buttons(),\n                current = buttons.not(\"[tabindex=-1]\"),\n                candidateIndex = current.index() + dir,\n                candidate = buttons[candidateIndex];\n\n            if (candidate) {\n                current.attr(TABINDEX, -1);\n                candidate.removeAttribute(TABINDEX);\n                candidate.focus();\n            }\n        },\n\n        _initScrolling: function() {\n            var styles = ChatToolBar.styles;\n\n            this.scrollButtonLeft = this._createButton({\n                name: SCROLL_LEFT_NAME,\n                icon: styles.scrollButtonLeftIcon,\n                attr: {\n                    \"class\": styles.scrollButton + \" \" + styles.scrollButtonLeft\n                }\n            });\n\n            this.scrollButtonRight = this._createButton({\n                name: SCROLL_RIGHT_NAME,\n                icon: styles.scrollButtonRightIcon,\n                attr: {\n                    \"class\": styles.scrollButton + \" \" + styles.scrollButtonRight\n                }\n            });\n\n            this.element.prepend(this.scrollButtonLeft);\n            this.element.append(this.scrollButtonRight);\n            this._refreshScrollButtons();\n\n            this.element.on(\"keydown\" + NS, this._refreshScrollButtons.bind(this));\n        },\n\n        _scroll: function(commandName) {\n            var that = this;\n            var buttonWidth = that.buttonWidth();\n            var maxScrollSize = this.maxScrollSize();\n            var scrollAmmount = commandName === SCROLL_LEFT_NAME ? buttonWidth * -1 : buttonWidth;\n            var currentScroll = this.currentScrollLeft();\n            var scrollValue = currentScroll + scrollAmmount;\n            scrollValue = Math.min(Math.max(scrollValue, 0), maxScrollSize);\n\n            if (commandName !== SCROLL_LEFT_NAME && commandName !== SCROLL_RIGHT_NAME) {\n                return;\n            }\n\n            kendo.scrollLeft(that.buttonList, scrollValue);\n            that._refreshScrollButtons(scrollValue);\n        },\n\n        _refreshScrollButtons: function(value) {\n            var maxScrollSize = this.maxScrollSize();\n            var currentScrollLeft = value === undefined$1 || isNaN(parseInt(value, 10)) ? this.currentScrollLeft() : value;\n\n            if (!this.scrollButtonLeft && !this.scrollButtonRight) {\n                return;\n            }\n\n            this.scrollButtonLeft.toggle(currentScrollLeft !== 0);\n            this.scrollButtonRight.toggle(currentScrollLeft !== maxScrollSize);\n        },\n\n        _setupAnimation: function() {\n            var animation = this.options.toolbar.animation;\n            var defaultExpandAnimation = extend({}, DEFAULT_ANIMATION);\n            var defaultCollapseAnimation = extend({\n                reverse: true,\n                hide: true\n            }, DEFAULT_ANIMATION);\n\n            if (animation === false) {\n                animation = extend(true, {}, NO_ANIMATION);\n            } else {\n                animation = extend(true, {\n                    expand: defaultExpandAnimation,\n                    collapse: defaultCollapseAnimation\n                }, animation);\n            }\n\n            this.options.toolbar.animation = animation;\n        },\n\n        _animationComplete: function() {\n            this._refreshScrollButtons();\n        },\n\n        _animationCompleteExpand: function() {\n            this._animationComplete();\n            this.buttons().not(\"[tabindex=-1]\").trigger(\"focus\");\n        },\n\n        currentScrollLeft: function() {\n            return Math.round(kendo.scrollLeft(this.buttonList));\n        },\n\n        maxScrollSize: function() {\n            return Math.round(this.buttonList[0].scrollWidth - this.buttonList[0].clientWidth);\n        },\n\n        buttons: function() {\n            var styles = ChatToolBar.styles;\n            return this.buttonList ? this.buttonList.children(DOT + styles.button) : null;\n        },\n\n        buttonWidth: function() {\n            return Math.round(this.buttons().last().outerWidth(true));\n        },\n\n        buttonsWidth: function() {\n            var width = 0;\n\n            if (this.buttons()) {\n                width = this.buttonWidth() * this.buttons().length;\n            }\n\n            return width;\n        },\n\n        toggle: function(skipAnimation) {\n            var animation = this.options.toolbar.animation;\n\n            if (skipAnimation) {\n                animation = extend(true, {}, NO_ANIMATION);\n            }\n\n            animation.expand.complete = this._animationCompleteExpand.bind(this);\n            animation.collapse.complete = this._animationComplete.bind(this);\n\n            if (this.element.is(VISIBLE)) {\n                this.element.kendoStop().kendoAnimate(animation.collapse);\n            } else {\n                this.element.kendoStop().kendoAnimate(animation.expand);\n            }\n\n        },\n\n        focus: function() {\n            if (!this.element.is(VISIBLE)) {\n                this.toggle();\n            } else {\n                this.buttons().not(\"[tabindex=-1]\").trigger(\"focus\");\n            }\n        }\n    });\n\n    extend(true, ChatToolBar, { styles: toolbarStyles });\n    extend(kendo.chat, {\n        ChatToolBar: ChatToolBar\n    });\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\n    var kendo = window.kendo;\n    var encode = kendo.htmlEncode;\n    var Widget = kendo.ui.Widget;\n    var extend = $.extend;\n    var DOT = \".\";\n    var SPACE = \" \";\n    var NS = \".kendoChat\";\n\n    var IMG_TEMPLATE = ({ url, text, styles }) => `<img src=\"${url}\" alt=\"${encode(text)}\">`;\n\n    var AVATAR_TEMPLATE = ({ url, text, styles }) => `<div class=\"k-avatar k-avatar-md k-avatar-solid k-avatar-solid-primary k-rounded-full\">` +\n                                `<span class=\"k-avatar-image\">` +\n                                    IMG_TEMPLATE({ url, text, styles }) +\n                                `</span>` +\n                            `</div>`;\n\n    var MESSAGE_GROUP_TEMPLATE = ({ text, url, styles }) => `<div ${encode(text)} class=\"${styles.messageGroup} ${ url ? \"\" : styles.noAvatar }\">\n            <p class=\"${styles.author}\">${encode(text)}</p>\n            ${ url ? AVATAR_TEMPLATE({ url, text, styles }) : '' }\n        </div>`;\n\n    var SELF_MESSAGE_GROUP_TEMPLATE = ({ url, text, styles }) => `<div me class=\"${styles.messageGroup} ${styles.self} ${ url ? \"\" : styles.noAvatar }\">\n        ${ url ? AVATAR_TEMPLATE({ url, text, styles }) : '' }\n    </div>`;\n\n    var TEXT_MESSAGE_TEMPLATE = ({ styles, text, timestamp }) => `<div class=\"${styles.message}\">\n        <time class=\"${styles.messageTime}\">${ kendo.toString(kendo.parseDate(timestamp), \"HH:mm:ss\") }</time>\n        <div class=\"${styles.bubble}\">${encode(text)}</div>\n    </div>`;\n\n    var TYPING_INDICATOR_TEMPLATE = ({ styles, text }) => `<div class=\"${styles.messageListContent} ${styles.typingIndicatorBubble}\">\n        <p class=\"${styles.author}\">${encode(text)}</p>\n        <div class=\"${styles.message}\">\n            <div class=\"${styles.bubble}\">\n                <div class=\"${styles.typingIndicator}\">\n                    <span></span><span></span><span></span>\n                </div>\n            </div>\n        </div>\n    </div>`;\n\n    var SUGGESTED_ACTION_TEMPLATE = ({ styles, action }) => `<span role=\"button\" tabindex=\"0\" class=\"${styles.suggestedAction}\" data-value=\"${encode(action.value)}\">${encode(action.title)}</span>`;\n\n    var SUGGESTED_ACTIONS_TEMPLATE = ({ styles, suggestedActions }) => `<div class=\"${styles.suggestedActions}\">\n        ${ suggestedActions.map(action => SUGGESTED_ACTION_TEMPLATE({ styles, action })).join('') }\n    </div>`;\n\n    var HERO_IMG_TEMPLATE = ({ images, styles }) => `<img src=\"${encode(images[0].url)}\" alt=\"${images[0].alt}\" class=\"${styles.cardMedia}\" />`;\n\n    var CARD_ACTION_BUTTON_TEMPLATE = ({ button, styles }) => `<span class=\"${styles.cardAction}\"><button class=\"${styles.button} ${styles.buttonPrimary}\" data-value=\"${encode(button.value)}\"><span class=\"k-button-text\">${encode(button.title)}</span></button></span>`;\n\n    var CARD_ACTIONS_TEMPLATE = ({ styles, buttons }) => `<div class=\"k-actions ${styles.cardActions} ${styles.cardActionsVertical}\">\n        ${ buttons.map((button) => CARD_ACTION_BUTTON_TEMPLATE({ styles, button })).join('') }\n    </div>`;\n\n    var HERO_CARD_TEMPLATE = ({ styles, images, buttons, title, subtitle, text }) => `<div class=\"${styles.card} ${styles.cardRich}\">\n        ${ (typeof images !== \"undefined\" && images.length > 0) ? HERO_IMG_TEMPLATE({ images, styles }) : '' }\n        <div class=\"${styles.cardBody}\">\n            ${ typeof title !== \"undefined\" ? (() => `<h5 class=\"${styles.cardTitle}\">${encode(title)}</h5>`)() : '' }\n            ${ typeof subtitle !== \"undefined\" ? (() => `<h6 class=\"${styles.cardSubtitle}\">${encode(subtitle)}</h6>`)() : '' }\n            ${ typeof text !== \"undefined\" ? (() => `<p>${encode(text)}</p>`)() : '' }\n        </div>\n        ${ (typeof buttons !== \"undefined\" && buttons.length > 0) ? CARD_ACTIONS_TEMPLATE({ buttons, styles }) : ''}\n    </div>`;\n\n    extend(kendo.chat, {\n        Templates: {},\n        Components: {}\n    });\n\n    kendo.chat.registerTemplate = function(templateName, template) {\n        kendo.chat.Templates[templateName] = kendo.template(template);\n    };\n\n    kendo.chat.getTemplate = function(templateName) {\n        return kendo.chat.Templates[templateName] || TEXT_MESSAGE_TEMPLATE;\n    };\n\n    kendo.chat.registerTemplate(\"text\", TEXT_MESSAGE_TEMPLATE);\n    kendo.chat.registerTemplate(\"message\", TEXT_MESSAGE_TEMPLATE);\n    kendo.chat.registerTemplate(\"typing\", TYPING_INDICATOR_TEMPLATE);\n    kendo.chat.registerTemplate(\"suggestedAction\", SUGGESTED_ACTIONS_TEMPLATE);\n    kendo.chat.registerTemplate(\"heroCard\", HERO_CARD_TEMPLATE);\n    kendo.chat.registerTemplate(\"application/vnd.microsoft.card.hero\", HERO_CARD_TEMPLATE);\n\n    kendo.chat.registerComponent = function(componentName, component) {\n        kendo.chat.Components[componentName] = component;\n    };\n\n    kendo.chat.getComponent = function(componentName) {\n        return kendo.chat.Components[componentName] || null;\n    };\n\n    var Component = kendo.chat.Component = kendo.Class.extend({\n        init: function(options, view) {\n            this.element = $('<div></div>');\n            this.options = options;\n            this.view = view;\n        },\n\n        destroy: function() {\n            kendo.destroy(this.element);\n        }\n    });\n\n    var Calendar = Component.extend({\n        init: function(options, view) {\n            Component.fn.init.call(this, options, view);\n\n            this.element.kendoCalendar({\n                change: function() {\n                    view.trigger(\"suggestedAction\", { text: kendo.toString(this.value(), 'd'), type: \"message\" });\n                }\n            });\n        },\n\n        destroy: function() {\n        }\n    });\n    kendo.chat.registerComponent(\"calendar\", Calendar);\n\n    var viewStyles = {\n        wrapper: \"k-chat\",\n        messageList: \"k-avatars\",\n        messageListContent: \"k-message-list-content\",\n        messageTime: \"k-message-time\",\n        messageGroup: \"k-message-group\",\n        message: \"k-message\",\n        only: \"k-only\",\n        first: \"k-first\",\n        middle: \"k-middle\",\n        last: \"k-last\",\n        author: \"k-author\",\n        avatar: \"k-avatar\",\n        noAvatar: \"k-no-avatar\",\n        self: \"k-alt\",\n        button: \"k-button\",\n        buttonDefaults: \"k-button-md k-rounded-md k-button-solid k-button-solid-base\",\n        iconButton: \"k-icon-button\",\n        buttonIcon: \"k-button-icon\",\n        buttonPrimary: \"k-button-md k-rounded-md k-button-flat k-button-flat-primary\",\n        scrollButtonIconLeft: \"chevron-left\",\n        scrollButtonIconRight: \"chevron-right\",\n        typingIndicator: \"k-typing-indicator\",\n        typingIndicatorBubble: \"k-typing-indicator-bubble\",\n        bubble: \"k-chat-bubble\",\n        suggestedActions: \"k-quick-replies\",\n        suggestedAction: \"k-quick-reply\",\n        cardWrapper: \"k-card-container\",\n        cardDeckScrollWrap: \"k-card-deck-scrollwrap\",\n        cardDeck: \"k-card-deck\",\n        cardList: \"k-card-list\",\n        card: \"k-card\",\n        cardRich: \"k-card-type-rich\",\n        cardBody: \"k-card-body\",\n        cardMedia: \"k-card-media\",\n        cardTitle: \"k-card-title\",\n        cardSubtitle: \"k-card-subtitle\",\n        cardActions: \"k-card-actions\",\n        cardActionsVertical: \"k-actions-vertical\",\n        cardActionsHorizontal: \"k-actions-horizontal\",\n        cardActionsStart: \"k-actions-start\",\n        cardActionsCenter: \"k-actions-center\",\n        cardActionsEnd: \"k-actions-end\",\n        cardActionsStretched: \"k-actions-stretched\",\n        cardAction: \"k-card-action\",\n        selected: \"k-selected\"\n    };\n\n    var ChatView = kendo.chat.ChatView = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this._list();\n\n            this._lastSender = null;\n\n            this.typingParticipants = [];\n\n            this._attachEvents();\n\n            this._scrollable();\n        },\n\n        events: [\n        ],\n\n        options: {\n            messages: {\n                isTyping: \" is typing.\",\n                areTyping: \" are typing.\",\n                and: \" and \"\n            }\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            if (this._scrollDraggable) {\n                this._scrollDraggable.destroy();\n            }\n\n            this.element.empty();\n            this.element.off(NS);\n\n            this.list = null;\n            this._lastSender = null;\n        },\n\n        _list: function() {\n            var viewStyles = ChatView.styles;\n\n            this.element\n                .addClass(viewStyles.messageList)\n                .attr(\"role\", \"log\")\n                .attr(\"aria-label\", this.options.messages.messageListLabel);\n\n            this.list = $(\"<div>\")\n                .addClass(viewStyles.messageListContent)\n                .appendTo(this.element);\n        },\n\n        _attachEvents: function() {\n            var styles = ChatView.styles;\n\n            this.element\n                .on(\"click\" + NS, this._listClick.bind(this))\n                .on(\"click\" + NS, DOT + styles.message, this._messageClick.bind(this))\n                .on(\"click\" + NS, DOT + styles.suggestedAction, this._suggestedActionClick.bind(this))\n                .on(\"click\" + NS, DOT + styles.cardAction + SPACE + DOT + styles.button, this._cardActionClick.bind(this));\n\n            this.element.on(\"keydown\" + NS, DOT + styles.suggestedAction, this._suggestedActionKeydown.bind(this));\n        },\n\n        _scrollable: function() {\n            var viewStyles = ChatView.styles;\n\n            this.element\n                .on(\"click\" + NS, DOT + viewStyles.cardDeckScrollWrap + SPACE + DOT + viewStyles.button, this._scrollButtonClick.bind(this));\n        },\n\n        _scrollButtonClick: function(e) {\n            var viewStyles = ChatView.styles;\n            var button = $(e.currentTarget);\n            var scrollToLeft = button.find(`${DOT + viewStyles.buttonIcon}[class*=${viewStyles.scrollButtonIconLeft}]`).length !== 0;\n            var scrollContainer = button.siblings(DOT + viewStyles.cardDeck);\n            var lastCard = scrollContainer.find(DOT + viewStyles.card).last();\n            var cardWidth = lastCard.outerWidth(true);\n\n            if (scrollToLeft) {\n                kendo.scrollLeft(scrollContainer, kendo.scrollLeft(scrollContainer) - cardWidth);\n            } else {\n                kendo.scrollLeft(scrollContainer, kendo.scrollLeft(scrollContainer) + cardWidth);\n            }\n        },\n\n        getTemplate: function(templateName) {\n            return kendo.chat.getTemplate(templateName);\n        },\n\n        getComponent: function(type) {\n           return kendo.chat.getComponent(type);\n        },\n\n        renderMessage: function(message, sender) {\n            if (!message.timestamp) {\n                message.timestamp = new Date();\n            }\n\n            if (!message.text) {\n                message.text = \"\";\n            }\n\n            var bubbleElement = this._renderTemplate(message.type, message);\n\n            this._renderBubble(message.type, bubbleElement, sender);\n\n            if (message.type == \"typing\") {\n                if (this.typingParticipants.length > 0) {\n                    this._removeTypingParticipant(sender);\n                }\n            } else {\n                this._lastSender = sender.id;\n            }\n        },\n\n        renderSuggestedActions: function(suggestedActions) {\n            this._removeSuggestedActions();\n\n            var element = this._renderTemplate(\"suggestedAction\", { suggestedActions: suggestedActions });\n\n            this.list.append(element);\n\n            this._scrollToBottom();\n        },\n\n        renderAttachments: function(options) {\n            var wrapper = this._renderAttachmentWrapper(options.attachmentLayout);\n            var cardContainer = options.attachmentLayout === \"carousel\" ? wrapper.find(DOT + ChatView.styles.cardDeck) : wrapper;\n            var attachments = options.attachments;\n\n            if (!attachments.length) {\n                return;\n            }\n\n            for (var i = 0; i < attachments.length; i++) {\n                var cardElement = this._renderTemplate(attachments[i].contentType, attachments[i].content);\n\n                cardContainer.append(cardElement);\n            }\n\n            this._removeSuggestedActions();\n            this._removeTypingIndicator();\n\n            this.list.append(wrapper);\n\n            this._lastSender = null;\n        },\n\n        renderComponent: function(type) {\n            var componentType = this.getComponent(type);\n            var component = new componentType({}, this);\n\n            this.list.append(component.element);\n\n            this._scrollToBottom();\n        },\n\n        _renderAttachmentWrapper: function(layout) {\n            var viewStyles = ChatView.styles;\n            var wrapper = $(\"<div>\");\n\n            if (layout === \"carousel\") {\n                wrapper.addClass(viewStyles.cardDeckScrollWrap);\n\n                var buttonLeft = this._renderScrollButton(viewStyles.scrollButtonIconLeft);\n                wrapper.append(buttonLeft);\n\n                wrapper.append($(\"<div>\").addClass(viewStyles.cardDeck));\n\n                var buttonRight = this._renderScrollButton(viewStyles.scrollButtonIconRight);\n                wrapper.append(buttonRight);\n            } else {\n                wrapper.addClass(viewStyles.cardList);\n            }\n\n            return wrapper;\n        },\n\n        _renderScrollButton: function(directionClass) {\n            var viewStyles = ChatView.styles;\n\n            return $(\"<button>\")\n                .addClass(viewStyles.button)\n                .addClass(viewStyles.buttonDefaults)\n                .addClass(viewStyles.iconButton)\n                .append(kendo.html.renderIcon({ icon: directionClass, iconClass: viewStyles.buttonIcon }));\n        },\n\n        _removeSuggestedActions: function() {\n            this.list.find(DOT + ChatView.styles.suggestedActions).remove();\n        },\n\n        _listClick: function(e) {\n            var styles = ChatView.styles;\n            var targetElement = $(e.target);\n\n            if (targetElement.hasClass(styles.message) || targetElement.parents(DOT + styles.message).length) {\n                return;\n            }\n\n            this._clearSelection();\n        },\n\n        _messageClick: function(e) {\n            this._clearSelection();\n\n            $(e.currentTarget).addClass(ChatView.styles.selected);\n        },\n\n        _suggestedActionClick: function(e) {\n            var text = $(e.target).data(\"value\") || \"\";\n\n            this.trigger(\"actionClick\", { text: text });\n\n            this._removeSuggestedActions();\n        },\n\n        _suggestedActionKeydown: function(e) {\n            if (e.keyCode === kendo.keys.SPACEBAR || e.keyCode === kendo.keys.ENTER) {\n                this._suggestedActionClick(e);\n            }\n        },\n\n        _cardActionClick: function(e) {\n            var text = $(e.target).data(\"value\") || \"\";\n\n            this.trigger(\"actionClick\", { text: text });\n        },\n\n        _renderBubble: function(messageType, bubbleElement, sender) {\n            this._removeSuggestedActions();\n            this._removeTypingIndicator();\n\n            var group = this._getMessageGroup(sender, messageType);\n\n            this._appendToGroup(group, bubbleElement, messageType);\n\n            this._scrollToBottom();\n        },\n\n        _renderTemplate: function(type, options) {\n            var componentType = this.getComponent(type);\n            var element;\n\n            if (componentType) {\n                var component = new componentType(options, this);\n\n                element = component.element;\n            } else {\n                var template = this.getTemplate(type);\n                var templateOptions = extend(true, {}, options, { styles: ChatView.styles });\n\n                element = $(template(templateOptions));\n            }\n\n            return element;\n        },\n\n        _getMessageGroup: function(sender, messageType) {\n            var viewStyles = ChatView.styles;\n            var template = this._getMessageGroupTemplate(sender, messageType);\n            var appendTarget = messageType == \"typing\" ? this.element : this.list;\n            var group;\n\n            if (sender.id === this._lastSender && this._lastSender !== null && messageType !== \"typing\") {\n                group = this.list.find(DOT + viewStyles.messageGroup).last();\n\n                if (group.length) {\n                    return group;\n                }\n            }\n\n            return $(template({ text: sender.name, url: sender.iconUrl, styles: viewStyles })).appendTo(appendTarget);\n        },\n\n        _getMessageGroupTemplate: function(sender, messageType) {\n            var isOwnMessage = sender.id === this.options.user.id;\n            var template = isOwnMessage ?\n                SELF_MESSAGE_GROUP_TEMPLATE :\n                MESSAGE_GROUP_TEMPLATE;\n\n            if (messageType == \"typing\") {\n                template = TYPING_INDICATOR_TEMPLATE;\n            }\n\n            return template;\n        },\n\n        _appendToGroup: function(group, messageElement, messageType) {\n            var viewStyles = ChatView.styles;\n            var children = group.find(DOT + viewStyles.message);\n            var childrenCount = children.length;\n            var indicator = this.element.find(DOT + viewStyles.typingIndicator);\n\n            if (indicator.length && messageType == \"typing\") {\n                return;\n            }\n\n            messageElement.addClass(childrenCount === 0 ? viewStyles.only : viewStyles.last);\n\n            children.filter(DOT + viewStyles.only)\n                .removeClass(viewStyles.only)\n                .addClass(viewStyles.first);\n\n            children.filter(DOT + viewStyles.last)\n                .removeClass(viewStyles.last)\n                .addClass(viewStyles.middle);\n\n            group.append(messageElement);\n        },\n\n        _renderTypingIndicator: function(sender) {\n            var indicator = this.element.find(DOT + viewStyles.typingIndicatorBubble),\n                indicatorList,\n                participants;\n\n            this._addTypingParticipant(sender);\n\n            if (indicator.length) {\n                participants = this._composeTypingParticipantsText(this.typingParticipants);\n\n                indicatorList = indicator.find(DOT + viewStyles.author).first();\n                indicatorList.text(participants);\n\n            } else {\n                $(TYPING_INDICATOR_TEMPLATE({\n                    text: sender.name + this.options.messages.isTyping,\n                    styles: viewStyles\n                })).appendTo(this.element);\n            }\n\n            this._scrollToBottom();\n        },\n\n        _addTypingParticipant: function(sender) {\n            var found = false;\n            for (var i = 0; i < this.typingParticipants.length; i += 1) {\n                if (this.typingParticipants[i].id == sender.id) {\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                this.typingParticipants.push(sender);\n            }\n        },\n\n        _removeTypingParticipant: function(sender) {\n            var indicator = this.element.find(DOT + viewStyles.typingIndicatorBubble),\n                indicatorList,\n                participants;\n\n            if (indicator.length) {\n                for (var i = 0; i < this.typingParticipants.length; i += 1) {\n                    if (this.typingParticipants[i].id == sender.id) {\n                        this.typingParticipants.splice(i, 1);\n                    }\n                }\n\n                participants = this._composeTypingParticipantsText(this.typingParticipants);\n\n                if (participants === \"\") {\n                    indicator.remove();\n                } else {\n                    indicatorList = indicator.find(DOT + viewStyles.author).first();\n                    indicatorList.text(participants);\n                }\n            }\n        },\n\n        _composeTypingParticipantsText: function(participants) {\n            var messages = this.options.messages,\n                typingAction = participants.length == 1 ? messages.isTyping : messages.areTyping,\n                typingText = \"\";\n\n            if (participants.length === 0) {\n                return typingText;\n            }\n\n            typingText = this.typingParticipants.map(function(author) {\n                return author.name;\n            }).join(', ').replace(/,(?!.*,)/gmi, messages.and.trimRight()) + typingAction;\n\n            return typingText;\n        },\n\n        _removeTypingIndicator: function() {\n            var indicator = this.element.find(DOT + viewStyles.typingIndicatorBubble);\n\n            if (indicator.length) {\n                this.typingParticipants = [];\n                indicator.remove();\n            }\n        },\n\n        _clearSelection: function() {\n            var selectedClass = ChatView.styles.selected;\n\n            this.element.find(DOT + selectedClass).removeClass(selectedClass);\n        },\n\n        _scrollToBottom: function() {\n            this.element.scrollTop(this.element.prop(\"scrollHeight\"));\n        }\n    });\n\n    extend(true, ChatView, { styles: viewStyles });\n\n})(window.kendo.jQuery);\n\nvar __meta__ = {\n    id: \"chat\",\n    name: \"Chat\",\n    category: \"web\",\n    description: \"The Chat component.\",\n    depends: [ \"core\", \"draganddrop\", \"html.button\" ]\n};\n\n(function($, undefined$1) {\n\n    var kendo = window.kendo;\n    var Widget = kendo.ui.Widget;\n    var extend = $.extend;\n    var DOT = \".\";\n\n    var chatStyles = {\n        wrapper: \"k-chat\",\n        canvas: \"k-chat-canvas\",\n        viewWrapper: \"k-message-list\",\n        messageBoxWrapper: \"k-message-box\",\n        toolbarBoxWrapper: \"k-toolbar-box\"\n    };\n\n    var Chat = Widget.extend({\n        init: function(element, options, events) {\n            Widget.fn.init.call(this, element, options);\n\n            if (events) {\n                this._events = events;\n            }\n\n            this._user();\n\n            this._wrapper();\n\n            this._view();\n\n            if (options && options.toolbar && options.toolbar.buttons) {\n                this._toolbar();\n            }\n\n            this._messageBox();\n\n            kendo.notify(this);\n        },\n\n        events: [\n            \"typingStart\",\n            \"typingEnd\",\n            \"post\",\n            \"sendMessage\",\n            \"actionClick\",\n            \"toolClick\"\n        ],\n\n        options: {\n            user: {\n                name: \"User\",\n                iconUrl: \"\"\n            },\n            name: \"Chat\",\n            messages: {\n                messageListLabel: \"Message list\",\n                placeholder: \"Type a message...\",\n                toggleButton: \"Toggle toolbar\",\n                sendButton: \"Send message\"\n            },\n            toolbar: false\n        },\n\n        setOptions: function(options) {\n            this._setEvents(options);\n            $.extend(true, this.options, options);\n\n            if (this.toolbar && \"toolbar\" in options) {\n                this.toolbar.destroy();\n                this.toolbar = null;\n            }\n\n            if (this.messageBox) {\n                this.messageBox.unbind();\n                this.messageBox.destroy();\n                this.messageBox = null;\n            }\n\n            this._messageBox();\n\n            if (\"toolbar\" in options) {\n                this._resetToolbarButtons(options);\n                this._toolbar();\n            }\n        },\n\n        _resetToolbarButtons: function(options) {\n            var toolbarBoxWrapper = this.wrapper.find(DOT + chatStyles.toolbarBoxWrapper);\n\n            if (!toolbarBoxWrapper.is(\":visible\")) {\n                toolbarBoxWrapper.show();\n            }\n\n            if (options.toolbar && typeof options.toolbar == \"object\" && \"buttons\" in options.toolbar) {\n                this.options.toolbar.buttons = options.toolbar.buttons;\n            }\n        },\n\n        destroy: function() {\n            if (this.view) {\n                this.view.unbind();\n                this.view.destroy();\n                this.view = null;\n            }\n\n            if (this.messageBox) {\n                this.messageBox.unbind();\n                this.messageBox.destroy();\n                this.messageBox = null;\n            }\n\n            if (this.toolbar) {\n                this.toolbar.destroy();\n                this.toolbar = null;\n            }\n\n            Widget.fn.destroy.call(this);\n        },\n\n        _user: function() {\n            this.options.user.id = kendo.guid();\n        },\n\n        getUser: function() {\n            return extend(true, {}, this.options.user);\n        },\n\n        _wrapper: function() {\n            var chatStyles = Chat.styles;\n            var options = this.options;\n            var height = options.height;\n            var width = options.width;\n            var uiElements = \"<div class='\" + chatStyles.viewWrapper + \"'></div>\" +\n                             \"<span class='\" + chatStyles.messageBoxWrapper + \"'></span>\";\n            var toolbarElement = $(`<div class=\"${chatStyles.toolbarBoxWrapper}\" role=\"toolbar\"></div>`).hide();\n\n            this.wrapper = this.element\n                .addClass(chatStyles.wrapper)\n                .append(uiElements)\n                .append(toolbarElement);\n\n            if (options.toolbar && options.toolbar.buttons && options.toolbar.buttons.length) {\n                this.wrapper.find(DOT + chatStyles.toolbarBoxWrapper).show();\n            }\n\n            if (height) {\n                this.wrapper.height(height);\n            }\n\n            if (width) {\n                this.wrapper.css(\"max-width\", width);\n            }\n        },\n\n        _view: function() {\n            var that = this;\n            var chatStyles = Chat.styles;\n            var options = extend(true, {}, this.options);\n\n            var element = this.wrapper.find(DOT + chatStyles.viewWrapper + \"\");\n\n            this.view = new kendo.chat.ChatView(element, options);\n\n            this.view\n                .bind(\"actionClick\", function(args) {\n                    that.trigger(\"actionClick\", args);\n\n                    that.postMessage(args.text);\n                });\n        },\n\n        _messageBox: function() {\n            var that = this;\n            var chatStyles = Chat.styles;\n            var options = extend(true, {}, this.options);\n            var element = this.wrapper.find(DOT + chatStyles.messageBoxWrapper + \"\");\n\n            this.messageBox = new kendo.chat.ChatMessageBox(element, options);\n\n            this.messageBox\n                .bind(\"typingStart\", function(args) {\n                    that.trigger(\"typingStart\", args);\n                })\n                .bind(\"typingEnd\", function(args) {\n                    that.trigger(\"typingEnd\", args);\n                })\n                .bind(\"sendMessage\", function(args) {\n                    that.trigger(\"sendMessage\", args);\n\n                    that.postMessage(args.text);\n                })\n                .bind(\"toggleToolbar\", function() {\n                    that.toggleToolbar();\n                })\n                .bind(\"focusToolbar\", function() {\n                    if (that.toolbar) {\n                        that.toolbar.focus();\n                    }\n                });\n        },\n\n        _toolbar: function() {\n            var that = this;\n            var chatStyles = Chat.styles;\n            var options = extend(true, {}, that.options);\n            var element = that.wrapper.find(DOT + chatStyles.toolbarBoxWrapper + \"\");\n\n            that.options.toolbarId = kendo.guid();\n            element.attr(\"id\", that.options.toolbarId);\n\n            if (options.toolbar.scrollable === undefined$1) {\n                this.options.toolbar.scrollable = options.toolbar.scrollable = true;\n            }\n\n            if (options.toolbar.toggleable === undefined$1) {\n                this.options.toolbar.toggleable = options.toolbar.toggleable = false;\n            }\n\n            that.toolbar = new kendo.chat.ChatToolBar(element, options);\n\n            that.toolbar.bind(\"click\", function(ev) {\n                that.trigger(\"toolClick\", {\n                    sender: that,\n                    name: ev.name,\n                    button: ev.button,\n                    messageBox: that.messageBox.input[0],\n                    originalEvent: ev.originalEvent\n                });\n            });\n        },\n\n        postMessage: function(message) {\n            var postArgs = extend(true, {}, { text: message, type: \"message\", timestamp: new Date(), from: this.getUser() });\n\n            this.trigger(\"post\", postArgs);\n\n            this.renderMessage(postArgs, postArgs.from);\n        },\n\n        // TEST calling View renderMessage\n        renderMessage: function(message, sender) {\n            this.view.renderMessage(message, sender);\n        },\n\n        // TEST calling View renderSuggestedActions\n        renderSuggestedActions: function(suggestedActions) {\n            this.view.renderSuggestedActions(suggestedActions);\n        },\n\n        // TEST calling View renderCard\n        renderAttachments: function(options, sender) {\n            this.view.renderAttachments(options, sender);\n        },\n\n        toggleToolbar: function(skipAnimation) {\n            this.toolbar.toggle(skipAnimation);\n        },\n\n        renderUserTypingIndicator: function(sender) {\n            this.view._renderTypingIndicator(sender);\n        },\n\n        clearUserTypingIndicator: function(sender) {\n            this.view._removeTypingParticipant(sender);\n        },\n\n        removeTypingIndicator: function() {\n            this.view._removeTypingIndicator();\n        }\n    });\n\n    kendo.ui.plugin(Chat);\n\n    extend(true, Chat, { styles: chatStyles });\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}