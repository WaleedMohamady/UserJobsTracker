{"version":3,"sources":["raw-mjs/kendo.view.js"],"names":["__meta__","id","name","category","description","depends","hidden","$","undefined$1","kendo","window","attr","ui","attrValue","Observable","directiveSelector","Widget","roleSelector","INIT","TRANSITION_START","TRANSITION_END","SHOW","HIDE","sizzleErrorRegExp","SHOW_START","SAME_VIEW_REQUESTED","VIEW_SHOW","VIEW_TYPE_DETERMINED","AFTER","classNames","View","extend","init","content","options","that","this","guid","fn","call","renderOnInit","_createElement","wrapInSections","_renderSections","tagName","model","_wrap","wrap","_evalTemplate","evalTemplate","_useWithBlock","useWithBlock","_fragments","bind","detachOnHide","detachOnDestroy","render","container","notInitialized","element","append","trigger","_eachFragment","clone","ViewClone","triggerBeforeShow","triggerBeforeHide","showStart","css","view","showEnd","hideEnd","hide","beforeTransition","type","afterTransition","detach","destroy","unbind","remove","purge","add","wrapper","off","fragments","methodName","placeholder","document","getElementById","html","e","test","message","replace","template","contents","result","contains","replaceWith","wrapAll","parent","_wrapper","_createContent","_createHeader","_createFooter","is","ns","addClass","contentSelector","children","filter","child","contentElement","header","footer","Class","transition","noop","Layout","containers","selector","_createContainer","showIn","show","root","find","length","Error","ViewContainer","Fragment","attach","transitionRegExp","history","running","after","end","previous","locationID","current","back","theTransition","transitionData","matches","match","direction","reverse","parseTransition","effect","stop","pop","push","effects","enabled","fx","setReverse","run","then","ViewEngine","views","sandbox","_hideViews","rootView","first","layouts","viewContainer","params","events","showView","url","RegExp","remoteViewURLPrefix","_findViewElement","widgetInstance","reload","remote","_createView","urlPath","split","indexOf","innerHTML","wrapInner","_locate","selectors","charAt","_findViewElementById","_createSpaView","_createMobileView","initWidget","defaultTransition","loader","getLayout","getLayoutProxy","modelScope","roles","viewOptions","jQuery","kendo$1"],"mappings":"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","file":"kendo.view.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.binder.js';\nimport './kendo.fx.js';\n\nvar __meta__ = {\n    id: \"view\",\n    name: \"View\",\n    category: \"framework\",\n    description: \"The View class instantiates and handles the events of a certain screen from the application.\",\n    depends: [ \"core\", \"binder\", \"fx\" ],\n    hidden: false\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        attr = kendo.attr,\n        ui = kendo.ui,\n        attrValue = kendo.attrValue,\n        directiveSelector = kendo.directiveSelector,\n        Observable = kendo.Observable,\n        Widget = kendo.ui.Widget,\n        roleSelector = kendo.roleSelector,\n\n        SCRIPT = \"SCRIPT\",\n        INIT = \"init\",\n        TRANSITION_START = \"transitionStart\",\n        TRANSITION_END = \"transitionEnd\",\n        SHOW = \"show\",\n        HIDE = \"hide\",\n        ATTACH = \"attach\",\n        DETACH = \"detach\",\n        sizzleErrorRegExp = /unrecognized expression/;\n\n    var LOAD_START = \"loadStart\";\n    var LOAD_COMPLETE = \"loadComplete\";\n    var SHOW_START = \"showStart\";\n    var SAME_VIEW_REQUESTED = \"sameViewRequested\";\n    var VIEW_SHOW = \"viewShow\";\n    var VIEW_TYPE_DETERMINED = \"viewTypeDetermined\";\n    var AFTER = \"after\";\n    var classNames = {\n        content: \"k-content\",\n        view: \"k-view\",\n        stretchedView: \"k-stretched-view\",\n        widget: \"k-widget\",\n        header: \"k-header\",\n        footer: \"k-footer\"\n    };\n\n    var View = kendo.ui.Widget.extend({\n        init: function(content, options) {\n            var that = this;\n            options = options || {};\n            that.id = kendo.guid();\n\n            Observable.fn.init.call(that);\n            this.options = $.extend({}, this.options, options);\n\n            that.content = content;\n\n            if (that.options.renderOnInit) {\n                Widget.fn.init.call(that, that._createElement(), options);\n            }\n\n            if (that.options.wrapInSections) {\n                that._renderSections();\n            }\n\n            that.tagName = options.tagName || \"div\";\n            that.model = options.model;\n            that._wrap = options.wrap !== false;\n            this._evalTemplate = options.evalTemplate || false;\n            this._useWithBlock = options.useWithBlock;\n            that._fragments = {};\n\n            that.bind([ INIT, SHOW, HIDE, TRANSITION_START, TRANSITION_END ], options);\n        },\n\n        options: {\n            name: \"View\",\n            renderOnInit: false,\n            wrapInSections: false,\n            detachOnHide: true,\n            detachOnDestroy: true\n        },\n\n        render: function(container) {\n            var that = this,\n                notInitialized = !that.element;\n\n            // The order below matters - kendo.bind should happen when the element is in the DOM, and show should be triggered after init.\n\n            if (notInitialized) {\n                that.element = that._createElement();\n            }\n\n            if (container) {\n                $(container).append(that.element);\n            }\n\n            if (notInitialized) {\n                kendo.bind(that.element, that.model);\n                that.trigger(INIT);\n            }\n\n            if (container) {\n                that._eachFragment(ATTACH);\n                that.trigger(SHOW);\n            }\n\n            return that.element;\n        },\n\n        clone: function() {\n            return new ViewClone(this);\n        },\n\n        triggerBeforeShow: function() {\n            return true;\n        },\n\n        triggerBeforeHide: function() {\n            return true;\n        },\n\n        showStart: function() {\n            var that = this;\n            var element = that.render();\n\n            if (element) {\n                element.css(\"display\", \"\");\n            }\n\n            this.trigger(SHOW_START, { view: this });\n        },\n\n        showEnd: function() {\n        },\n\n        hideEnd: function() {\n            this.hide();\n        },\n\n        beforeTransition: function(type) {\n            this.trigger(TRANSITION_START, { type: type });\n        },\n\n        afterTransition: function(type) {\n            this.trigger(TRANSITION_END, { type: type });\n        },\n\n        hide: function() {\n            if (this.options.detachOnHide) {\n                this._eachFragment(DETACH);\n                $(this.element).detach();\n            }\n\n            this.trigger(HIDE);\n        },\n\n        destroy: function() {\n            var that = this;\n            var element = that.element;\n\n            if (element) {\n                Widget.fn.destroy.call(that);\n\n                kendo.unbind(element);\n                kendo.destroy(element);\n\n                if (that.options.detachOnDestroy) {\n                    element.remove();\n                }\n            }\n        },\n\n        // ported from mobile view\n        purge: function() {\n            var that = this;\n\n            that.destroy();\n            $(that.element).add(that.content).add(that.wrapper).off().remove();\n        },\n\n        fragments: function(fragments) {\n            $.extend(this._fragments, fragments);\n        },\n\n        _eachFragment: function(methodName) {\n            for (var placeholder in this._fragments) {\n                this._fragments[placeholder][methodName](this, placeholder);\n            }\n        },\n\n        _createElement: function() {\n            var that = this,\n                wrapper = \"<\" + that.tagName + \">\",\n                element,\n                content;\n\n            try {\n                content = $(document.getElementById(that.content) || that.content); // support passing id without #\n\n                if (content[0].tagName === SCRIPT) {\n                    content = content.html();\n                }\n            } catch (e) {\n                if (sizzleErrorRegExp.test(e.message)) {\n                    content = that.content;\n                }\n            }\n\n            if (typeof content === \"string\") {\n                content = content.replace(/^\\s+|\\s+$/g, '');\n                if (that._evalTemplate) {\n                    content = kendo.template(content, { useWithBlock: that._useWithBlock })(that.model || {});\n                }\n\n                element = $(wrapper).append(content);\n                // drop the wrapper if asked - this seems like the easiest (although not very intuitive) way to avoid messing up templates with questionable content, like this one for instance:\n                // <script id=\"my-template\">\n                // foo\n                // <span> Span </span>\n                // </script>\n                if (!that._wrap) {\n                   element = element.contents();\n                }\n            } else {\n                element = content;\n                if (that._evalTemplate) {\n                    var result = $(kendo.template($(\"<div />\").append(element.clone(true)).html(), { useWithBlock: that._useWithBlock })(that.model || {}));\n\n                    // template uses DOM\n                    if ($.contains(document, element[0])) {\n                        element.replaceWith(result);\n                    }\n\n                    element = result;\n                }\n                if (that._wrap) {\n                    element = element.wrapAll(wrapper).parent();\n                }\n            }\n\n            return element;\n        },\n\n        _renderSections: function() {\n            var that = this;\n\n            if (that.options.wrapInSections) {\n                that._wrapper();\n                that._createContent();\n                that._createHeader();\n                that._createFooter();\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var content = that.content;\n\n            if (content.is(roleSelector(\"view\"))) {\n                that.wrapper = that.content;\n            } else {\n                that.wrapper = content\n                    .wrap('<div data-' + kendo.ns + 'stretch=\"true\" data-' + kendo.ns + 'role=\"view\" data-' + kendo.ns + 'init-widgets=\"false\"></div>')\n                    .parent();\n            }\n\n            var wrapper = that.wrapper;\n\n            wrapper.attr(\"id\", that.id);\n\n            wrapper.addClass(classNames.view);\n            wrapper.addClass(classNames.widget);\n            wrapper.attr(\"role\", \"view\");\n        },\n\n        _createContent: function() {\n            var that = this;\n            var wrapper = $(that.wrapper);\n            var contentSelector = roleSelector(\"content\");\n\n            if (!wrapper.children(contentSelector)[0]) {\n                var ccontentElements = wrapper.children().filter(function() {\n                    var child = $(this);\n                    if (!child.is(roleSelector(\"header\")) && !child.is(roleSelector(\"footer\"))) {\n                        return child;\n                    }\n                });\n\n                ccontentElements.wrap(\"<div \" + attr(\"role\") + '=\"content\"></div>');\n            }\n\n            // use contentElement instead of content as view.content can be a string\n            this.contentElement = wrapper.children(roleSelector(\"content\"));\n\n            this.contentElement\n                .addClass(classNames.stretchedView)\n                .addClass(classNames.content);\n        },\n\n        _createHeader: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            this.header = wrapper.children(roleSelector(\"header\")).addClass(classNames.header);\n        },\n\n        _createFooter: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            this.footer = wrapper.children(roleSelector(\"footer\")).addClass(classNames.footer);\n        }\n    });\n\n    var ViewClone = kendo.Class.extend({\n        init: function(view) {\n            $.extend(this, {\n                element: view.element.clone(true),\n                transition: view.transition,\n                id: view.id\n            });\n\n            view.element.parent().append(this.element);\n        },\n\n        hideEnd: function() {\n            this.element.remove();\n        },\n\n        beforeTransition: $.noop,\n        afterTransition: $.noop\n    });\n\n    var Layout = View.extend({\n        init: function(content, options) {\n            View.fn.init.call(this, content, options);\n            this.containers = {};\n        },\n\n        container: function(selector) {\n            var container = this.containers[selector];\n\n            if (!container) {\n                container = this._createContainer(selector);\n                this.containers[selector] = container;\n            }\n\n            return container;\n        },\n\n        showIn: function(selector, view, transition) {\n            this.container(selector).show(view, transition);\n        },\n\n        _createContainer: function(selector) {\n            var root = this.render(),\n                element = root.find(selector),\n                container;\n\n            if (!element.length && root.is(selector)) {\n                if (root.is(selector)) {\n                    element = root;\n                } else {\n\n                    throw new Error(\"can't find a container with the specified \" + selector + \" selector\");\n                }\n            }\n\n            container = new ViewContainer(element);\n\n            container.bind(\"accepted\", function(e) {\n                e.view.render(element);\n            });\n\n            return container;\n        }\n    });\n\n    var Fragment = View.extend({\n        attach: function(view, placeholder) {\n            view.element.find(placeholder).replaceWith(this.render());\n        },\n\n        detach: function() {\n        }\n    });\n\n    var transitionRegExp = /^(\\w+)(:(\\w+))?( (\\w+))?$/;\n\n    function parseTransition(transition) {\n        if (!transition) {\n            return {};\n        }\n\n        var matches = transition.match(transitionRegExp) || [];\n\n        return {\n            type: matches[1],\n            direction: matches[3],\n            reverse: matches[5] === \"reverse\"\n        };\n    }\n\n    var ViewContainer = Observable.extend({\n        init: function(container) {\n            Observable.fn.init.call(this);\n            this.container = container;\n            this.history = [];\n            this.view = null;\n            this.running = false;\n        },\n\n        after: function() {\n            this.running = false;\n            this.trigger(\"complete\", { view: this.view });\n            this.trigger(\"after\");\n        },\n\n        end: function() {\n            this.view.showEnd();\n            this.previous.hideEnd();\n            this.after();\n        },\n\n        show: function(view, transition, locationID) {\n            if (!view.triggerBeforeShow() || (this.view && !this.view.triggerBeforeHide())) {\n                this.trigger(\"after\");\n                return false;\n            }\n\n            locationID = locationID || view.id;\n\n            var that = this,\n                current = (view === that.view) ? view.clone() : that.view,\n                history = that.history,\n                previousEntry = history[history.length - 2] || {},\n                back = previousEntry.id === locationID,\n                // If explicit transition is set, it will be with highest priority\n                // Next we will try using the history record transition or the view transition configuration\n                theTransition = transition || ( back ? history[history.length - 1].transition : view.transition ),\n                transitionData = parseTransition(theTransition);\n\n            if (that.running) {\n                that.effect.stop();\n            }\n\n            if (theTransition === \"none\") {\n                theTransition = null;\n            }\n\n            that.trigger(\"accepted\", { view: view });\n            that.view = view;\n            that.previous = current;\n            that.running = true;\n\n            if (!back) {\n                history.push({ id: locationID, transition: theTransition });\n            } else {\n                history.pop();\n            }\n\n            if (!current) {\n                view.showStart();\n                view.showEnd();\n                that.after();\n                return true;\n            }\n\n            if (!theTransition || !kendo.effects.enabled) {\n                view.showStart();\n                that.end();\n            } else {\n                // hide the view element before init/show - prevents blinks on iPad\n                // the replace effect will remove this class\n                view.element.addClass(\"k-fx-hidden\");\n                view.showStart();\n                // do not reverse the explicit transition\n                if (back && !transition) {\n                    transitionData.reverse = !transitionData.reverse;\n                }\n\n                that.effect = kendo.fx(view.element).replace(current.element, transitionData.type)\n                    .beforeTransition(function() {\n                        view.beforeTransition(\"show\");\n                        current.beforeTransition(\"hide\");\n                    })\n                    .afterTransition(function() {\n                        view.afterTransition(\"show\");\n                        current.afterTransition(\"hide\");\n                    })\n                    .direction(transitionData.direction)\n                    .setReverse(transitionData.reverse);\n\n                that.effect.run().then(function() { that.end(); });\n            }\n\n            return true;\n        },\n\n        destroy: function() {\n            var that = this;\n            var view = that.view;\n\n            if (view && view.destroy) {\n                view.destroy();\n            }\n        }\n    });\n\n    var ViewEngine = Observable.extend({\n        init: function(options) {\n            var that = this,\n                views,\n                container;\n\n            Observable.fn.init.call(that);\n            that.options = options;\n\n            $.extend(that, options);\n            that.sandbox = $(\"<div />\");\n            container = that.container;\n\n            views = that._hideViews(container);\n            that.rootView = views.first();\n            that.layouts = {};\n\n            that.viewContainer = new kendo.ViewContainer(that.container);\n\n            that.viewContainer.bind(\"accepted\", function(e) {\n                e.view.params = that.params;\n            });\n\n            that.viewContainer.bind(\"complete\", function(e) {\n                that.trigger(VIEW_SHOW, { view: e.view });\n            });\n\n            that.viewContainer.bind(AFTER, function() {\n                that.trigger(AFTER);\n            });\n\n            this.bind(this.events, options);\n        },\n\n        events: [\n            SHOW_START,\n            AFTER,\n            VIEW_SHOW,\n            LOAD_START,\n            LOAD_COMPLETE,\n            SAME_VIEW_REQUESTED,\n            VIEW_TYPE_DETERMINED\n        ],\n\n        destroy: function() {\n            var that = this;\n            var viewContainer = that.viewContainer;\n\n            kendo.destroy(that.container);\n\n            for (var id in that.layouts) {\n                this.layouts[id].destroy();\n            }\n\n            if (viewContainer) {\n                viewContainer.destroy();\n            }\n        },\n\n        view: function() {\n            return this.viewContainer.view;\n        },\n\n        showView: function(url, transition, params) {\n            url = url.replace(new RegExp(\"^\" + this.remoteViewURLPrefix), \"\");\n            if (url === \"\" && this.remoteViewURLPrefix) {\n                url = \"/\";\n            }\n\n            if (url.replace(/^#/, \"\") === this.url) {\n                this.trigger(SAME_VIEW_REQUESTED);\n                return false;\n            }\n\n            this.trigger(SHOW_START);\n\n            var that = this,\n                element = that._findViewElement(url),\n                view = kendo.widgetInstance(element);\n\n            that.url = url.replace(/^#/, \"\");\n\n            that.params = params;\n\n            if (view && view.reload) {\n                view.purge();\n                element = [];\n            }\n\n            this.trigger(VIEW_TYPE_DETERMINED, { remote: element.length === 0, url: url });\n\n            if (element[0]) {\n                if (!view) {\n                    view = that._createView(element);\n                }\n\n                return that.viewContainer.show(view, transition, url);\n            } else {\n                return true;\n            }\n        },\n\n        append: function(html, url) {\n            var sandbox = this.sandbox,\n                urlPath = (url || \"\").split(\"?\")[0],\n                container = this.container,\n                views,\n                view;\n\n            if (html.indexOf(\"<body\") > -1) {\n                html = $(\"<div>\").append(html).html();\n            }\n\n            sandbox[0].innerHTML = html;\n\n            container.append(sandbox.children(\"script, style\"));\n\n            views = this._hideViews(sandbox);\n            view = views.first();\n\n            // Generic HTML content found as remote view - no remote view markers\n            if (!view.length) {\n                views = view = sandbox.wrapInner(\"<div data-role=view />\").children(); // one element\n            }\n\n            if (urlPath) {\n                view.hide().attr(attr(\"url\"), urlPath);\n            }\n\n            container.append(views);\n\n            html = null; // Garbage collection.\n            return this._createView(view);\n        },\n\n        _locate: function(selectors) {\n            return roleSelector(selectors);\n        },\n\n        _findViewElement: function(url) {\n            var element,\n                urlPath = url.split(\"?\")[0];\n\n            if (!urlPath) {\n                return this.rootView;\n            }\n\n            element = this.container.children(\"[\" + attr(\"url\") + \"='\" + urlPath + \"']\");\n\n            // do not try to search for \"#/foo/bar\" id, jQuery throws error\n            if (!element[0] && urlPath.indexOf(\"/\") === -1) {\n                element = this.container.children(urlPath.charAt(0) === \"#\" ? urlPath : \"#\" + urlPath);\n            }\n\n            if (!element[0]) {\n                element = this._findViewElementById(url);\n            }\n\n            return element;\n        },\n\n        _findViewElementById: function(id) {\n            var element = this.container.children(\"[id='\" + id + \"']\");\n            return element;\n        },\n\n        _createView: function(element) {\n            //return this._createMobileView(element);\n            return this._createSpaView(element);\n        },\n\n        _createMobileView: function(element) {\n            return kendo.initWidget(element, {\n                defaultTransition: this.transition,\n                loader: this.loader,\n                container: this.container,\n                getLayout: this.getLayoutProxy,\n                modelScope: this.modelScope,\n                reload: attrValue(element, \"reload\")\n            }, ui.roles);\n        },\n\n        _createSpaView: function(element) {\n            var viewOptions = (this.options || {}).viewOptions || {};\n            return new kendo.View(element, {\n                renderOnInit: viewOptions.renderOnInit,\n                wrap: viewOptions.wrap || false,\n                wrapInSections: viewOptions.wrapInSections,\n                detachOnHide: viewOptions.detachOnHide,\n                detachOnDestroy: viewOptions.detachOnDestroy\n            });\n        },\n\n        _hideViews: function(container) {\n            return container.children(this._locate(\"view\")).hide();\n        }\n    });\n\n    kendo.ViewEngine = ViewEngine;\n\n    kendo.ViewContainer = ViewContainer;\n    kendo.Fragment = Fragment;\n    kendo.Layout = Layout;\n    kendo.View = View;\n    kendo.ViewClone = ViewClone;\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}