{"version":3,"sources":["raw-mjs/kendo.columnsorter.js"],"names":["__meta__","id","name","category","depends","advanced","$","undefined$1","kendo","window","ui","Widget","DIR","ASC","SINGLE","MIXED","FIELD","DESC","sorterNS","TLINK","ARIASORT","ColumnSorter","extend","init","element","options","link","that","this","fn","call","_refreshHandler","refresh","bind","dataSource","directions","initialDirection","find","wrapInner","on","_click","mode","allowUnsort","compare","filter","showIndexes","events","destroy","off","unbind","e","action","dir","table","headerIndex","sortOrder","container","rows","indexAttr","cells","sort","field","attr","descriptor","_sortFields","removeAttr","index","is","closest","parent","hasClass","getColsTable","a","b","indexA","indexB","parseInt","children","eq","toggleClass","remove","icon","appendTo","length","html","_toggleSortDirection","idx","ctrlKey","metaKey","preventDefault","trigger","splice","push","endless","getKendoGrid","_resetEndless","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.columnsorter.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"columnsorter\",\n    name: \"Column Sorter\",\n    category: \"framework\",\n    depends: [\"core\", \"icons\"],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var DIR = \"dir\";\n    var ASC = \"asc\";\n    var SINGLE = \"single\";\n    var MULTIPLE = \"multiple\";\n    var MIXED = \"mixed\";\n    var FIELD = \"field\";\n    var DESC = \"desc\";\n    var sorterNS = \".kendoColumnSorter\";\n    var TLINK = \".k-link\";\n    var ARIASORT = \"aria-sort\";\n\n    var ColumnSorter = Widget.extend({\n        init: function(element, options) {\n\n            var that = this, link;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._refreshHandler = that.refresh.bind(that);\n\n            that.dataSource = that.options.dataSource.bind(\"change\", that._refreshHandler);\n\n            that.directions = that.options.initialDirection === ASC ? [ASC, DESC] : [DESC, ASC];\n\n            link = that.element.find(TLINK);\n\n            if (!link[0]) {\n                link = that.element.wrapInner('<a class=\"k-link\" href=\"#\"/>').find(TLINK);\n            }\n\n            that.link = link;\n\n            that.element.on(\"click\" + sorterNS, that._click.bind(that));\n        },\n\n        options: {\n            name: \"ColumnSorter\",\n            mode: SINGLE,\n            allowUnsort: true,\n            compare: null,\n            filter: \"\",\n            initialDirection: ASC,\n            showIndexes: false\n        },\n\n        events: [\"change\"],\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.element.off(sorterNS);\n\n            that.dataSource.unbind(\"change\", that._refreshHandler);\n            that._refreshHandler = that.element = that.link = that.dataSource = null;\n        },\n\n        refresh: function(e) {\n            if (e && (e.action === \"itemchange\" || e.action === \"sync\")) {\n                return;\n            }\n            var that = this,\n                sort = that.dataSource.sort() || [],\n                dir,\n                table,\n                leafCells,\n                element = that.element,\n                field = element.attr(kendo.attr(FIELD)),\n                descriptor = (that.dataSource._sortFields || {})[field],\n                headerIndex,\n                sortOrder;\n\n            element.removeAttr(kendo.attr(DIR));\n            element.removeAttr(ARIASORT);\n\n\n            if (descriptor) {\n                dir = descriptor.dir;\n                element.attr(kendo.attr(DIR), dir);\n                sortOrder = descriptor.index;\n            }\n\n            if (element.is(\"th\") && descriptor) {\n                table = getColsTable(element);\n\n                if (table) {\n                    if (element.attr(kendo.attr(\"index\"))) {\n                        leafCells = leafDataCells(element.closest(\"table\"));\n                        headerIndex = leafCells.index(element);\n                    } else {\n                        headerIndex = element.parent().children(\":visible\").index(element);\n                    }\n\n                    table.find(\"col:not(.k-group-col):not(.k-hierarchy-col)\").eq(headerIndex).toggleClass(\"k-sorted\", dir !== undefined$1);\n                }\n            }\n            element.toggleClass(\"k-sorted\", dir !== undefined$1);\n            element.find(\".k-i-sort-asc-small,.k-i-sort-desc-small,.k-svg-i-sort-asc-small,.k-svg-i-sort-desc-small,.k-sort-order,.k-sort-icon\").remove();\n\n            if (dir === ASC) {\n                $('<span class=\"k-sort-icon\">' + kendo.ui.icon(\"sort-asc-small\") + '</span>').appendTo(that.link);\n                element.attr(ARIASORT, \"ascending\");\n            } else if (dir === DESC) {\n                $('<span class=\"k-sort-icon\">' + kendo.ui.icon(\"sort-desc-small\") + '</span>').appendTo(that.link);\n                element.attr(ARIASORT, \"descending\");\n            } else {\n                element.attr(ARIASORT, \"none\");\n            }\n            if (that.options.showIndexes && sort.length > 1 && sortOrder) {\n                $('<span class=\"k-sort-order\" />').html(sortOrder).appendTo(that.link);\n            }\n        },\n\n        _toggleSortDirection: function(dir) {\n            var directions = this.directions;\n            if (dir === directions[directions.length - 1] && this.options.allowUnsort) {\n                return undefined$1;\n            }\n            return directions[0] === dir ? directions[1] : directions[0];\n        },\n\n        _click: function(e) {\n            var that = this,\n                element = that.element,\n                field = element.attr(kendo.attr(FIELD)),\n                dir = element.attr(kendo.attr(DIR)),\n                options = that.options,\n                compare = that.options.compare === null ? undefined$1 : that.options.compare,\n                sort = that.dataSource.sort() || [],\n                ctrlKey = e.ctrlKey || e.metaKey,\n                idx,\n                length;\n\n            e.preventDefault();\n\n            if (options.filter && !element.is(options.filter)) {\n                return;\n            }\n\n            dir = this._toggleSortDirection(dir);\n\n            if (this.trigger(\"change\", { sort: { field: field, dir: dir, compare: compare } })) {\n                return;\n            }\n\n            if (options.mode === SINGLE || (options.mode === MIXED && !ctrlKey)) {\n                sort = [{ field: field, dir: dir, compare: compare }];\n            } else if (options.mode === MULTIPLE || (options.mode === MIXED && ctrlKey)) {\n                for (idx = 0, length = sort.length; idx < length; idx++) {\n                    if (sort[idx].field === field) {\n                        sort.splice(idx, 1);\n                        break;\n                    }\n                }\n                sort.push({ field: field, dir: dir, compare: compare });\n            }\n\n            if (this.dataSource.options.endless) {\n                element.closest(\".k-grid\").getKendoGrid()._resetEndless();\n            }\n            this.dataSource.sort(sort);\n        }\n    });\n\n    function leafDataCells(container) {\n        var rows = container.find(\"tr:not(.k-filter-row)\");\n        var indexAttr = kendo.attr(\"index\");\n\n        var cells = rows.find(\"th[\" + indexAttr + \"]:visible\");\n\n        cells.sort(function(a, b) {\n            a = $(a);\n            b = $(b);\n\n            var indexA = a.attr(indexAttr);\n            var indexB = b.attr(indexAttr);\n\n            if (indexA === undefined$1) {\n                indexA = $(a).index();\n            }\n            if (indexB === undefined$1) {\n                indexB = $(b).index();\n            }\n\n            indexA = parseInt(indexA, 10);\n            indexB = parseInt(indexB, 10);\n            return indexA > indexB ? 1 : (indexA < indexB ? -1 : 0);\n        });\n\n        return cells;\n    }\n\n    function getColsTable(element) {\n        var table = null;\n        if (element.is(\"th\")) {\n            table = element.closest(\"table\");\n            if (table.parent().hasClass(\"k-grid-header-wrap\")) {\n                table = table.closest(\".k-grid\").find(\".k-grid-content > table\");\n            } else if (table.parent().hasClass(\"k-grid-header-locked\")) {\n                table = table.closest(\".k-grid\").find(\".k-grid-content-locked > table\");\n            }\n        }\n        return table;\n    }\n\n    ui.plugin(ColumnSorter);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}