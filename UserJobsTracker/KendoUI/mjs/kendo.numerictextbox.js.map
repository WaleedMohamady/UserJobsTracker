{"version":3,"sources":["raw-mjs/kendo.numerictextbox.js"],"names":["$","kendo","jQuery","addInputPrefixSuffixContainers","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefixContainer","suffixContainer","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","__meta__","id","name","category","description","depends","undefined$1","window","caret","keys","ui","Widget","activeElement","_activeElement","extractFormat","_extractFormat","parse","parseFloat","placeholderSupported","support","placeholder","getCulture","CHANGE","DISABLED","READONLY","INPUT","SPIN","ns","HOVEREVENTS","FOCUSED","HOVER","FOCUS","POINT","SELECTED","STATEDISABLED","STATEINVALID","ARIA_DISABLED","INTEGER_REGEXP","NULL","isPlainObject","extend","NumericTextBox","init","element","min","max","step","value","inputType","that","this","isStep","fn","call","on","_focusout","bind","attr","_parse","_initialOptions","_reset","_wrapper","_arrows","_validation","_input","mobileOS","_text","browser","edge","one","_focusin","selectValue","_click","factor","format","val","enable","is","parents","readonly","_label","_ariaLabel","_applyCssClasses","_validationIcon","floatingLabel","refresh","notify","decimals","restrictDecimals","round","culture","spinners","selectOnFocus","upArrowText","downArrowText","label","size","fillMode","rounded","events","_editable","disable","text","add","off","_toggleText","_upArrowEventHandler","unbind","_downArrowEventHandler","_inputLabel","addClass","removeClass","_toggleHover","prop","e","preventDefault","_spin","_upArrow","_downArrow","_keydown","_keyup","_paste","_inputHandler","focus","setOptions","_placeholder","destroy","_arrowsWrap","remove","_floatingLabelContainer","unwrap","Boolean","_value","_form","_resetHandler","_option","_adjust","_update","_old","arrows","_release","clearTimeout","_spinning","siblings","buttonHtml","wrapAll","parent","toggle","eq","UserEvents","release","iconClass","_blur","_change","_focusing","setTimeout","result","groupRegExp","extractRegExp","input","target","idx","substring","_format","group","caretPosition","RegExp","exec","replace","length","indexOf","select","_getFactorValue","_typing","trigger","_culture","_removeInvalidState","numberFormat","toLowerCase","currency","percent","show","accessKey","find","first","setAttribute","type","title","tabIndex","style","cssText","className","role","autocomplete","key","keyCode","NUMPAD_DOT","_numPadDot","DOWN","UP","ENTER","TAB","_cachedCaret","_step","decimalSeparator","minInvalid","charAt","_isPasted","toString","_numericRegex","test","_oldText","_blinkInvalidState","_addInvalidState","_invalidStateTimeout","precision","fractionRule","_separator","_floatRegExp","option","timeout","originalValue","toFixed","currentTarget","toggleClass","removeAttr","_round","truncate","isNotNull","floating","labelText","content","wrap","FloatingLabel","isFunction","guid","DOMElement","hide","width","css","formId","form","closest","direction","dir","renderButton","shape","parts","split","join","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin","kendo$1"],"mappings":"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","file":"kendo.numerictextbox.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.userevents.js';\nimport './kendo.floatinglabel.js';\nimport './kendo.html.button.js';\nimport './kendo.icons.js';\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"numerictextbox\",\n    name: \"NumericTextBox\",\n    category: \"web\",\n    description: \"The NumericTextBox widget can format and display numeric, percentage or currency textbox.\",\n    depends: [ \"core\", \"userevents\", \"floatinglabel\", \"html.button\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        caret = kendo.caret,\n        keys = kendo.keys,\n        html = kendo.html,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        activeElement = kendo._activeElement,\n        extractFormat = kendo._extractFormat,\n        parse = kendo.parseFloat,\n        placeholderSupported = kendo.support.placeholder,\n        getCulture = kendo.getCulture,\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        INPUT = \"k-input-inner\",\n        SPIN = \"spin\",\n        ns = \".kendoNumericTextBox\",\n        TOUCHEND = \"touchend\",\n        MOUSELEAVE = \"mouseleave\" + ns,\n        HOVEREVENTS = \"mouseenter\" + ns + \" \" + MOUSELEAVE,\n        FOCUSED = \"k-focus\",\n        HOVER = \"k-hover\",\n        FOCUS = \"focus\",\n        POINT = \".\",\n        SYMBOL = \"symbol\",\n        CLASS_ICON = \"k-icon\",\n        LABELCLASSES = \"k-label k-input-label\",\n        FLOATINGLABELCLASS = \"k-floating-label\",\n        SELECTED = \"k-selected\",\n        STATEDISABLED = \"k-disabled\",\n        STATEINVALID = \"k-invalid\",\n        ARIA_DISABLED = \"aria-disabled\",\n        INTEGER_REGEXP = /^(-)?(\\d*)$/,\n        NULL = null,\n        isPlainObject = $.isPlainObject,\n        extend = $.extend;\n\n    var NumericTextBox = Widget.extend({\n         init: function(element, options) {\n             var that = this,\n             isStep = options && options.step !== undefined$1,\n             min, max, step, value, disabled;\n             var inputType;\n\n             Widget.fn.init.call(that, element, options);\n\n             options = that.options;\n             element = that.element\n                           .on(\"focusout\" + ns, that._focusout.bind(that))\n                           .attr(\"role\", \"spinbutton\");\n\n             options.placeholder = options.placeholder || element.attr(\"placeholder\");\n\n             min = that.min(element.attr(\"min\"));\n             max = that.max(element.attr(\"max\"));\n             step = that._parse(element.attr(\"step\"));\n\n             if (options.min === NULL && min !== NULL) {\n                 options.min = min;\n             }\n\n             if (options.max === NULL && max !== NULL) {\n                 options.max = max;\n             }\n\n             if (!isStep && step !== NULL) {\n                 options.step = step;\n             }\n\n             that._initialOptions = extend({}, options);\n\n             inputType = element.attr(\"type\");\n\n             that._reset();\n             that._wrapper();\n             that._arrows();\n             that._validation();\n             that._input();\n\n             if (!kendo.support.mobileOS) {\n                 that._text.on(FOCUS + ns, that._click.bind(that));\n             } else {\n                 that._text.on(TOUCHEND + ns + \" \" + FOCUS + ns, function() {\n                     if (kendo.support.browser.edge) {\n                         that._text.one(FOCUS + ns, function() {\n                            that._focusin();\n                         });\n                     } else {\n                        that._focusin();\n                     }\n                     that.selectValue();\n                 });\n             }\n\n             element.attr(\"aria-valuemin\", options.min !== NULL ? options.min * options.factor : options.min)\n                    .attr(\"aria-valuemax\", options.max !== NULL ? options.max * options.factor : options.max);\n\n             options.format = extractFormat(options.format);\n\n             value = options.value;\n\n             if (value == NULL) {\n                 if (inputType == \"number\") {\n                    value = parseFloat(element.val());\n                 } else {\n                     value = element.val();\n                 }\n             }\n\n             that.value(value);\n\n             disabled = !options.enable || element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n             if (disabled) {\n                 that.enable(false);\n             } else {\n                 that.readonly(element.is(\"[readonly]\"));\n             }\n\n             that._label();\n             that._ariaLabel(that._text);\n             that._applyCssClasses();\n\n             addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._text, suffixInsertAfter: that._validationIcon });\n             if (that.floatingLabel) {\n                 that.floatingLabel.refresh();\n             }\n\n             kendo.notify(that);\n         },\n\n        options: {\n            name: \"NumericTextBox\",\n            decimals: NULL,\n            enable: true,\n            restrictDecimals: false,\n            min: NULL,\n            max: NULL,\n            value: NULL,\n            step: 1,\n            round: true,\n            culture: \"\",\n            format: \"n\",\n            spinners: true,\n            placeholder: \"\",\n            selectOnFocus: false,\n            factor: 1,\n            upArrowText: \"Increase value\",\n            downArrowText: \"Decrease value\",\n            label: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            }\n        },\n        events: [\n            CHANGE,\n            SPIN\n        ],\n\n        _editable: function(options) {\n            var that = this,\n                element = that.element,\n                disable = options.disable,\n                readonly = options.readonly,\n                text = that._text.add(element),\n                wrapper = that.wrapper.off(HOVEREVENTS);\n\n            that._toggleText(true);\n\n            that._upArrowEventHandler.unbind(\"press\");\n            that._downArrowEventHandler.unbind(\"press\");\n            element\n                .off(\"keydown\" + ns)\n                .off(\"keyup\" + ns)\n                .off(\"input\" + ns)\n                .off(\"paste\" + ns);\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n            }\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                text.prop(DISABLED, false)\n                    .prop(READONLY, false)\n                    .attr(ARIA_DISABLED, false);\n\n                that._upArrowEventHandler.bind(\"press\", function(e) {\n                    e.preventDefault();\n                    that._spin(1);\n                    that._upArrow.addClass(SELECTED);\n                });\n\n                that._downArrowEventHandler.bind(\"press\", function(e) {\n                    e.preventDefault();\n                    that._spin(-1);\n                    that._downArrow.addClass(SELECTED);\n                });\n\n                that.element\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"keyup\" + ns, that._keyup.bind(that))\n                    .on(\"paste\" + ns, that._paste.bind(that))\n                    .on(\"input\" + ns, that._inputHandler.bind(that));\n\n                if (that._inputLabel) {\n                    that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                }\n\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                text.attr(DISABLED, disable)\n                    .attr(READONLY, readonly)\n                    .attr(ARIA_DISABLED, disable);\n            }\n        },\n\n        readonly: function(readonly) {\n            var that = this;\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            Widget.fn.setOptions.call(that, options);\n\n            that._text.prop(\"placeholder\", that.options.placeholder);\n            that._placeholder(that.options.placeholder);\n            that.element.attr({\n                \"aria-valuemin\": that.options.min !== NULL ? that.options.min * that.options.factor : that.options.min,\n                \"aria-valuemax\": that.options.max !== NULL ? that.options.max * that.options.factor : that.options.max\n            });\n\n            that.options.format = extractFormat(that.options.format);\n            that._upArrowEventHandler.destroy();\n            that._upArrowEventHandler = null;\n            that._downArrowEventHandler.destroy();\n            that._downArrowEventHandler = null;\n            that._arrowsWrap.remove();\n            that._arrows();\n\n            that._applyCssClasses();\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n                that._inputLabel.remove();\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                    if (that._floatingLabelContainer) {\n                        that.wrapper.unwrap();\n                    }\n                }\n            }\n\n            that._label();\n\n            if (options.enable !== undefined$1 || options.readonly !== undefined$1) {\n                that._editable({\n                    readonly: options.readonly,\n                    disable: !options.enable\n                });\n            } else {\n                that._editable({\n                    readonly: that.element.attr(\"readonly\") !== undefined$1 ? Boolean(that.element.attr(\"readonly\")) : that.options.readonly,\n                    disable: that.element.attr(\"disabled\") !== undefined$1 ? Boolean(that.element.attr(\"disabled\")) : !that.options.enable\n                });\n            }\n\n            if (options.value !== undefined$1) {\n                that.value(options.value);\n            } else if (that._value !== undefined$1) {\n                that.value(that._value);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n            }\n\n            that.element\n                .add(that._text)\n                .add(that._upArrow)\n                .add(that._downArrow)\n                .off(ns);\n\n            that._upArrowEventHandler.destroy();\n            that._downArrowEventHandler.destroy();\n\n            if (that._form) {\n                that._form.off(\"reset\", that._resetHandler);\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        min: function(value) {\n            return this._option(\"min\", value);\n        },\n\n        max: function(value) {\n            return this._option(\"max\", value);\n        },\n\n        step: function(value) {\n            return this._option(\"step\", value);\n        },\n\n        value: function(value) {\n            var that = this, adjusted;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            value = that._parse(value);\n            adjusted = that._adjust(value);\n\n            if (value !== adjusted) {\n                value = NULL;\n            }\n\n            that._update(value);\n            that._old = that._value;\n\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n        },\n\n        focus: function() {\n            this._focusin();\n        },\n\n        _adjust: function(value) {\n            var that = this,\n            options = that.options,\n            min = options.min,\n            max = options.max;\n\n            if (value === NULL) {\n                return value;\n            }\n\n            if (min !== NULL && value < min) {\n                value = min;\n            } else if (max !== NULL && value > max) {\n                value = max;\n            }\n\n            return value;\n        },\n\n        _arrows: function() {\n            var that = this,\n            arrows,\n            _release = function() {\n                clearTimeout( that._spinning );\n                arrows.removeClass(SELECTED);\n            },\n            options = that.options,\n            spinners = options.spinners,\n            element = that.element;\n\n            arrows = element.siblings(\".k-icon-button\");\n\n            if (!arrows[0]) {\n                arrows = $(buttonHtml(\"increase\", options.upArrowText, options) + buttonHtml(\"decrease\", options.downArrowText, options))\n                        .appendTo(that.wrapper);\n\n                that._arrowsWrap = arrows.wrapAll('<span class=\"k-input-spinner k-spin-button\"/>').parent();\n            }\n\n            if (!spinners) {\n                arrows.parent().toggle(spinners);\n            }\n\n            that._upArrow = arrows.eq(0);\n            that._upArrowEventHandler = new kendo.UserEvents(that._upArrow, { release: _release });\n            that._downArrow = arrows.eq(1);\n            that._downArrowEventHandler = new kendo.UserEvents(that._downArrow, { release: _release });\n        },\n\n        _validation: function() {\n            var that = this;\n            var element = that.element;\n\n            that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n        },\n\n        _blur: function() {\n            var that = this;\n\n            that._toggleText(true);\n\n            that._change(that.element.val());\n        },\n\n        _click: function(e) {\n            var that = this;\n\n            clearTimeout(that._focusing);\n            that._focusing = setTimeout(function() {\n                var input = e.target,\n                    idx = caret(input)[0],\n                    value = input.value.substring(0, idx),\n                    format = that._format(that.options.format),\n                    group = format[\",\"],\n                    result, groupRegExp, extractRegExp,\n                    caretPosition = 0;\n\n                if (group) {\n                    groupRegExp = new RegExp(\"\\\\\" + group, \"g\");\n                    extractRegExp = new RegExp(\"(-)?(\" + format[SYMBOL] + \")?([\\\\d\\\\\" + group + \"]+)(\\\\\" + format[POINT] + \")?(\\\\d+)?\");\n                }\n\n                if (extractRegExp) {\n                    result = extractRegExp.exec(value);\n                }\n\n                if (result) {\n                    caretPosition = result[0].replace(groupRegExp, \"\").length;\n\n                    if (value.indexOf(\"(\") != -1 && that._value < 0) {\n                        caretPosition++;\n                    }\n                }\n\n                that._focusin();\n\n                caret(that.element[0], caretPosition);\n                that.selectValue();\n            });\n        },\n\n        selectValue: function() {\n            if (this.options.selectOnFocus) {\n                this.element[0].select();\n            }\n        },\n\n        _getFactorValue: function(value) {\n            var that = this,\n                factor = that.options.factor;\n\n            if (factor && factor !== 1) {\n                value = kendo.parseFloat(value);\n                if (value !== null) {\n                    value = value / factor;\n                }\n            }\n\n            return value;\n        },\n\n        _change: function(value) {\n            var that = this;\n\n            value = that._getFactorValue(value);\n            that._update(value);\n            value = that._value;\n\n            if (that._old != value) {\n                that._old = value;\n\n                if (!that._typing) {\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n\n                that.trigger(CHANGE);\n            }\n\n            that._typing = false;\n        },\n\n        _culture: function(culture) {\n            return culture || getCulture(this.options.culture);\n        },\n\n        _focusin: function() {\n            var that = this;\n            that.wrapper.addClass(FOCUSED);\n            that._toggleText(false);\n            that.element[0].focus();\n        },\n\n        _focusout: function() {\n            var that = this;\n\n            clearTimeout(that._focusing);\n            that.wrapper.removeClass(FOCUSED).removeClass(HOVER);\n            that._blur();\n            that._removeInvalidState();\n        },\n\n        _format: function(format, culture) {\n            var numberFormat = this._culture(culture).numberFormat;\n\n            format = format.toLowerCase();\n\n            if (format.indexOf(\"c\") > -1) {\n                numberFormat = numberFormat.currency;\n            } else if (format.indexOf(\"p\") > -1) {\n                numberFormat = numberFormat.percent;\n            }\n\n            return numberFormat;\n        },\n\n        _input: function() {\n            var that = this,\n                options = that.options,\n                element = that.element.addClass(INPUT).show()[0],\n                accessKey = element.accessKey,\n                wrapper = that.wrapper,\n                inputs = wrapper.find(POINT + INPUT),\n                text;\n\n            text = inputs.first();\n\n            if (text.length < 2) {\n                text = $('<input type=\"text\"/>')\n                        .attr(kendo.attr(\"validate\"), false)\n                        .insertBefore(element);\n            }\n\n            try {\n                element.setAttribute(\"type\", \"text\");\n            } catch (e) {\n                element.type = \"text\";\n            }\n\n            text[0].title = element.title;\n            text[0].tabIndex = element.tabIndex;\n            text[0].style.cssText = element.style.cssText;\n            text.prop(\"placeholder\", options.placeholder);\n\n            if (accessKey) {\n                text.attr(\"accesskey\", accessKey);\n                element.accessKey = \"\";\n            }\n\n\n            that._text = text.addClass(element.className)\n                             .attr({\n                                 \"role\": \"spinbutton\",\n                                 \"aria-valuemin\": options.min !== NULL ? options.min * options.factor : options.min,\n                                 \"aria-valuemax\": options.max !== NULL ? options.max * options.factor : options.max,\n                                 \"autocomplete\": \"off\"\n                             });\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode;\n\n            if (key === keys.NUMPAD_DOT) {\n                that._numPadDot = true;\n            }\n\n            if (key == keys.DOWN) {\n                that._step(-1);\n                return;\n            } else if (key == keys.UP) {\n                that._step(1);\n                return;\n            } else if (key == keys.ENTER) {\n                that._change(that.element.val());\n                return;\n            }\n\n            if (key != keys.TAB) {\n                that._typing = true;\n            }\n            that._cachedCaret = caret(that.element);\n        },\n\n        _keyup: function() {\n            this._removeInvalidState();\n        },\n\n        _inputHandler: function() {\n            var element = this.element;\n            var value = element.val();\n            var min = this.options.min;\n            var numberFormat = this._format(this.options.format);\n            var decimalSeparator = numberFormat[POINT];\n            var minInvalid = (min !== null && min >= 0 && value.charAt(0) === \"-\");\n\n            if (this._numPadDot && decimalSeparator !== POINT) {\n                value = value.replace(POINT, decimalSeparator);\n                this.element.val(value);\n                this._numPadDot = false;\n            }\n\n            if (this._isPasted && this._parse(value)) {\n                value = this._parse(value)\n                    .toString()\n                    .replace(POINT, numberFormat[POINT]);\n            }\n\n            if (this._numericRegex(numberFormat).test(value) && !minInvalid) {\n                this._oldText = value;\n            } else {\n                this._blinkInvalidState();\n                this.element.val(this._oldText);\n                if (this._cachedCaret) {\n                    caret(element, this._cachedCaret[0]);\n                    this._cachedCaret = null;\n                }\n            }\n\n            this._isPasted = false;\n        },\n\n        _blinkInvalidState: function() {\n            var that = this;\n\n            that._addInvalidState();\n            clearTimeout(that._invalidStateTimeout);\n            that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n        },\n\n        _addInvalidState: function() {\n            var that = this;\n\n            that.wrapper.addClass(STATEINVALID);\n            that._validationIcon.removeClass('k-hidden');\n        },\n\n        _removeInvalidState: function() {\n            var that = this;\n\n            that.wrapper.removeClass(STATEINVALID);\n            that._validationIcon.addClass('k-hidden');\n            that._invalidStateTimeout = null;\n        },\n\n        _numericRegex: function(numberFormat) {\n            var that = this;\n            var separator = numberFormat[POINT];\n            var precision = that.options.decimals;\n            var fractionRule = \"*\";\n\n            if (separator === POINT) {\n                separator = \"\\\\\" + separator;\n            }\n\n            if (precision === NULL) {\n                precision = numberFormat.decimals;\n            }\n\n            if (precision === 0 && that.options.restrictDecimals) {\n                return INTEGER_REGEXP;\n            }\n\n            if (that.options.restrictDecimals) {\n                fractionRule = \"{0,\" + precision + \"}\";\n            }\n\n            if (that._separator !== separator) {\n                that._separator = separator;\n                that._floatRegExp = new RegExp(\"^(-)?(((\\\\d+(\" + separator + \"\\\\d\" + fractionRule + \")?)|(\" + separator + \"\\\\d\" + fractionRule + \")))?$\");\n            }\n\n            return that._floatRegExp;\n        },\n\n        _paste: function(e) {\n            var that = this;\n            var element = e.target;\n            var value = element.value;\n            var numberFormat = that._format(that.options.format);\n\n            that._isPasted = true;\n\n           setTimeout(function() {\n                var result = that._parse(element.value);\n\n                if (result === NULL) {\n                    that._update(value);\n                } else {\n                    element.value = result.toString().replace(POINT, numberFormat[POINT]);\n                    if (that._adjust(result) !== result || !that._numericRegex(numberFormat).test(element.value)) {\n                        value = that._getFactorValue(element.value);\n                        that._update(value);\n                    }\n                }\n            });\n        },\n\n        _option: function(option, value) {\n            var that = this,\n                element = that.element,\n                options = that.options;\n\n            if (value === undefined$1) {\n                return options[option];\n            }\n\n            value = that._parse(value);\n\n            if (!value && option === \"step\") {\n                return;\n            }\n\n            options[option] = value;\n            element\n                .add(that._text)\n                .attr(\"aria-value\" + option, value);\n\n            element.attr(option, value);\n        },\n\n        _spin: function(step, timeout) {\n            var that = this;\n\n            timeout = timeout || 500;\n\n            clearTimeout( that._spinning );\n            that._spinning = setTimeout(function() {\n                that._spin(step, 50);\n            }, timeout );\n\n            that._step(step);\n        },\n\n        _step: function(step) {\n            var that = this,\n                element = that.element,\n                originalValue = that._value,\n                value = that._parse(element.val()) || 0,\n                precision = that.options.decimals || 2;\n\n            if (activeElement() != element[0]) {\n                that._focusin();\n            }\n\n            if (that.options.factor && value) {\n                value = value / that.options.factor;\n            }\n\n            value = +(value + that.options.step * step).toFixed(precision);\n            value = that._adjust(value);\n            that._update(value);\n            that._typing = false;\n\n            if (originalValue !== value) {\n                that.trigger(SPIN);\n            }\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _toggleText: function(toggle) {\n            var that = this;\n\n            that._text.toggle(toggle);\n            if (toggle) {\n                that._text.removeAttr(\"aria-hidden\");\n            } else {\n                that._text.attr(\"aria-hidden\", \"true\");\n            }\n            that.element.toggle(!toggle);\n        },\n\n        _parse: function(value, culture) {\n            return parse(value, this._culture(culture), this.options.format);\n        },\n\n        _round: function(value, precision) {\n            var rounder = this.options.round ? kendo._round : truncate;\n\n            return rounder(value, precision);\n        },\n\n        _update: function(value) {\n            var that = this,\n                options = that.options,\n                factor = options.factor,\n                format = options.format,\n                decimals = options.decimals,\n                culture = that._culture(),\n                numberFormat = that._format(format, culture),\n                originalValue,\n                isNotNull;\n\n            if (decimals === NULL) {\n                decimals = numberFormat.decimals;\n            }\n\n            value = that._parse(value, culture);\n\n            isNotNull = value !== NULL;\n\n            if (isNotNull) {\n                value = parseFloat(that._round(value, decimals), 10);\n            }\n\n            that._value = value = that._adjust(value);\n            that._placeholder(kendo.toString(value, format, culture));\n\n            if (isNotNull) {\n                if (factor) {\n                    value = parseFloat(that._round(value * factor, decimals), 10);\n                }\n                value = value.toString();\n                if (value.indexOf(\"e\") !== -1) {\n                    value = that._round(+value, decimals);\n                }\n                originalValue = value;\n                value = value.replace(POINT, numberFormat[POINT]);\n            } else {\n                value = null;\n                originalValue = null;\n            }\n\n            that.element.val(value);\n            that._oldText = value;\n            that.element.add(that._text).attr(\"aria-valuenow\", originalValue);\n        },\n\n        _placeholder: function(value) {\n            var input = this._text;\n\n            input.val(value);\n            if (!placeholderSupported && !value) {\n                input.val(this.options.placeholder);\n            }\n\n            input.attr(\"title\", this.element.attr(\"title\") || input.val());\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n                floating = isPlainObject(options.label) ? options.label.floating : false;\n                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                if (floating) {\n                    that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                }\n\n                if (kendo.isFunction(labelText)) {\n                    labelText = labelText.call(that);\n                }\n\n                if (!labelText) {\n                    labelText = \"\";\n                }\n\n                if (!id) {\n                    id = options.name + \"_\" + kendo.guid();\n                    element.attr(\"id\", id);\n                }\n\n                that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n\n                if ((that.element.attr(\"disabled\") === undefined$1) && (that.element.attr(\"readonly\") === undefined$1)) {\n                    that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                }\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                DOMElement = element[0],\n                wrapper;\n\n            wrapper = element.parents(\".k-numerictextbox\");\n\n            if (!wrapper.is(\"span.k-numerictextbox\")) {\n                wrapper = element.hide().wrap(\"<span/>\").parent();\n            }\n\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"\";\n            that.wrapper = wrapper.addClass(\"k-numerictextbox k-input\")\n                                  .addClass(DOMElement.className)\n                                  .removeClass('input-validation-error')\n                                  .css(\"display\", \"\");\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(element[0].value);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    });\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"NumericTextBox\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"NumericTextBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    function buttonHtml(direction, text, options) {\n        var className = direction === \"increase\" ? \"caret-alt-up\" : \"caret-alt-down\";\n        var dir = direction === \"increase\" ? \"increase\" : \"decrease\";\n\n        return html.renderButton('<button role=\"button\" tabindex=\"-1\" unselectable=\"on\" class=\"k-spinner-' + dir + '\" aria-label=\"' + text + '\" title=\"' + text + '\"></button>', extend({}, options, {\n            icon: className,\n            shape: null,\n            rounded: null\n        }));\n    }\n\n    function truncate(value, precision) {\n        var parts = parseFloat(value, 10).toString().split(POINT);\n\n        if (parts[1]) {\n            parts[1] = parts[1].substring(0, precision);\n        }\n\n        return parts.join(POINT);\n\n    }\n\n    ui.plugin(NumericTextBox);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}