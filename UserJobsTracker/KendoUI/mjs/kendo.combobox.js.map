{"version":3,"sources":["raw-mjs/kendo.combobox.js"],"names":["$","kendo","jQuery","addInputPrefixSuffixContainers","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefixContainer","suffixContainer","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","__meta__","id","name","category","description","depends","features","undefined$1","window","encode","htmlEncode","ui","List","Select","caret","support","placeholderSupported","placeholder","activeElement","_activeElement","keys","ns","nsFocusEvent","CLICK","MOUSEDOWN","DISABLED","READONLY","CHANGE","FOCUSED","STATEDISABLED","ARIA_DISABLED","ARIA_READONLY","STATE_FILTER","STATE_ACCEPT","STATE_REBIND","HOVEREVENTS","newLineRegEx","NON_PRINTABLE_KEYS","ComboBox","extend","init","element","text","that","this","Array","isArray","dataSource","fn","call","on","_focusHandler","bind","attr","_reset","_wrapper","_input","_clearButton","_tabindex","input","_popup","_dataSource","_ignoreCase","_enable","_attachFocusEvents","_oldIndex","selectedIndex","_initialIndex","index","requireValueMapper","_initList","_cascade","autoBind","_filterSource","_isSelect","_setText","_placeholder","parents","is","enable","_clear","parent","length","notify","_toggleCloseVisibility","_applyCssClasses","label","_label","_aria","enabled","value","delay","dataTextField","dataValueField","minLength","enforceMinLength","height","highlightFirst","filter","suggest","cascadeFrom","cascadeFromField","cascadeFromParentField","cascadeOnCustomValue","ignoreCase","animation","virtual","groupTemplate","data","fixedGroupTemplate","clearButton","syncValueAndText","autoWidth","popup","size","fillMode","rounded","clearOnEscape","_removeDataItems","_shouldPreventDefaultReset","events","setOptions","listOptions","_listOptions","listView","_accessors","destroy","off","clearTimeout","_pasteTimeout","filterInput","_arrow","addClass","_onActionSheetCreate","_keydown","_search","_inputPaste","role","val","trigger","_onCloseButtonPressed","textField","focus","_syncValueAndText","dataItem","_accessor","_blur","_oldText","_isValueChanged","unifyType","_old","_change","hasText","isCustom","_typing","_inputFocus","_inputFocusout","e","target","_arrowClick","_toggle","isClearButton","relatedTarget","closest","_userTriggered","removeClass","_typingTimeout","item","_focus","dataItemByIndex","getElementIndex","select","_valueBeforeCascade","setTimeout","search","_editable","disable","readonly","add","arrow","clear","_toggleHover","prop","preventDefault","_clearValue","open","state","_state","isFiltered","filters","reinitialized","ul","find","visible","bound","_open","refresh","_openPopup","_allowOpening","_hovered","_focusItem","_scrollToFocusedItem","scrollToIndex","one","_updateSelectionState","_buildOptions","custom","_customOption","_options","selected","_emptySearch","_custom","_updateSelection","initialIndex","hasInitialIndex","_fetch","selectedDataItems","_value","_text","_selectValue","_updateItemFocus","focusIndex","_listBound","isActive","flatView","skip","groupsLength","_group","isFirstPage","_presetValue","_renderFooter","_renderNoData","_toggleNoData","_toggleHeader","_resizePopup","position","close","toggle","_hideBusy","_listChange","_get","candidate","found","idx","total","_select","keepState","done","_dataValue","_setDomInputValue","_triggerCascade","caretStart","currentCaret","_prev","mobile","mobileOS","wp","android","setSelectionRange","preventShow","_showClear","_hideClear","word","caretIdx","key","_last","accentFoldingFiltering","BACKSPACE","DELETE","view","inArray","toLocaleLowerCase","toLowerCase","indexOf","toString","substring","loweredText","replace","_cascadeTriggered","_refreshFloatingLabel","_isFilterEnabled","_clearFilter","_fetchData","_selectedDataItems","_busy","_arrowIcon","show","_focused","_click","shouldTrigger","_inputValue","_searchByWord","firstChild","current","focusFirst","fetch","maxLength","arrowBtn","accessKey","SELECTOR","renderButton","shape","append","style","cssText","title","parseInt","className","css","width","tabIndex","keyCode","isFkey","isNonPrintableKey","HOME","_firstItem","END","_lastItem","ENTER","TAB","_move","ctrlKey","ESC","toggleClass","hide","wrap","_clearSelection","hasValue","_preselect","setValue","_clearText","plugin","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","kendo$1"],"mappings":"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","file":"kendo.combobox.js","sourcesContent":["import './kendo.list.js';\nimport './kendo.mobile.scroller.js';\nimport './kendo.virtuallist.js';\nimport './kendo.html.button.js';\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"combobox\",\n    name: \"ComboBox\",\n    category: \"web\",\n    description: \"The ComboBox widget allows the selection from pre-defined values or entering a new value.\",\n    depends: [ \"list\", \"html.button\" ],\n    features: [ {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }, {\n        id: \"virtualization\",\n        name: \"VirtualList\",\n        description: \"Support for virtualization\",\n        depends: [ \"virtuallist\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        encode = kendo.htmlEncode,\n        ui = kendo.ui,\n        html = kendo.html,\n        List = ui.List,\n        Select = ui.Select,\n        caret = kendo.caret,\n        support = kendo.support,\n        placeholderSupported = support.placeholder,\n        activeElement = kendo._activeElement,\n        keys = kendo.keys,\n        ns = \".kendoComboBox\",\n        nsFocusEvent = ns + \"FocusEvent\",\n        CLICK = \"click\" + ns,\n        MOUSEDOWN = \"mousedown\" + ns,\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        CHANGE = \"change\",\n        LOADING = \"k-i-loading k-input-loading-icon\",\n        FOCUSED = \"k-focus\",\n        STATEDISABLED = \"k-disabled\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        AUTOCOMPLETEVALUE = \"off\",\n        STATE_FILTER = \"filter\",\n        STATE_ACCEPT = \"accept\",\n        STATE_REBIND = \"rebind\",\n        HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        newLineRegEx = /(\\r\\n|\\n|\\r)/gm,\n        NON_PRINTABLE_KEYS = [16,17,18,19,20,33,34,37,39,45,91,92,144,145];\n\n    var ComboBox = Select.extend({\n        init: function(element, options) {\n            var that = this, text, disabled;\n\n            that.ns = ns;\n\n            options = Array.isArray(options) ? { dataSource: options } : options;\n\n            Select.fn.init.call(that, element, options);\n\n            options = that.options;\n            element = that.element.on(\"focus\" + ns, that._focusHandler.bind(that));\n\n            options.placeholder = options.placeholder || element.attr(\"placeholder\");\n\n            that._reset();\n\n            that._wrapper();\n\n            that._input();\n\n            that._clearButton();\n\n            that._tabindex(that.input);\n\n            that._popup();\n\n            that._dataSource();\n            that._ignoreCase();\n\n            that._enable();\n\n            that._attachFocusEvents();\n\n            that._oldIndex = that.selectedIndex = -1;\n\n            that._initialIndex = options.index;\n\n            that.requireValueMapper(that.options);\n            that._initList();\n\n            that._cascade();\n\n            if (options.autoBind) {\n                that._filterSource();\n            } else {\n                text = options.text;\n\n                if (!text && that._isSelect) {\n                    text = element.children(\":selected\").text();\n                }\n\n                if (text) {\n                    that._setText(text);\n                }\n            }\n\n            if (!text) {\n                that._placeholder();\n            }\n\n            disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            }\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options,\n                prefixInsertBefore: that.input,\n                suffixInsertAfter: that._clear.parent().length ? that._clear : that.input });\n\n            kendo.notify(that);\n            that._toggleCloseVisibility();\n            that._applyCssClasses();\n\n            if (options.label) {\n                that._label();\n            }\n\n            that._aria();\n        },\n\n        options: {\n            name: \"ComboBox\",\n            enabled: true,\n            index: -1,\n            text: null,\n            value: null,\n            autoBind: true,\n            delay: 200,\n            dataTextField: \"\",\n            dataValueField: \"\",\n            minLength: 1,\n            enforceMinLength: false,\n            height: 200,\n            highlightFirst: true,\n            filter: \"none\",\n            placeholder: \"\",\n            suggest: false,\n            cascadeFrom: \"\",\n            cascadeFromField: \"\",\n            cascadeFromParentField: \"\",\n            cascadeOnCustomValue: false,\n            ignoreCase: true,\n            animation: {},\n            virtual: false,\n            template: null,\n            groupTemplate: (data) => encode(data),\n            fixedGroupTemplate: (data) => encode(data),\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            },\n            clearButton: true,\n            syncValueAndText: true,\n            autoWidth: false,\n            popup: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null,\n            clearOnEscape: true,\n            _removeDataItems: true,\n            _shouldPreventDefaultReset: true\n        },\n\n        events: [\n            \"open\",\n            \"close\",\n            CHANGE,\n            \"select\",\n            \"filtering\",\n            \"dataBinding\",\n            \"dataBound\",\n            \"cascade\",\n            \"set\"\n        ],\n\n        setOptions: function(options) {\n            var listOptions = this._listOptions(options);\n\n            Select.fn.setOptions.call(this, options);\n\n            this.listView.setOptions(listOptions);\n\n            this._accessors();\n            this._aria();\n            this._clearButton();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.input.off(ns);\n            that.input.off(nsFocusEvent);\n            that.element.off(ns);\n            that.wrapper.off(ns);\n            clearTimeout(that._pasteTimeout);\n\n            if (that.filterInput) {\n                that.filterInput.off(ns);\n            }\n\n            that._arrow.off(CLICK + \" \" + MOUSEDOWN);\n            that._clear.off(CLICK + \" \" + MOUSEDOWN);\n\n            Select.fn.destroy.call(that);\n        },\n\n        _popup: function() {\n            Select.fn._popup.call(this);\n            this.popup.element.addClass(\"k-combobox-popup\");\n        },\n\n        _onActionSheetCreate: function() {\n            var that = this;\n\n            if (that.filterInput) {\n                that.filterInput\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"paste\" + ns, that._inputPaste.bind(that))\n                    .attr({\n                        \"role\": \"combobox\",\n                        \"aria-expanded\": false\n                    });\n\n                that.popup.bind(\"activate\", () => {\n                    that.filterInput.val(that.input.val());\n                    that.filterInput.trigger(\"focus\");\n                });\n\n                that.popup.bind(\"deactivate\", () => {\n                    that.input.trigger(\"focus\");\n                });\n            }\n        },\n\n        _onCloseButtonPressed: function() {\n            var that = this;\n            var textField = that.options.dataTextField || \"text\";\n            var current = that.listView.focus();\n\n            if (!current) {\n                if (that._syncValueAndText() || that._isSelect) {\n                    if (!that.dataItem() || that.dataItem()[textField] !== that.input.val()) {\n                        var input = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput : that.input;\n                        that._accessor(input.val());\n                    }\n                }\n\n                if (that.options.highlightFirst) {\n                    that.listView.value(that.input.val());\n                    that._blur();\n                } else {\n                    that._oldText = that.text();\n                }\n            }\n        },\n\n        _isValueChanged: function(value) {\n            return value !== List.unifyType(this._old, typeof value) &&\n                value !== List.unifyType(this._oldText, typeof value);\n        },\n\n        _change: function() {\n            var that = this;\n            var text = that.text();\n            var hasText = text && text !== that._oldText && text !== that.options.placeholder;\n            var index = that.selectedIndex;\n            var isCustom = index === -1;\n\n            if (that.filterInput && activeElement() === that.filterInput[0] && isCustom && hasText) {\n                that.input.val(that.filterInput.val());\n            }\n\n            if (!that.options.syncValueAndText && !that.value() && isCustom && hasText) {\n                that._old = \"\";\n                that._oldIndex = index;\n                that._oldText = text;\n\n                if (!that._typing) {\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n\n                that.trigger(CHANGE);\n                that._typing = false;\n                return;\n            }\n\n            Select.fn._change.call(that);\n\n            that._oldText = that.text && that.text();\n\n            that._toggleCloseVisibility();\n        },\n\n        _attachFocusEvents: function() {\n            var that = this;\n            that.input.on(\"focus\" + nsFocusEvent, that._inputFocus.bind(that))\n                      .on(\"focusout\" + nsFocusEvent, that._inputFocusout.bind(that));\n        },\n\n        _focusHandler: function(e) {\n            if (e.target === this.element[0]) {\n                this.input.trigger(\"focus\");\n            }\n        },\n\n        _arrowClick: function() {\n            this._toggle();\n        },\n\n        _inputFocus: function() {\n            this.wrapper.addClass(FOCUSED);\n            this._placeholder(false);\n        },\n\n        _inputFocusout: function(e) {\n            var that = this;\n            var value = that.value();\n            var isClearButton = !$(e.relatedTarget).closest('.k-clear-value').length;\n\n            if (that.filterInput && e.relatedTarget === that.filterInput[0]) {\n                return;\n            }\n\n            that._userTriggered = true;\n            that.wrapper.removeClass(FOCUSED);\n            clearTimeout(that._typingTimeout);\n            that._typingTimeout = null;\n\n            if (isClearButton) {\n              that.text(that.text());\n            }\n\n            var item = that._focus();\n            var dataItem = this.listView.dataItemByIndex(this.listView.getElementIndex(item));\n            var selectedIndex = that.select();\n\n            if (value !== that.value() && selectedIndex !== -1 && that.trigger(\"select\", { dataItem: dataItem, item: item })) {\n                that.value(value);\n                return;\n            }\n\n            that._placeholder();\n            that._valueBeforeCascade = that._old;\n\n            if (isClearButton) {\n                that._blur();\n\n                that.element.trigger(\"blur\");\n            }\n        },\n\n        _inputPaste: function() {\n            var that = this;\n            clearTimeout(that._pasteTimeout);\n            that._pasteTimeout = null;\n\n            that._pasteTimeout = setTimeout(function() {\n                that.search();\n            });\n        },\n\n        _editable: function(options) {\n            var that = this,\n                disable = options.disable,\n                readonly = options.readonly,\n                wrapper = that.wrapper.off(ns),\n                input = that.element.add(that.input.off(ns)),\n                arrow = that._arrow.off(CLICK + \" \" + MOUSEDOWN),\n                clear = that._clear;\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                input.prop(DISABLED, false)\n                     .prop(READONLY, false)\n                     .attr(ARIA_DISABLED, false)\n                     .attr(ARIA_READONLY, false);\n\n                arrow.on(CLICK, that._arrowClick.bind(that))\n                     .on(MOUSEDOWN, function(e) { e.preventDefault(); });\n\n                clear.on(CLICK + \" touchend\" + ns, that._clearValue.bind(that));\n\n                that.input\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"paste\" + ns, that._inputPaste.bind(that));\n\n                that.wrapper.on(CLICK + ns, that._focusHandler.bind(that));\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                input.attr(DISABLED, disable)\n                     .attr(READONLY, readonly)\n                     .attr(ARIA_DISABLED, disable)\n                     .attr(ARIA_READONLY, readonly);\n            }\n\n            that._toggleCloseVisibility();\n        },\n\n        open: function() {\n            var that = this;\n            var state = that._state;\n            var isFiltered = that.dataSource.filter() ? that.dataSource.filter().filters.length > 0 : false;\n            var reinitialized = !that.ul.find(that.listView.focus()).length;\n\n            if (that.popup.visible()) {\n                return;\n            }\n\n            if ((!that.listView.bound() && state !== STATE_FILTER) || state === STATE_ACCEPT) {\n                that._open = true;\n                that._state = STATE_REBIND;\n\n                if ((that.options.minLength !== 1 && !isFiltered) || (isFiltered && that.value() && that.selectedIndex === -1 )) {\n                    that.refresh();\n                    that._openPopup();\n                    if (!this.options.virtual) {\n                        that.listView.bound(false);\n                    }\n                } else {\n                    that._filterSource();\n                }\n            } else if (that._allowOpening()) {\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                that.popup._hovered = true;\n                that._openPopup();\n                if (that.options.virtual) {\n                    that._focusItem();\n                } else if (reinitialized && that.options.highlightFirst) {\n                    that.listView.focus(0);\n                }\n            }\n        },\n\n        _scrollToFocusedItem: function() {\n            var listView = this.listView;\n\n            listView.scrollToIndex(listView.getElementIndex(listView.focus()));\n        },\n\n        _openPopup: function() {\n            this.popup.one(\"activate\", this._scrollToFocusedItem.bind(this));\n            this.popup.open();\n        },\n\n        _updateSelectionState: function() {\n            var that = this;\n            var text = that.options.text;\n            var value = that.options.value;\n\n            if (that.listView.isFiltered()) {\n                return;\n            }\n\n            if (that.selectedIndex === -1) {\n                if (text === undefined$1 || text === null) {\n                    text = value;\n                }\n\n                that._accessor(value);\n                that.input.val(text || that.input.val());\n                that._placeholder();\n            } else if (that._oldIndex === -1) {\n                that._oldIndex = that.selectedIndex;\n            }\n        },\n\n        _buildOptions: function(data) {\n            var that = this;\n            if (!that._isSelect) {\n                return;\n            }\n\n            var custom = that._customOption;\n\n            if (that._state === STATE_REBIND) {\n                that._state = \"\";\n            }\n\n            that._customOption = undefined$1;\n            that._options(data, \"\", that.value());\n\n            if (custom && custom[0].selected && !that.listView._emptySearch) {\n                that._custom(custom.val());\n            }\n        },\n\n        _updateSelection: function() {\n            var that = this;\n            var listView = that.listView;\n            var initialIndex = that._initialIndex;\n            var hasInitialIndex = initialIndex !== null && initialIndex > -1;\n            var filtered = that._state === STATE_FILTER;\n\n            if (filtered) {\n                $(listView.focus()).removeClass(\"k-selected\");\n                return;\n            }\n\n            if (that._fetch) {\n                return;\n            }\n\n            if (!listView.value().length) {\n                if (hasInitialIndex) {\n                    that.select(initialIndex);\n                } else if (that._accessor()) {\n                    listView.value(that._accessor());\n                }\n            }\n\n            that._initialIndex = null;\n            var dataItem = listView.selectedDataItems()[0];\n\n            if (!dataItem) {\n                return;\n            }\n\n            if (that._value(dataItem) !== that.value()) {\n                that._custom(that._value(dataItem));\n            } else if (that._value(dataItem) !== that.element[0].value) {\n                that._accessor(that._value(dataItem));\n            }\n\n            if (that.text() && that.text() !== that._text(dataItem)) {\n                that._selectValue(dataItem);\n            }\n        },\n\n        _updateItemFocus: function() {\n            var listView = this.listView;\n\n            if (!this.options.highlightFirst) {\n                listView.focus(-1);\n            } else if (!listView.focus() && !listView.focusIndex()) {\n                listView.focus(0);\n            }\n        },\n\n        _listBound: function() {\n            var that = this;\n            var isActive = that.input[0] === activeElement() || that.filterInput && that.filterInput[0] === activeElement();\n\n            var data = that.dataSource.flatView();\n            var skip = that.listView.skip();\n            var length = data.length;\n            var groupsLength = that.dataSource._group ? that.dataSource._group.length : 0;\n            var isFirstPage = skip === undefined$1 || skip === 0;\n\n            that._presetValue = false;\n\n            that._renderFooter();\n            that._renderNoData();\n            that._toggleNoData(!length);\n            that._toggleHeader(!!groupsLength && !!length);\n\n            that._resizePopup();\n\n            that.popup.position();\n\n            that._buildOptions(data);\n\n            that._updateSelection();\n\n            if (data.length && isFirstPage) {\n                that._updateItemFocus();\n\n                if (that.options.suggest && isActive && that.input.val()) {\n                    that.suggest(data[0]);\n                }\n            }\n\n            if (that._open) {\n                that._open = false;\n\n                if (that._typingTimeout && !isActive) {\n                    that.popup.close();\n                } else {\n                    that.toggle(that._allowOpening());\n                }\n\n                that._typingTimeout = null;\n            }\n\n            that._hideBusy();\n            that.trigger(\"dataBound\");\n        },\n\n        _listChange: function() {\n            this._selectValue(this.listView.selectedDataItems()[0]);\n\n            if (this._presetValue) {\n                this._oldIndex = this.selectedIndex;\n            }\n        },\n\n        _get: function(candidate) {\n            var data, found, idx;\n\n            if (typeof candidate === \"function\") {\n                data = this.dataSource.flatView();\n\n                for (idx = 0; idx < data.length; idx++) {\n                    if (candidate(data[idx])) {\n                        candidate = idx;\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    candidate = -1;\n                }\n            }\n\n            if (!this.dataSource.total() && !candidate) {\n                candidate = -1;\n            }\n\n            return candidate;\n        },\n\n        _select: function(candidate, keepState) {\n            var that = this;\n\n            candidate = that._get(candidate);\n\n            if (candidate === -1) {\n                that.input[0].value = \"\";\n                that._accessor(\"\");\n            }\n\n            return that.listView.select(candidate).done(function() {\n                if (!keepState && that._state === STATE_FILTER) {\n                    that._state = STATE_ACCEPT;\n                }\n                that._toggleCloseVisibility();\n            });\n        },\n\n        _selectValue: function(dataItem) {\n            var idx = this.listView.select();\n            var value = \"\";\n            var text = \"\";\n\n            idx = idx[idx.length - 1];\n            if (idx === undefined$1) {\n                idx = -1;\n            }\n\n            this.selectedIndex = idx;\n\n            if (this.listView.isFiltered() && idx !== -1) {\n                this._valueBeforeCascade = this._old;\n            }\n\n            if (idx === -1 && !dataItem) {\n                if (this.options.syncValueAndText) {\n                    if (this.options.dataTextField === this.options.dataValueField) {\n                        text = this._accessor();\n                    } else {\n                        text = this.input[0].value;\n                    }\n                    value = text;\n                }\n                else {\n                    text = this.text();\n                }\n                this.listView.focus(-1);\n            } else {\n                if (dataItem || dataItem === 0) {\n                    value = this._dataValue(dataItem);\n                    text = this._text(dataItem);\n                }\n\n                if (value === null) {\n                    value = \"\";\n                }\n            }\n\n            this._setDomInputValue(text);\n            this._accessor(value !== undefined$1 ? value : text, idx);\n\n            this._placeholder();\n            this._triggerCascade();\n        },\n\n        _setDomInputValue: function(text) {\n            var that = this;\n            var currentCaret = caret(this.input);\n            var caretStart;\n\n            if (currentCaret && currentCaret.length) {\n                caretStart = currentCaret[0];\n            }\n\n            this._prev = this.input[0].value = text;\n\n            if (caretStart && this.selectedIndex === -1) {\n                var mobile = support.mobileOS;\n                if (mobile.wp || mobile.android) {// without the timeout the caret is at the end of the input\n                    setTimeout(function() { that.input[0].setSelectionRange(caretStart, caretStart); }, 0);\n                }\n                else {\n                    this.input[0].setSelectionRange(caretStart, caretStart);\n                }\n            }\n        },\n\n        refresh: function() {\n            this.listView.refresh();\n        },\n\n        _toggleCloseVisibility: function() {\n            var preventShow = this.element.is(\":disabled\") || this.element.is(\"[readonly]\");\n\n            if (this.text() && !preventShow) {\n                this._showClear();\n            } else {\n                this._hideClear();\n            }\n        },\n\n        suggest: function(word) {\n            var that = this;\n            var element = that.input[0];\n            var value = that.text();\n            var caretIdx = caret(element)[0];\n            var key = that._last;\n            var idx;\n            var accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering;\n\n            if (key == keys.BACKSPACE || key == keys.DELETE) {\n                that._last = undefined$1;\n                return;\n            }\n\n            word = word || \"\";\n\n            if (typeof word !== \"string\") {\n                if (word[0]) {\n                    word = that.dataSource.view()[List.inArray(word[0], that.ul[0])];\n                }\n\n                word = word ? that._text(word) : \"\";\n            }\n\n            if (caretIdx <= 0) {\n                caretIdx = (accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase()).indexOf(accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()) + 1;\n            }\n\n            if (word) {\n                word = word.toString();\n                idx = (accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()).indexOf(accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase());\n                if (idx > -1) {\n                    value += word.substring(idx + value.length);\n                }\n            } else {\n                value = value.substring(0, caretIdx);\n            }\n\n            if (value.length !== caretIdx || !word) {\n                element.value = value;\n                if (element === activeElement()) {\n                    caret(element, caretIdx, value.length);\n                }\n            }\n        },\n\n        text: function(text) {\n            text = text === null ? \"\" : text;\n\n            var that = this;\n            var input = that.filterInput && that.filterInput[0] === activeElement() ? that.filterInput[0] : that.input[0];\n            var ignoreCase = that.options.ignoreCase;\n            var loweredText = text;\n            var dataItem;\n            var value;\n\n            if (text === undefined$1) {\n                return input.value;\n            }\n\n            if (that.options.autoBind === false && !that.listView.bound()) {\n                that._setText(text);\n                return;\n            }\n\n            dataItem = that.dataItem();\n\n            if (dataItem && that._text(dataItem).replace && that._text(dataItem).replace(newLineRegEx,\"\") === text) {\n                value = that._value(dataItem);\n\n                if (value === List.unifyType(that._old, typeof value)) {\n                    that._triggerCascade();\n                    return;\n                }\n            }\n\n            if (ignoreCase) {\n                loweredText = loweredText.toLowerCase();\n            }\n\n            if (that.dataItem() && that._text(that.dataItem()) === text) {\n                return;\n            }\n\n            that._select(function(data) {\n                data = that._text(data);\n                if (ignoreCase) {\n                    data = (data + \"\").toLowerCase();\n                }\n\n                return data === loweredText;\n            }).done(function() {\n                if (that.selectedIndex < 0) {\n                    input.value = text;\n\n                    if (that.options.syncValueAndText) {\n                        that._accessor(text);\n                    }\n\n                    that._cascadeTriggered = true;\n                    that._triggerCascade();\n                    that._refreshFloatingLabel();\n                }\n\n                that._prev = input.value;\n            });\n\n            that._toggleCloseVisibility();\n        },\n\n        toggle: function(toggle) {\n            this._toggle(toggle, true);\n        },\n\n        value: function(value) {\n            var that = this;\n            var options = that.options;\n            var listView = that.listView;\n\n            if (value === undefined$1) {\n                value = that._accessor() || that.listView.value()[0];\n                return value === undefined$1 || value === null ? \"\" : value;\n            }\n\n            that.requireValueMapper(that.options, value);\n\n            that.trigger(\"set\", { value: value });\n\n            if (value === options.value && that.input.val() === options.text &&\n            !that.options.cascadeFrom) {\n                return;\n            }\n\n            that._accessor(value);\n\n            if (that._isFilterEnabled() && listView.bound() && listView.isFiltered()) {\n                that._clearFilter();\n            } else {\n                that._fetchData();\n            }\n\n            listView\n                .value(value)\n                .done(function() {\n                    if (that.selectedIndex === -1 && (!listView._selectedDataItems || !listView._selectedDataItems.length)) {\n                        that._accessor(value);\n                        that.input.val(value);\n                        that._placeholder(true);\n                    }\n\n                    if (that._userTriggered) {\n                         that._old = that._accessor();\n                    } else {\n                         that._old = that._valueBeforeCascade = that._accessor();\n                    }\n\n                    that._oldIndex = that.selectedIndex;\n\n                    that._prev = that._oldText = that.input.val();\n\n                    if (that._state === STATE_FILTER) {\n                        that._state = STATE_ACCEPT;\n                    }\n                    that._toggleCloseVisibility();\n\n                    that._refreshFloatingLabel();\n                });\n        },\n\n        _hideBusy: function() {\n            var that = this;\n            clearTimeout(that._busy);\n            that._arrowIcon.removeClass(LOADING);\n            that._arrowIcon.find(\"svg\").show();\n            that._focused.attr(\"aria-busy\", false);\n            that._busy = null;\n            that._toggleCloseVisibility();\n        },\n\n        _click: function(e) {\n            var that = this;\n            var item = e.item;\n            var dataItem = that.listView.dataItemByIndex(that.listView.getElementIndex(item));\n            var shouldTrigger = true;\n            e.preventDefault();\n\n            if (dataItem) {\n                shouldTrigger = that._value(dataItem) !== List.unifyType(that.value(), typeof that._value(dataItem));\n\n                if (!shouldTrigger) {\n                   that.input.val(that._text(dataItem));\n                }\n            }\n\n            if (shouldTrigger && that.trigger(\"select\", { dataItem: dataItem, item: item })) {\n                that.close();\n                return;\n            }\n\n            that._userTriggered = true;\n\n            that._select(item).done(function() {\n                that._blur();\n            });\n        },\n\n        _syncValueAndText: function() {\n            return this.options.syncValueAndText;\n        },\n\n        _inputValue: function() {\n            return this.text();\n        },\n\n        _searchByWord: function(word) {\n            var that = this;\n            var options = that.options;\n            var dataSource = that.dataSource;\n            var ignoreCase = options.ignoreCase;\n            var predicate = function(dataItem) {\n                var text = that._text(dataItem);\n                if (text !== undefined$1) {\n                    text = text + \"\";\n                    if (text !== \"\" && word === \"\") {\n                        return false;\n                    }\n\n                    if (ignoreCase) {\n                        text = text.toLowerCase();\n                    }\n\n                    return text.indexOf(word) === 0;\n                }\n            };\n\n            if (ignoreCase) {\n                word = word.toLowerCase();\n            }\n\n            if (!that.ul[0].firstChild) {\n                dataSource.one(CHANGE, function() {\n                    if (dataSource.view()[0]) {\n                        that.search(word);\n                    }\n                }).fetch();\n                return;\n            }\n\n            this.listView.focus(this._get(predicate));\n\n            var current = this.listView.focus();\n\n            if (current) {\n                if (options.suggest) {\n                    that.suggest(current);\n                }\n\n                this.open();\n            }\n\n            if (this.options.highlightFirst && !word) {\n                this.listView.focusFirst();\n            }\n        },\n\n        _input: function() {\n            var that = this,\n                element = that.element.removeClass(\"k-input-inner\")[0],\n                accessKey = element.accessKey,\n                wrapper = that.wrapper,\n                SELECTOR = \"input.k-input-inner\",\n                name = element.name || \"\",\n                options = that.options,\n                input,\n                maxLength,\n                arrowBtn;\n\n            if (name) {\n                name = 'name=\"' + name + '_input\" ';\n            }\n\n            input = wrapper.find(SELECTOR);\n\n            if (!input[0]) {\n                arrowBtn = html.renderButton('<button type=\"button\" class=\"k-input-button\" aria-label=\"expand combobox\"></button>', {\n                    icon: \"caret-alt-down\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\",\n                });\n\n                wrapper.append('<input ' + name + 'class=\"k-input-inner\" type=\"text\" autocomplete=\"' + AUTOCOMPLETEVALUE + '\"/>')\n                    .append(arrowBtn)\n                    .append(that.element);\n\n                input = wrapper.find(SELECTOR);\n            }\n\n            input[0].style.cssText = element.style.cssText;\n            input[0].title = element.title;\n\n            maxLength = parseInt(this.element.prop(\"maxlength\") || this.element.attr(\"maxlength\"), 10);\n            if (maxLength > -1) {\n                input[0].maxLength = maxLength;\n            }\n\n            input.addClass(element.className)\n                .css({\n                    width: \"\",\n                    height: element.style.height,\n                    position: \"\"\n                })\n                .attr({\n                    \"role\": \"combobox\",\n                    \"aria-expanded\": false\n                })\n                .show();\n\n            input.attr(kendo.attr(\"skip\"), true);\n            if (placeholderSupported) {\n                input.attr(\"placeholder\", that.options.placeholder);\n            }\n\n            if (accessKey) {\n                element.accessKey = \"\";\n                input[0].accessKey = accessKey;\n            }\n\n            that._focused = that.input = input;\n            that._arrow = wrapper.find(\".k-input-button\")\n                .attr({\n                    \"role\": \"button\",\n                    \"tabIndex\": -1\n                });\n            that._arrowIcon = that._arrow.find(\".k-icon, .k-svg-icon\");\n        },\n\n        _clearButton: function() {\n            List.fn._clearButton.call(this);\n\n            if (this.options.clearButton) {\n                this._clear.insertAfter(this.input);\n            }\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                textField = that.options.dataTextField || \"text\",\n                isFkey = key >= 112 && key <= 135,\n                isNonPrintableKey = NON_PRINTABLE_KEYS.indexOf(key) > -1;\n\n            that._last = key;\n\n            clearTimeout(that._typingTimeout);\n            that._typingTimeout = null;\n\n            if (key === keys.HOME) {\n                that._firstItem();\n            } else if (key === keys.END) {\n                that._lastItem();\n            } else if (key === keys.ENTER || (key === keys.TAB && that.popup.visible())) {\n                var current = that.listView.focus();\n                var dataItem = that.dataItem();\n                var shouldTrigger = true;\n\n                if (!that.popup.visible() && (!dataItem || that.text() !== that._text(dataItem))) {\n                    current = null;\n                }\n\n                if (current) {\n                    if (that.popup.visible()) {\n                        e.preventDefault();\n                    }\n\n                    dataItem = that.listView.dataItemByIndex(that.listView.getElementIndex(current));\n\n                    if (dataItem) {\n                        shouldTrigger = that._value(dataItem) !== List.unifyType(that.value(), typeof that._value(dataItem));\n                    }\n\n                    if (shouldTrigger && that.trigger(\"select\", { dataItem: dataItem, item: current })) {\n                        return;\n                    }\n\n                    that._userTriggered = true;\n\n                    that._select(current).done(function() {\n                        that._blur();\n                        that._valueBeforeCascade = that._old = that.value();\n                    });\n                } else {\n                    if (that._syncValueAndText() || that._isSelect) {\n                        if (!that.dataItem() || that.dataItem()[textField] !== that.input.val()) {\n                            var input = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput : that.input;\n                            that._accessor(input.val());\n                        }\n                    }\n\n                    if (that.options.highlightFirst) {\n                        that.listView.value(that.input.val());\n                        that._blur();\n                    } else {\n                        that._oldText = that.text();\n                    }\n                }\n            } else if (key != keys.TAB && !that._move(e) && !isNonPrintableKey && !isFkey && !e.ctrlKey) {\n               that._search();\n            } else if (that.options.clearOnEscape && key === keys.ESC && !that.popup.visible() && that.text()) {\n                that._clearValue();\n            }\n        },\n\n        _placeholder: function(show) {\n            if (placeholderSupported) {\n                return;\n            }\n\n            var that = this,\n                input = that.input,\n                placeholder = that.options.placeholder,\n                value;\n\n            if (placeholder) {\n                value = that.value();\n\n                if (show === undefined$1) {\n                    show = !value;\n                }\n\n                input.toggleClass(\"k-readonly\", show);\n\n                if (!show) {\n                    if (!value) {\n                        placeholder = \"\";\n                    } else {\n                        return;\n                    }\n                }\n\n                input.val(placeholder);\n\n                if (!placeholder && input[0] === activeElement()) {\n                    caret(input[0], 0, 0);\n                }\n            }\n        },\n\n        _search: function() {\n            var that = this;\n\n            clearTimeout(that._typingTimeout);\n\n            that._typingTimeout = setTimeout(function() {\n                var value = that.text();\n\n                if (value !== \"\" && that._prev !== value) {\n                    that._prev = value;\n\n                    if (that.options.filter === \"none\" && that.options.virtual) {\n                        that.listView.select(-1);\n                    }\n\n                    that.search(value);\n\n                    that._toggleCloseVisibility();\n                }\n                else if (value === \"\" && that._prev !== \"\" && that._prev !== undefined$1) {\n                    that._clearValue();\n                    that._open = true;\n                    that._state = STATE_REBIND;\n                }\n\n                that._typingTimeout = null;\n            }, that.options.delay);\n        },\n\n        _setText: function(text) {\n            this.input.val(text);\n            this._prev = text;\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper = element.parent();\n\n            if (!wrapper.is(\"span.k-input\")) {\n                wrapper = element.hide().wrap(\"<span />\").parent();\n                wrapper[0].style.cssText = element[0].style.cssText;\n            }\n\n            that.wrapper = wrapper.addClass(\"k-input k-combobox\")\n                .addClass(element[0].className)\n                .removeClass('input-validation-error')\n                .css(\"display\", \"\");\n        },\n\n        _clearSelection: function(parent, isFiltered) {\n            var that = this;\n            var hasValue = parent.value();\n            var custom = hasValue && parent.selectedIndex === -1;\n\n            if (this.selectedIndex == -1 && this.value()) {\n                return;\n            }\n\n            if (isFiltered || !hasValue || custom) {\n                that.options.value = \"\";\n                that.value(\"\");\n            }\n        },\n\n        _preselect: function(value, text) {\n            this.input.val(text);\n            this._accessor(value);\n\n            this._old = this._accessor();\n            this._oldIndex = this.selectedIndex;\n\n            this.listView.setValue(value);\n            this._placeholder();\n\n            this._initialIndex = null;\n            this._presetValue = true;\n            this._toggleCloseVisibility();\n        },\n\n        _clearText: function() {\n            this._old = this.value();\n            this.text(\"\");\n        },\n\n        _clearValue: function() {\n            var that = this;\n            var input = that.filterInput && that.filterInput[0] === activeElement() ? that.filterInput : that.input;\n\n            Select.fn._clearValue.call(this);\n            input.trigger(\"focus\");\n        }\n    });\n\n    ui.plugin(ComboBox);\n\n    kendo.cssProperties.registerPrefix(\"ComboBox\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"ComboBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}