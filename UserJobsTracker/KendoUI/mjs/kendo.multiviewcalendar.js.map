{"version":3,"sources":["raw-mjs/kendo.multiviewcalendar.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","calendar","support","isInRange","toDateObject","createDate","isEqualDate","getToday","keys","ui","Widget","Selectable","RangeSelectable","template","mobileOS","ns","CLICK","ID","MONTH","DOT","EMPTY","CENTURY","CHANGE","NAVIGATE","VALUE","FOCUSED","SELECTED","HOVER","DISABLED","TODAY","EMPTYCELL","CALENDAR_VIEW","CELLSELECTOR","CELLSELECTORVALID","BLUR","FOCUS","MOUSEENTER","touch","MOUSELEAVE_NS","PREVARROW","NEXTARROW","START","END","TABLE","TBODY","THEAD","TD_NOT_WEEK_CELL","TD","TH","ROLE","NONE","ARIA_DISABLED","ARIA_LABEL","ARIA_ACTIVEDESCENDANT","DATE","Date","views","month","year","decade","century","MultiViewCalendar","extend","init","element","options","culture","that","this","fn","call","wrapper","disableDates","disabled","getCulture","format","_extractFormat","calendars","standard","patterns","d","_templates","_header","_wrapper","addClass","getValidCssClass","size","weekNumber","on","_move","bind","_focus","_blur","e","link","currentTarget","firstChild","data","indexOf","preventDefault","_click","attr","guid","_cellID","_calendarWidth","width","_range","range","start","end","target","_initViews","viewName","value","_selectable","_footer","footer","_selectDates","_addSelectedCellsToArray","_isMultipleSelection","selectDates","length","_restoreSelection","_isRangeSelection","selectRange","notify","min","max","dates","allowReverse","showOtherMonthDays","centuryCellsFormat","showViewHeader","selectable","depth","messages","weekColumnHeader","orientation","events","setOptions","normalize","i","_views","off","remove","destroy","_cell","_currentView","_current","header","_title","rangeSelectable","_today","current","focus","tablesWrapper","trigger","_option","view","navigateToPast","_navigate","navigateToFuture","navigateUp","index","_index","hasClass","navigate","navigateDown","_value","isNaN","viewsEnum","restrictValue","_aria","tables","find","rowGroups","first","add","removeAttr","role","_ariaMonth","rows","noHeaderRows","not","noHeaderCells","columnHeaderCells","rowHeaderCells","outOfRange","each","row","prev","$row","numberOfEmpty","owned","children","filter","eq","j","cell","$cell","push","join","_updateHeader","lastDate","prevDisabled","nextDisabled","title","_firstViewValue","visibleRange","_visibleRange","shiftDate","html","getFullYear","last","toggleClass","compare","_navContainer","icon","iconClass","appendTo","removeClass","prevent","lastActive","cellIndex","triggerChange","key","keyCode","focusedCell","table","closest","currentValue","isRtl","RIGHT","LEFT","UP","DOWN","SPACEBAR","HOME","_focusCell","next","_todayClick","ctrlKey","metaKey","_cellByDate","ENTER","_toggleSelection","shiftKey","_isSingleSelection","setDate","_nextNavigatable","getMonth","getDate","_dateInViews","_selectRange","_lastActive","_end","is","_start","selectFrom","selectTo","change","event","PAGEUP","PAGEDOWN","_visualizeSelectedDatesInView","cells","selectedDates","toDateString","clear","_selectElement","isDisabled","navigatableDate","getTime","_unselect","option","parseDate","_toggle","mode","parseOptions","widget","cellSelector","cellSelectorValid","_rangeSelection","reverse","resetOnStart","inputSelectors","aria","dragToSelect","multiple","selectableClass","_selection","relatedTarget","_onRelatedTarget","unselect","_unselecting","_getFirstViewDate","currentView","ranges","_canRenderNextView","viewDate","fullYear","date","maxYear","maxMonth","viewOptions","_table","content","url","showHeader","isWeekColumnVisible","contentClasses","sender","useEnd","_useEnd","useStart","_useStart","initialRange","_preventChange","selectElements","domEvent","isCell","_validateValue","_deselect","item","currentDateIndex","map","Number","splice","firstDateInView","lastDateInView","_fillRange","daysDifference","startDate","endDate","temp","fromDateUTC","UTC","endDateUTC","Math","ceil","MS_PER_DAY","daysBetweenTwoDates","array","numberOfDays","fromDate","nextDay","addDaysToArray","buttons","prependTo","mousetoggle","_calendarTitleClick","_prevViewClick","_nextViewClick","insertAfter","empty","cssClass","linkClass","dateString","useWithBlock","toString","today","hide","show","arrow","modifier","offset","originaValue","setFullYear","toggle","isTodayDisabled","adjustDST","contains","cellId","removeAttribute","_updateAria","ariaTemplate","text","valueType","clearSelection","single","validSelectedDates","datesUnique","position","time","grep","setHours","startInRange","endInRange","mid","type","dimension","numberOfViews","abs","setMonth","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.multiviewcalendar.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.selectable.js';\nimport './kendo.calendar.js';\nimport './kendo.icons.js';\n\nlet __meta__ = {\n    id: \"multiviewcalendar\",\n    name: \"MultiViewCalendar\",\n    category: \"web\",\n    description: \"Multi-view calendar.\",\n    depends: [ \"core\", \"selectable\", \"calendar\" ]\n};\n\n(function($, undefined$1) {\n    let kendo = window.kendo,\n        calendar = kendo.calendar,\n        support = kendo.support,\n        isInRange = calendar.isInRange,\n        toDateObject = calendar.toDateObject,\n        createDate = calendar.createDate,\n        isEqualDate = calendar.isEqualDate,\n        getToday = calendar.getToday,\n        keys = kendo.keys,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        Selectable = ui.Selectable,\n        RangeSelectable = ui.RangeSelectable,\n        template = kendo.template,\n        mobileOS = support.mobileOS,\n        ns = \".kendoMultiViewCalendar\",\n        CLICK = \"click\",\n        KEYDOWN = \"keydown\",\n        ID = \"id\",\n        MIN = \"min\",\n        MONTH = \"month\",\n        DOT = \".\",\n        EMPTY = \" \",\n        CENTURY = \"century\",\n        DECADE = \"decade\",\n        CHANGE = \"change\",\n        NAVIGATE = \"navigate\",\n        VALUE = \"value\",\n        FOCUSED = \"k-focus\",\n        SELECTED = \"k-selected\",\n        HOVER = \"k-hover\",\n        DISABLED = \"k-disabled\",\n        TODAY = \"k-calendar-nav-today\",\n        OTHERMONTH = \"k-other-month\",\n        EMPTYCELL = \"k-empty\",\n        CALENDAR_VIEW = \"k-calendar-view\",\n        CELLSELECTOR = \"td:has(.k-link):not(.\" + EMPTYCELL + \"):not(.k-alt)\",\n        CELLSELECTORVALID = \"td:has(.k-link):not(.\" + DISABLED + \"):not(.\" + EMPTYCELL + \"):not(.k-alt)\",\n        BLUR = \"blur\",\n        FOCUS = \"focus\",\n        MOUSEENTER = support.touch ? \"touchstart\" : \"mouseenter\",\n        MOUSELEAVE_NS = support.touch ? \"touchend\" + ns + \" touchmove\" + ns : \"mouseleave\" + ns,\n        PREVARROW = \"_prevArrow\",\n        NEXTARROW = \"_nextArrow\",\n        RANGE = \"range\",\n        SINGLE = \"single\",\n        START = \"start\",\n        END = \"end\",\n        TABINDEX = \"tabindex\",\n        TABLE = \"table\",\n        TBODY = \"tbody\",\n        THEAD = \"thead\",\n        TR = \"tr\",\n        TD = \"td\",\n        TD_NOT_WEEK_CELL = TD + \":not(.k-alt)\",\n        TH = \"th\",\n        ROLE = \"role\",\n        NONE = \"none\",\n        ROWGROUP = \"rowgroup\",\n        COLUMNHEADER = \"columnheader\",\n        ROWHEADER = \"rowheader\",\n        GRIDCELL = \"gridcell\",\n        ARIA_SELECTED = \"aria-selected\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_LABEL = \"aria-label\",\n        ARIA_OWNS = \"aria-owns\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        INPUTSELECTOR = \"input,a,span,textarea,.k-multiselect-wrap,select,button,.k-button>span,.k-button>img,span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,span.k-svg-icon.k-svg-i-caret-alt-down,span.k-svg-icon.k-svg-i-caret-alt-up\",\n        DATE = Date,\n        views = {\n            month: 0,\n            year: 1,\n            decade: 2,\n            century: 3\n        };\n\n    var MultiViewCalendar = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var id;\n            var culture;\n\n            Widget.fn.init.call(that, element, options);\n\n            element = that.wrapper = that.element;\n            options = that.options;\n\n            that.options.disableDates = calendar.disabled(that.options.disableDates);\n\n            culture = kendo.getCulture(options.culture);\n            options.format = kendo._extractFormat(options.format || culture.calendars.standard.patterns.d);\n\n            that._templates();\n\n            that._header();\n\n            that._wrapper();\n\n            id = element\n                .addClass(`k-calendar k-calendar-range ${kendo.getValidCssClass(\"k-calendar-\", \"size\", that.options.size || \"medium\")}` + (options.weekNumber ? \" k-week-number\" : \"\"))\n                .on(KEYDOWN + ns, DOT + CALENDAR_VIEW, that._move.bind(that))\n                .on(FOCUS + ns, DOT + CALENDAR_VIEW, that._focus.bind(that))\n                .on(BLUR + ns, DOT + CALENDAR_VIEW, that._blur.bind(that))\n                .on(CLICK + ns, CELLSELECTORVALID, function(e) {\n                    var link = e.currentTarget.firstChild;\n\n                    if ($(link).data(\"href\").indexOf(\"#\") != -1) {\n                        e.preventDefault();\n                    }\n\n                    that._click($(link));\n                })\n                .attr(ID);\n\n            if (!id) {\n                id = kendo.guid();\n            }\n\n            that._cellID = id + \"_cell_selected\";\n\n            that._calendarWidth = that.element.width();\n\n            that._range = options.range;\n\n            if (that._range && that._range.start && !that._range.end) {\n                that._range.target = END;\n            }\n\n            that._initViews({ viewName: options.start, value: options.value });\n            that._selectable();\n\n            that._footer(that.footer);\n            that._selectDates = [];\n            that.value(options.value);\n            that._addSelectedCellsToArray();\n\n            if (that._isMultipleSelection()) {\n                that._selectDates = options.selectDates.length ? options.selectDates : that._selectDates;\n                that._restoreSelection();\n            }\n\n            if (that._isRangeSelection()) {\n                that.selectRange(that._range);\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"MultiViewCalendar\",\n            value: null,\n            min: new DATE(1900, 0, 1),\n            max: new DATE(2099, 11, 31),\n            dates: [],\n            allowReverse: false,\n            disableDates: null,\n            showOtherMonthDays: false,\n            centuryCellsFormat: \"long\",\n            culture: \"\",\n            footer: \"\",\n            format: \"\",\n            month: {},\n            range: { start: null, end: null, target: START },\n            weekNumber: false,\n            views: 2,\n            showViewHeader: false,\n            selectable: SINGLE,\n            selectDates: [],\n            start: MONTH,\n            depth: MONTH,\n            messages: {\n                weekColumnHeader: \"\"\n            },\n            size: \"medium\",\n            orientation: \"horizontal\"\n        },\n\n        events: [\n            CHANGE,\n            NAVIGATE\n        ],\n\n        setOptions: function(options) {\n            var that = this;\n\n            calendar.normalize(options);\n\n            options.disableDates = calendar.disabled(options.disableDates);\n\n            Widget.fn.setOptions.call(that, options);\n\n            that._selectable();\n\n            that._templates();\n\n            that._footer(that.footer);\n\n            for (var i = 0; i < that._views.length; i++) {\n                that._views[i].off(ns).remove();\n            }\n\n            that._initViews({ viewName: options.start, value: options.value });\n\n            that._range = options.range || { start: null, end: null };\n\n            that._restoreSelection();\n\n            if (that._isRangeSelection()) {\n                that.selectRange(that._range);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that._cell = null;\n            that._currentView = null;\n            that._current = null;\n\n            if (that._views) {\n                for (var i = 0; i < that._views.length; i++) {\n                    that._views[i].off(ns).remove();\n                }\n            }\n\n            that.element.off(ns);\n\n            if (that.header) {\n                that.header.off(ns);\n                that._title = null;\n                that.header = null;\n            }\n\n            if (that.selectable) {\n                that.selectable.destroy();\n                that.selectable = null;\n            }\n\n            if (that.rangeSelectable) {\n                that.rangeSelectable.destroy();\n                that.rangeSelectable = null;\n            }\n\n            if (that._today) {\n                kendo.destroy(that._today.off(ns));\n            }\n\n            that._views = null;\n\n            Widget.fn.destroy.call(that);\n        },\n\n        current: function() {\n            return this._current;\n        },\n\n        focus: function() {\n            this.tablesWrapper.trigger(\"focus\");\n        },\n\n        min: function(value) {\n            return this._option(MIN, value);\n        },\n\n        max: function(value) {\n            return this._option(\"max\", value);\n        },\n\n        view: function() {\n            return this._currentView;\n        },\n\n        navigateToPast: function() {\n            this._navigate(PREVARROW, -1);\n        },\n\n        navigateToFuture: function() {\n            this._navigate(NEXTARROW, 1);\n        },\n\n        navigateUp: function() {\n            var that = this,\n            index = that._index;\n\n            if (that._title.hasClass(DISABLED)) {\n                return;\n            }\n\n            that.navigate(that._current, ++index);\n        },\n\n        navigateDown: function(value) {\n            var that = this,\n            index = that._index,\n            depth = that.options.depth;\n\n            if (!value) {\n                return;\n            }\n\n            if (index === views[depth]) {\n                if (!isEqualDate(that._value, that._current) || !isEqualDate(that._value, value)) {\n                    that.value(value);\n                    that.trigger(CHANGE);\n                }\n                return;\n            }\n\n            that.navigate(value, --index);\n        },\n\n        navigate: function(value, view) {\n            view = isNaN(view) ? calendar.views[calendar.viewsEnum[view]] : calendar.views[view];\n\n            var that = this;\n            var options = that.options;\n            var min = options.min;\n            var max = options.max;\n\n            if (!value) {\n                that._current = value = new DATE(+calendar.restrictValue(value, min, max));\n            } else {\n                that._current = value;\n            }\n\n            if (view === undefined$1) {\n                view = that._currentView;\n            }\n\n            that._currentView = view;\n\n            for (var i = 0; i < that._views.length; i++) {\n                that._views[i].off(ns).remove();\n            }\n\n            that._initViews({ viewName: view.name, value: value });\n\n            that._restoreSelection();\n        },\n\n        _aria: function() {\n            var tables = this.tablesWrapper.find(TABLE),\n                rowGroups = tables.first().find(THEAD).add(tables.find(TBODY)),\n                viewName = this._currentView.name;\n\n            tables.removeAttr(TABINDEX);\n\n            tables.attr({\n                role: NONE\n            });\n\n            rowGroups.attr({\n                role: ROWGROUP\n            });\n\n            if (viewName === MONTH) {\n                this._ariaMonth();\n            }\n        },\n\n        _ariaMonth: function() {\n            var tables = this.tablesWrapper.find(TABLE),\n                rowGroups = tables.first().find(THEAD).add(tables.find(TBODY)),\n                rows = rowGroups.find(TR),\n                noHeaderRows = tables.not(\":eq(0)\").find(THEAD + EMPTY + TR),\n                noHeaderCells = noHeaderRows.find(TH),\n                columnHeaderCells = tables.first().find(THEAD + EMPTY + TH),\n                rowHeaderCells = tables.find(TBODY + EMPTY + TD + \".k-alt\"),\n                outOfRange = tables.find(DOT + EMPTYCELL),\n                ariaDataCells = function(i, row) {\n                    var $row = $(row),\n                        numberOfEmpty = $row.find(DOT + EMPTYCELL).length,\n                        owned = [],\n                        prev, cells;\n\n                    if (i === 1) {\n                        $row.children()\n                            .filter(DOT + EMPTYCELL)\n                            .attr({\n                                \"aria-hidden\": \"false\",\n                                role: GRIDCELL\n                            });\n                    } else if (numberOfEmpty === 7) {\n                        $row.removeAttr(ROLE);\n                        $row.find(TH).removeAttr(ROLE);\n                    } else if (numberOfEmpty > 0 && numberOfEmpty < 7 && $row.children().not(TH).first().hasClass(EMPTYCELL)) {\n                        $row.find(TH).removeAttr(ROLE);\n                        prev = rows.eq(i - 1);\n\n                        if (!prev.attr(ROLE) || prev.attr(ROLE) === NONE) {\n                            prev = rows.eq(i - 2);\n                        }\n\n                        cells = $row.children().not(TH);\n\n                        cells.each(function(j, cell) {\n                            var $cell = $(cell),\n                                id;\n\n                            if (!$cell.hasClass(EMPTYCELL)) {\n                                id = \"owned_\" + i + \"_\" + j;\n                                $cell.attr(ID, id);\n                                owned.push(id);\n                            }\n                        });\n\n                        $row.removeAttr(ROLE);\n                        prev.attr(ARIA_OWNS, owned.join(\" \"));\n                    }\n                };\n\n            columnHeaderCells.attr({\n                role: COLUMNHEADER\n            });\n\n            rowHeaderCells.attr({\n                role: ROWHEADER\n            });\n\n            outOfRange.removeAttr(ROLE);\n            noHeaderRows.removeAttr(ROLE);\n            noHeaderCells.removeAttr(ARIA_LABEL).removeAttr(ROLE);\n\n            rows.each(ariaDataCells);\n        },\n\n        _updateHeader: function() {\n            let that = this,\n                view = that._currentView,\n                title = that._title,\n                value = that._firstViewValue,\n                options = that.options,\n                visibleRange = that._visibleRange(),\n                culture = options.culture,\n                min = options.min,\n                max = options.max,\n                lastDate,\n                disabled,\n                prevDisabled,\n                nextDisabled;\n\n            if (view.name === DECADE || view.name === CENTURY) {\n                lastDate = shiftDate(value, view.name, options.views - 1);\n                if (!isInRange(lastDate, min, max)) {\n                    lastDate = max;\n                }\n\n                title.html('<span class=\"k-button-text\">' + view.first(value).getFullYear() + \" - \" + view.last(lastDate).getFullYear() + \"</span>\");\n            } else {\n                title.html('<span class=\"k-button-text\">' + view.title(value, min, max, culture) + \" - \" + view.title(shiftDate(value, view.name, options.views - 1), min, max, culture) + \"</span>\");\n            }\n\n            disabled = view.name === CENTURY;\n            title.toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n            prevDisabled = view.compare(visibleRange.start, that.options.min) < 1;\n            nextDisabled = view.compare(visibleRange.end, that.options.max) > -1;\n\n            if (prevDisabled && nextDisabled) {\n                if (that._navContainer) {\n                    that._navContainer.remove();\n                    that._navContainer = null;\n                }\n            } else {\n                if (!that._navContainer) {\n                    that._navContainer = $(`<span class=\"k-calendar-nav\">` +\n                    `<span tabindex=\"-1\" data-href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-nav-prev\" ` + ARIA_LABEL + `=\"Previous\">${kendo.ui.icon({ icon: \"chevron-left\", iconClass: \"k-button-icon\" })}</span>` +\n                    `<span tabindex=\"-1\" data-href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-nav-next\" ` + ARIA_LABEL + `=\"Next\">${kendo.ui.icon({ icon: \"chevron-right\", iconClass: \"k-button-icon\" })}</span>` +\n                    '</span>').appendTo(that.header);\n                    that[PREVARROW] = that._navContainer.find(\".k-calendar-nav-prev\");\n                    that[NEXTARROW] = that._navContainer.find(\".k-calendar-nav-next\");\n                }\n\n                that[PREVARROW].toggleClass(DISABLED, prevDisabled).attr(ARIA_DISABLED, prevDisabled);\n                if (that[PREVARROW].hasClass(DISABLED)) {\n                    that[PREVARROW].removeClass(HOVER);\n                }\n\n                that[NEXTARROW].toggleClass(DISABLED, nextDisabled).attr(ARIA_DISABLED, nextDisabled);\n                if (that[NEXTARROW].hasClass(DISABLED)) {\n                    that[NEXTARROW].removeClass(HOVER);\n                }\n            }\n        },\n\n        _move: function(e) {\n            var that = this;\n            var options = that.options;\n            var key = e.keyCode;\n            var index = that._index;\n            var min = options.min;\n            var max = options.max;\n            var focusedCell = that.element.find(DOT + FOCUSED);\n            var table = focusedCell.closest(TABLE);\n            var currentValue = new DATE(+(that._current || toDateObject(focusedCell.find(\"span\"))));\n            var isRtl = kendo.support.isRtl(that.wrapper);\n            var navigate = false;\n            var value, prevent, method, cell, lastActive, cellIndex, triggerChange;\n\n            if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                value = 1;\n                prevent = true;\n            } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                value = -1;\n                prevent = true;\n            } else if (key == keys.UP) {\n                value = index === 0 ? -7 : -4;\n                prevent = true;\n            } else if (key == keys.DOWN) {\n                value = index === 0 ? 7 : 4;\n                prevent = true;\n            } else if (key == keys.SPACEBAR) {\n                value = 0;\n                prevent = true;\n            } else if (key == keys.HOME) {\n                prevent = true;\n                cell = table.find(CELLSELECTORVALID).eq(0);\n                if (cell.hasClass(FOCUSED)) {\n                    table = table.prev();\n                    if (table.length) {\n                        that._focusCell(table.find(CELLSELECTORVALID).eq(0));\n                    } else {\n                        navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                        that._navigate(PREVARROW, -1);\n                        that._focusCell(that.element.find(TABLE).first().find(CELLSELECTORVALID).first());\n                    }\n                } else {\n                    that._focusCell(cell);\n                }\n            } else if (key == keys.END) {\n                prevent = true;\n                cell = table.find(CELLSELECTORVALID).last();\n                if (cell.hasClass(FOCUSED)) {\n                    table = table.next();\n                    if (table.length) {\n                        that._focusCell(table.find(CELLSELECTORVALID).last());\n                    } else {\n                        navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                        that._navigate(NEXTARROW, 1);\n                        that._focusCell(that.element.find(TABLE).last().find(CELLSELECTORVALID).last());\n                    }\n                } else {\n                    that._focusCell(cell);\n                }\n            } else if (key === 84) {\n                that._todayClick(e);\n                prevent = true;\n            }\n\n            if (e.ctrlKey || e.metaKey) {\n                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                    navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                    that._navigate(NEXTARROW, 1);\n                    prevent = true;\n                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                    navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                    that._navigate(PREVARROW, -1);\n                    prevent = true;\n                } else if (key == keys.UP) {\n                    navigate = !that._title.hasClass(DISABLED);\n                    that.navigateUp();\n                    that._focusCell(that._cellByDate(that._current));\n                    prevent = true;\n                } else if (key == keys.DOWN) {\n                    if (that._currentView.name === MONTH) {\n                        that.value(currentValue);\n                    } else {\n                        that.navigateDown(currentValue);\n                        that._focusCell(that._cellByDate(that._current));\n                        navigate = true;\n                    }\n                    prevent = true;\n                } else if ((key == keys.ENTER || key == keys.SPACEBAR)) {\n                    if (that._isMultipleSelection()) {\n                        that._toggleSelection(e);\n                    }\n                }\n            } else if (e.shiftKey && !that._isSingleSelection()) {\n                if (value !== undefined$1 || method) {\n                    if (!method) {\n                        that._currentView.setDate(currentValue, value);\n                    }\n\n                    if (that._currentView.name !== MONTH) {\n                        return;\n                    }\n\n                    if (options.disableDates(currentValue)) {\n                        currentValue = that._nextNavigatable(currentValue, value);\n                    }\n\n                    min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\n                    if (isInRange(currentValue, min, max)) {\n                        if (!that._dateInViews(currentValue)) {\n                            if (value > 0) {\n                                navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                                that._navigate(NEXTARROW, 1);\n                            } else {\n                                navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                                that._navigate(PREVARROW, -1);\n                            }\n                        }\n                        cell = that._cellByDate(currentValue);\n                        that._current = currentValue;\n\n                        if (that.selectable) {\n                            that._selectRange(toDateObject((that.selectable._lastActive || focusedCell).find(\"span\")), currentValue);\n                            if (!that.selectable._lastActive) {\n                                that.selectable._lastActive = focusedCell;\n                            }\n                            that.trigger(CHANGE);\n                            that._focusCell(cell);\n                        }\n\n                        if (that.rangeSelectable) {\n                            lastActive = toDateObject((that.rangeSelectable._lastActive || focusedCell).find(\"span\"));\n                            if (!that._dateInViews(lastActive)) {\n                                if (+lastActive > +currentValue) {\n                                    that.rangeSelectable._end = that.rangeSelectable._lastActive;\n                                    that.rangeSelectable.selectFrom(cell);\n                                } else {\n                                    that.rangeSelectable.selectTo(cell);\n                                }\n                            } else {\n                                if (that.rangeSelectable._end && that.rangeSelectable._end.is(DOT + FOCUSED)) {\n                                    that.rangeSelectable._lastActive = that.rangeSelectable._start;\n                                } else {\n                                    that.rangeSelectable._lastActive = that._cellByDate(lastActive);\n                                }\n                                that.rangeSelectable.range(that.rangeSelectable._lastActive, cell);\n                            }\n                            that.rangeSelectable.change();\n                            that._focusCell(cell);\n                        }\n                    }\n                }\n            } else {\n                if (key == keys.ENTER || key == keys.SPACEBAR) {\n                    if (that._currentView.name === MONTH) {\n                        triggerChange = !focusedCell.hasClass(SELECTED) || that.element.find(DOT + SELECTED).length > 1;\n                        that.value(currentValue);\n                        if (that.selectable) {\n                            that.selectable._lastActive = that._cellByDate(currentValue);\n                            if (triggerChange) {\n                                that.selectable.trigger(CHANGE, { event: e });\n                            }\n                        }\n                        if (that.rangeSelectable) {\n                            that.rangeSelectable.change();\n                        }\n                    } else {\n                        that._click($(that._cell[0].firstChild));\n                    }\n                    prevent = true;\n                } else if (key == keys.PAGEUP || key == keys.PAGEDOWN) {\n                    prevent = true;\n                    cellIndex = table.find(CELLSELECTORVALID).index(focusedCell);\n                    table = key == keys.PAGEUP ? table.prev() : table.next();\n                    if (!table.length) {\n                        if (key == keys.PAGEUP) {\n                            navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                            that.navigateToPast();\n                            table = that.element.find(TABLE).first();\n                        } else {\n                            navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                            that.navigateToFuture();\n                            table = that.element.find(TABLE).last();\n                        }\n                    }\n                    cell = table.find(CELLSELECTORVALID).eq(cellIndex);\n                    if (cell.length) {\n                        that._focusCell(cell);\n                    } else {\n                        that._focusCell(table.find(CELLSELECTORVALID).last());\n                    }\n                }\n\n                if (value || method) {\n                    if (!method) {\n                        that._currentView.setDate(currentValue, value);\n                    }\n\n                    min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\n                    if (isInRange(currentValue, min, max)) {\n                        if (that.selectable && options.disableDates(currentValue)) {\n                            currentValue = that._nextNavigatable(currentValue, value);\n                        }\n                        if (!that._dateInViews(currentValue)) {\n                            if (value > 0) {\n                                navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                                that._navigate(NEXTARROW, 1);\n                            } else {\n                                navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                                that._navigate(NEXTARROW, -1);\n                            }\n                        }\n                        cell = that._cellByDate(currentValue);\n                        that._current = currentValue;\n                        that._focusCell(cell);\n                    }\n                }\n            }\n\n            if (navigate) {\n                that.trigger(NAVIGATE);\n            }\n\n            if (prevent) {\n                e.preventDefault();\n            }\n\n            return that._current;\n\n        },\n\n        _visualizeSelectedDatesInView: function() {\n            var that = this;\n            var selectedDates = {};\n            var cells;\n\n            $.each(that._selectDates, function(index, value) {\n                selectedDates[kendo.calendar.views[0].toDateString(value)] = value;\n            });\n            that.selectable.clear();\n            cells = that.element.find(TABLE)\n                .find(CELLSELECTOR)\n                .filter(function(index, element) {\n                    return selectedDates[$(element.firstChild).attr(kendo.attr(VALUE))];\n                });\n\n            if (cells.length > 0) {\n                that.selectable._selectElement(cells, true);\n            }\n        },\n\n        _nextNavigatable: function(currentValue, value) {\n            var that = this;\n            var disabled = true;\n            var view = that._currentView;\n            var min = that.options.min;\n            var max = that.options.max;\n            var isDisabled = that.options.disableDates;\n            var navigatableDate = new Date(currentValue.getTime());\n\n            view.setDate(navigatableDate, -value);\n            while (disabled) {\n                view.setDate(currentValue, value);\n                 if (!isInRange(currentValue, min, max)) {\n                    currentValue = navigatableDate;\n                    break;\n                }\n                disabled = isDisabled(currentValue);\n            }\n            return currentValue;\n        },\n\n        _toggleSelection: function(event) {\n            var that = this;\n\n            that.selectable._lastActive = $(that._cell[0]);\n\n            if ($(that._cell[0]).hasClass(SELECTED)) {\n                that.selectable._unselect($(that._cell[0]));\n            }\n            else {\n                that.selectable.value($(that._cell[0]));\n            }\n            that.selectable.trigger(CHANGE, { event: event });\n        },\n\n        _option: function(option, value) {\n            var that = this;\n            var options = that.options;\n            var currentValue = that._value || that._current;\n            var isBigger;\n\n            if (value === undefined$1) {\n                return options[option];\n            }\n\n            value = kendo.parseDate(value, options.format, options.culture);\n\n            if (!value) {\n                return;\n            }\n\n            options[option] = new DATE(+value);\n\n            if (option === MIN) {\n                isBigger = value > currentValue;\n            } else {\n                isBigger = currentValue > value;\n            }\n\n            if (isBigger) {\n                that._value = null;\n            }\n\n            that.navigate(that._value);\n\n            that._toggle();\n        },\n\n        _cellByDate: function(value) {\n            if (value instanceof Date) {\n                value = this._currentView.toDateString(value);\n            }\n            return this.element.find(TABLE).find(\"td:not(.\" + OTHERMONTH + \")\")\n            .filter(function() {\n                return $(this.firstChild).attr(kendo.attr(VALUE)) === value;\n            });\n        },\n\n        _selectable: function() {\n            let that = this,\n                selectable = that.options.selectable,\n                mode = Selectable.parseOptions(selectable);\n\n            if (that.selectable) {\n                that.selectable.destroy();\n                that.selectable = null;\n            }\n\n            if (that.rangeSelectable) {\n                that.rangeSelectable.destroy();\n                that.rangeSelectable = null;\n            }\n\n            if (mode.range) {\n                that.rangeSelectable = new RangeSelectable(that.wrapper, {\n                    widget: that,\n                    filter: \".k-calendar-monthview table \" + CELLSELECTORVALID,\n                    cellSelector: CELLSELECTOR,\n                    cellSelectorValid: CELLSELECTORVALID,\n                    change: that._rangeSelection.bind(that),\n                    reverse: that.options.allowReverse,\n                    resetOnStart: selectable.resetOnStart !== undefined$1 ? selectable.resetOnStart : true,\n                    ns: ns,\n                    inputSelectors: INPUTSELECTOR\n                });\n            } else {\n                that.selectable = new Selectable(that.wrapper, {\n                    aria: true,\n                    dragToSelect: false,\n                    multiple: mode.multiple,\n                    filter: \"table.k-calendar-table \" + CELLSELECTORVALID,\n                    selectableClass: \"k-calendar\",\n                    change: that._selection.bind(that),\n                    relatedTarget: that._onRelatedTarget.bind(that),\n                    unselect: that._unselecting.bind(that)\n                });\n            }\n        },\n\n        _onRelatedTarget: function(target) {\n            var that = this;\n\n            if (that.selectable.options.multiple && target.is(CELLSELECTORVALID) && target.length > 1) {\n                that._focusCell(target.first(), true);\n            }\n        },\n\n        _getFirstViewDate: function(currentView) {\n            var that = this;\n            var options = that.options;\n            var ranges = [];\n            var start;\n            var end;\n            var current = new Date(+that._current);\n            var i;\n\n            for (i = 0; i < options.views; i++) {\n                start = currentView.first(current);\n                end = currentView.last(current);\n\n                if (+end > +options.max) {\n                    if (+start <= +options.max) {\n                        ranges.push({ start: start, end: new Date(+options.max) });\n                    }\n                    break;\n                }\n\n                ranges.push({ start: start, end: end });\n\n                current = new Date(+shiftDate(end, currentView.name, 1));\n            }\n\n            current = new Date(+that._current);\n\n            for (i = 0; i < options.views; i++) {\n                start = currentView.first(current);\n                end = currentView.last(current);\n\n                if (+start < +options.min) {\n                    if (+end >= +options.min) {\n                        ranges.push({ start: new Date(+options.min), end: end });\n                    }\n                    break;\n                }\n\n                ranges.push({ start: start, end: end });\n\n                current = new Date(+shiftDate(start, currentView.name, -1));\n            }\n\n            start = ranges[0].start;\n\n            for (i = 0; i < options.views + 1; i++) {\n                if (!ranges[i]) {\n                    break;\n                }\n\n                if (+start > +ranges[i].start) {\n                    start = ranges[i].start;\n                }\n            }\n\n            return new Date(+start);\n        },\n\n        _canRenderNextView: function(viewDate) {\n            var fullYear = viewDate.getFullYear();\n            var month = viewDate.getMonth();\n            var date = viewDate.getDate();\n            var max = this.options.max;\n            var maxYear = max.getFullYear();\n            var maxMonth = max.getMonth();\n\n\n            if (fullYear < maxYear) {\n                return true;\n            }\n\n            if (fullYear === maxYear && month < maxMonth) {\n                return true;\n            }\n\n            if (fullYear === maxYear && month === maxMonth && date < max.getDate()) {\n                return true;\n            }\n\n            if (fullYear === maxYear && month === maxMonth && date === max.getDate()) {\n                return true;\n            }\n\n            return false;\n        },\n\n        _initViews: function(viewOptions) {\n            var that = this;\n            var options = that.options;\n            var index = calendar.viewsEnum[viewOptions.viewName];\n            var currentView = calendar.views[index];\n            var viewDate;\n\n            that._current = new DATE(+calendar.restrictValue(viewOptions.value, options.min, options.max));\n            that._views = [];\n            that._index = index;\n            viewDate = that._getFirstViewDate(currentView);\n            viewDate.setDate(1);\n\n            that._firstViewValue = new Date(+viewDate);\n\n            for (var i = 0; i < options.views; i++) {\n                viewDate = i ? shiftDate(viewDate, currentView.name, 1) : viewDate;\n                viewDate.setDate(1);\n\n                if (!that._canRenderNextView(viewDate)) {\n                    break;\n                }\n\n                that._table = $(currentView.content($.extend({\n                    min: options.min,\n                    max: options.max,\n                    date: viewDate,\n                    url: options.url,\n                    dates: options.dates,\n                    format: options.format,\n                    culture: options.culture,\n                    disableDates: options.disableDates,\n                    showHeader: options.showViewHeader,\n                    isWeekColumnVisible: options.weekNumber,\n                    showOtherMonthDays: options.showOtherMonthDays,\n                    centuryCellsFormat: options.centuryCellsFormat,\n                    messages: options.messages,\n                    contentClasses: \"k-calendar-table\"\n                }, that[currentView.name])));\n\n                that._table.appendTo(that.tablesWrapper);\n                that._views.push(that._table);\n            }\n\n            that._currentView = currentView;\n\n            that.tablesWrapper.attr(\"class\", \"k-calendar-view k-calendar-\" + currentView.name + `view ${that.options.orientation != \"vertical\" ? \"k-hstack\" : \"k-vstack\"} k-align-items-start k-justify-content-center`);\n\n            that._updateHeader();\n\n            that._aria();\n        },\n\n        _rangeSelection: function(e) {\n            let that = this,\n                range = e.sender.range(),\n                useEnd = e.sender._useEnd,\n                useStart = e.sender._useStart,\n                initialRange = that.selectRange() || {},\n                start,\n                end,\n                target = initialRange.target;\n\n            if (range.start && range.start.length) {\n                start = toDateObject(range.start.find(\"span\"));\n            }\n\n            if (range.end && range.end.length) {\n                end = toDateObject(range.end.find(\"span\"));\n            }\n\n            if (target === END) {\n                target = START;\n            } else {\n                target = END;\n            }\n\n            that._range = { start: useStart ? initialRange.start : start, end: useEnd ? initialRange.end : end, target: target };\n\n            if (!that._preventChange) {\n                that.trigger(CHANGE);\n            }\n        },\n\n        _selection: function(e) {\n            let that = this,\n                selectElements = e.sender.value(),\n                domEvent = e.event,\n                currentTarget = $(domEvent && domEvent.currentTarget),\n                isCell = currentTarget.is(TD_NOT_WEEK_CELL),\n                currentValue;\n\n            if (that._isSingleSelection()) {\n                that._validateValue(selectElements[0] ? toDateObject(selectElements.first().find(\"span\")) : e.sender._lastActive ? toDateObject(e.sender._lastActive.find(\"span\")) : that.value());\n            }\n\n            if (that._isMultipleSelection()) {\n\n                if (isCell) {\n                    currentValue = toDateObject(currentTarget.find(\"span\"));\n                }\n\n                if (domEvent && domEvent.ctrlKey) {\n                    if (isCell) {\n                        if (currentTarget.hasClass(SELECTED)) {\n                            that._selectDates.push(currentValue);\n                        } else {\n                            that._deselect(currentValue);\n                        }\n                    } else {\n                        that.element.find(\"table \" + CELLSELECTORVALID).each(function(index, element) {\n                            var value = toDateObject($(element).find(\"span\"));\n                            that._deselect(value);\n                        });\n                        that._addSelectedCellsToArray();\n                    }\n                } else if (domEvent && domEvent.shiftKey) {\n                    that._selectRange(toDateObject(e.sender._lastActive ? e.sender._lastActive.find(\"span\") : selectElements.first().find(\"span\")), currentValue);\n                } else if (isCell) {\n                    that._selectDates = [];\n                    that._selectDates.push(currentValue);\n                } else {\n                    that._selectDates = [];\n                    that._addSelectedCellsToArray();\n                }\n            }\n\n            if (!that._preventChange) {\n                that.trigger(CHANGE);\n            }\n        },\n\n        _addSelectedCellsToArray: function() {\n            var that = this;\n            if (!that.selectable) {\n                return;\n            }\n            that.selectable.value().each(function(index, item) {\n                var date = toDateObject($(item.firstChild));\n                if (!that.options.disableDates(date)) {\n                    that._selectDates.push(date);\n                }\n            });\n        },\n\n        _deselect: function(date) {\n            var that = this;\n            var currentDateIndex = that._selectDates.map(Number).indexOf(+date);\n             if (currentDateIndex != -1) {\n                that._selectDates.splice(currentDateIndex, 1);\n            }\n        },\n\n        _unselecting: function(e) {\n            var that = this;\n            var element = e.element;\n\n            if (that._isSingleSelection() && !mobileOS && element.hasClass(FOCUSED)) {\n                e.preventDefault();\n            }\n        },\n\n        _visibleRange: function() {\n            var tables = this.element.find(DOT + CALENDAR_VIEW + EMPTY + TABLE);\n            var firstDateInView = toDateObject(tables.first().find(CELLSELECTOR).first().find(\"span\"));\n            var lastDateInView = toDateObject(tables.last().find(CELLSELECTOR).last().find(\"span\"));\n            return { start: firstDateInView, end: lastDateInView };\n        },\n\n        _dateInViews: function(date) {\n            var that = this;\n            var tables = that.element.find(DOT + CALENDAR_VIEW + EMPTY + TABLE);\n            var firstDateInView = toDateObject(tables.first().find(CELLSELECTOR).first().find(\"span\"));\n            var lastDateInView = toDateObject(tables.last().find(CELLSELECTOR).last().find(\"span\"));\n\n            if (!date) {\n                return;\n            }\n\n            date = new Date(date.toDateString());\n\n            return +date <= +lastDateInView && +date >= +firstDateInView;\n        },\n\n        _fillRange: function(start, end) {\n            var that = this;\n            var daysDifference;\n\n            that._selectDates = [];\n            daysDifference = daysBetweenTwoDates(start, end);\n            addDaysToArray(that._selectDates, daysDifference, start, that.options.disableDates);\n        },\n\n        _selectRange: function(start, end) {\n            var that = this;\n            var current;\n\n            if (+end < +start) {\n                current = end;\n                end = start;\n                start = current;\n            }\n\n            that._fillRange(start, end);\n            that._visualizeSelectedDatesInView();\n        },\n\n        _header: function() {\n            var that = this;\n            var element = that.element;\n            var buttons;\n            var header = element.find(\".k-calendar-header\");\n\n            if (!header.length) {\n                header = $(`<div class=\"k-calendar-header\">` +\n                    `<span id=\"calendar-title\" tabindex=\"-1\" data-href=\"#\" role=\"button\" class=\"k-calendar-title k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-primary\" aria-live=\"polite\"></span>` +\n                    '<span class=\"k-spacer\"></span>' +\n                    `<span class=\"k-calendar-nav\">` +\n                        `<span tabindex=\"-1\" data-href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-nav-prev\" ` + ARIA_LABEL + `=\"Previous\">${kendo.ui.icon({ icon: \"chevron-left\", iconClass: \"k-button-icon\" })}</span>` +\n                        `<span tabindex=\"-1\" data-href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-nav-next\" ` + ARIA_LABEL + `=\"Next\">${kendo.ui.icon({ icon: \"chevron-right\", iconClass: \"k-button-icon\" })}</span>` +\n                    '</span>' +\n                '</div>').prependTo(element);\n            }\n\n            that.header = header;\n\n            header.on(MOUSEENTER + ns + \" \" + MOUSELEAVE_NS + \" \" + FOCUS + ns + \" \" + BLUR + ns, \".k-button\", mousetoggle)\n                .on(CLICK, function() { return false; })\n                .on(CLICK + ns, \".k-button.k-calendar-title\", that._calendarTitleClick.bind(that))\n                .on(CLICK + ns, \".k-button.k-calendar-nav-prev\", that._prevViewClick.bind(that))\n                .on(CLICK + ns, \".k-button.k-calendar-nav-next\", that._nextViewClick.bind(that));\n\n            buttons = header.find(\".k-button\");\n\n            that._title = buttons.filter(\".k-calendar-title\");\n            that._navContainer = header.find(\".k-calendar-nav\");\n            that[PREVARROW] = buttons.filter(\".k-calendar-nav-prev\");\n            that[NEXTARROW] = buttons.filter(\".k-calendar-nav-next\");\n        },\n\n        _calendarTitleClick: function() {\n            this.navigateUp();\n            this.focus();\n            this.trigger(NAVIGATE);\n        },\n\n        _prevViewClick: function(e) {\n            e.preventDefault();\n            this.navigateToPast();\n            this.focus();\n            this.trigger(NAVIGATE);\n        },\n\n        _nextViewClick: function(e) {\n            e.preventDefault();\n            this.navigateToFuture();\n            this.focus();\n            this.trigger(NAVIGATE);\n        },\n\n        _wrapper: function() {\n            this.tablesWrapper = $('<div tabindex=\"0\" role=\"grid\" class=\"k-calendar-view\" aria-labelledby=\"calendar-title\" />').insertAfter(this.element[0].firstChild);\n        },\n\n        _templates: function() {\n            var that = this;\n            var options = that.options;\n            var month = options.month;\n            var content = month.content;\n            var weekNumber = month.weekNumber;\n            var empty = month.empty;\n\n            that.month = {\n                content: template((data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><span tabindex=\"-1\" class=\"k-link${data.linkClass}\" data-href=\"${data.url}\" ${kendo.attr(VALUE)}=\"${data.dateString}\" title=\"${data.title}\">${content ? kendo.template(content, { useWithBlock: !!content })(data) : data.value}</span></td>`, { useWithBlock: !!content }),\n                empty: template((data) => `<td role=\"gridcell\"${empty ? '>' : ' class=\"k-calendar-td k-empty\">'}${(empty ? kendo.template(empty, { useWithBlock: !!empty })(data) : \"</span>\")}</td>`, { useWithBlock: !!empty }),\n                weekNumber: template((data) => `<td class=\"k-calendar-td k-alt\">${weekNumber ? kendo.template(weekNumber, { useWithBlock: !!weekNumber })(data) : data.weekNumber}</td>`, { useWithBlock: !!weekNumber })\n            };\n        },\n\n        _footer: function() {\n            var that = this;\n            var options = that.options;\n            var template = options.footer !== false ? kendo.template(that.options.footer || ((data) => kendo.toString(data,\"D\", options.culture)), { useWithBlock: false }) : null;\n            var today = getToday();\n            var element = that.element;\n            var footer = element.find(\".k-calendar-footer\");\n\n            if (!template) {\n                that._toggle(false);\n                footer.hide();\n                return;\n            }\n\n            if (!footer[0]) {\n                footer = $(`<div class=\"k-calendar-footer\">\n                    <button tabindex=\"-1\" class=\"k-calendar-nav-today k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-button-flat k-button-flat-primary k-rounded-md\">\n                        <span class=\"k-button-text\"></span>\n                    </button>\n                </div>`).appendTo(element);\n            }\n\n            that._today = footer.show()\n                .find(\".k-button-flat-primary\")\n                .attr(\"title\", kendo.toString(today, \"D\", that.options.culture));\n\n            footer.find(\".k-button-text\")\n                .html(template(today));\n\n            that._toggle();\n        },\n\n        _navigate: function(arrow, modifier) {\n            var that = this;\n            var index = that._index + 1;\n            var currentValue = new DATE(+that._current);\n            var originaValue = new DATE(+that._current);\n            var offset;\n\n            arrow = that[arrow];\n\n            offset = that._cellByDate(currentValue).closest(TABLE).index();\n\n            if (modifier > 0) {\n                offset = 1 - offset;\n            } else {\n                offset = offset + 1;\n            }\n\n            if (!arrow || !arrow.hasClass(DISABLED)) {\n                if (index > 3) {\n                    currentValue.setFullYear(currentValue.getFullYear() + 100 * (modifier * offset));\n                } else {\n                    calendar.views[index].setDate(currentValue, (modifier * offset));\n                }\n\n                that.navigate(currentValue);\n\n                if (that._dateInViews(originaValue)) {\n                    that._focusCell(that._cellByDate(originaValue));\n                    that._current = originaValue;\n                } else {\n                    if (index > 3) {\n                        originaValue.setFullYear(originaValue.getFullYear() + 100 * modifier);\n                    } else {\n                        calendar.views[index].setDate(originaValue, modifier);\n                    }\n                    that._focusCell(that._cellByDate(originaValue));\n                    that._current = originaValue;\n                }\n            }\n        },\n\n        _toggle: function(toggle) {\n            var that = this;\n            var options = that.options;\n            var isTodayDisabled = options.selectable !== RANGE && that.options.disableDates(getToday());\n            var link = that._today;\n\n            if (toggle === undefined$1) {\n                toggle = isInRange(getToday(), options.min, options.max);\n            }\n\n            if (link) {\n                link.off(CLICK + ns);\n\n                if (toggle && !isTodayDisabled) {\n                    link.addClass(TODAY)\n                    .removeClass(DISABLED)\n                    .on(CLICK + ns, function(e) { that._todayClick(e); that.focus(); });\n                } else {\n                    link.removeClass(TODAY)\n                    .addClass(DISABLED)\n                    .on(CLICK + ns, function prevent(e) {\n                        e.preventDefault();\n                    });\n                }\n            }\n        },\n\n        _click: function(link) {\n            var that = this;\n            var options = that.options;\n            var currentValue = new Date(+that._current);\n            var value = toDateObject(link);\n\n            kendo.date.adjustDST(value, 0);\n\n            that._currentView.setDate(currentValue, value);\n            that._current = value;\n\n            if (that._currentView.name !== options.depth) {\n                that.navigateDown(calendar.restrictValue(currentValue, options.min, options.max));\n                that._focusCell(that._cellByDate(that._current));\n                that.trigger(NAVIGATE);\n            } else {\n                that._focusCell(link.closest(TD_NOT_WEEK_CELL));\n            }\n\n            that.focus();\n        },\n\n        _blur: function() {\n            var that = this;\n\n            if (that._cell) {\n                that._cell.removeClass(FOCUSED);\n            }\n        },\n\n        _focus: function() {\n            var cell = this._cell;\n\n            if (!cell || !$.contains(this.tablesWrapper[0], cell[0])) {\n                if (this._current && this._dateInViews(this._current)) {\n                    cell = this._cellByDate(this._current);\n                } else {\n                    cell = this.tablesWrapper.find(CELLSELECTORVALID).first();\n                }\n            }\n\n            this._focusCell(cell);\n        },\n\n        _focusCell: function(cell) {\n            var that = this;\n            var cellId = that._cellID;\n\n            if (that._cell && that._cell.length) {\n                that._cell[0].removeAttribute(ARIA_LABEL);\n                that._cell.removeClass(FOCUSED);\n                that.tablesWrapper.removeAttr(ARIA_ACTIVEDESCENDANT);\n\n                if (that._cell.attr(ID) === cellId) {\n                    that._cell[0].removeAttribute(ID);\n                }\n            }\n\n            that._cell = cell;\n\n            if (cell.attr(ID)) {\n                that.tablesWrapper.attr(ARIA_ACTIVEDESCENDANT, cell.attr(ID));\n            } else if (cellId) {\n                cell.attr(ID, cellId);\n                that.tablesWrapper.attr(ARIA_ACTIVEDESCENDANT, cellId);\n            }\n\n            cell.addClass(FOCUSED);\n\n            if (cell.length && that._currentView.name == MONTH) {\n                that._current = toDateObject(cell.find(\"span\"));\n            }\n        },\n\n        _todayClick: function(e) {\n            var that = this;\n            var disabled = that.options.disableDates;\n            var today = getToday();\n            var navigate = false;\n\n            e.preventDefault();\n\n            if (disabled(today)) {\n                return;\n            }\n\n            that._value = today;\n\n            if (that._isMultipleSelection()) {\n                that._selectDates = [today];\n            }\n\n            if (that._isRangeSelection()) {\n                that.rangeSelectable.clear(true);\n                that._range = { start: today, end: null };\n            }\n\n            if (that._currentView.name != MONTH || !that._dateInViews(today)) {\n                navigate = true;\n            }\n\n            that.navigate(today, that.options.depth);\n\n            if (that._isSingleSelection()) {\n                that.selectable._lastActive = null;\n            }\n\n            if (navigate) {\n                that.trigger(NAVIGATE);\n            }\n\n            that.trigger(CHANGE);\n        },\n\n        _validateValue: function(value) {\n            var that = this;\n            var options = that.options;\n            var min = options.min;\n            var max = options.max;\n\n            value = kendo.parseDate(value, options.format, options.culture);\n\n            if (value !== null) {\n                value = new DATE(+value);\n\n                if (!isInRange(value, min, max)) {\n                    value = null;\n                }\n            }\n\n            if (value === null || !that.options.disableDates(new Date(+value))) {\n                that._value = value;\n            } else if (that._value === undefined$1) {\n                that._value = null;\n            }\n\n            return that._value;\n        },\n\n        _updateAria: function(ariaTemplate, date) {\n            var that = this;\n            var cell = that._cellByDate(date || that.current());\n            var valueType = that.view().valueType();\n            var current = date || that.current();\n            var text;\n\n            that._focusCell(cell);\n\n            if (valueType === MONTH) {\n                text = kendo.toString(current, \"MMMM\");\n            } else if (valueType === \"date\") {\n                text = kendo.toString(current, \"D\");\n            } else {\n                text = cell.text();\n            }\n\n            cell.attr(ARIA_LABEL, ariaTemplate({ current: current, valueType: valueType, text: text }));\n            return cell.attr(ID);\n        },\n\n        clearSelection: function() {\n            var that = this;\n\n            if (that.selectable) {\n                that.element.find(DOT + SELECTED).removeClass(SELECTED).removeAttr(ARIA_SELECTED);\n            }\n\n            if (that.rangeSelectable) {\n                that.rangeSelectable.clear(true);\n            }\n        },\n\n        _restoreSelection: function() {\n            var that = this;\n            var range;\n\n            if (that._currentView.name !== that.options.depth) {\n                return;\n            }\n\n            that._preventChange = true;\n\n            if (that._isRangeSelection()) {\n                range = that.selectRange();\n\n                if (!range || !range.start) {\n                    that._preventChange = false;\n                    return;\n                }\n\n                that.selectRange(range);\n            }\n\n            if (that._isSingleSelection() && that.value()) {\n                that.selectable.value(that._cellByDate(that.value()));\n            }\n\n            if (that._isMultipleSelection()) {\n                that._visualizeSelectedDatesInView();\n            }\n\n            that._preventChange = false;\n        },\n\n        _isMultipleSelection: function() {\n            let selectable = this.options.selectable,\n            selectableOptions = Selectable.parseOptions(selectable);\n            return selectableOptions.multiple;\n        },\n\n        _isRangeSelection: function() {\n            let selectable = this.options.selectable,\n            selectableOptions = Selectable.parseOptions(selectable);\n            return selectableOptions.range;\n        },\n\n        _isSingleSelection: function() {\n            let selectable = this.options.selectable,\n            selectableOptions = Selectable.parseOptions(selectable);\n            return selectableOptions.single;\n        },\n\n        value: function(value) {\n            var that = this;\n            var cell;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            value = that._validateValue(value);\n\n            that.clearSelection();\n\n            if (value && !that._dateInViews(value)) {\n                that.navigate(value);\n            }\n\n            if (value !== null && that._currentView.name === MONTH) {\n                cell = that._cellByDate(value);\n\n                if (that.selectable) {\n                    that.selectable.value(cell);\n                }\n\n                if (that.rangeSelectable) {\n                    that.rangeSelectable.start(cell);\n                    that.rangeSelectable._lastActive = cell;\n                }\n            }\n        },\n\n        selectDates: function(dates) {\n            var that = this;\n            var validSelectedDates;\n            var datesUnique;\n\n            if (dates === undefined$1) {\n                return that._selectDates;\n            }\n\n            datesUnique = dates\n                .map(function(date) { return date.getTime(); })\n                .filter(function(date, position, array) {\n                    return array.indexOf(date) === position;\n                })\n                .map(function(time) { return new Date(time); });\n\n            validSelectedDates = $.grep(datesUnique, function(value) {\n                if (value) {\n                    return +that._validateValue(new Date(value.setHours(0, 0, 0, 0))) === +value;\n                }\n            });\n            that._selectDates = validSelectedDates.length > 0 ? validSelectedDates : (datesUnique.length === 0 ? datesUnique : that._selectDates);\n            that._visualizeSelectedDatesInView();\n        },\n\n        selectRange: function(range) {\n            let that = this,\n                startInRange,\n                endInRange,\n                visibleRange;\n\n            if (range === undefined$1) {\n                return that._range;\n            }\n\n            that._range = range;\n\n            visibleRange = that._visibleRange();\n\n            startInRange = that._dateInViews(range.start);\n            endInRange = range.end && that._dateInViews(range.end);\n\n            if (!startInRange) {\n                if (endInRange) {\n                    if (range.start) {\n                        that.rangeSelectable.selectTo(that._cellByDate(range.end));\n                    } else {\n                        that.rangeSelectable.clear(true);\n                        that.rangeSelectable.end(that._cellByDate(range.end));\n                    }\n                } else if (range.start) {\n                    that.rangeSelectable.start(that._cellByDate(range.start));\n                }\n            }\n\n            if (startInRange && endInRange) {\n                that.rangeSelectable.range(that._cellByDate(range.start), that._cellByDate(range.end), false, that.options.allowReverse);\n            }\n\n            if (range.end && startInRange && !endInRange) {\n                that.rangeSelectable.selectFrom(that._cellByDate(range.start));\n            }\n\n            if (!range.end && startInRange) {\n                that.rangeSelectable.clear(true);\n                that.rangeSelectable.start(that._cellByDate(range.start));\n            }\n\n            if (+visibleRange.start > +range.start && +visibleRange.end < +range.end) {\n                that.rangeSelectable.mid(that.element.find(CELLSELECTORVALID));\n            }\n        }\n    });\n\n    kendo.ui.plugin(MultiViewCalendar);\n\n    function mousetoggle(e) {\n        var disabled = $(this).hasClass(\"k-disabled\");\n\n        if (!disabled) {\n            $(this).toggleClass(HOVER, MOUSEENTER.indexOf(e.type) > -1 || e.type == FOCUS);\n        }\n    }\n\n    function addDaysToArray(array, numberOfDays, fromDate, disableDates) {\n        for (var i = 0; i <= numberOfDays; i++) {\n            var nextDay = new Date(fromDate.getTime());\n            nextDay = new Date(nextDay.setDate(nextDay.getDate() + i));\n            if (!disableDates(nextDay)) {\n                array.push(nextDay);\n            }\n        }\n    }\n\n    function daysBetweenTwoDates(startDate, endDate) {\n        if (+endDate < +startDate) {\n            var temp = +startDate;\n            calendar.views[0].setDate(startDate, endDate);\n            calendar.views[0].setDate(endDate, new Date(temp));\n        }\n        var fromDateUTC = Date.UTC(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\n        var endDateUTC = Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\n\n        return Math.ceil((+endDateUTC - +fromDateUTC) / kendo.date.MS_PER_DAY);\n    }\n\n    function shiftDate(value, dimension, numberOfViews) {\n        var current;\n        if (dimension === MONTH) {\n            current = new DATE(value.getFullYear(), value.getMonth() + numberOfViews, value.getDate());\n            current.setFullYear(value.getFullYear());\n            if (Math.abs(current.getMonth() - value.getMonth()) > numberOfViews || numberOfViews > 10) {\n                current.setMonth(value.getMonth() + numberOfViews);\n                current = calendar.views[0].last(current);\n            }\n            return current;\n        } else if (dimension === \"year\") {\n            current = new DATE(1, value.getMonth(), value.getDate());\n            current.setFullYear(value.getFullYear() + numberOfViews);\n            if (Math.abs(current.getFullYear() - value.getFullYear()) > numberOfViews) {\n                current = new DATE(1, value.getMonth(), 1);\n                current.setFullYear(value.getFullYear() + numberOfViews);\n                current = calendar.views[1].last(current);\n            }\n            return current;\n        } else if (dimension === \"decade\") {\n            current = new DATE(1, value.getMonth(), value.getDate());\n            current.setFullYear(value.getFullYear() + 10 * numberOfViews);\n            if (Math.abs(current.getFullYear() - value.getFullYear()) > 10 * numberOfViews) {\n                current = new DATE(1, value.getMonth(), 1);\n                current.setFullYear(value.getFullYear() + 10 * numberOfViews);\n                current = calendar.views[2].last(current);\n            }\n            return current;\n        } else if (dimension === \"century\") {\n            current = new DATE(1, value.getMonth(), value.getDate());\n            current.setFullYear(value.getFullYear() + 100 * numberOfViews);\n            if (Math.abs(current.getFullYear() - value.getFullYear()) > 100 * numberOfViews) {\n                current = new DATE(1, value.getMonth(), 1);\n                current.setFullYear(value.getFullYear() + 100 * numberOfViews);\n                current = calendar.views[3].last(current);\n            }\n            return current;\n        }\n    }\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}