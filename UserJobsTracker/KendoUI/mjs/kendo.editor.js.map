{"version":3,"sources":["raw-mjs/kendo.editor.js"],"names":["kendo","UndoRedoStack","Observable","extend","init","options","fn","call","this","clear","events","push","command","stack","slice","currentCommandIndex","undo","canUndo","trigger","redo","canRedo","length","deepExtend","util","$","undefined$1","window","Class","Widget","ui","os","support","mobileOS","browser","keys","outerWidth","_outerWidth","outerHeight","_outerHeight","FORMATTING_MARKS_STYLE_ID","FORMATTING_MARKS_OVERLAY_ID","FORMATTING_MARKS_OVERLAY_WRAPPER_ID","SELECT","PLACEHOLDER_CLASS","PLACEHOLDER_TAG_ID","NATIVE_TOOLS","EditorUtils","editorWrapperTemplate","formatByName","name","format","i","inArray","tags","getToolCssClass","icon","cssClass","superscript","subscript","justifyLeft","justifyCenter","justifyRight","justifyFull","insertUnorderedList","insertOrderedList","insertUpperRomanList","insertLowerRomanList","import","indent","outdent","createLink","unlink","insertImage","insertFile","viewHtml","foreColor","backColor","createTable","addColumnLeft","addColumnRight","addRowAbove","addRowBelow","deleteRow","deleteColumn","mergeCellsHorizontally","mergeCellsVertically","splitCellHorizontally","splitCellVertically","tableProperties","tableCellProperties","tableWizardInsert","tableAlignLeft","tableAlignCenter","tableAlignRight","cleanFormatting","copyFormat","applyFormat","pdf","nameToKebab","replace","toLowerCase","registerTool","toolName","tool","Editor","defaultTools","registerFormat","formatName","formats","cacheComments","content","comments","index","retrieveComments","supportedContentEditable","document","documentElement","toolGroups","basic","scripts","alignment","lines","symbols","links","lists","dent","tablesWizard","tablesInsert","tablesAddDelete","tablesMerge","tablesPosition","formatPainter","element","toolbarContainer","type","domElement","that","editorNS","editor","dom","Dom","_registerHandler","closest","update","bind","_setupType","_initToolbar","_setupHeight","_resizable","_initializeContentElement","_setupKeyboard","clipboard","Clipboard","undoRedoStack","_populateValue","mousedown","_endTyping","mouseup","e","_mouseup","_handleSpaceAndNewLines","_initializeImmutables","_ariaLabel","wrapper","find","toolbar","resize","notify","_showWatermarkOverlay","messages","auto","bold","italic","underline","strikethrough","fitToCell","lineHeight","formattingMarks","insertHtml","fontName","fontNameInherit","fontSize","fontSizeInherit","formatBlock","formatting","style","emptyFolder","editAreaTitle","uploadFile","overflowAnchor","orderBy","orderBySize","orderByName","invalidFileType","deleteFile","overwriteFile","directoryNotFound","imageWebAddress","imageAltText","imageWidth","imageHeight","fileWebAddress","fileTitle","fileText","linkWebAddress","linkText","linkToolTip","linkOpenInNewWindow","dialogUpdate","dialogInsert","dialogOk","dialogCancel","createTableHint","tableWizard","tableTab","cellTab","accessibilityTab","caption","summary","width","height","units","cellSpacing","cellPadding","topPadding","leftPadding","bottomPadding","rightPadding","independentCellPaddings","cellMargin","captionAlignment","position","background","tableBackground","id","border","borderStyle","borderWidth","borderColor","collapseBorders","wrapText","associateCellsWithHeaders","alignLeft","alignCenter","alignRight","alignLeftTop","alignCenterTop","alignRightTop","alignLeftMiddle","alignCenterMiddle","alignRightMiddle","alignLeftBottom","alignCenterBottom","alignRightBottom","alignRemove","columns","rows","selectAllCells","applyToColumn","applyToRow","exportAs","print","headerRows","headerColumns","tableSummaryPlaceholder","associateNone","associateScope","associateIds","borderNone","placeholder","nonce","unsafeInline","encoded","formattingMarksRefreshDelay","domain","resizable","deserialization","custom","serialization","entities","semantic","optimizeTags","keepEOL","pasteCleanup","all","css","keepNewLines","msAllFormatting","msConvertLists","msTags","none","span","stylesheets","dialogOptions","modal","draggable","animation","imageBrowser","fileBrowser","navigateOnTab","text","value","tools","destroy","_deregisterHandlers","clearTimeout","_spellCorrectTimeout","_focusOutside","windowInstance","tablePopup","_destroyUploadWidget","resizeObserver","disconnect","_destroyResizings","_destroyFormattingMarksOverlay","setOptions","_setOptionsTools","_initializePlaceholder","createRange","RangeUtils","encodedValue","encode","exec","params","range","Error","body","getAttribute","keyboard","isTypingInProgress","_focusBody","selectRange","_range","getRange","Object","map","key","immutables","test","execCommand","async","change","_selectionChange","managesUndoRedo","focus","restoreSelection","selection","getSelection","rangeCount","getRangeAt","doc","startContainer","endContainer","startOffset","endOffset","setStart","collapse","SelectionUtils","selectionFromDocument","paste","html","InsertHtmlCommand","refresh","textarea","val","remove","selectionRestorePoint","toRange","saveSelection","container","commonAncestorContainer","contains","RestorePoint","selectedHtml","Serializer","domToXhtml","cloneContents","removeAllRanges","addRange","state","textNodes","finder","collapsed","getFormat","isFormatted","_togglePlaceholder","trim","_oldValue","currentHtml","htmlToDom","_refreshTools","_bindTools","unbind","filter","el","each","initialize","_blur","old","_containsRange","isAncestorOrSelf","_createContentElement","iframe","wnd","lang","specifiedDomain","domainScript","src","hide","title","frameBorder","addClass","attr","tabIndex","insertBefore","location","hostname","contentWindow","contentDocument","one","_decorateFormatting","getElementsByTagName","open","write","isRtl","ios","edge","chrome","href","join","close","_deleteSavedRange","component","dataSource","items","tag","className","formattingElement","getKendoDropDownList","data","list","getEffectiveBackground","inlineStyle","_appendFormattingMarksStyles","$head","head","append","_appendFormattingMarksOverlay","_formattingMarksOverlay","handlers","_handlers","h","off","handler","_uploadWidget","endTyping","scrollTop","activeElement","_activeElement","scrollHeight","clientHeight","msie","left","top","opacity","appendTo","_handleToolbarClick","target","_immutablesContext","Immutables","immutablesContext","editableTextNodes","blurTrigger","mousedownTrigger","createElement","setAttribute","appendChild","interval","setInterval","last","clearInterval","setTimeout","_mousedown","touch","keydown","_spellCorrect","parentElement","nodeName","_cachedHeight","restoreHeight","keyCode","BACKSPACE","DELETE","F10","first","preventPopupHide","preventDefault","LEFT","RIGHT","offset","next","nextChar","nodeType","nodeValue","toolFromShortcut","toolOptions","keyPressCommand","_runPostContentKeyCommands","keypress","_showElementResizeHandles","keyup","selectionCodes","TAB","PAGEUP","PAGEDOWN","END","HOME","UP","DOWN","INSERT","ctrlKey","altKey","shiftKey","_refreshInterval","click","selectNode","focusin","hasAttribute","_showWindow","focusout","active","popup","toolbarContainerElement","get","_toolbarFocused","hasClass","removeClass","_hideWindow","_initializeColumnResizing","_initializeRowResizing","_initializeElementResizing","defaults","toolbarOptions","_processToolbarItems","_setNativeTools","parentMessages","toggle","evaluateTemplates","ToolBar","on","is","_initToolbarWindow","toolbarEl","wrap","parent","prepend","kendoWindow","dragHandle","effects","minHeight","visible","autoFocus","actions","dragend","_moved","_selectionStarted","parents","stopPropagation","gecko","which","tagName","defaultValue","deserializedRoot","getAllComments","innerHTML","_resetGroups","current","result","optionsTools","j","t","guidGroupName","flatDefaultTools","processedObject","currentGroups","Array","isArray","guid","_processToolOptions","gr","includes","values","group","g","to","_processDefaultTool","isPlainObject","view","shortcuts","uiOptions","originalOptions","palette","template","showText","showIcon","tooltip","attributes","ColorTool","componentOptions","views","preview","input","buttons","_shortcutSequence","nodes","filterBy","htmlIndentSpace","_updateImmutablesState","eventNames","NS","hasOwnProperty","applyEventMap","split","toolsFromShortcut","o","changesContent","refreshDelay","applyFormattingMarks","clearFormattingMarksOverlay","_toggledFormattingMarks","children","_formattingMarksTimeout","empty","heightStyle","expectedHeight","parseInt","actualHeight","indexOf","isNaN","Keyboard","BackspaceHandler","TypingHandler","SystemHandler","SelectAllHandler","_wrapTextarea","res","ctrl","shift","alt","beforeCorrection","falseTrigger","contextmenu","mozilla","_finishUpdate","show","$body","toggleClass","overflowPopup","uiElement","trackImmutables","toolsToBeUpdated","w","editorWrap","editArea","isResizable","resizableMin","min","resizableMax","max","maxHeight","minWidth","maxWidth","ResizeObserver","_resizeTimeOut","observe","_destroyElementResizing","ElementResizingFactory","dispose","_destroyRowResizing","RowResizing","_destroyColumnResizing","ColumnResizing","create","_showElementResizeHandlesProxy","elementResizing","parentNode","showResizeHandles","columnResizing","rowResizing","_getWindowWidth","editorElement","_overlapsWindow","box","toolbarWrapper","toolbarWrapperOffset","toolbarWrapperLeft","toolbarWrapperTop","boxOffset","boxOffsetLeft","boxOffsetTop","editorOffset","Math","plugin","Tool","commandArguments","noop","UndoTool","enable","removeAttr","emptyElementContent","emptyTableCellContent","PDFMixin","prototype","_drawPDF","drawing","drawDOM","saveAsPDF","progress","Deferred","promise","args","then","root","exportPDF","done","dataURI","saveAs","fileName","proxyURL","proxyTarget","forceProxy","resolve","fail","err","reject","jQuery","STYLE","FLOAT","CSSFLOAT","STYLEFLOAT","CLASS","KMARKER","makeMap","len","obj","nonListBlockElements","blockElements","concat","block","selfClosing","inlineElements","inline","fillAttrs","nonEmptyNonTextContentElements","normalize","node","version","firstChild","prev","nextSibling","persistedScrollTop","whitespace","emptyspace","rgb","bom","whitespaceOrBom","cssAttributes","htmlRe","entityRe","entityTable","findNodeIndex","skipText","previousSibling","isDataNode","isAncestorOf","findClosestAncestor","rootElem","iterator","createNodeIterator","NodeFilter","SHOW_COMMENT","FILTER_ACCEPT","curNode","nextNode","getNodeLength","childNodes","splitDataNode","temp","newNode","cloneNode","denormalizedText","deleteData","insertAfter","attrEquals","cssFloat","blockParentOrBody","parentOfType","ownerDocument","blockParents","blocks","windowFromDocument","defaultView","parentWindow","nodeTypes","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","toHex","color","matches","x","toString","encodableChars","c","charCode","charCodeAt","entity","isBom","stripBom","stripBomNode","removeChild","insignificant","_moz_dirty","_moz_editor_bogus_node","tableCell","significantNodes","grep","child","emptyTextNode","emptyNode","significantChildNodes","isWhitespace","getTextNodes","lastTextNode","lastChild","isMarker","allowsTextContent","every","allWhitespaceContent","isEmptyspace","sibling","direction","isBlock","isPrevBlock","isNextBlock","isSelfClosing","isEmpty","isInline","isImg","isBr","scrollContainer","compatMode","scrollingElement","scrollTo","toStart","elementTop","elementHeight","marker","windowHeight","innerHeight","offsetHeight","ceil","persistScrollTop","offsetParent","offsetTop","offsetLeft","restoreScrollTop","undefined","insertAt","newElement","referenceElement","removeChildren","removeTextSiblings","closestBy","condition","rootCondition","ofType","changeTag","skipAttributes","attribute","specified","cssText","editableParent","contentEditable","unwrap","isChildOfBaseContainer","createEmptyNode","removeAttribute","mergeAttributes","origin","traverseCss","unstyle","backgroundStyle","innerText","classNames","classes","commonAncestor","ancestors","count","arguments","paths","minPathLength","Infinity","output","reverse","closestSplittableParent","apply","editableParents","editableAncestor","closestEditable","types","editable","closestEditableOfType","invert","match","ensureTrailingBreaks","elements","ensureTrailingBreak","removeTrailingBreak","br","reMapTableColumns","table","colAttr","_mapColIndices","clearTableMappings","registeredColumns","rowIndex","cells","colIndex","cellIndex","cell","rowSpan","_mapColspan","colSpan","ci","ri","associateWithIds","theadRows","numberOfTheadRows","tableRows","numberOfTableRows","theadMatrix","tbodyMatrix","tHead","_getNumberOfHeaderRows","_generateIdsForColumns","_generateIdsForRows","_assignIds","col","colspan","rowspan","k","l","timestamp","Date","getTime","row","headers","pushHeaderId","forEach","_onlyUnique","_getNumberOfColumns","currentIndex","numberOfCols","Number","_getNumberOfHeaderColumns","numberOfHeaderRows","number","self","fontSizeMappings","quoteRe","brRe","pixelRe","emptyPRe","cssDeclaration","sizzleAttr","scriptAttr","onerrorRe","bomSpan","div","supportsLeadingWhitespace","isFunction","toEditableHtml","_toEditableImmutables","immutable","prependTo","_fillEmptyElements","p","_removeSystemElements","_resetOrderedLists","ol","originalStart","ols","_preventScriptExecution","attributesToRemove","deserialize","semanticFilter","mapStart","tagMap","start","end","skipEncoding","canOptimize","semanticAttributes","specifiedAttributes","textDecoration","font","fontFamily","size","inlineStyles","ignoredStylePrefixes","prop","startsWith","strong","em","b","u","item","styleObj","splice","face","styleAttr","properties","property","lastIndex","cssProperties","$node","htmlEncode","skip","childNode","mapper","previous","jqNode","serialize","shouldOptimize","isEmptyBomNode","runCustom","script","childrenCount","textOnly","selectionFromWindow","W3CSelection","selectionFromRange","rangeDocument","documentFromRange","W3CRange","updateRangeProperties","fixIvalidRange","setEnd","setStartBefore","setStartAfter","setEndBefore","setEndAfter","selectNodeContents","deleteContents","cloneRange","deleteSubtree","hasPartialSubtree","getSubtreeIterator","RangeIterator","cloneSubtree","frag","createDocumentFragment","extractContents","extractSubtree","originalRange","insertNode","startNodeName","endNodeName","startAncestor","endAncestor","compareBoundaries","ex","isInvalidRange","fromNode","_current","_next","_end","hasNext","traverse","callback","delta","inStartContainer","inEndContainer","nodeIndex","getSubRange","subRange","textRange","createTextRange","adoptContainer","select","duplicate","right","textRangeContainer","adoptEndPoint","compareEndPoints","movedStart","movedEnd","cursorNode","textOffset","isData","anchorNode","anchorParent","cursor","moveToElementText","setEndPoint","comparison","appended","RangeEnumerator","enumerate","visit","ImmutablesRangeIterator","ImmutablesRangeEnumerator","rootNode","getEditable","nodeToPath","serializedImmutables","removeImmutables","restoreImmutables","lastType","restoreHtml","path","toRangePoint","denormalizedOffset","Marker","caret","addCaret","removeCaret","containerIndex","textNode","add","expand","isExpandable","rangeBoundary","_removeDeadMarkers","createTextNode","_normalizedIndex","pointer","shouldNormalizeStart","shouldNormalizeEnd","isBomSelected","charAt","collapsedToStart","startParent","endParent","startIndex","endIndex","boundary","immutableParent","image","stringify","partition","partitionRange","contents","mapAll","mapped","getAll","predicate","selector","getMarkers","isStartOf","isEndOf","wrapSelectedElements","startEditable","endEditable","isEnd","beforeCaret","afterCaret","search","substring","complexBlocks","IMMUTABALE","IMMUTABALE_MARKER_SELECTOR","randomId","chars","round","random","updateToolOptions","_initOptions","_toHtml","replaceWith","isDeleting","_cancelDeleting","_cancelTyping","typingInProgress","isTypingKey","backspace","del","cancelDeleting","nextImmutable","closestSelectionLi","closestImmutableLi","_removeImmutable","forwards","commonContainer","_nextNode","startRestorePoint","expandImmutablesIn","startImmutableParent","endImmutableParent","serialized","Command","restorePoint","formatter","lockRange","releaseRange","point","createDialog","_actionButtonsTemplate","insertButtonIcon","cancelButtonIcon","renderButton","themeColor","GenericCommand","endRestorePoint","ViewHtmlCommand","cmd","dialog","_footerTemplate","_footerMessages","center","FormatCommand","FormatTool","getKendoToolBar","getKendoToggleButton","MOUSEDOWN_NS","InlineFormatFinder","numberOfSiblings","referenceNode","textNodesCount","elementNodesCount","markerCount","findSuitable","sourceNode","findFormat","InlineFormatter","activate","formatNode","formatNodes","consolidate","outerMostInline","pop","GreedyInlineFormatFinder","greedyProperty","fontAttr","getInlineCssValue","attributeValue","pair","cssIndex","propertyAndValue","getFormatInner","parentsUntil","addBack","toArray","GreedyInlineFormatter","toCamelCase","action","InlineFormatTool","DelayedExecutionTool","FontTool","cssAttr","domAttr","widget","setDataSource","sender","newRange","ENTER","_widget","getKendoColorPicker","storedRange","_inputFocused","_popup","unselectable","_value","toCssRgba","fontWeight","togglable","fontStyle","overflow","toolIcon","commandOn","closeOnSelect","dataValueField","dataTextField","valuePrimitive","HTTP_PROTOCOL","protocolRegExp","endLinkCharsRegExp","LinkFormatFinder","LinkFormatter","markers","a","ref","UnlinkCommand","LinkCommand","url","_initialText","img","_close","_form","_createForm","_apply","_keydown","linkUrl","_dialog","formElement","form","kendoForm","renderButtons","field","label","editorOptions","after","ESC","textInput","anchor","AutoLinkCommand","detectedLink","detectLink","linkMarker","linkRange","_ensureWebProtocol","startNode","traverser","LeftDomTextTraverser","cancelAtNode","DomTextLinkDetection","_hasProtocolPrefix","_prefixWithWebProtocol","UnlinkTool","isLink","DomPos","_detectEnd","blank","clone","_detectStart","_isLinkDetected","puntuationOptions","extendOptions","RightDomTextTraverser","_skipStartPuntuation","lastIndexOfRegExp","ii","r","str","DomTextTraverser","cancel","_traverse","edgeNode","subText","splitIndex","SPACEBAR","BlockFormatFinder","candidate","suitable","f","_resolveListsItems","until","ImmutablesNS","BlockFormatter","ancestor","_handleImmutables","images","imageAttributes","nonImages","applyFormatting","immutableFormat","namedFormat","GreedyBlockFormatter","formatTag","ListFormatter","blockFormatter","BlockFormatTool","listElements","textAlign","float","display","marginLeft","marginRight","listStylePosition","ListFormatFinder","altAttr","matchesType","isList","unwrapTag","li","isImmutable","containsAny","_parentLists","merge","breakable","findSuitableNode","applyOnSection","section","pushAncestor","listStyleType","lastSection","lastNodes","sections","addLastSection","ul","fragment","ListCommand","ListTool","FormattingTool","toFormattingItem","dot","context","decorate","optionLabel","dataItem","toJSON","dataBound","getFormattingValue","n","selectBox","_ancestor","operator","CleanFormatCommand","tagsToClean","clean","listFormatter","unwrapListItem","highlightFirst","autoWidth","KEDITORIMAGEURL","KEDITORIMAGETITLE","KEDITORIMAGEWIDTH","KEDITORIMAGEHEIGHT","ImageCommand","removeIEAttributes","onload","onerror","applied","isIE","showBrowser","ImageBrowser","transport","read","_imageBrowser","ev","selected","dialogHeight","loadingOverlay","ImportCommand","_initializeUploadWidget","importOptions","upload","kendoUpload","success","_onUploadSuccess","_onUploadProgress","_onUploadSelect","error","_onUploadError","complete","_onUploadComplete","showFileList","multiple","saveUrl","autoUpload","saveField","validation","allowedExtensions","maxFileSize","getKendoUpload","_trigger","clearAllFiles","_removeLoadingOverlay","response","files","validationErrors","_initLoadingOverlay","eventType","uploadEvent","_iframeWrapper","_container","postProcess","genericCommand","InsertHtmlTool","initialValue","autoSize","ExportAsCommand","exportType","postToProxy","generateForm","submit","exportAsOptions","method","valueInput","exportTypeInput","fileNameInput","antiForgeryInput","csrf_param","ExportAsTool","changeHandler","_exec","itemTemplate","valueTemplate","iconClass","indentDirection","IndentFormatter","parentList","targets","mapImmutables","siblingList","nestedList","getListTypeAttr","targetIndex","styleType","targetNode","listParent","siblings","nextAll","IndentCommand","indentFormatter","OutdentCommand","OutdentTool","isOutdentable","listParentsCount","suitableNodes","ParagraphCommand","_insertMarker","_moveFocus","focusNode","shouldTrim","startInBlock","endInBlock","_blankAfter","paragraph","heading","tableNode","rng","emptyParagraphContent","parentChildrenLength","_insertParagraphAfter","NewLineCommand","filler","kbrParent","oldIE","KEDITORFILEURL","KEDITORFILETEXT","KEDITORFILETITLE","FileCommand","file","FileBrowser","_fileBrowser","ACTIVESTATE","SELECTEDSTATE","SCOPE","ROW","COL","ROWGROUP","COLGROUP","COLSPAN","ROWSPAN","TABLE","THEAD","TBODY","TR","TD","TH","getTouches","columnTemplate","tableFormatFinder","TableCommand","skipCleaners","_tableHtml","columnHtml","rowHeight","insertedTable","PopupTool","btn","popupTemplate","kendoPopup","copyAnchorStyles","_open","_activate","_toggle","_editor","TableWizardTool","TableWizardCommand","insertNewTable","kendoButton","_setTableSize","InsertTableTool","cols","cellWidth","cellHeight","firstCell","eq","lastCell","getOffset","tableFromLocation","floor","clientY","clientX","scrollLeft","offsetWidth","autoApplyNS","_valid","status","initiallyVisible","button","selectedRows","selectedColumns","changed","tableSize","stopImmediatePropagation","TableModificationCommand","_clearColIndexAttr","_findRowSpanCell","_resetElementResizing","_findNextTdInRow","td","lastTd","_adjustColgroups","colgroup","colElements","colgroupElements","numberOfCells","_associateHeaderIds","InsertRowCommand","cellCount","newRow","createdCell","_appendCell","newCell","InsertColumnCommand","columnIndex","_processForColSpan","_resizeCells","selectedCell","colSpanEffect","parsedWidth","unit","calculatedWidth","parseFloat","DeleteRowCommand","focusElement","rowParent","_focusElement","_handleRowSpanCells","adjacentCell","nextRow","firstRow","before","_reduceRowSpan","rowSpanValue","DeleteColumnCommand","columnCount","_handleColSpanCells","_reduceColSpan","colSpanValue","MergeCellsHorizontallyCommand","nextTd","_getColspan","MergeCellsVerticallyCommand","tr","targetRow","bottomTd","_getRowspan","SplitCellCommand","emptyTd","_splitCellHorizontally","_splitCellVertically","_getRowspanValue","_getColspanValue","tdToAdd","colSpanResult","rowSpanResult","TableModificationTool","commandsMap","insert","delete","column","TableFormatCommand","_showResizeHandles","TableFormatTool","isTable","align","nonSplittableTagsOnPaste","cleaners","ScriptCleaner","TabCleaner","MSWordFormatCleaner","WebkitFormatCleaner","HtmlTagsCleaner","HtmlAttrCleaner","HtmlContentCleaner","CustomCleaner","htmlToFragment","_startModification","_inProgress","_endModification","modificationInfo","_contentModification","_removeBomNodes","_onBeforeCopy","oncopy","oncut","_fileToDataURL","blob","deferred","reader","FileReader","File","getAsFile","readAsDataURL","_triggerPaste","_handleImagePaste","clipboardData","originalEvent","_insertImages","when","results","onpaste","clipboardNode","_decoreateClipboardNode","webkit","_moveToCaretPosition","clipboardRange","containers","ondragover","ondrop","dataTransfer","margin","padding","fontVariant","lineSpacing","nodeOffset","caretOffset","_caretOffset","translate","transform","rangeChanged","isStartTextNode","prevLength","bomNode","splittableParent","preventSplit","unwrapPasted","applicable","splitter","splittable","fragmentsHtml","elm","rangeEnd","focusedTable","siblingNodes","lastSiblingIndex","lastSibling","Cleaner","replacements","customReplacements","junkReplacements","convertFontMatch","$0","$1","closing","family","stripEmptyAnchors","listType","listData","startingSymbol","matchSymbol","symbol","isNumber","trimStartText","_guessUnorderedListStyle","_guessOrderedListStyle","_convertToLi","_checkForBullet","_getHtmlNoBullet","extractListLevels","level","_createList","rootMargin","rootIndex","lastRootLi","isLastRootLi","rootList","blockChildren","lastMargin","levels","acceptedNameTags","listIndex","levelType","removeAttributes","significantStyles","addSignificantStyles","isSignificantCss","removeAttributeNode","createColGroup","convertHeaders","boldedCells","removeParagraphs","paragraphs","removeTextNodes","trs","currentNode","tables","longestRow","titles","removeFormatting","filters","DomCleaner","cleanDom","collectTags","collectAttr","TextContainer","HtmlTextLines","separators","line","inlineBlockText","resetLine","appendText","textContainer","appendInlineBlockText","flashInlineBlockText","endLine","il","il1","jl","jl1","DomEnumerator","preventDown","hasText","enumerator","buildText","getDefaultSeparators","htmlLines","thead","tbody","cleaner","cellText","PREVIOUS_SIBLING","getSibling","tableCells","tableCellsWrappers","tableElements","inTable","RemoveTableContent","cellsTypes","startCell","endCell","_removeContent","getNext","evt","Event","isDefaultPrevented","deleteSelection","startTyping","_removeBomSpan","textContent","_addCaret","_restoreCaret","_handleDelete","caretPlaceholder","_merge","_cleanBomBefore","_handleBackspace","startAtLi","liIndex","startAtNonFirstLi","rangeStartNode","previousNode","_handleSelection","parentElementOrNode","_surroundFullyContent","_surroundFullySelectedAnchor","toLocaleLowerCase","_join","startImmutable","endImmutable","_moveMarker","_root","dest","_mergeWithTextNode","appendedNode","_isCaret","systemCommandIsInProgress","createUndoCommand","isModifierKey","isSystem","_toSelectableImmutables","_selectEditorBody","isCharacter","String","fromCharCode","modifier","_getShortcutModifier","navigator","platform","toUpperCase","metaKey","found","matchKey","toolKey","onEndTyping","stopTyping","force","timeout","what","ExportPdfCommand","PrintCommand","CopyFormatCommand","blockStyles","collectStyles","rangeNodes","populateStyles","destination","styleValue","styleKey","attributeKey","styles","nodeStyles","ApplyFormatCommand","removeEmptyElementsFromRange","cleanInlineParents","applyBlockStyles","applyInlineStyles","emptyElements","blockParent","outerWrapper","previousNodes","nextNodes","prevWrapper","nextWrapper","listItems","currentStyle","createdNode","topNode","CopyFormatTool","ApplyFormatTool","LineHeightCommand","LineHeightFormatTool","getKendoComboBox","prefixOptions","DOM","createMark","character","clonedRange","domRect","y","getBoundingClientRect","createElementNS","setAttributeNS","appendSvgMarks","overlay","FormattingMarksCommand","global","math","REGEX_NUMBER_IN_PERCENTAGES","REGEX_NUMBER_IN_PIXELS","STRING","inPercentages","ResizingUtils","constrain","lowerBound","upperBound","getScrollBarWidth","scrollbar","calculatePercentageRatio","total","inPixels","toPercentages","toPixels","KEY_DOWN","MOUSE_LEAVE","MOUSE_UP","TableElementResizing","_attachEventHandlers","eventNamespace","rootElement","_destroyResizeHandle","rtl","handle","dataAttribute","detectElementBorderHovering","resizingInProgress","resizing","handleOptions","tableElement","currentTarget","resizeHandle","elementBorderHovered","showResizeHandle","_initResizeHandle","setResizeHandlePosition","setResizeHandleDimensions","setResizeHandleDataAttributes","_attachResizeHandleEventHandlers","_initResizable","_hideResizeMarker","markerClass","_destroyResizable","Resizable","draggableElement","onResizeStart","onResize","resizeend","onResizeEnd","_disableKeyboard","setResizeHandleDragPosition","_enableKeyboard","_forceResizing","userEvents","ResizingFactory","resizingName","_destroyResizing","_initResizing","parentTable","resizingType","abs","RESIZE_HANDLE_CLASS","RESIZE_MARKER_CLASS","BODY","COLATTR","COMMA","WIDTH","handleWidth","borderOffset","mousePosition","tableInnerElement","tBodies","scrollTopOffset","scrollLeftOffset","columnWidthOffset","scrollBarWidth","columnOffsetLeft","innerElementOffsetTop","tableHead","tableBody","fullHeight","columnWidth","columnLeftOffset","adjacentColumnWidth","resizeHandleOffsetLeft","handleOffset","newWidth","initialAdjacentColumnWidth","initialColumnWidth","nextColumn","rtlModifier","initialDeltaX","initialDelta","_setTableComputedWidth","_setColumnsComputedWidth","_resizeColumn","_resizeTopAndBottomColumns","_resizeAdjacentColumns","innerElementWidth","currentColumnsWidths","topAndBottomColumns","innerTableElement","deltaWidth","adjacentColumns","_resizeAdjacentColumn","adjacentColumn","HEIGHT","handleHeight","rowOffsetLeft","rowOffsetTop","topInnerTableElement","$row","tableTopOffset","resizeHandleOffsetTop","currentRowHeight","initialTableHeight","tableHeadHeight","tableBodyHeight","initialStyleHeight","newRowHeight","_setRowsHeightInPixels","_setTableHeight","_setRowsHeightInPercentages","currentRowsHeights","newHeight","Draggable","DRAG_START","DRAG","DRAG_END","HALF_INSIDE","MOUSE_OVER","MOUSE_OUT","EAST","NORTH","NORTHEAST","NORTHWEST","SOUTH","SOUTHEAST","SOUTHWEST","WEST","ElementResizeHandle","_addStyles","_initDraggable","_initPositioningStrategy","_initDraggingStrategy","resizableElement","_destroyDraggable","_setPosition","_positioningStrategy","getPosition","_onMouseOver","_onMouseOut","HandlePositioningStrategy","_draggable","dragstart","_onDragStart","drag","_onDrag","_onDragEnd","_draggingStrategy","adjustDragDelta","deltaX","deltaY","initialDeltaY","HandleDraggingStrategy","StrategyFactory","_items","register","itemsLength","PositioningStrategyFactory","calculatePosition","handleOffsetPosition","applyHandleOffset","applyScrollOffset","rootLeft","EastPositioningStrategy","NorthPositioningStrategy","NortheastPositioningStrategy","NorthwestPositioningStrategy","SouthPositioningStrategy","SoutheastPositioningStrategy","SouthwestPositioningStrategy","WestPositioningStrategy","DraggingStrategyFactory","adjustment","deltas","xAxisAdjustment","yAxisAdjustment","HorizontalDraggingStrategy","EastDraggingStrategy","WestDraggingStrategy","VerticalDraggingStrategy","NorthDraggingStrategy","SouthDraggingStrategy","HorizontalAndVerticalDraggingStrategy","NorthEastDraggingStrategy","NorthWestDraggingStrategy","SouthEastDraggingStrategy","SouthWestDraggingStrategy","RESIZE_HANDLE_WRAPPER_CLASS","ELEMENT_RESIZING_CLASS","MOUSE_DOWN","ELEMENT_TYPES","isUndefined","ElementResizing","handles","_destroyResizeHandles","appendHandlesTo","_resizeWidth","_resizeHeight","_getMaxDimensionValue","dimension","dimensionLowercase","parentDimension","parentScrollOffset","_initResizeHandles","_bindToResizeHandlesEvents","_onResizeHandleDragStart","_initialElementHeight","_initialElementWidth","_onResizeHandleDrag","_onResizeHandleDragEnd","TableResizing","_hasRowsInPixels","ratioValue","ratioTotalValue","constrainedWidth","styleWidth","currentWidth","parentWidth","_setColumnsWidth","constrainedHeight","styleHeight","currentHeight","parentHeight","hasRowsInPixels","parentColumn","columnsLength","isWidthInPercentages","ImageResizing","_onResizeHandleDragVertical","_onResizeHandleDragHorizontal","_onResizeHandleDragLocked","_getDeltas","initialWidth","initialHeight","MAX_SAFE_INTEGER","factory","hasImg","eventTarget","eventCurrentTarget","isResizeHandleOrChild","tableResizing","cellsFormatFinder","reUnit","COL_INDEX","isTableCellWizard","tableCellWizard","selectedTable","_sourceTable","_selectedTable","selectedCells","_selectedTableCells","_selectedCells","closeCallback","onDialogClose","parseTable","TableWizardDialog","insertTable","createNewTable","updateTable","_ensureFocusableAfterTable","lastSelectedRow","cellProp","tableProp","_lastInCollection","_deleteTableRows","_addRows","_updateColumns","_updateTableProperties","cellProperties","_updateCellProperties","_updateCaption","_updateHeadersWithThead","_updateHeadersNoThead","_updateHeaderAssociates","_isHeadingRow","_isHeadingCell","cellsWithHeadersAssociated","headingIds","checkHeader","header","headersArray","headersAttr","some","_insertCells","insertCell","createTHead","_createTableRows","createTBody","cellsWithHeaders","_addScopes","initialIndex","insertRow","cellsLength","newRowsCount","firstRowLastCell","numberOfColumns","lastCurrentCell","rowColumns","deleteCell","_getStylesData","topCellPadding","_getNumericValue","leftCellPadding","bottomCellPadding","rightCellPadding","tableData","paddingTop","paddingLeft","paddingBottom","paddingRight","captionContent","deleteCaption","createCaption","_getAlignmentData","verticalAlign","_swapToHeaderCells","deleteTHead","_removeScopes","_removeAssociates","headerCols","whiteSpace","widthUnit","heightUnit","backgroundColor","bgColor","borderCollapse","_getTablePositionData","tStyle","captionClone","tableAlignment","_getAlignment","tablePosition","_getTablePosition","numberOfHeaderColumns","tableJson","_getUnit","parseTableRows","rowData","cellData","parseCell","cStyle","horizontalOnly","hAlign","vAlign","collection","TableWizardEditTool","TableCellWizardEditTool","FORM_FIELD_CLASS","INVISIBLE_CLASS","DOT","numericTextBoxSettings","borderStyles","textWrapDropDownSettings","tablePositionDropDownSettings","tableAlignmentDropDownSettings","cellAlignmentDropDownSettings","accessibilityAlignmentDropDownSettings","tablePropertiesDialogTemplate","cellPropertiesDialogTemplate","_openTablePropertiesDialog","closeHandler","_dialogTemplate","collectTableDialogValues","components","_initTabStripComponent","_tablePropertiesForm","_createTablePropertiesForm","_accessibilityPropertiesForm","_createAccessibilityPropertiesForm","_openCellPropertiesDialog","collectCellDialogValues","_cellPropertiesForm","_createCellPropertiesForm","isCellProperties","tabStrip","kendoTabStrip","_collectTableViewValues","_collectAccessibilityViewValues","_collectCellViewValues","tableView","check","cellView","wrapTextValue","accessibilityView","_addUnit","_initNumericTextbox","storage","settings","kendoNumericTextBox","_initDropDownList","kendoDropDownList","_setComponentValue","_initBorderStyleDropDown","_initTablePositionDropDown","_initPositionDropDown","_initTableAlignmentDropDown","_initAlignmentDropDown","_initCellAlignmentDropDown","_initAccessibilityAlignmentDropDown","_initTextWrapDropDown","_initAssociationDropDown","_initColorPicker","kendoColorPicker","clearButton","_initInput","kendoTextBox","_initCheckbox","kendoCheckBox","_initTextArea","kendoTextArea","_destroyComponents","dialogTemplate","_onPaddingTopChange","viewType","topCellPaddingNumeric","topCellPaddingValue","leftCellPaddingNumeric","bottomCellPaddingNumeric","rightCellPaddingNumeric","_cachedPadding","_onPaddingCheckChange","checked","bottomCellPaddingValue","leftCellPaddingValue","rightCellPaddingValue","_onColumnsNumberChange","headerColumnsNumeric","currentNumberOfColumnsHeaders","_onRowsNumberChange","headerRowsNumeric","currentNumberOfRowHeaders","numberOfRows","layout","grid","gutter","layoutWrapper","hint","optional","__meta__","category","description","depends","features","kendo$1"],"mappings":"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","file":"kendo.editor.js","sourcesContent":["import './kendo.combobox.js';\nimport './kendo.dropdownlist.js';\nimport './kendo.resizable.js';\nimport './kendo.window.js';\nimport './kendo.colorpicker.js';\nimport './kendo.imagebrowser.js';\nimport './kendo.numerictextbox.js';\nimport './kendo.textarea.js';\nimport './kendo.core.js';\nimport './kendo.toolbar.js';\nimport './kendo.icons.js';\nimport './kendo.form.js';\nimport './kendo.filebrowser.js';\nimport './kendo.draganddrop.js';\nimport './kendo.html.button.js';\nimport './kendo.tabstrip.js';\n\n(function(kendo) {\n    var UndoRedoStack = kendo.Observable.extend({\n        init: function(options) {\n            kendo.Observable.fn.init.call(this, options);\n            this.clear();\n        },\n        events: [ \"undo\", \"redo\" ],\n        push: function (command) {\n            this.stack = this.stack.slice(0, this.currentCommandIndex + 1);\n            this.currentCommandIndex = this.stack.push(command) - 1;\n        },\n        undo: function () {\n            if (this.canUndo()) {\n                var command = this.stack[this.currentCommandIndex--];\n                command.undo();\n                this.trigger(\"undo\", { command: command });\n            }\n        },\n        redo: function () {\n            if (this.canRedo()) {\n                var command = this.stack[++this.currentCommandIndex];\n                command.redo();\n                this.trigger(\"redo\", { command: command });\n            }\n        },\n        clear: function() {\n            this.stack = [];\n            this.currentCommandIndex = -1;\n        },\n        canUndo: function () {\n            return this.currentCommandIndex >= 0;\n        },\n        canRedo: function () {\n            return this.currentCommandIndex != this.stack.length - 1;\n        }\n    });\n\n    kendo.deepExtend(kendo, {\n        util: {\n            UndoRedoStack: UndoRedoStack\n        }\n    });\n})(kendo);\n\n(function($,undefined$1) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        Widget = kendo.ui.Widget,\n        os = kendo.support.mobileOS,\n        browser = kendo.support.browser,\n        extend = $.extend,\n        deepExtend = kendo.deepExtend,\n        keys = kendo.keys,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        NS = \".kendoEditor\";\n\n    const FORMATTING_MARKS_STYLE_ID = \"formatting-marks-style\",\n          FORMATTING_MARKS_OVERLAY_ID = \"formatting-marks-overlay\",\n          FORMATTING_MARKS_OVERLAY_WRAPPER_ID = \"formatting-marks-overlay-wrapper\";\n\n    var SELECT = \"select\";\n    var SELECT_OVERLAY_SELECTOR = \"select.k-select-overlay\";\n    var PLACEHOLDER_CLASS = \"k-placeholder\";\n    var PLACEHOLDER_TAG_ID = \"placeholder\";\n    var REFRESH_INTERVAL = 200;\n    var DEFAULT_LANGUAGE = \"en\";\n\n    var NATIVE_TOOLS = [\n        \"insertLineBreak\",\n        \"insertParagraph\",\n        \"redo\",\n        \"undo\",\n        \"autoLink\"\n    ];\n\n    var EditorUtils = {\n        editorWrapperTemplate: () =>\n            '<div class=\"k-editor\">' +\n                '<div class=\"k-editor-toolbar\" role=\"toolbar\"></div>' +\n                '<div class=\"k-editable-area k-editor-content\"></div>' +\n            '</div>',\n\n        formatByName: function(name, format) {\n            for (var i = 0; i < format.length; i++) {\n                if ($.inArray(name, format[i].tags) >= 0) {\n                    return format[i];\n                }\n            }\n        },\n\n        getToolCssClass: function(name, icon) {\n            var toolCssClassNames = {\n                superscript: \"supscript\",\n                subscript: \"subscript\",\n                justifyLeft: \"align-left\",\n                justifyCenter: \"align-center\",\n                justifyRight: \"align-right\",\n                justifyFull: \"align-justify\",\n                insertUnorderedList: \"list-unordered\",\n                insertOrderedList: \"list-ordered\",\n                insertUpperRomanList: \"list-roman-upper\",\n                insertLowerRomanList: \"list-roman-lower\",\n                \"import\": \"import\",\n                indent: \"indent\",\n                outdent: \"outdent\",\n                createLink: \"link\",\n                unlink: \"unlink\",\n                insertImage: \"image\",\n                insertFile: \"file-add\",\n                viewHtml: \"code\",\n                foreColor: \"foreground-color\",\n                backColor: \"droplet\",\n                createTable: \"table-add\",\n                addColumnLeft: \"table-column-insert-left\",\n                addColumnRight: \"table-column-insert-right\",\n                addRowAbove: \"table-row-insert-above\",\n                addRowBelow: \"table-row-insert-below\",\n                deleteRow: \"table-row-delete\",\n                deleteColumn: \"table-column-delete\",\n                mergeCellsHorizontally: \"cells-merge-horizontally\",\n                mergeCellsVertically: \"cells-merge-vertically\",\n                splitCellHorizontally: \"cell-split-horizontally\",\n                splitCellVertically: \"cell-split-vertically\",\n                tableProperties: \"table-properties\",\n                tableCellProperties: \"table-cell-properties\",\n                tableWizardInsert: \"table-wizard\",\n                tableAlignLeft: \"table-position-start\",\n                tableAlignCenter: \"table-position-center\",\n                tableAlignRight: \"table-position-end\",\n                cleanFormatting: \"clear-css\",\n                copyFormat: \"copy-format\",\n                applyFormat: \"apply-format\",\n                pdf: \"file-pdf\"\n            };\n\n            var cssClass = toolCssClassNames[name];\n\n            if (cssClass) {\n                return cssClass;\n            }\n\n            if (icon) {\n                return icon;\n            }\n\n            return EditorUtils.nameToKebab(name);\n        },\n\n        nameToKebab: function(name) {\n            return name.replace(/([a-z])([A-Z])/g, \"$1-$2\")\n                .replace(/[\\s_]+/g, '-')\n                .toLowerCase();\n        },\n\n        registerTool: function(toolName, tool) {\n            if (!tool.name) {\n                tool.options.name = toolName;\n                tool.name = toolName.toLowerCase();\n            }\n\n            if (!tool.options.ui) {\n                tool.options.ui = {};\n            }\n\n            tool.options.ui.command = toolName;\n\n            Editor.defaultTools[toolName] = tool;\n        },\n\n        registerFormat: function(formatName, format) {\n            Editor.fn.options.formats[formatName] = format;\n        },\n\n        cacheComments: function(content, comments) {\n            for (var index in comments) {\n                content = content.replace(comments[index], \"{\" + index + \"}\");\n            }\n            return content;\n        },\n\n        retrieveComments: function(content, comments) {\n            for (var index in comments) {\n                content = content.replace(\"{\" + index + \"}\", comments[index]);\n            }\n            return content;\n        }\n    };\n\n    var messages = {\n        auto: \"Auto\",\n        bold: \"Bold\",\n        italic: \"Italic\",\n        underline: \"Underline\",\n        strikethrough: \"Strikethrough\",\n        superscript: \"Superscript\",\n        subscript: \"Subscript\",\n        fitToCell: \"Fit to cell\",\n        justifyCenter: \"Center text\",\n        justifyLeft: \"Align text left\",\n        justifyRight: \"Align text right\",\n        justifyFull: \"Justify\",\n        insertUnorderedList: \"Insert unordered list\",\n        insertOrderedList: \"Insert ordered list\",\n        lineHeight: \"Set line height\",\n        formattingMarks: \"Toggle formatting marks\",\n        indent: \"Indent\",\n        outdent: \"Outdent\",\n        createLink: \"Insert hyperlink\",\n        unlink: \"Remove hyperlink\",\n        insertImage: \"Insert image\",\n        insertFile: \"Insert file\",\n        insertHtml: \"Insert HTML\",\n        viewHtml: \"View HTML\",\n        fontName: \"Select font family\",\n        fontNameInherit: \"(inherited font)\",\n        fontSize: \"Select font size\",\n        fontSizeInherit: \"(inherited size)\",\n        formatBlock: \"Format\",\n        formatting: \"Format\",\n        foreColor: \"Color\",\n        backColor: \"Background color\",\n        style: \"Styles\",\n        emptyFolder: \"Empty Folder\",\n        editAreaTitle: \"Editable area. Press F10 for toolbar.\",\n        uploadFile: \"Upload\",\n        overflowAnchor: \"More tools\",\n        orderBy: \"Arrange by:\",\n        orderBySize: \"Size\",\n        orderByName: \"Name\",\n        invalidFileType: \"The selected file \\\"{0}\\\" is not valid. Supported file types are {1}.\",\n        deleteFile: 'Are you sure you want to delete \"{0}\"?',\n        overwriteFile: 'A file with name \"{0}\" already exists in the current directory. Do you want to overwrite it?',\n        directoryNotFound: \"A directory with this name was not found.\",\n        imageWebAddress: \"Web address\",\n        imageAltText: \"Alternate text\",\n        imageWidth: \"Width (px)\",\n        imageHeight: \"Height (px)\",\n        fileWebAddress: \"Web address\",\n        fileTitle: \"Title\",\n        fileText: \"Text\",\n        linkWebAddress: \"Web address\",\n        linkText: \"Text\",\n        linkToolTip: \"ToolTip\",\n        linkOpenInNewWindow: \"Open link in new window\",\n        dialogUpdate: \"Update\",\n        dialogInsert: \"Insert\",\n        dialogOk: \"Confirm\",\n        dialogCancel: \"Cancel\",\n        cleanFormatting: \"Clean formatting\",\n        createTable: \"Create a table\",\n        createTableHint: \"Create a {0} x {1} table\",\n        addColumnLeft: \"Add column on the left\",\n        addColumnRight: \"Add column on the right\",\n        addRowAbove: \"Add row above\",\n        addRowBelow: \"Add row below\",\n        deleteRow: \"Delete row\",\n        deleteColumn: \"Delete column\",\n        mergeCellsHorizontally: \"Merge cells horizontally\",\n        mergeCellsVertically: \"Merge cells vertically\",\n        splitCellHorizontally: \"Split cells horizontally\",\n        splitCellVertically: \"Split cells vertically\",\n        tableAlignLeft: \"Table Align Left\",\n        tableAlignCenter: \"Table Align Center\",\n        tableAlignRight: \"Table Align Right\",\n        tableWizard: \"Table Wizard\",\n        tableProperties: \"Table Properties\",\n        tableCellProperties: \"Cell Properties\",\n        tableTab: \"General\",\n        cellTab: \"Cell\",\n        accessibilityTab: \"Advanced\",\n        caption: \"Caption\",\n        summary: \"Summary\",\n        width: \"Width\",\n        height: \"Height\",\n        units: \"Units\",\n        cellSpacing: \"Cell Spacing\",\n        cellPadding: \"Cell Padding\",\n        topPadding: \"Top\",\n        leftPadding: \"Left\",\n        bottomPadding: \"Bottom\",\n        rightPadding: \"Right\",\n        independentCellPaddings: \"Independent Cell Paddings\",\n        cellMargin: \"Cell Margin\",\n        alignment: \"Alignment\",\n        captionAlignment: \"Caption alignment\",\n        position: \"Position\",\n        background: \"Background\",\n        tableBackground: \"Table background\",\n        cssClass: \"CSS Class\",\n        id: \"ID\",\n        border: \"Border\",\n        borderStyle: \"Border Style\",\n        borderWidth: \"Border Width\",\n        borderColor: \"Border Color\",\n        collapseBorders: \"Collapse borders\",\n        wrapText: \"Wrap text\",\n        associateCellsWithHeaders: \"Associate headers\",\n        alignLeft: \"Align Left\",\n        alignCenter: \"Align Center\",\n        alignRight: \"Align Right\",\n        alignLeftTop: \"Align Left Top\",\n        alignCenterTop: \"Align Center Top\",\n        alignRightTop: \"Align Right Top\",\n        alignLeftMiddle: \"Align Left Middle\",\n        alignCenterMiddle: \"Align Center Middle\",\n        alignRightMiddle: \"Align Right Middle\",\n        alignLeftBottom: \"Align Left Bottom\",\n        alignCenterBottom: \"Align Center Bottom\",\n        alignRightBottom: \"Align Right Bottom\",\n        alignRemove: \"Remove Alignment\",\n        columns: \"Columns\",\n        rows: \"Rows\",\n        selectAllCells: \"Apply to all cells\",\n        applyToColumn: \"apply to column\",\n        applyToRow: \"apply to row\",\n        exportAs: \"Export As\",\n        \"import\": \"Import\",\n        print: \"Print\",\n        headerRows: \"Header Rows\",\n        headerColumns: \"Header Cols\",\n        tableSummaryPlaceholder: \"Summary attribute is not HTML5 compatible.\",\n        associateNone: \"None\",\n        associateScope: \"Associate using 'scope' attribute\",\n        associateIds: \"Associate using Ids\",\n        copyFormat: \"Copy format\",\n        applyFormat: \"Apply format\",\n        borderNone: \"None\",\n        undo: \"Undo\",\n        redo: \"Redo\"\n    };\n\n    var supportedContentEditable = typeof(document.documentElement.contentEditable) != 'undefined';\n\n    var toolGroups = {\n        basic: [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n        undo: [\"undo\", \"redo\"],\n        scripts: [\"subscript\", \"superscript\" ],\n        alignment: [\"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\" ],\n        lines: [\"lineHeight\"],\n        symbols: [\"formattingMarks\"],\n        links: [\"insertImage\", \"insertFile\", \"createLink\", \"unlink\"],\n        lists: [\"insertUnorderedList\", \"insertOrderedList\", \"insertUpperRomanList\", \"insertLowerRomanList\",],\n        dent: [\"indent\", \"outdent\"],\n        tablesWizard: [\"tableProperties\", \"tableCellProperties\"],\n        tablesInsert: [\"createTable\"],\n        tablesAddDelete: [ \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\" ],\n        tablesMerge: [ \"mergeCellsHorizontally\", \"mergeCellsVertically\", \"splitCellHorizontally\", \"splitCellVertically\" ],\n        tablesPosition: [ \"tableAlignLeft\", \"tableAlignCenter\", \"tableAlignRight\" ],\n        formatPainter: [ \"copyFormat\", \"applyFormat\" ]\n    };\n\n    var Editor = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                editorNS = kendo.ui.editor,\n                dom = editorNS.Dom,\n                toolbarContainer,\n                type, domElement;\n\n            /* suppress initialization in devices w/o proper contenteditable support */\n            if (!supportedContentEditable) {\n                return;\n            }\n\n            Widget.fn.init.call(that, element, options);\n\n            that.options = deepExtend({}, that.options, options);\n\n            element = that.element;\n            domElement = element[0];\n            type = dom.name(domElement);\n\n            this._registerHandler(\n                element.closest(\"form\"), \"submit\", that.update.bind(that, undefined$1)\n            );\n\n            toolbarContainer = that._setupType(element);\n\n            that._initToolbar(toolbarContainer);\n            that._setupHeight(type);\n            that._resizable();\n            that._initializeContentElement(that);\n            that._setupKeyboard();\n\n            that.clipboard = new editorNS.Clipboard(this);\n            that.undoRedoStack = new kendo.util.UndoRedoStack();\n\n            that._populateValue(options, domElement);\n\n            that._registerHandler(document, {\n                \"mousedown\": function() { that._endTyping(); },\n                \"mouseup\": function(e) { that._mouseup(e); }\n            });\n\n            that._registerHandler(window, \"resize\", that._handleSpaceAndNewLines.bind(that));\n\n            that._initializeImmutables();\n\n            if (type == \"textarea\") {\n                that._ariaLabel(that.wrapper.find(\"iframe\"));\n            }\n\n            that.toolbar.resize();\n\n            kendo.notify(that);\n\n            if (that._showWatermarkOverlay) {\n                that._showWatermarkOverlay((that.wrapper && that.wrapper[0]) || that.element[0]);\n            }\n        },\n\n        events: [\n            \"select\",\n            \"change\",\n            \"execute\",\n            \"error\",\n            \"paste\",\n            \"keydown\",\n            \"keyup\"\n        ],\n\n        options: {\n            name: \"Editor\",\n            messages: messages,\n            placeholder: \"\",\n            nonce: \"\",\n            unsafeInline: true,\n            formats: {},\n            encoded: true,\n            formattingMarksRefreshDelay: 250,\n            domain: null,\n            resizable: false,\n            deserialization: {\n                custom: null\n            },\n            serialization: {\n                entities: true,\n                semantic: true,\n                scripts: false,\n                optimizeTags: false,\n                keepEOL: false\n            },\n            pasteCleanup: {\n                all: false,\n                css: false,\n                custom: null,\n                keepNewLines: false,\n                msAllFormatting: false,\n                msConvertLists: true,\n                msTags: true,\n                none: false,\n                span: false\n            },\n            stylesheets: [],\n            dialogOptions: {\n                modal: true, resizable: false, draggable: true,\n                animation: false\n            },\n            imageBrowser: null,\n            fileBrowser: null,\n            navigateOnTab: false,\n            fontName: [\n                { text: \"Arial\", value: \"Arial, Helvetica, sans-serif\" },\n                { text: \"Courier New\", value: \"\\\"Courier New\\\", Courier, monospace\" },\n                { text: \"Georgia\", value: \"Georgia, serif\" },\n                { text: \"Impact\", value: \"Impact, Charcoal, sans-serif\" },\n                { text: \"Lucida Console\", value: \"\\\"Lucida Console\\\", Monaco, monospace\" },\n                { text: \"Tahoma\", value: \"Tahoma, Geneva, sans-serif\" },\n                { text: \"Times New Roman\", value: \"\\\"Times New Roman\\\", Times, serif\" },\n                { text: \"Trebuchet MS\", value: \"\\\"Trebuchet MS\\\", Helvetica, sans-serif\" },\n                { text: \"Verdana\", value: \"Verdana, Geneva, sans-serif\" }\n            ],\n            fontSize: [\n                { text: \"1 (8pt)\", value: \"xx-small\" },\n                { text: \"2 (10pt)\", value: \"x-small\" },\n                { text: \"3 (12pt)\", value: \"small\" },\n                { text: \"4 (14pt)\", value: \"medium\" },\n                { text: \"5 (18pt)\", value: \"large\" },\n                { text: \"6 (24pt)\", value: \"x-large\" },\n                { text: \"7 (36pt)\", value: \"xx-large\" }\n            ],\n            formatBlock: [\n                { text: \"Paragraph\", value: \"p\" },\n                { text: \"Quotation\", value: \"blockquote\" },\n                { text: \"Heading 1\", value: \"h1\" },\n                { text: \"Heading 2\", value: \"h2\" },\n                { text: \"Heading 3\", value: \"h3\" },\n                { text: \"Heading 4\", value: \"h4\" },\n                { text: \"Heading 5\", value: \"h5\" },\n                { text: \"Heading 6\", value: \"h6\" }\n            ],\n            tools: [\n                \"formatting\",\n                \"bold\",\n                \"italic\",\n                \"underline\",\n                \"undo\",\n                \"redo\",\n                \"justifyLeft\",\n                \"justifyCenter\",\n                \"justifyRight\",\n                \"copyFormat\",\n                \"applyFormat\",\n                \"insertUnorderedList\",\n                \"insertOrderedList\",\n                \"indent\",\n                \"outdent\",\n                \"createLink\",\n                \"unlink\",\n                \"insertImage\",\n                \"tableProperties\",\n                \"tableCellProperties\",\n                \"createTable\",\n                \"addRowAbove\",\n                \"addRowBelow\",\n                \"addColumnLeft\",\n                \"addColumnRight\",\n                \"deleteRow\",\n                \"deleteColumn\",\n                \"mergeCellsHorizontally\",\n                \"mergeCellsVertically\",\n                \"splitCellHorizontally\",\n                \"splitCellVertically\",\n                \"tableAlignLeft\",\n                \"tableAlignCenter\",\n                \"tableAlignRight\"\n            ]\n        },\n\n        destroy: function() {\n            var editor = this;\n\n            Widget.fn.destroy.call(this);\n\n            this._endTyping(true);\n\n            this._deregisterHandlers();\n\n            clearTimeout(this._spellCorrectTimeout);\n\n            this._focusOutside();\n\n            this.toolbar.destroy();\n\n            if (this.windowInstance) {\n                this.windowInstance.destroy();\n            }\n            if (this.tablePopup) {\n                this.tablePopup.destroy();\n            }\n\n            editor._destroyUploadWidget();\n\n            if (this.resizeObserver) {\n                this.resizeObserver.disconnect();\n                this.resizeObserver = null;\n                this.wrapper.css(\"min-height\", \"\");\n                this.wrapper.css(\"max-height\", \"\");\n            }\n\n            editor._destroyResizings();\n\n            editor._destroyFormattingMarksOverlay();\n\n            kendo.destroy(this.wrapper);\n        },\n\n        setOptions: function(options) {\n            var editor = this;\n\n            Widget.fn.setOptions.call(editor, options);\n\n            if (options.tools) {\n                this._setOptionsTools(options.tools);\n            }\n\n            this._initializePlaceholder();\n        },\n\n        createRange: function(document) {\n            return kendo.ui.editor.RangeUtils.createRange(document || this.document);\n        },\n\n        encodedValue: function() {\n            return kendo.ui.editor.Dom.encode(this.value());\n        },\n\n        exec: function(name, params) {\n            var that = this;\n            var command = null;\n            var defaultTools = kendo.ui.Editor.defaultTools;\n            var range, tool, prevented;\n\n            if (!name) {\n                throw new Error(\"kendoEditor.exec(): `name` parameter cannot be empty\");\n            }\n\n            if (that.body.getAttribute(\"contenteditable\") !== \"true\" &&\n                name !== \"print\" &&\n                name !== \"pdf\" &&\n                name !== \"exportAs\") {\n                return false;\n            }\n\n            if (!that.keyboard.isTypingInProgress()) {\n                that._focusBody();\n                that.selectRange(that._range || that.getRange());\n            }\n\n            tool = that.tools[name] || defaultTools[name];\n\n            if (!tool) {\n                Object.keys(defaultTools).map(key => {\n                    if (key.toLowerCase() === name) {\n                        tool = defaultTools[key];\n                    }\n                });\n            }\n\n            if (tool) {\n                range = that.getRange();\n\n                if (tool.command) {\n                    command = tool.command(extend({ range: range, body: that.body, immutables: !!that.immutables }, params));\n                }\n\n                prevented = that.trigger(\"execute\", { name: name, command: command });\n\n                if (prevented) {\n                    return;\n                }\n\n                if (/^(undo|redo)$/i.test(name)) {\n                    that.undoRedoStack[name]();\n                } else if (command) {\n                    that.execCommand(command);\n\n                    if (command.async) {\n                        command.change = that._selectionChange.bind(that);\n                        return;\n                    }\n                }\n\n                that._handleSpaceAndNewLines();\n                that._selectionChange();\n            }\n        },\n\n        execCommand: function(command) {\n            if (!command.managesUndoRedo) {\n                this.undoRedoStack.push(command);\n            }\n\n            command.editor = this;\n            command.exec();\n        },\n\n        focus: function() {\n            this.restoreSelection();\n        },\n\n        getRange: function() {\n            var selection = this.getSelection(),\n                range = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : this.createRange(),\n                doc = this.document;\n\n            if (range.startContainer == doc && range.endContainer == doc && !range.startOffset && !range.endOffset) {\n                range.setStart(this.body, 0);\n                range.collapse(true);\n            }\n\n            return range;\n        },\n\n        getSelection: function() {\n            return kendo.ui.editor.SelectionUtils.selectionFromDocument(this.document);\n        },\n\n        paste: function(html, options) {\n            this.focus();\n\n            var command = new kendo.ui.editor.InsertHtmlCommand($.extend({\n                range: this.getRange(),\n                html: html\n            }, options));\n\n            command.editor = this;\n\n            command.exec();\n        },\n\n        refresh: function() {\n            var that = this;\n\n            if (that.textarea) {\n                that._destroyResizings();\n                // preserve updated value before re-initializing\n                // don't use update() to prevent the editor from encoding the content too early\n                var value = that.value();\n                that.textarea.val(value);\n                that.wrapper.find(\"iframe\").remove();\n                that._initializeContentElement(that);\n                that.value(value);\n            }\n        },\n\n        restoreSelection: function() {\n            this._focusBody();\n\n            if (this.selectionRestorePoint) {\n                this.selectRange(this.selectionRestorePoint.toRange());\n            }\n        },\n\n        saveSelection: function(range) {\n            range = range || this.getRange();\n            var container = range.commonAncestorContainer,\n                body = this.body;\n\n            if (container == body || $.contains(body, container)) {\n                this.selectionRestorePoint = new kendo.ui.editor.RestorePoint(range, body);\n            }\n        },\n\n        selectedHtml: function() {\n            return kendo.ui.editor.Serializer.domToXhtml(this.getRange().cloneContents());\n        },\n\n        selectRange: function(range) {\n            this._focusBody();\n            var selection = this.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n            this.saveSelection(range);\n        },\n\n        state: function(toolName) {\n            var tool = kendo.ui.Editor.defaultTools[toolName];\n            var finder = tool && (tool.options.finder || tool.finder);\n            var RangeUtils = kendo.ui.editor.RangeUtils;\n            var range, textNodes;\n\n            if (finder) {\n                range = this.getRange();\n\n                textNodes = RangeUtils.textNodes(range);\n\n                if (!textNodes.length && range.collapsed) {\n                    textNodes = [range.startContainer];\n                }\n\n                return finder.getFormat ? finder.getFormat(textNodes) : finder.isFormatted(textNodes);\n            }\n\n            return false;\n        },\n\n        update: function(value) {\n            value = value || this.options.encoded ? this.encodedValue() : this.value();\n\n            if (this.textarea) {\n                this.textarea.val(value);\n                this._togglePlaceholder(!value.trim());\n            } else {\n                this._oldValue = value;\n            }\n        },\n\n        value: function(html) {\n            var body = this.body,\n                editorNS = kendo.ui.editor,\n                options = this.options,\n                currentHtml = editorNS.Serializer.domToXhtml(body, options.serialization);\n\n            if (html === undefined$1) {\n                return currentHtml;\n            }\n\n            if (html == currentHtml) {\n                return;\n            }\n\n            editorNS.Serializer.htmlToDom(html, body, options.deserialization);\n\n            this.selectionRestorePoint = null;\n            this.update();\n            this._refreshTools();\n        },\n\n        _bindTools: function() {\n            var that = this,\n                defaultTools = this.tools;\n\n            that.unbind(\"select\", that.toolbar.resize.bind(that.toolbar));\n\n            that.toolbar.element.find(\"[data-command]\")\n                .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                .each((i, el) => {\n                    var toolName = el.getAttribute(\"data-command\"),\n                        tool = defaultTools[toolName];\n\n                    if (tool && tool.initialize) {\n                        tool.initialize($(el), that);\n                    }\n                });\n\n            that.bind(\"select\", that.toolbar.resize.bind(that.toolbar));\n        },\n\n        _blur: function() {\n            var textarea = this.textarea;\n            var old = textarea ? textarea.val() : this._oldValue;\n            var value = this.options.encoded ? this.encodedValue() : this.value();\n\n            this.update();\n\n            if (textarea) {\n                textarea.trigger(\"blur\");\n            }\n\n            if (value != old) {\n                this.trigger(\"change\");\n                if (textarea) {\n                    textarea.trigger(\"change\");\n                }\n            }\n        },\n\n        _containsRange: function(range) {\n            var dom = kendo.ui.editor.Dom;\n            var body = this.body;\n            return range && dom.isAncestorOrSelf(body, range.startContainer) &&\n                dom.isAncestorOrSelf(body, range.endContainer);\n        },\n\n        _createContentElement: function(stylesheets) {\n            var editor = this;\n            var iframe, wnd, doc;\n            var textarea = editor.textarea;\n            var specifiedDomain = editor.options.domain;\n            var domain = specifiedDomain || document.domain;\n            var domainScript = \"\";\n            var src = 'javascript:\"\"';\n            var lang = \"\";\n\n            textarea.hide();\n\n            iframe = $(\"<iframe />\", { title: editor.options.messages.editAreaTitle, frameBorder: \"0\" })[0];\n\n            $(iframe)\n                .css(\"display\", \"\")\n                .addClass(\"k-content k-iframe\")\n                .attr(\"tabindex\", textarea[0].tabIndex)\n                .insertBefore(textarea);\n\n            // automatically relax same-origin policy if document.domain != location.hostname,\n            // or forcefully relax if options.domain is specified (for document.domain = document.domain scenario)\n            if (specifiedDomain || domain != location.hostname) {\n                // relax same-origin policy\n                domainScript = `<script ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>document.domain=\"${domain}\"</script>`;\n                src = \"javascript:document.write('\" + domainScript + \"')\";\n                iframe.src = src;\n            }\n\n            if (!iframe.src) {\n                iframe.src = \"\";\n            }\n\n            wnd = iframe.contentWindow || iframe;\n            doc = wnd.document || iframe.contentDocument;\n\n            $(iframe).one(\"load\", function() {\n                editor._decorateFormatting(doc.body);\n            });\n\n            lang = document.getElementsByTagName(\"html\")[0].getAttribute(\"lang\") || DEFAULT_LANGUAGE;\n\n            doc.open();\n            doc.write(\n                \"<!DOCTYPE html><html lang='\" + lang + \"'><head>\" +\n                \"<meta charset='utf-8' />\" +\n                \"<title>Kendo UI Editor content</title>\" +\n                `<style ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>` +\n                    \"html{padding:0;margin:0;height:100%;min-height:100%;cursor:text;}\" +\n                    \"body{padding:0;margin:0;}\" +\n                    \"body{box-sizing:border-box;font-size:12px;font-family:Verdana,Geneva,sans-serif;margin-top:-1px;padding:5px .4em 0;\" +\n                    \"word-wrap: break-word;-webkit-nbsp-mode: space;-webkit-line-break: after-white-space;\" +\n                    (kendo.support.isRtl(textarea) ? \"direction:rtl;\" : \"\") +\n                    (os.ios ? \"word-break:keep-all;\" : \"\") +\n                    (browser.edge || browser.chrome ? \"height:100%;\" : \"\") +\n                    \"}\" +\n                    \"h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em}h3{font-size:1.16em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.7em}\" +\n                    \"p{margin:0 0 1em;}.k-marker{display:none;}.k-paste-container,.Apple-style-span{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}\" +\n                    \"ul,ol{padding-left:2.5em}\" +\n                    \"span{-ms-high-contrast-adjust:none;}\" +\n                    \"a{color:#00a}\" +\n                    \"code{font-size:1.23em}\" +\n                    \"telerik\\\\3Ascript{display: none;}\" +\n                    \".k-table{width:100%;border-spacing:0;margin: 0 0 1em;}\" +\n                    \".k-table td{min-width:1px;padding:.2em .3em;}\" +\n                    \".k-table,.k-table td{outline:0;border: 1px dotted #ccc;}\" +\n                    \".k-table th{outline:0;border: 1px dotted #999;}\" +\n                    \".k-table p{margin:0;padding:0;}\" +\n                    \".k-column-resize-handle-wrapper {position: absolute; height: 10px; width:10px; cursor: col-resize; z-index: 2;}\" +\n                    \".k-column-resize-handle {width: 100%; height: 100%;}\" +\n                    \".k-column-resize-handle > .k-column-resize-marker {width:2px; height:100%; margin:0 auto; background-color:#00b0ff; display:none; opacity:0.8;}\" +\n                    \".k-row-resize-handle-wrapper {position: absolute; cursor: row-resize; z-index:2; width: 10px; height: 10px;}\" +\n                    \".k-row-resize-handle {display: table; width: 100%; height: 100%;}\" +\n                    \".k-row-resize-marker-wrapper{display: table-cell; height:100%; width:100%; margin:0; padding:0; vertical-align: middle;}\" +\n                    \".k-row-resize-marker{margin: 0; padding:0; width:100%; height:2px; background-color: #00b0ff; opacity:0.8; display:none;}\" +\n                    \".k-element-resize-handle-wrapper {position: absolute; background-color: #fff; border: 1px solid #000; z-index: 100; width: 5px; height: 5px;}\" +\n                    \".k-element-resize-handle {width: 100%; height: 100%;}\" +\n                    \".k-element-resize-handle.k-resize-east{cursor:e-resize;}\" +\n                    \".k-element-resize-handle.k-resize-north{cursor:n-resize;}\" +\n                    \".k-element-resize-handle.k-resize-northeast{cursor:ne-resize;}\" +\n                    \".k-element-resize-handle.k-resize-northwest{cursor:nw-resize;}\" +\n                    \".k-element-resize-handle.k-resize-south{cursor:s-resize;}\" +\n                    \".k-element-resize-handle.k-resize-southeast{cursor:se-resize;}\" +\n                    \".k-element-resize-handle.k-resize-southwest{cursor:sw-resize;}\" +\n                    \".k-element-resize-handle.k-resize-west{cursor:w-resize;}\" +\n                    \".k-table.k-element-resizing{opacity:0.6;}\" +\n                    \".k-placeholder{color:grey}\" +\n                    \"k\\\\:script{display:none;}\" +\n                \"</style>\" +\n                domainScript +\n                $.map(stylesheets, function(href) {\n                    return `<link rel='stylesheet' href='${href}' ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>`;\n                }).join(\"\") +\n                \"</head><body autocorrect='off' contenteditable='true'></body></html>\"\n            );\n            doc.close();\n\n            return wnd;\n        },\n\n        _deleteSavedRange: function() {\n            if (\"_range\" in this) {\n                delete this._range;\n            }\n        },\n\n        _decorateFormatting: function(body) {\n            var formattingElement = this.toolbar.element.find(\"input[data-command=formatting]\"),\n                dom = kendo.ui.editor.Dom,\n                component, dataSource, items, i, tag, className, style;\n\n            if (formattingElement.length) {\n                component = formattingElement.getKendoDropDownList();\n                if (!component) {\n                    return;\n                }\n                dataSource = component.dataSource;\n                items = dataSource.data();\n\n                if (body) {\n                    component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n                }\n\n                if (this.options.unsafeInline !== false) {\n\n                    for (i = 0; i < items.length; i++) {\n                        tag = items[i].tag || \"span\";\n                        className = items[i].className;\n\n                        style = dom.inlineStyle(body, tag, { className: className });\n                        style = style.replace(/\"/g, \"'\");\n\n                        items[i].style = style + \";display:inline-block\";\n                    }\n                }\n\n                dataSource.trigger(\"change\");\n            }\n        },\n\n        _appendFormattingMarksStyles: function() {\n            const that = this;\n\n            let style, $head;\n\n            style = `<style id='${FORMATTING_MARKS_STYLE_ID}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\" } >\n                p::after,li::after,h1::after,h2::after,h3::after,h4::after,h5::after,h6::after {content: '\\\\00B6'; color: #6098f2;}\n                #${FORMATTING_MARKS_OVERLAY_WRAPPER_ID} {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    height: 99%;\n                    z-index: 9999;\n                    pointer-events: none;\n                }\n                #${FORMATTING_MARKS_OVERLAY_ID} {\n                    width: 100%;\n                    height: 99%;\n                    overflow: visible;\n                  }\n            </style>`;\n\n            $head = $(that.document.head);\n            $head.find(\"#\" + FORMATTING_MARKS_STYLE_ID).remove();\n            $head.append(style);\n        },\n\n        _appendFormattingMarksOverlay: function() {\n            const that = this;\n\n            that._formattingMarksOverlay = $(that.document)\n            .find(\"html\")\n            .append(`<div id='${FORMATTING_MARKS_OVERLAY_WRAPPER_ID}'><svg id='${FORMATTING_MARKS_OVERLAY_ID}'></svg><div>`)\n            .find(\"#\" + FORMATTING_MARKS_OVERLAY_ID);\n        },\n\n        _destroyFormattingMarksOverlay: function() {\n            const that = this;\n\n            $(that.document).find(\"#\" + FORMATTING_MARKS_OVERLAY_ID).remove();\n            $(that.document.head).find(\"#\" + FORMATTING_MARKS_STYLE_ID).remove();\n        },\n\n        _deregisterHandlers: function() {\n            var handlers = this._handlers;\n\n            for (var i = 0; i < handlers.length; i++) {\n                var h = handlers[i];\n                h.element.off(h.type, h.handler);\n            }\n\n            this._handlers = [];\n        },\n\n        _destroyUploadWidget: function() {\n            var editor = this;\n            if (editor._uploadWidget) {\n                editor._uploadWidget.destroy();\n                editor._uploadWidget = null;\n            }\n        },\n\n        _endTyping: function() {\n            var keyboard = this.keyboard;\n\n            try {\n                if (keyboard.isTypingInProgress()) {\n                    keyboard.endTyping(true);\n                    this.saveSelection();\n                }\n            } catch (e) { }\n        },\n\n        _focusBody: function() {\n            var body = this.body;\n            var iframe = this.wrapper && this.wrapper.find(\"iframe\")[0];\n            var documentElement = this.document.documentElement;\n            var activeElement = kendo._activeElement();\n            var scrollTop;\n\n\n            if (!iframe && body.scrollHeight > body.clientHeight) {\n                scrollTop = body.scrollTop;\n                body.focus();\n                body.scrollTop = scrollTop;\n\n            } else if (activeElement != body && activeElement != iframe) {\n                scrollTop = documentElement.scrollTop;\n                body.focus();\n                documentElement.scrollTop = scrollTop;\n            }\n        },\n\n        _focusOutside: function() {\n            // move focus outside the Editor, see https://github.com/telerik/kendo/issues/3673\n            if (kendo.support.browser.msie && this.textarea) {\n                var tempInput = $(\"<input />\")\n                    .css({\n                        position: \"fixed\",\n                        left: \"1px\",\n                        top: \"1px\",\n                        width: \"1px\",\n                        height: \"1px\",\n                        \"font-size\": \"0\",\n                        border: \"0\",\n                        opacity: \"0\"\n                })\n                .appendTo(document.body).trigger(\"focus\");\n                tempInput.trigger(\"blur\").remove();\n            }\n        },\n\n        _handleToolbarClick: function(e) {\n            var toolName = e.target.data(\"command\");\n\n            if (toolName && toolName !== \"createTable\") {\n                this.exec(toolName);\n            }\n        },\n\n        _immutablesContext: function(range) {\n            var editorNS = kendo.ui.editor;\n\n            if (this.options.immutables) {\n                if (range.collapsed) {\n                    return editorNS.Immutables.immutablesContext(range);\n                } else {\n                    return editorNS.RangeUtils.editableTextNodes(range).length === 0;\n                }\n            }\n        },\n\n        _initializeContentElement: function() {\n            var editor = this;\n            var doc;\n            var blurTrigger;\n            var mousedownTrigger;\n\n            if (editor.textarea) {\n                editor.window = editor._createContentElement(editor.options.stylesheets);\n                doc = editor.document = editor.window.contentDocument || editor.window.document;\n\n                // Ensure that body exists as various Firefox plugins can cause a delay of the body creation\n                // https://github.com/telerik/kendo-ui-core/issues/3515\n                if (!doc.body) {\n                    var body = doc.createElement(\"body\");\n                    body.setAttribute(\"contenteditable\", \"true\");\n                    body.setAttribute(\"autocorrect\", \"off\");\n                    doc.getElementsByTagName(\"html\")[0].appendChild(body);\n\n                    var interval = setInterval(function() {\n                        if ($(editor.document).find(\"body\").length > 1) {\n                            $(editor.document).find(\"body\").last().remove();\n                            window.clearInterval(interval);\n                        }\n                    },10);\n                }\n\n                editor.body = doc.body;\n\n                blurTrigger = editor.window;\n                mousedownTrigger = doc;\n\n                this._registerHandler(doc, \"mouseup\", this._mouseup.bind(this));\n            } else {\n                editor.window = window;\n                doc = editor.document = document;\n                editor.body = editor.element[0];\n\n                blurTrigger = editor.body;\n                mousedownTrigger = editor.body;\n\n                setTimeout(() => {\n                    editor._decorateFormatting(editor.body);\n                });\n            }\n\n            this._registerHandler(blurTrigger, \"blur\", this._blur.bind(this));\n            editor._registerHandler(mousedownTrigger, \"down\", editor._mousedown.bind(editor));\n\n            try {\n                doc.execCommand(\"enableInlineTableEditing\", null, false);\n            } catch (e) { }\n\n            if (kendo.support.touch) {\n                this._registerHandler(doc, {\n                    \"keydown\": function() {\n                        // necessary in iOS when touch events are bound to the page\n                        if (kendo._activeElement() != doc.body) {\n                            editor.window.focus();\n                        }\n                    }\n                });\n            }\n\n            this._initializePlaceholder();\n\n            this._spellCorrect(editor);\n\n            this._registerHandler(editor.document, {\n                \"mouseover dragenter\": function(e) {\n                    var height = $(editor.body).height();\n                    var htmlHeight = $(editor.body.parentElement).height();\n\n                    if (htmlHeight > height && e.target.nodeName.toLowerCase() === \"html\") {\n                        editor._cachedHeight = \"\" + editor.body.style.height;\n                        editor.body.style.height = \"100%\";\n                    }\n                },\n                \"mouseout dragleave drop contextmenu\": function(e) {\n                    var restoreHeight = function() {\n                        if (editor._cachedHeight !== undefined$1 && e.target === editor.body) {\n                            editor.body.style.height = editor._cachedHeight;\n                            delete editor._cachedHeight;\n                        }\n                    };\n\n                    if (e.type === \"contextmenu\") {\n                        setTimeout(function() {\n                            restoreHeight();\n                        }, 10);\n                    } else {\n                        restoreHeight();\n                    }\n\n                }\n            });\n\n            this._registerHandler(editor.body, {\n                \"keydown\": function(e) {\n                    var range;\n\n                    if ((e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) && editor.body.getAttribute(\"contenteditable\") !== \"true\") {\n                        return false;\n                    }\n\n                    if (e.keyCode === keys.F10) {\n                        editor.toolbar.element.find(\"[tabindex=0]\").first().trigger(\"focus\");\n                        editor.toolbar.preventPopupHide = true;\n                        e.preventDefault();\n                        return;\n                    } else if (e.keyCode == keys.LEFT || e.keyCode == keys.RIGHT) {\n                        // skip bom nodes when navigating with arrows\n                        range = editor.getRange();\n                        var left = e.keyCode == keys.LEFT;\n                        var container = range[left ? \"startContainer\" : \"endContainer\"];\n                        var offset = range[left ? \"startOffset\" : \"endOffset\"];\n                        var direction = left ? -1 : 1;\n\n                        var next = offset + direction;\n                        var nextChar = left ? next : offset;\n\n                        if (container.nodeType == 3 && container.nodeValue[nextChar] == \"\\ufeff\") {\n                            range.setStart(container, next);\n                            range.collapse(true);\n                            editor.selectRange(range);\n                        }\n                    }\n\n                    var tools = editor.tools;\n                    var toolName = editor.keyboard.toolFromShortcut(tools, e);\n                    var toolOptions = toolName ? tools[toolName].options : {};\n\n                    if (toolName && !toolOptions.keyPressCommand) {\n                        e.preventDefault();\n\n                        if (!/^(undo|redo)$/.test(toolName)) {\n                            editor.keyboard.endTyping(true);\n                        }\n\n                        editor.trigger(\"keydown\", e);\n                        editor.exec(toolName);\n                        editor._runPostContentKeyCommands(e);\n\n                        return false;\n                    }\n\n                    editor.keyboard.clearTimeout();\n\n                    editor.keyboard.keydown(e);\n                },\n                \"keypress\": function(e) {\n                    setTimeout(function() {\n                        editor._runPostContentKeyCommands(e);\n                        editor._showElementResizeHandles();\n                    }, 0);\n                },\n                \"keyup\": function(e) {\n                    var selectionCodes = [\n                       keys.BACKSPACE,\n                       keys.TAB,\n                       keys.PAGEUP,\n                       keys.PAGEDOWN,\n                       keys.END,\n                       keys.HOME,\n                       keys.LEFT,\n                       keys.UP,\n                       keys.RIGHT,\n                       keys.DOWN,\n                       keys.INSERT,\n                       keys.DELETE\n                    ];\n\n                    if ($.inArray(e.keyCode, selectionCodes) > -1 || (e.keyCode == 65 && e.ctrlKey && !e.altKey && !e.shiftKey)) {\n                        window.clearTimeout(this._refreshInterval);\n                        this._refreshInterval = window.setTimeout(function() {\n                            editor._selectionChange();\n                        }, REFRESH_INTERVAL);\n                    }\n\n                    if (e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) {\n                        editor._handleSpaceAndNewLines();\n                    }\n\n                    editor.keyboard.keyup(e);\n                },\n                \"click\": function(e) {\n                    var dom = kendo.ui.editor.Dom, range;\n\n                    if (dom.name(e.target) === \"img\") {\n                        range = editor.createRange();\n                        range.selectNode(e.target);\n                        editor.selectRange(range);\n                    }\n                },\n                \"cut copy paste drop dragover\": function(e) {\n                    editor.clipboard[\"on\" + e.type](e);\n                },\n                \"focusin\": function() {\n                    if (editor.body.hasAttribute(\"contenteditable\")) {\n                        $(this).addClass(\"k-active\");\n                        // To be moved to the Editor\n                        editor._showWindow();\n                        editor._togglePlaceholder(false);\n                    }\n                },\n                \"focusout\": function() {\n                    setTimeout(function() {\n                        var active = kendo._activeElement();\n                        var body = editor.body;\n                        // All below to be moved to the Editor\n                        var toolbar = editor.toolbar;\n\n                        if (toolbar.options.popup) {\n                            var toolbarContainerElement = editor.windowInstance.element.get(0);\n                            if (toolbarContainerElement && !($.contains(toolbarContainerElement, active) || toolbarContainerElement == active)) {\n                                toolbar.preventPopupHide = false;\n                            }\n                        }\n\n                        if (active != body && !$.contains(body, active) && !editor._toolbarFocused() && !toolbar.preventPopupHide && !$(active).hasClass(\"k-context-menu\")) {\n                            $(body).removeClass(\"k-active\");\n                            editor._hideWindow();\n                        }\n\n                        editor._togglePlaceholder(!editor.value().trim());\n                    }, 10);\n                }\n            });\n\n            editor._initializeColumnResizing();\n            editor._initializeRowResizing();\n            editor._initializeElementResizing();\n        },\n\n        _initializeImmutables: function() {\n            var that = this,\n                editorNS = kendo.ui.editor;\n\n            if (that.options.immutables) {\n                that.immutables = new editorNS.Immutables(that);\n            }\n        },\n\n        _initializePlaceholder: function() {\n            var that = this,\n                placeholder = that.options.placeholder,\n                style, $head;\n\n            if (!that.textarea || !placeholder) {\n                return;\n            }\n\n            style = `<style id='${PLACEHOLDER_TAG_ID}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\" } >.` +\n                        PLACEHOLDER_CLASS + \":before { content: '\" + placeholder + \"'; }\" +\n                    \"</style>\";\n\n            $head = $(that.document.head);\n            $head.find(\"#\" + PLACEHOLDER_TAG_ID).remove();\n            $head.append(style);\n\n            that._togglePlaceholder(!that.value().trim());\n        },\n\n        _initToolbar: function(toolbarContainer) {\n            var that = this,\n                tools, defaults, toolbarOptions;\n\n            that.tools = [];\n            [tools, defaults] = that._processToolbarItems(that.options.tools);\n            that._setNativeTools();\n\n            toolbarOptions = {\n                tools: tools,\n                defaultTools: defaults,\n                parentMessages: that.options.messages,\n                resizable: that.options.resizable && that.options.resizable.toolbar,\n                toggle: that._handleToolbarClick.bind(this),\n                click: that._handleToolbarClick.bind(this),\n                navigateOnTab: that.options.navigateOnTab,\n                evaluateTemplates: true\n            };\n\n            that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n            that._bindTools();\n            that.bind(\"select\", that._refreshTools.bind(that));\n\n            toolbarContainer.on(\"mousedown\" + NS, \".k-toolbar-tool\", function(e) {\n                if (!$(e.target).is(\"input\")) {\n                    e.preventDefault();\n                }\n            });\n\n            if (!that.textarea) {\n                that._initToolbarWindow(toolbarContainer);\n            }\n        },\n\n        _initToolbarWindow: function(toolbarEl) {\n            var that = this;\n\n            this.windowInstance = toolbarEl\n                .wrap(\"<div class='editorToolbarWindow k-editor-window' />\")\n                .parent()\n                .prepend(\"<span class='k-editortoolbar-dragHandle'>\" + kendo.ui.icon(\"handle-drag\") + \"</span>\")\n                .kendoWindow({\n                    title: false,\n                    resizable: false,\n                    draggable: {\n                        dragHandle: \".k-editortoolbar-dragHandle\"\n                    },\n                    animation: {\n                        open: { effects: \"fade:in\" },\n                        close: { effects: \"fade:out\" }\n                    },\n                    minHeight: 42,\n                    visible: false,\n                    autoFocus: false,\n                    actions: [],\n                    dragend: function() {\n                        this._moved = true;\n                    }\n                })\n                .on(\"mousedown\", function(e) {\n                    if (!$(e.target).is(\".k-icon,.k-svg-icon,svg\")) {\n                        that.toolbar.preventPopupHide = true;\n                    }\n                })\n                .on(\"focusout\", function() {\n                    that.element.focusout();\n                })\n                .data(\"kendoWindow\");\n        },\n\n        _mousedown: function(e) {\n            var editor = this;\n            editor._selectionStarted = true;\n\n            if ($(editor.body).parents('.k-window').length) {\n                e.stopPropagation();\n            }\n\n            // handle middle-click and ctrl-click on links\n            if (browser.gecko) {\n                return;\n            }\n\n            var target = $(e.target).closest(\"a[href]\");\n\n            if ((e.which == 2 || (e.which == 1 && e.ctrlKey)) && target && target.is(\"a[href]\")) {\n                window.open(target.attr(\"href\"), \"_new\");\n            }\n\n            if (e.target.tagName && e.target.tagName.toLowerCase() === \"html\") {\n                setTimeout(function() {\n                    editor.body.focus();\n                }, 0);\n            }\n        },\n\n        _mouseup: function(e) {\n            var that = this;\n\n            if (kendo.support.mobileOS.ios && e && $(e.target).is(SELECT_OVERLAY_SELECTOR)) {\n                return;\n            }\n\n            if (that._selectionStarted) {\n                setTimeout(function() {\n                    that._selectionChange();\n                }, 1);\n            }\n        },\n\n        _populateValue: function(options, domElement) {\n            var that = this,\n                editorNS = kendo.ui.editor,\n                dom = editorNS.Dom,\n                value, comments;\n\n            if (options && options.value) {\n                value = options.value;\n            } else if (that.textarea) {\n                // indented HTML introduces problematic ranges in IE\n                value = domElement.value;\n\n                if (!value.replace(/\\s/g, '').length) {\n                    value = value.replace(/\\s/g, '');\n                }\n\n                // revert encoding of value when content is fetched from cache\n                if (that.options.encoded && domElement.defaultValue && domElement.defaultValue.trim().length) {\n                    value = domElement.defaultValue;\n                }\n\n                var deserializedRoot = editorNS.Serializer.htmlToDom(value, $(\"<div></div>\")[0], that.options.deserialization);\n                comments = dom.getAllComments(deserializedRoot);\n                value = EditorUtils.cacheComments(value, comments);\n                value = value.replace(/[\\r\\n\\v\\f\\t ]+/ig, \" \");\n                value = EditorUtils.retrieveComments(value, comments);\n            } else {\n                value = domElement.innerHTML;\n            }\n\n            that.value(value || '\\ufeff');\n        },\n\n        _resetGroups: function(current) {\n            var result = {};\n\n            Object.keys(current).map(key => {\n                result[key + \"_\"] = current[key];\n            });\n\n            return result;\n        },\n\n        _processToolbarItems: function(optionsTools) {\n            var flatDefaultTools = {},\n                processedObject = {},\n                tools = [],\n                currentGroups = $.extend(true, {}, toolGroups),\n                i, j, t, name, guidGroupName;\n\n            for (i = 0; i < optionsTools.length; i++) {\n                t = optionsTools[i];\n\n                if (Array.isArray(t)) {\n                    guidGroupName = kendo.guid();\n\n                    for (j = 0; j < t.length; j++) {\n                        [flatDefaultTools, name] = this._processToolOptions(t[j], flatDefaultTools);\n\n                        if (!name) {\n                            continue;\n                        }\n\n                        flatDefaultTools[name].gr = guidGroupName;\n                    }\n                } else {\n                    [flatDefaultTools, name] = this._processToolOptions(t, flatDefaultTools);\n\n                    if (!name) {\n                        continue;\n                    } else if (name === \"separator\") {\n                        currentGroups = this._resetGroups(currentGroups);\n                    }\n\n                    Object.keys(currentGroups).map(key => {\n                        var group = currentGroups[key];\n\n                        if (group.includes(name)) {\n                            flatDefaultTools[name].gr = key;\n                        }\n                    });\n                }\n            }\n\n            Object.values(flatDefaultTools).map((tool) => {\n                var group = tool.gr;\n\n                delete tool.gr;\n\n                if (group === undefined$1) {\n                    processedObject[tool.name] = tool;\n                } else {\n                    if (!processedObject[group]) {\n                        processedObject[group] = [];\n                    }\n\n                    processedObject[group].push(tool);\n                }\n            });\n\n            tools = Object.values(processedObject).map((g) => {\n                var result;\n\n                if (g.length) {\n                    result = g.map((to) => to.name);\n                } else {\n                    result = g.name;\n                }\n\n                if (result.length === 1) {\n                    result = result[0];\n                }\n\n                return result;\n            });\n\n            return [tools, flatDefaultTools];\n        },\n\n        _processDefaultTool: function(tool, defaultTools) {\n            var name = tool.name,\n                result = {},\n                options;\n\n            if ($.isPlainObject(tool)) {\n                if (name && defaultTools[name]) {\n                    // configured tool\n                    result = extend({}, defaultTools[name]);\n                    extend(result.options, tool);\n                } else {\n                    // custom tool\n                    options = extend({ icon: \"gear\", type: \"button\" }, tool);\n\n                    if (!options.name) {\n                        options.name = \"custom\";\n                    }\n\n                    options.cssClass = \"k-\" + options.name;\n\n                    result = {\n                        options: options\n                    };\n\n                    name = options.name;\n                }\n            } else if (defaultTools[tool]) {\n                name = tool;\n                result = defaultTools[name];\n            } else {\n                return null;\n            }\n\n            this.tools[name] = result;\n\n            return result;\n        },\n\n        _processToolOptions: function(t, flatDefaultTools) {\n            var that = this,\n                defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                tool, name, view, shortcuts, options, uiOptions, icon, toolOptions, originalOptions, palette;\n\n            tool = this._processDefaultTool(t, defaultTools);\n\n            if (!tool) {\n                return [flatDefaultTools, null];\n            }\n\n            options = tool.options;\n            name = options.name;\n            uiOptions = options.ui || {};\n            icon = EditorUtils.getToolCssClass(options.name, options.icon);\n\n            // We want to preserve any custom properties from the original tool object.\n            originalOptions = $.isPlainObject(t) ? $.extend({}, t) : {};\n            delete originalOptions.items;\n\n            toolOptions = $.extend({\n                name: options.name,\n                command: options.command,\n                template: options.template,\n                type: \"button\",\n                icon: icon,\n                showText: \"overflow\",\n                showIcon: \"both\"\n            }, uiOptions, originalOptions);\n\n            if (options.tooltip) {\n                if (!toolOptions.attributes) {\n                    toolOptions.attributes = {};\n                }\n\n                toolOptions.attributes.title = options.tooltip;\n            }\n            if (options.exec) {\n                toolOptions.click = options.exec.bind(that);\n                delete toolOptions.exec;\n            }\n\n            if (toolOptions.component === \"ColorPicker\") {\n                if (options.palette !== undefined$1 || uiOptions.palette !== kendo.ui.editor.ColorTool.fn.options.palette) {\n                    palette = options.palette || kendo.ui.editor.ColorTool.fn.options.palette;\n                    view = options.palette !== undefined$1 && !options.palette ? \"gradient\" : \"palette\";\n                    toolOptions.componentOptions.palette = view === \"palette\" ? palette : undefined$1;\n                    toolOptions.componentOptions.views = [view];\n                    toolOptions.componentOptions.preview = view === \"gradient\";\n                    toolOptions.componentOptions.input = view === \"gradient\";\n                    toolOptions.componentOptions.buttons = view === \"gradient\";\n\n                    if (view === \"gradient\") {\n                        delete toolOptions.componentOptions.columns;\n                    }\n                }\n                if (view === \"palette\" && options.columns) {\n                    toolOptions.componentOptions.columns = options.columns;\n                }\n            }\n\n            if (toolOptions.component === \"DropDownList\" || toolOptions.component === \"ComboBox\") {\n                if (!toolOptions.componentOptions) {\n                    toolOptions.componentOptions = {};\n                }\n\n                if (!toolOptions.componentOptions.dataSource) {\n                    if (that.options[name] && Array.isArray(that.options[name])) {\n                        toolOptions.componentOptions.dataSource = that.options[name];\n                    } else {\n                        toolOptions.componentOptions.dataSource = options.items;\n                    }\n                }\n            }\n            if (toolOptions.template) {\n                delete toolOptions.type;\n            }\n\n            shortcuts = this._shortcutSequence(name);\n\n            if (shortcuts !== \"\") {\n                if (!toolOptions.attributes) {\n                    toolOptions.attributes = {};\n                }\n\n                toolOptions.attributes[\"aria-keyshortcuts\"] = shortcuts;\n            }\n\n            flatDefaultTools[name] = toolOptions;\n\n            return [flatDefaultTools, name];\n        },\n\n        _refreshTools: function() {\n            var that = this,\n                range = that.getRange(),\n                editorNS = kendo.ui.editor,\n                rangeUtils = editorNS.RangeUtils,\n                nodes = rangeUtils.textNodes(range),\n                immutables = that.options.immutables,\n                immutablesContext = that._immutablesContext(range),\n                defaultTools = that.tools;\n\n            nodes = editorNS.Dom.filterBy(nodes, editorNS.Dom.htmlIndentSpace, true);\n\n            if (!nodes.length) {\n                nodes = [range.startContainer];\n            }\n\n            that.toolbar.element.find(\"[data-command]\")\n                .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                .each(function() {\n                    var toolName = this.getAttribute(\"data-command\"),\n                        tool = defaultTools[toolName],\n                        ui;\n\n                    if (tool) {\n                        ui = $(this);\n\n                        if (tool.update) {\n                            tool.update(ui, nodes, that.undoRedoStack);\n                        }\n\n                        if (immutables) {\n                            that._updateImmutablesState(tool, ui, immutablesContext);\n                        }\n                    }\n                });\n        },\n\n        _registerHandler: function(element, type, handler) {\n            var editor = this;\n            var NS = \".kendoEditor\";\n            var eventNames;\n            var i;\n\n            element = $(element);\n\n            if (!this._handlers) {\n                this._handlers = [];\n            }\n\n            if (element.length) {\n                if ($.isPlainObject(type)) {\n                    for (var t in type) {\n                        if (type.hasOwnProperty(t)) {\n                            this._registerHandler(element, t, type[t]);\n                        }\n                    }\n                } else {\n                    //map the original event to handle interaction on mobile platforms\n                    eventNames = kendo.applyEventMap(type).split(\" \");\n\n                    for (i = 0; i < eventNames.length; i++) {\n                        editor._handlers.push({\n                            element: element,\n                            type: eventNames[i] + NS,\n                            handler: handler\n                        });\n\n                        element.on(eventNames[i] + NS, handler);\n                    }\n                }\n            }\n        },\n\n        _runPostContentKeyCommands: function(e) {\n            var range = this.getRange();\n            var tools = this.keyboard.toolsFromShortcut(this.tools, e);\n\n            for (var i = 0; i < tools.length; i++) {\n                var tool = tools[i];\n                var o = tool.options;\n                if (!o.keyPressCommand) {\n                    continue;\n                }\n\n                var cmd = new o.command({ range: range });\n                if (cmd.changesContent()) {\n                    this.keyboard.endTyping(true);\n                    this.exec(tool.name);\n                }\n            }\n\n            this._handleSpaceAndNewLines();\n        },\n\n        _handleSpaceAndNewLines: function() {\n            const that = this,\n                refreshDelay = that.options.formattingMarksRefreshDelay,\n                editorNS = kendo.ui.editor,\n                applyFormattingMarks = editorNS.applyFormattingMarks,\n                clearFormattingMarksOverlay = editorNS.clearFormattingMarksOverlay;\n\n            if (that._toggledFormattingMarks) {\n                if (that._formattingMarksOverlay.children().length) {\n                    clearFormattingMarksOverlay(that);\n                }\n\n                if (refreshDelay) {\n                    clearTimeout(that._formattingMarksTimeout);\n                    that._formattingMarksTimeout = setTimeout(() => applyFormattingMarks(that), refreshDelay);\n                } else {\n                    applyFormattingMarks(that);\n                }\n\n            }\n        },\n\n        _selectionChange: function() {\n            this._selectionStarted = false;\n            this.saveSelection();\n            this.trigger(\"select\", {});\n        },\n\n        _setOptionsTools: function(optionsTools) {\n            var that = this,\n                toolbar = that.toolbar,\n                toolbarContainer = toolbar.element,\n                tools, defaults, toolbarOptions;\n\n            toolbar.destroy();\n            toolbarContainer.empty();\n\n            that.tools = [];\n            [tools, defaults] = that._processToolbarItems(optionsTools);\n            that._setNativeTools();\n\n            toolbarOptions = {\n                tools: tools,\n                defaultTools: defaults,\n                parentMessages: that.options.messages,\n                resizable: that.options.resizable && that.options.resizable.toolbar,\n                toggle: that._handleToolbarClick.bind(this),\n                click: that._handleToolbarClick.bind(this)\n            };\n\n            that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n            that._bindTools();\n        },\n\n        _setNativeTools: function() {\n            var defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                i;\n\n            for (i = 0; i < NATIVE_TOOLS.length; i++) {\n                if (!this.tools[NATIVE_TOOLS[i]]) {\n                    this.tools[NATIVE_TOOLS[i]] = defaultTools[NATIVE_TOOLS[i]];\n                }\n            }\n        },\n\n        _setupHeight: function(type) {\n            var that = this;\n\n            if (type == \"textarea\") {\n                setTimeout(function() {\n                    var heightStyle = that.wrapper[0].style.height;\n                    var expectedHeight = parseInt(heightStyle, 10);\n                    var actualHeight = that.wrapper.height();\n                    if (heightStyle.indexOf(\"px\") > 0 && !isNaN(expectedHeight) && actualHeight > expectedHeight) {\n                        that.wrapper.height(expectedHeight - (actualHeight - expectedHeight));\n                    }\n                });\n            }\n        },\n\n        _setupKeyboard: function() {\n            var that = this,\n                editorNS = kendo.ui.editor;\n\n            that.keyboard = new editorNS.Keyboard([\n                new editorNS.BackspaceHandler(that),\n                new editorNS.TypingHandler(that),\n                new editorNS.SystemHandler(that),\n                new editorNS.SelectAllHandler(that)\n            ]);\n        },\n\n        _setupType: function(element) {\n            var domElement = element[0],\n                type = kendo.ui.editor.Dom.name(domElement),\n                id = domElement.id,\n                toolbarContainer;\n\n            if (type == \"textarea\") {\n                this._wrapTextarea();\n\n                toolbarContainer = this.wrapper.find(\".k-editor-toolbar\");\n\n                if (!id) {\n                    id = kendo.guid();\n                    domElement.setAttribute(\"id\", id);\n                }\n\n                toolbarContainer.attr(\"aria-controls\", id);\n            } else {\n                this.element.attr(\"contenteditable\", true).addClass(\"k-editor k-editor-inline\");\n                toolbarContainer = $('<div class=\"k-editor-toolbar\"/>').insertBefore(element);\n            }\n\n            return toolbarContainer;\n        },\n\n        _shortcutSequence: function(name) {\n            var tool = kendo.ui.Editor.defaultTools[name],\n                res = \"\",\n                options;\n\n            if (!tool || !tool.options) {\n                return res;\n            }\n\n            options = tool.options;\n\n            if (options.ctrl) {\n                res += \"Ctrl+\";\n            }\n\n            if (options.shift) {\n                res += \"Shift+\";\n            }\n\n            if (options.alt) {\n                res += \"Alt+\";\n            }\n\n            if (options.key) {\n                res += options.key;\n            }\n\n            return res;\n        },\n\n        _spellCorrect: function(editor) {\n            var beforeCorrection;\n            var falseTrigger = false;\n\n            this._registerHandler(editor.body, {\n                \"contextmenu\": function() {\n                    editor.one(\"select\", function() {\n                        beforeCorrection = null;\n                    });\n\n                    editor._spellCorrectTimeout = setTimeout(function() {\n                        beforeCorrection = new kendo.ui.editor.RestorePoint(editor.getRange(), editor.body);\n                        falseTrigger = false;\n                    }, 10);\n                },\n                \"input\": function() {\n                    if (!beforeCorrection) {\n                        return;\n                    }\n\n                    if (kendo.support.browser.mozilla && !falseTrigger) {\n                        falseTrigger = true;\n                        return;\n                    }\n\n                    kendo.ui.editor._finishUpdate(editor, beforeCorrection);\n                }\n            });\n        },\n\n        _togglePlaceholder: function(show) {\n            var that = this,\n                body = that.body,\n                $body = $(body),\n                placeholder = that.options.placeholder;\n\n            if (!that.textarea || !placeholder) {\n                return;\n            }\n\n            $body.attr('aria-label', function() {\n                return show ? placeholder : \"\";\n            });\n\n            $body.toggleClass(PLACEHOLDER_CLASS, show);\n        },\n\n        _toolbarFocused: function() {\n            var active = kendo._activeElement(),\n                popup = this.windowInstance,\n                overflowPopup = this.overflowPopup;\n\n            return (popup && $(active).closest(popup.wrapper).length) ||\n                (overflowPopup && overflowPopup.visible());\n        },\n\n        _updateImmutablesState: function(tool, ui, immutablesContext) {\n            var toolbar = this.toolbar,\n                name = tool.name,\n                uiElement = ui.closest(\".k-toolbar-tool\"),\n                trackImmutables = tool.options.trackImmutables,\n                editorNS = kendo.ui.editor;\n\n            if (trackImmutables === undefined$1) {\n                trackImmutables = $.inArray(name, editorNS.Immutables.toolsToBeUpdated) > -1;\n            }\n\n            if (trackImmutables) {\n                if (immutablesContext) {\n                    toolbar.hide(uiElement);\n                } else {\n                    toolbar.show(uiElement);\n                }\n            }\n        },\n\n        _wrapTextarea: function() {\n            var that = this,\n                textarea = that.element,\n                w = textarea[0].style.width,\n                h = textarea[0].style.height,\n                template = EditorUtils.editorWrapperTemplate(),\n                editorWrap = $(template).insertBefore(textarea),\n                editArea = editorWrap.find(\".k-editable-area\");\n\n            editorWrap.css({\n                \"width\": w,\n                \"height\": h\n            });\n\n            textarea.attr(\"autocomplete\", \"off\")\n                .appendTo(editArea).addClass(\"k-content k-raw-content\").css(\"display\", \"none\");\n\n            that.textarea = textarea;\n            that.wrapper = editorWrap;\n        },\n\n        // Resizing methods\n        _resizable: function() {\n            let that = this;\n            let resizable = this.options.resizable;\n            let isResizable = $.isPlainObject(resizable) ? (resizable.content === undefined$1 || resizable.content === true) : resizable;\n            let resizableMin = $.isPlainObject(resizable.min) ? resizable.min : { minHeight: resizable.min };\n            let resizableMax = $.isPlainObject(resizable.max) ? resizable.max : { maxHeight: resizable.max };\n\n            if (isResizable && this.textarea) {\n                that.wrapper.addClass('k-editor-resizable');\n\n                if (resizableMin.minHeight) {\n                    that.wrapper.css(\"min-height\", resizableMin.minHeight);\n                }\n\n                if (resizableMax.maxHeight) {\n                    that.wrapper.css(\"max-height\", resizableMax.maxHeight);\n                }\n\n                if (resizableMin.minWidth) {\n                    that.wrapper.css(\"min-width\", resizableMin.minWidth);\n                }\n\n                if (resizableMax.maxWidth) {\n                    that.wrapper.css(\"max-width\", resizableMax.maxWidth);\n                }\n\n                that.resizeObserver = new ResizeObserver(() => {\n                    clearTimeout(that._resizeTimeOut);\n\n                    that._resizeTimeOut = setTimeout(function() {\n                        that.toolbar.resize();\n                    }, 50);\n\n                });\n                that.resizeObserver.observe(that.wrapper[0]);\n            }\n        },\n\n        _destroyResizings: function() {\n            var editor = this;\n\n            editor._destroyElementResizing();\n            kendo.ui.editor.ElementResizingFactory.current.dispose(editor);\n            editor._destroyRowResizing();\n            kendo.ui.editor.RowResizing.dispose(editor);\n            editor._destroyColumnResizing();\n            kendo.ui.editor.ColumnResizing.dispose(editor);\n        },\n\n        _initializeElementResizing: function() {\n            var editor = this;\n\n            kendo.ui.editor.ElementResizingFactory.current.create(editor);\n\n            editor._showElementResizeHandlesProxy = editor._showElementResizeHandles.bind(editor);\n            editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n        },\n\n        _destroyElementResizing: function() {\n            var editor = this;\n            var elementResizing = editor.elementResizing;\n\n            if (elementResizing) {\n                elementResizing.destroy();\n                editor.elementResizing = null;\n            }\n\n            if (editor._showElementResizeHandlesProxy) {\n                editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n            }\n        },\n\n        _showElementResizeHandles: function() {\n            var editor = this;\n            var elementResizing = editor.elementResizing;\n\n            if (elementResizing && elementResizing.element && elementResizing.element.parentNode) {\n                elementResizing.showResizeHandles();\n            } else if (elementResizing && (!elementResizing.element || !elementResizing.element.parentNode)) {\n                editor._destroyElementResizing();\n            }\n        },\n\n        _initializeColumnResizing: function() {\n            kendo.ui.editor.ColumnResizing.create(this);\n        },\n\n        _destroyColumnResizing: function() {\n            var editor = this;\n\n            if (editor.columnResizing) {\n                editor.columnResizing.destroy();\n                editor.columnResizing = null;\n            }\n        },\n\n        _initializeRowResizing: function() {\n            kendo.ui.editor.RowResizing.create(this);\n        },\n\n        _destroyRowResizing: function() {\n            var editor = this;\n\n            if (editor.rowResizing) {\n                editor.rowResizing.destroy();\n                editor.rowResizing = null;\n            }\n        },\n\n        // ToolBar Window methods\n        _getWindowWidth: function() {\n            var that = this,\n                wrapper = that.windowInstance.wrapper,\n                editorElement = that.element;\n\n            return outerWidth(editorElement) - parseInt(wrapper.css(\"border-left-width\"), 10) - parseInt(wrapper.css(\"border-right-width\"), 10);\n        },\n\n        _hideWindow: function() {\n            if (this.windowInstance) {\n                this.windowInstance.close();\n            }\n        },\n\n        _overlapsWindow: function(box) {\n            var toolbarWrapper = this.windowInstance.wrapper,\n                toolbarWrapperOffset = toolbarWrapper.offset(),\n                toolbarWrapperLeft = toolbarWrapperOffset.left,\n                toolbarWrapperTop = toolbarWrapperOffset.top,\n                boxOffset = box.offset(),\n                boxOffsetLeft = boxOffset.left,\n                boxOffsetTop = boxOffset.top;\n\n            return !(boxOffsetLeft + box.width() < toolbarWrapperLeft ||\n                    boxOffsetLeft > toolbarWrapperLeft + toolbarWrapper.width() ||\n                    boxOffsetTop + box.height() < toolbarWrapperTop ||\n                    boxOffsetTop > toolbarWrapperTop + toolbarWrapper.height());\n        },\n\n        _showWindow: function() {\n            var that = this,\n                windowInstance = that.windowInstance,\n                wrapper, editorElement, editorOffset,\n                browser = kendo.support.browser;\n\n            if (windowInstance) {\n                wrapper = windowInstance.wrapper;\n                editorElement = that.element;\n\n                if (!wrapper.is(\":visible\") || !that.windowInstance.options.visible) {\n\n                    if (!wrapper[0].style.width) {\n                        wrapper.width(this._getWindowWidth());\n                    }\n\n                    // track content position when other parts of page change\n                    if (!windowInstance._moved) {\n                        editorOffset = editorElement.offset();\n                        wrapper.css({\n                            top: Math.max(0, parseInt(editorOffset.top, 10) - outerHeight(wrapper) - parseInt(that.windowInstance.element.css(\"padding-bottom\"), 10)),\n                            left: Math.max(0, parseInt(editorOffset.left, 10))\n                        });\n                    }\n\n                    if ((browser.msie || browser.edge) && that._overlapsWindow(editorElement)) {\n                        setTimeout(function() {\n                            windowInstance.open();\n                        }, 0);\n                    } else {\n                        windowInstance.open();\n                    }\n                }\n            }\n        }\n    });\n\n    Editor.defaultTools = {};\n\n    kendo.ui.plugin(Editor);\n\n    var Tool = Class.extend({\n        init: function(options) {\n            this.options = options;\n        },\n\n        command: function(commandArguments) {\n            return new this.options.command(commandArguments);\n        },\n\n        update: $.noop\n    });\n\n    Tool.exec = function(editor, name, value) {\n        editor.exec(name, { value: value });\n    };\n\n    var UndoTool = Tool.extend({\n        command: $.noop,\n        update: function(ui, nodes, undoRedoStack) {\n            var that = this,\n                name = that.options.name,\n                toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n            switch (name) {\n                case \"undo\":\n                    toolbar.enable(ui, undoRedoStack.canUndo());\n                    break;\n                case \"redo\":\n                    toolbar.enable(ui, undoRedoStack.canRedo());\n                    break;\n                default:\n                    break;\n            }\n\n            ui.removeAttr(\"disabled\");\n        }\n    });\n\n    EditorUtils.registerTool(\"separator\", new Tool({ ui: { type: \"separator\" } }));\n    EditorUtils.registerTool(\"undo\", new UndoTool({ key: \"Z\", ctrl: true }));\n    EditorUtils.registerTool(\"redo\", new UndoTool({ key: \"Y\", ctrl: true }));\n\n    // Exports ================================================================\n\n    var emptyElementContent = '\\ufeff';\n    var emptyTableCellContent = emptyElementContent;\n\n    if (browser.msie || browser.edge) {\n        emptyTableCellContent = emptyElementContent = \"&nbsp;\";\n    }\n\n    extend(kendo.ui, {\n        editor: {\n            EditorUtils: EditorUtils,\n            Tool: Tool,\n            emptyElementContent: emptyElementContent,\n            emptyTableCellContent: emptyTableCellContent\n        }\n    });\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(Editor.prototype);\n        Editor.prototype._drawPDF = function() {\n            return kendo.drawing.drawDOM(this.body, this.options.pdf);\n        };\n        Editor.prototype.saveAsPDF = function() {\n            var progress = new $.Deferred();\n            var promise = progress.promise();\n            var args = { promise: promise };\n\n            if (this.trigger(\"pdfExport\", args)) {\n                return;\n            }\n\n            var options = this.options.pdf;\n\n            this._drawPDF(progress)\n            .then(function(root) {\n                return kendo.drawing.exportPDF(root, options);\n            })\n            .done(function(dataURI) {\n                kendo.saveAs({\n                    dataURI: dataURI,\n                    fileName: options.fileName,\n                    proxyURL: options.proxyURL,\n                    proxyTarget: options.proxyTarget,\n                    forceProxy: options.forceProxy\n                });\n                progress.resolve();\n            })\n            .fail(function(err) {\n                progress.reject(err);\n            });\n\n            return promise;\n        };\n    }\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    map = $.map,\n    extend = $.extend,\n    browser = kendo.support.browser,\n    STYLE = \"style\",\n    FLOAT = \"float\",\n    CSSFLOAT = \"cssFloat\",\n    STYLEFLOAT = \"styleFloat\",\n    CLASS = \"class\",\n    KMARKER = \"k-marker\";\n\nfunction makeMap(items) {\n    var obj = {},\n        i, len;\n\n    for (i = 0, len = items.length; i < len; i++) {\n        obj[items[i]] = true;\n    }\n    return obj;\n}\n\nvar empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed\".split(\",\")),\n    nonListBlockElements = \"p,div,h1,h2,h3,h4,h5,h6,address,applet,blockquote,button,center,dd,dir,dl,dt,fieldset,form,frameset,hr,iframe,isindex,map,menu,noframes,noscript,object,pre,script,table,tbody,td,tfoot,th,thead,tr,header,article,nav,footer,section,aside,main,figure,figcaption\".split(\",\"),\n    blockElements = nonListBlockElements.concat([\"ul\",\"ol\",\"li\"]),\n    block = makeMap(blockElements),\n    selfClosing = makeMap(\"area,base,br,col,command,embed,hr,img,input,keygen,link,menuitem,meta,param,source,track,wbr\".split(\",\")),\n    inlineElements = \"span,em,a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,strike,strong,sub,sup,textarea,tt,u,var,data,time,mark,ruby\".split(\",\"),\n    inline = makeMap(inlineElements),\n    fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\".split(\",\")),\n    nonEmptyNonTextContentElements = [\"hgroup\",\"ol\",\"ul\",\"dl\",\"object\",\"video\",\"audio\",\"table\",\"colgroup\",\"tbody\",\"thead\",\"tfoot\",\"tr\",\"select\",\"optgroup\"];\n\nvar normalize = function(node) {\n    if (node.nodeType == 1) {\n        node.normalize();\n    }\n};\n\nif (browser.msie && browser.version >= 8) {\n    normalize = function(parent) {\n        if (parent.nodeType == 1 && parent.firstChild) {\n            var prev = parent.firstChild,\n                node = prev;\n\n            normalize(node);\n\n            while (true) {\n                node = node.nextSibling;\n\n                if (!node) {\n                    break;\n                }\n\n                normalize(node);\n\n                if (node.nodeType == 3 && prev.nodeType == 3) {\n                    node.nodeValue = prev.nodeValue + node.nodeValue;\n                    Dom.remove(prev);\n                }\n\n                prev = node;\n            }\n        }\n    };\n}\n\nvar whitespace = /^\\s+$/,\n    emptyspace = /^[\\n\\r\\t]+$/,\n    rgb = /rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i,\n    bom = /\\ufeff/g,\n    whitespaceOrBom = /^(\\s+|\\ufeff)$/,\n    persistedScrollTop,\n    cssAttributes =\n           (\"color,padding-left,padding-right,padding-top,padding-bottom,\" +\n            \"background-color,background-attachment,background-image,background-position,background-repeat,\" +\n            \"border-top-style,border-top-width,border-top-color,\" +\n            \"border-bottom-style,border-bottom-width,border-bottom-color,\" +\n            \"border-left-style,border-left-width,border-left-color,\" +\n            \"border-right-style,border-right-width,border-right-color,\" +\n            \"font-family,font-size,font-style,font-variant,font-weight,line-height\"\n           ).split(\",\"),\n    htmlRe = /[<>\\&]/g,\n    entityRe = /[\\u00A0-\\u2666<>\\&]/g,\n    entityTable = {\n            34: 'quot', 38: 'amp', 39: 'apos', 60: 'lt', 62: 'gt',\n            160: 'nbsp', 161: 'iexcl', 162: 'cent', 163: 'pound', 164: 'curren',\n            165: 'yen', 166: 'brvbar', 167: 'sect', 168: 'uml', 169: 'copy',\n            170: 'ordf', 171: 'laquo', 172: 'not', 173: 'shy', 174: 'reg',\n            175: 'macr', 176: 'deg', 177: 'plusmn', 178: 'sup2', 179: 'sup3',\n            180: 'acute', 181: 'micro', 182: 'para', 183: 'middot', 184: 'cedil',\n            185: 'sup1', 186: 'ordm', 187: 'raquo', 188: 'frac14', 189: 'frac12',\n            190: 'frac34', 191: 'iquest', 192: 'Agrave', 193: 'Aacute', 194: 'Acirc',\n            195: 'Atilde', 196: 'Auml', 197: 'Aring', 198: 'AElig', 199: 'Ccedil',\n            200: 'Egrave', 201: 'Eacute', 202: 'Ecirc', 203: 'Euml', 204: 'Igrave',\n            205: 'Iacute', 206: 'Icirc', 207: 'Iuml', 208: 'ETH', 209: 'Ntilde',\n            210: 'Ograve', 211: 'Oacute', 212: 'Ocirc', 213: 'Otilde', 214: 'Ouml',\n            215: 'times', 216: 'Oslash', 217: 'Ugrave', 218: 'Uacute', 219: 'Ucirc',\n            220: 'Uuml', 221: 'Yacute', 222: 'THORN', 223: 'szlig', 224: 'agrave',\n            225: 'aacute', 226: 'acirc', 227: 'atilde', 228: 'auml', 229: 'aring',\n            230: 'aelig', 231: 'ccedil', 232: 'egrave', 233: 'eacute', 234: 'ecirc',\n            235: 'euml', 236: 'igrave', 237: 'iacute', 238: 'icirc', 239: 'iuml',\n            240: 'eth', 241: 'ntilde', 242: 'ograve', 243: 'oacute', 244: 'ocirc',\n            245: 'otilde', 246: 'ouml', 247: 'divide', 248: 'oslash', 249: 'ugrave',\n            250: 'uacute', 251: 'ucirc', 252: 'uuml', 253: 'yacute', 254: 'thorn',\n            255: 'yuml', 402: 'fnof', 913: 'Alpha', 914: 'Beta', 915: 'Gamma',\n            916: 'Delta', 917: 'Epsilon', 918: 'Zeta', 919: 'Eta', 920: 'Theta',\n            921: 'Iota', 922: 'Kappa', 923: 'Lambda', 924: 'Mu', 925: 'Nu',\n            926: 'Xi', 927: 'Omicron', 928: 'Pi', 929: 'Rho', 931: 'Sigma',\n            932: 'Tau', 933: 'Upsilon', 934: 'Phi', 935: 'Chi', 936: 'Psi',\n            937: 'Omega', 945: 'alpha', 946: 'beta', 947: 'gamma', 948: 'delta',\n            949: 'epsilon', 950: 'zeta', 951: 'eta', 952: 'theta', 953: 'iota',\n            954: 'kappa', 955: 'lambda', 956: 'mu', 957: 'nu', 958: 'xi',\n            959: 'omicron', 960: 'pi', 961: 'rho', 962: 'sigmaf', 963: 'sigma',\n            964: 'tau', 965: 'upsilon', 966: 'phi', 967: 'chi', 968: 'psi',\n            969: 'omega', 977: 'thetasym', 978: 'upsih', 982: 'piv', 8226: 'bull',\n            8230: 'hellip', 8242: 'prime', 8243: 'Prime', 8254: 'oline', 8260: 'frasl',\n            8472: 'weierp', 8465: 'image', 8476: 'real', 8482: 'trade', 8501: 'alefsym',\n            8592: 'larr', 8593: 'uarr', 8594: 'rarr', 8595: 'darr', 8596: 'harr',\n            8629: 'crarr', 8656: 'lArr', 8657: 'uArr', 8658: 'rArr', 8659: 'dArr',\n            8660: 'hArr', 8704: 'forall', 8706: 'part', 8707: 'exist', 8709: 'empty',\n            8711: 'nabla', 8712: 'isin', 8713: 'notin', 8715: 'ni', 8719: 'prod',\n            8721: 'sum', 8722: 'minus', 8727: 'lowast', 8730: 'radic', 8733: 'prop',\n            8734: 'infin', 8736: 'ang', 8743: 'and', 8744: 'or', 8745: 'cap',\n            8746: 'cup', 8747: 'int', 8756: 'there4', 8764: 'sim', 8773: 'cong',\n            8776: 'asymp', 8800: 'ne', 8801: 'equiv', 8804: 'le', 8805: 'ge',\n            8834: 'sub', 8835: 'sup', 8836: 'nsub', 8838: 'sube', 8839: 'supe',\n            8853: 'oplus', 8855: 'otimes', 8869: 'perp', 8901: 'sdot', 8968: 'lceil',\n            8969: 'rceil', 8970: 'lfloor', 8971: 'rfloor', 9001: 'lang', 9002: 'rang',\n            9674: 'loz', 9824: 'spades', 9827: 'clubs', 9829: 'hearts', 9830: 'diams',\n            338: 'OElig', 339: 'oelig', 352: 'Scaron', 353: 'scaron', 376: 'Yuml',\n            710: 'circ', 732: 'tilde', 8194: 'ensp', 8195: 'emsp', 8201: 'thinsp',\n            8204: 'zwnj', 8205: 'zwj', 8206: 'lrm', 8207: 'rlm', 8211: 'ndash',\n            8212: 'mdash', 8216: 'lsquo', 8217: 'rsquo', 8218: 'sbquo', 8220: 'ldquo',\n            8221: 'rdquo', 8222: 'bdquo', 8224: 'dagger', 8225: 'Dagger', 8240: 'permil',\n            8249: 'lsaquo', 8250: 'rsaquo', 8364: 'euro'\n        };\n\nvar Dom = {\n    block: block,\n    inline: inline,\n\n    findNodeIndex: function(node, skipText) {\n        var i = 0;\n\n        if (!node) {\n            return -1;\n        }\n\n        while (true) {\n            node = node.previousSibling;\n\n            if (!node) {\n                break;\n            }\n\n            if (!(skipText && node.nodeType == 3)) {\n                i++;\n            }\n        }\n\n        return i;\n    },\n\n    isDataNode: function(node) {\n        return node && node.nodeValue !== null && node.data !== null;\n    },\n\n    isAncestorOf: function(parent, node) {\n        try {\n            return !Dom.isDataNode(parent) && ($.contains(parent, Dom.isDataNode(node) ? node.parentNode : node) || node.parentNode == parent);\n        } catch (e) {\n            return false;\n        }\n    },\n\n    isAncestorOrSelf: function(root, node) {\n        return Dom.isAncestorOf(root, node) || root == node;\n    },\n\n    findClosestAncestor: function(root, node) {\n        if (Dom.isAncestorOf(root, node)) {\n            while (node && node.parentNode != root) {\n                node = node.parentNode;\n            }\n        }\n\n        return node;\n    },\n\n    getAllComments: function(rootElem) {\n        var comments = [];\n        // Fourth argument, which is actually obsolete according to the DOM4 standard, is required in IE 11\n        var iterator = document.createNodeIterator(rootElem,\n            NodeFilter.SHOW_COMMENT,\n            function() {\n                return NodeFilter.FILTER_ACCEPT;\n            }, false);\n\n        var curNode = iterator.nextNode();\n        while (curNode) {\n            comments.push(curNode.nodeValue);\n            curNode = iterator.nextNode();\n        }\n        return comments;\n    },\n\n    getNodeLength: function(node) {\n        return Dom.isDataNode(node) ? node.length : node.childNodes.length;\n    },\n\n    splitDataNode: function(node, offset) {\n        var newNode = node.cloneNode(false);\n        var denormalizedText = \"\";\n        var iterator = node.nextSibling;\n        var temp;\n\n        while (iterator && iterator.nodeType == 3 && iterator.nodeValue) {\n            denormalizedText += iterator.nodeValue;\n            temp = iterator;\n            iterator = iterator.nextSibling;\n            Dom.remove(temp);\n        }\n\n        node.deleteData(offset, node.length);\n        newNode.deleteData(0, offset);\n        newNode.nodeValue += denormalizedText;\n        Dom.insertAfter(newNode, node);\n    },\n\n    attrEquals: function(node, attributes) {\n        for (var key in attributes) {\n            var value = node[key];\n\n            if (key == FLOAT) {\n                value = node[kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT];\n            }\n\n            if (typeof value == \"object\") {\n                if (!Dom.attrEquals(value, attributes[key])) {\n                    return false;\n                }\n            } else if (value != attributes[key]) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    blockParentOrBody: function(node) {\n        return Dom.parentOfType(node, blockElements) || node.ownerDocument.body;\n    },\n\n    blockParents: function(nodes) {\n        var blocks = [],\n            i, len;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            var block = Dom.parentOfType(nodes[i], Dom.blockElements);\n            if (block && $.inArray(block, blocks) < 0) {\n                blocks.push(block);\n            }\n        }\n\n        return blocks;\n    },\n\n    windowFromDocument: function(document) {\n        return document.defaultView || document.parentWindow;\n    },\n\n    normalize: normalize,\n    blockElements: blockElements,\n    nonListBlockElements: nonListBlockElements,\n    inlineElements: inlineElements,\n    empty: empty,\n    fillAttrs: fillAttrs,\n    nodeTypes: {\n        ELEMENT_NODE: 1,\n        ATTRIBUTE_NODE: 2,\n        TEXT_NODE: 3,\n        CDATA_SECTION_NODE: 4,\n        ENTITY_REFERENCE_NODE: 5,\n        ENTITY_NODE: 6,\n        PROCESSING_INSTRUCTION_NODE: 7,\n        COMMENT_NODE: 8,\n        DOCUMENT_NODE: 9,\n        DOCUMENT_TYPE_NODE: 10,\n        DOCUMENT_FRAGMENT_NODE: 11,\n        NOTATION_NODE: 12\n    },\n\n    toHex: function(color) {\n        var matches = rgb.exec(color);\n\n        if (!matches) {\n            return color;\n        }\n\n        return \"#\" + map(matches.slice(1), function(x) {\n            x = parseInt(x, 10).toString(16);\n            return x.length > 1 ? x : \"0\" + x;\n        }).join(\"\");\n    },\n\n    encode: function(value, options) {\n        var encodableChars = (!options || options.entities) ? entityRe : htmlRe;\n        return value.replace(encodableChars, function(c) {\n            var charCode = c.charCodeAt(0);\n            var entity = entityTable[charCode];\n            return entity ? '&' + entity + ';' : c;\n        });\n    },\n    isBom: function(node) {\n        return node && node.nodeType === 3 && /^[\\ufeff]+$/.test(node.nodeValue);\n    },\n    stripBom: function(text) {\n        return (text || \"\").replace(bom, \"\");\n    },\n\n    stripBomNode: function(node) {\n        if (Dom.isBom(node)) {\n            node.parentNode.removeChild(node);\n        }\n    },\n\n    insignificant: function(node) {\n        var attr = node.attributes;\n\n        return node.className == \"k-marker\" || (Dom.is(node, 'br') && (node.className == \"k-br\" || attr._moz_dirty || attr._moz_editor_bogus_node)) || (Dom.is(node, 'span') && (node.className == \"k-br\"));\n    },\n    tableCell: function(node) {\n        return Dom.is(node, \"td\") || Dom.is(node, \"th\");\n    },\n    significantNodes: function(nodes) {\n        return $.grep(nodes, function(child) {\n            var name = Dom.name(child);\n\n            if (name == 'br') {\n                return false;\n            } else if (Dom.insignificant(child)) {\n                return false;\n            } else if (Dom.emptyTextNode(child)) {\n                return false;\n            } else if (child.nodeType == 1 && !empty[name] && Dom.emptyNode(child)) {\n                return false;\n            }\n\n            return true;\n        });\n    },\n\n    emptyTextNode: function(node) {\n        return node && node.nodeType == 3 && whitespaceOrBom.test(node.nodeValue);\n    },\n\n    emptyNode: function(node) {\n        return node.nodeType == 1 && !Dom.significantNodes(node.childNodes).length;\n    },\n\n    name: function(node) {\n        return node.nodeName.toLowerCase();\n    },\n\n    significantChildNodes: function(node) {\n        return $.grep(node.childNodes, function(child) {\n            return child.nodeType != 3 || !Dom.isWhitespace(child);\n        });\n    },\n\n    getTextNodes: function(body, nodes) {\n        const childNodes = body.childNodes;\n        nodes = nodes || [];\n\n        for (const node of childNodes) {\n            if (node.nodeType === this.nodeTypes.TEXT_NODE &&\n                (blockElements.includes(Dom.name(node.parentNode)) ||\n                inlineElements.includes(Dom.name(node.parentNode)))) {\n                nodes.push(node);\n            } else if (node.nodeType === this.nodeTypes.ELEMENT_NODE) {\n                this.getTextNodes(node, nodes);\n            }\n        }\n\n        return nodes;\n    },\n\n    lastTextNode: function(node) {\n        var result = null;\n\n        if (node.nodeType == 3) {\n            return node;\n        }\n\n        for (var child = node.lastChild; child; child = child.previousSibling) {\n            result = Dom.lastTextNode(child);\n\n            if (result) {\n                return result;\n            }\n        }\n\n        return result;\n    },\n\n    is: function(node, nodeName) {\n        return node && Dom.name(node) == nodeName;\n    },\n\n    isMarker: function(node) {\n        return node.className == KMARKER;\n    },\n\n    isWhitespace: function(node) {\n        return whitespace.test(node.nodeValue);\n    },\n\n    allowsTextContent: function(node) {\n        var result = true;\n\n        nonEmptyNonTextContentElements.every(function(name) {\n            if (Dom.is(node, name)) {\n                result = false;\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        return result;\n    },\n\n    allWhitespaceContent: function(node) {\n        var child = node.firstChild;\n        while (child && Dom.isWhitespace(child)) {\n            child = child.nextSibling;\n        }\n\n        return !child;\n    },\n\n    isEmptyspace: function(node) {\n        return emptyspace.test(node.nodeValue);\n    },\n\n    htmlIndentSpace: function(node) {\n        if (!(Dom.isDataNode(node) && Dom.isWhitespace(node))) {\n            return false;\n        }\n\n        if (emptyspace.test(node.nodeValue)) {\n            return true;\n        }\n\n        var sibling = function(el, direction) {\n            while (el[direction]) {\n                el = el[direction];\n                if (Dom.significantNodes([el]).length > 0) {\n                    return el;\n                }\n            }\n        };\n\n        var parent = node.parentNode;\n        var prev = sibling(node, \"previousSibling\");\n        var next = sibling(node, \"nextSibling\");\n\n        if (bom.test(node.nodeValue)) {\n            return !!(prev || next);\n        }\n\n        if ($(parent).is(\"tr,tbody,thead,tfoot,table,ol,ul\")) {\n            return true;\n        }\n\n        if (Dom.isBlock(parent) || Dom.is(parent, \"body\")) {\n            var isPrevBlock = prev && Dom.isBlock(prev);\n            var isNextBlock = next && Dom.isBlock(next);\n            if ((!next && isPrevBlock) || (!prev && isNextBlock) || (isPrevBlock && isNextBlock)) {\n                return true;\n            }\n        }\n\n        return false;\n    },\n\n    isBlock: function(node) {\n        return block[Dom.name(node)];\n    },\n\n    isSelfClosing: function(node) {\n        return selfClosing[Dom.name(node)];\n    },\n\n    isEmpty: function(node) {\n        return empty[Dom.name(node)];\n    },\n\n    isInline: function(node) {\n        return inline[Dom.name(node)];\n    },\n\n    isImg: function(node) {\n        return Dom.name(node) == \"img\";\n    },\n\n    isBr: function(node) {\n        return Dom.name(node) == \"br\";\n    },\n\n    list: function(node) {\n        var name = node ? Dom.name(node) : \"\";\n        return name == \"ul\" || name == \"ol\" || name == \"dl\";\n    },\n\n    scrollContainer: function(doc) {\n        var wnd = Dom.windowFromDocument(doc),\n            scrollContainer = (wnd.contentWindow || wnd).document || wnd.ownerDocument || wnd;\n\n        if (scrollContainer.compatMode == 'BackCompat') {\n            scrollContainer = scrollContainer.body;\n        } else {\n            scrollContainer = scrollContainer.scrollingElement || scrollContainer.documentElement;\n        }\n\n        return scrollContainer;\n    },\n\n    scrollTo: function(node, toStart) {\n        var doc = node.ownerDocument;\n        var wnd = Dom.windowFromDocument(doc);\n        var windowHeight = wnd.innerHeight;\n        var scrollContainer = Dom.scrollContainer(doc);\n        var element, elementTop, elementHeight, marker;\n\n        if (Dom.isDataNode(node)) {\n            if (toStart) {\n                marker = Dom.create(doc, \"span\", { \"innerHTML\": \"&#xfeff;\" });\n                Dom.insertBefore(marker, node);\n                element = $(marker);\n            } else {\n                element = $(node.parentNode);\n            }\n        } else {\n            element = $(node);\n        }\n\n        elementTop = element.offset().top;\n        elementHeight = element[0].offsetHeight;\n\n        if (toStart || !elementHeight) {\n            elementHeight = parseInt(element.css(\"line-height\"), 10) ||\n                            Math.ceil(1.2 * parseInt(element.css(\"font-size\"), 10)) ||\n                            15;\n        }\n\n        if (marker) {\n            Dom.remove(marker);\n        }\n\n        if (elementHeight + elementTop > scrollContainer.scrollTop + windowHeight) {\n            scrollContainer.scrollTop = elementHeight + elementTop - windowHeight;\n        }\n    },\n\n    persistScrollTop: function(doc) {\n        persistedScrollTop = Dom.scrollContainer(doc).scrollTop;\n    },\n\n    offset: function(target, offsetParent) {\n        var result = { top: target.offsetTop, left: target.offsetLeft };\n        var parent = target.offsetParent;\n\n        while (parent && (!offsetParent || Dom.isAncestorOf(offsetParent, parent))) {\n            result.top += parent.offsetTop;\n            result.left += parent.offsetLeft;\n            parent = parent.offsetParent;\n        }\n\n        return result;\n    },\n\n    restoreScrollTop: function(doc) {\n        if (typeof persistedScrollTop == \"number\") {\n            Dom.scrollContainer(doc).scrollTop = persistedScrollTop;\n            persistedScrollTop = undefined;\n        }\n    },\n\n    insertAt: function(parent, newElement, position) {\n        parent.insertBefore(newElement, parent.childNodes[position] || null);\n    },\n\n    insertBefore: function(newElement, referenceElement) {\n        if (referenceElement.parentNode) {\n            return referenceElement.parentNode.insertBefore(newElement, referenceElement);\n        } else {\n            return referenceElement;\n        }\n    },\n\n    insertAfter: function(newElement, referenceElement) {\n        return referenceElement.parentNode.insertBefore(newElement, referenceElement.nextSibling);\n    },\n\n    remove: function(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    },\n\n    removeChildren: function(node) {\n        while (node.firstChild) {\n            node.removeChild(node.firstChild);\n        }\n    },\n\n    removeTextSiblings: function(node) {\n        var parentNode = node.parentNode;\n\n        while (node.nextSibling && node.nextSibling.nodeType == 3) {\n            parentNode.removeChild(node.nextSibling);\n        }\n\n        while (node.previousSibling && node.previousSibling.nodeType == 3) {\n            parentNode.removeChild(node.previousSibling);\n        }\n    },\n\n    trim: function(parent) {\n        for (var i = parent.childNodes.length - 1; i >= 0; i--) {\n            var node = parent.childNodes[i];\n            if (Dom.isDataNode(node)) {\n                if (!Dom.stripBom(node.nodeValue).length) {\n                    Dom.remove(node);\n                }\n            } else if (node.className != KMARKER) {\n                Dom.trim(node);\n\n                if ((!Dom.isEmpty(node) && node.childNodes.length === 0) ||\n                    (Dom.isBlock(node) && Dom.allWhitespaceContent(node))) {\n                    Dom.remove(node);\n                }\n            }\n        }\n\n        return parent;\n    },\n\n    closest: function(node, tags) {\n        if (typeof tags === \"string\") {\n            tags = [tags];\n        }\n\n        while (node && tags.indexOf(Dom.name(node)) < 0) {\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n\n    closestBy: function(node, condition, rootCondition) {\n        while (node && !condition(node)) {\n            if (rootCondition && rootCondition(node)) {\n                return null;\n            }\n            node = node.parentNode;\n        }\n        return node;\n    },\n\n    sibling: function(node, direction) {\n        do {\n            node = node[direction];\n        } while (node && node.nodeType != 1);\n\n        return node;\n    },\n\n    next: function(node) {\n        return Dom.sibling(node, \"nextSibling\");\n    },\n\n    prev: function(node) {\n        return Dom.sibling(node, \"previousSibling\");\n    },\n\n    parentOfType: function(node, tags) {\n        do {\n            node = node.parentNode;\n        } while (node && !(Dom.ofType(node, tags)));\n\n        return node;\n    },\n\n    ofType: function(node, tags) {\n        return $.inArray(Dom.name(node), tags) >= 0;\n    },\n\n    changeTag: function(referenceElement, tagName, skipAttributes) {\n        var newElement = Dom.create(referenceElement.ownerDocument, tagName),\n            attributes = referenceElement.attributes,\n            i, len, name, value, attribute;\n\n        if (!skipAttributes) {\n            for (i = 0, len = attributes.length; i < len; i++) {\n                attribute = attributes[i];\n                if (attribute.specified) {\n                    // IE < 8 cannot set class or style via setAttribute\n                    name = attribute.nodeName;\n                    value = attribute.nodeValue;\n                    if (name == CLASS) {\n                        newElement.className = value;\n                    } else if (name == STYLE) {\n                        newElement.style.cssText = referenceElement.style.cssText;\n                    } else {\n                        newElement.setAttribute(name, value);\n                    }\n                }\n            }\n        }\n\n        while (referenceElement.firstChild) {\n            newElement.appendChild(referenceElement.firstChild);\n        }\n\n        Dom.insertBefore(newElement, referenceElement);\n        Dom.remove(referenceElement);\n        return newElement;\n    },\n\n    editableParent: function(node) {\n        while (node && (node.nodeType == 3 || node.contentEditable !== 'true')) {\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n\n    wrap: function(node, wrapper) {\n        Dom.insertBefore(wrapper, node);\n        wrapper.appendChild(node);\n        return wrapper;\n    },\n\n    unwrap: function(node) {\n        var parent = node.parentNode;\n        while (node.firstChild) {\n            parent.insertBefore(node.firstChild, node);\n        }\n\n        parent.removeChild(node);\n    },\n\n    wrapper: function(node) {\n        var wrapper = Dom.closestBy(node, function(el) {\n            return el.parentNode && Dom.significantNodes(el.parentNode.childNodes).length > 1;\n        });\n\n        return $(wrapper).is(\"body,.k-editor\") ? undefined : wrapper;\n    },\n\n    isChildOfBaseContainer: function(node) {\n        return $(node).parent().is(\"body,.k-editor\");\n    },\n\n    create: function(document, tagName, attributes) {\n        return Dom.attr(document.createElement(tagName), attributes);\n    },\n\n    createEmptyNode: function(document, tagName, attributes) {\n        var node = Dom.attr(document.createElement(tagName), attributes);\n        node.innerHTML = \"\\ufeff\";\n        return node;\n    },\n\n    attr: function(element, attributes) {\n        attributes = extend({}, attributes);\n\n        if (attributes && STYLE in attributes) {\n            Dom.style(element, attributes.style);\n            delete attributes.style;\n        }\n\n        for (var attr in attributes) {\n            if (attributes[attr] === null) {\n                element.removeAttribute(attr);\n                delete attributes[attr];\n            } else if (attr == \"className\") {\n                element[attr] = attributes[attr];\n            }\n        }\n\n        return extend(element, attributes);\n    },\n\n    mergeAttributes: function(origin, target, traverseCss) {\n        if (!origin.attributes.length) {\n            return;\n        }\n\n        $.each(origin.attributes, function() {\n            if (this.name !== \"contenteditable\" && (!traverseCss || this.name !== STYLE)) {\n                $(target).attr(this.name, this.value);\n            }\n\n            if (traverseCss && this.name === STYLE) {\n                $.each(origin.style, function() {\n                    target.style[this] = origin.style[this];\n                });\n            }\n        });\n    },\n\n    style: function(node, value) {\n        $(node).css(value || {});\n    },\n\n    unstyle: function(node, value) {\n        for (var key in value) {\n            if (key == FLOAT) {\n                key = kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT;\n            }\n\n            node.style[key] = \"\";\n        }\n\n        if (node.style.cssText === \"\") {\n            node.removeAttribute(STYLE);\n        }\n    },\n\n    inlineStyle: function(body, name, attributes) {\n        var span = $(Dom.create(body.ownerDocument, name, attributes)),\n            style;\n\n        body.appendChild(span[0]);\n\n        style = map(cssAttributes, function(value) {\n            if (browser.msie && value == \"line-height\" && span.css(value) == \"1px\") {\n                return \"line-height:1.5\";\n            } else {\n                return value + \":\" + span.css(value);\n            }\n        }).join(\";\");\n\n        span.remove();\n\n        return style;\n    },\n\n    getEffectiveBackground: function(element) {\n        var backgroundStyle = element.css(\"background-color\") || \"\";\n\n        if (backgroundStyle.indexOf(\"rgba(0, 0, 0, 0\") < 0 && backgroundStyle !== \"transparent\") {\n            return backgroundStyle;\n        } else if (element[0].tagName.toLowerCase() === \"html\") {\n            return \"Window\";\n        } else {\n            return Dom.getEffectiveBackground(element.parent());\n        }\n    },\n\n    innerText: function(node) {\n        var text = node.innerHTML;\n        text = text.replace(/<!--(.|\\s)*?-->/gi, \"\");\n        text = text.replace(/<\\/?[^>]+?\\/?>/gm, \"\");\n\n        return text;\n    },\n\n    removeClass: function(node, classNames) {\n        var className = \" \" + node.className + \" \",\n            classes = classNames.split(\" \"),\n            i, len;\n\n        for (i = 0, len = classes.length; i < len; i++) {\n            className = className.replace(\" \" + classes[i] + \" \", \" \");\n        }\n\n        className = kendo.trim(className);\n\n        if (className.length) {\n            node.className = className;\n        } else {\n            node.removeAttribute(CLASS);\n        }\n    },\n\n    commonAncestor: function() {\n        var count = arguments.length,\n            paths = [],\n            minPathLength = Infinity,\n            output = null,\n            i, ancestors, node, first, j;\n\n        if (!count) {\n            return null;\n        }\n\n        if (count == 1) {\n            return arguments[0];\n        }\n\n        for (i = 0; i < count; i++) {\n            ancestors = [];\n            node = arguments[i];\n            while (node) {\n                ancestors.push(node);\n                node = node.parentNode;\n            }\n            paths.push(ancestors.reverse());\n            minPathLength = Math.min(minPathLength, ancestors.length);\n        }\n\n        if (count == 1) {\n            return paths[0][0];\n        }\n\n        for (i = 0; i < minPathLength; i++) {\n            first = paths[0][i];\n\n            for (j = 1; j < count; j++) {\n                if (first != paths[j][i]) {\n                    return output;\n                }\n            }\n\n            output = first;\n        }\n        return output;\n    },\n\n    closestSplittableParent: function(nodes) {\n        var result;\n\n        if (nodes.length == 1) {\n            result = Dom.parentOfType(nodes[0], [\"ul\",\"ol\"]);\n        } else {\n            result = Dom.commonAncestor.apply(null, nodes);\n        }\n\n        if (!result) {\n            result = Dom.parentOfType(nodes[0], [\"p\", \"td\"]) || nodes[0].ownerDocument.body;\n        }\n\n        if (Dom.isInline(result)) {\n            result = Dom.blockParentOrBody(result);\n        }\n\n        var editableParents = map(nodes, Dom.editableParent);\n        var editableAncestor = Dom.commonAncestor(editableParents)[0];\n\n        if ($.contains(result, editableAncestor)) {\n            result = editableAncestor;\n        }\n\n        return result;\n    },\n\n    closestEditable: function(node, types) {\n        var closest;\n        var editable = Dom.editableParent(node);\n\n        if (Dom.ofType(node, types)) {\n            closest = node;\n        } else {\n            closest = Dom.parentOfType(node, types);\n        }\n\n        if (closest && editable && $.contains(closest, editable)) {\n            closest = editable;\n        } else if (!closest && editable) {\n            closest = editable;\n        }\n\n        return closest;\n    },\n\n    closestEditableOfType: function(node, types) {\n        var editable = Dom.closestEditable(node, types);\n\n        if (editable && Dom.ofType(editable, types) && !$(editable).is(\".k-editor\")) {\n            return editable;\n        }\n    },\n\n    filter: function(tagName, nodes, invert) {\n        var filterFn = function(node) {\n            return Dom.name(node) == tagName;\n        };\n\n        return Dom.filterBy(nodes, filterFn, invert);\n    },\n\n    filterBy: function(nodes, condition, invert) {\n        var i = 0;\n        var len = nodes.length;\n        var result = [];\n        var match;\n\n        for (; i < len; i++) {\n            match = condition(nodes[i]);\n            if ((match && !invert) || (!match && invert)) {\n                result.push(nodes[i]);\n            }\n        }\n\n        return result;\n    },\n\n    ensureTrailingBreaks: function(node) {\n        var elements = $(node).find(\"p,td,th\");\n        var length = elements.length;\n        var i = 0;\n\n        if (length) {\n            for (; i < length; i++) {\n                Dom.ensureTrailingBreak(elements[i]);\n            }\n        } else {\n            Dom.ensureTrailingBreak(node);\n        }\n    },\n\n    removeTrailingBreak: function(node) {\n        $(node).find(\"br[type=_moz],.k-br\").remove();\n    },\n\n    ensureTrailingBreak: function(node) {\n        Dom.removeTrailingBreak(node);\n\n        var lastChild = node.lastChild;\n        var name = lastChild && Dom.name(lastChild);\n        var br;\n\n        if (!name ||\n            (name != \"br\" && name != \"img\") ||\n            (name == \"br\" && lastChild.className != \"k-br\")) {\n            br = node.ownerDocument.createElement(\"br\");\n            br.className = \"k-br\";\n            node.appendChild(br);\n        }\n    },\n\n    // Start: Table Utilities\n\n    reMapTableColumns: function(table, colAttr) {\n        Dom._mapColIndices(table, colAttr);\n    },\n\n    clearTableMappings: function(table, colAttr) {\n        $(table).find(\"[\" + colAttr + \"]\").removeAttr(colAttr);\n    },\n\n    _mapColIndices: function(table, colAttr) {\n        var registeredColumns = {};\n\n        for (var rowIndex = 0; rowIndex < table.rows.length; rowIndex++) {\n            var cells = table.rows[rowIndex].cells;\n            var colIndex = 0;\n            for (var cellIndex = 0; cellIndex < cells.length; cellIndex++, colIndex++) {\n                var cell = cells[cellIndex];\n\n                if (cell.rowSpan > 1) {\n                    this._mapColspan(cell, rowIndex, colIndex, registeredColumns);\n                }\n\n                if (registeredColumns[rowIndex]) {\n                    while (registeredColumns[rowIndex][colIndex]) {\n                        colIndex++;\n                    }\n                }\n\n                cell.setAttribute(colAttr, colIndex);\n\n                if (cell.colSpan > 1) {\n                    colIndex = colIndex + cell.colSpan - 1;\n                }\n            }\n        }\n    },\n\n    _mapColspan: function(cell, rowIndex, colIndex, registeredColumns) {\n        var rowSpan = cell.rowSpan,\n            colSpan = cell.colSpan,\n            index;\n\n        for (var ci = 0; ci < colSpan; ci++) {\n            index = colIndex + ci;\n\n            for (var ri = rowIndex + 1; ri < rowIndex + rowSpan; ri++) {\n\n                if (!registeredColumns[ri]) {\n                    registeredColumns[ri] = {};\n                    registeredColumns[ri].length = 0;\n                }\n\n                if (registeredColumns[rowIndex]) {\n                    while (registeredColumns[rowIndex][index]) {\n                        index++;\n                    }\n                }\n\n                registeredColumns[ri][index] = true;\n                registeredColumns[ri].length++;\n            }\n        }\n\n    },\n\n    associateWithIds: function(table) {\n        var that = this;\n        var numberOfTheadRows = 0;\n        var tableRows = table.rows;\n        var numberOfTableRows = tableRows.length;\n        var theadMatrix = [];\n        var tbodyMatrix = [];\n        var theadRows, i;\n\n        if (table.tHead) {\n            theadRows = table.tHead.rows;\n            numberOfTheadRows = theadRows.length;\n        } else {\n            numberOfTheadRows = that._getNumberOfHeaderRows(table);\n            theadRows = [];\n            for (i = 0; i < numberOfTheadRows; i++) {\n                theadRows.push(tableRows[i]);\n            }\n        }\n        for (i = 0; i < numberOfTheadRows; i++) {\n            theadMatrix.push([]);\n        }\n        for (i = 0; i < numberOfTableRows; i++) {\n            tbodyMatrix.push([]);\n        }\n\n        that._generateIdsForColumns(theadMatrix, theadRows);\n        that._generateIdsForRows(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n        that._assignIds(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n    },\n\n    _generateIdsForColumns: function(theadMatrix, theadRows) {\n        var timestamp = new Date().getTime();\n        var numberOfTheadRows = theadRows ? theadRows.length : 0;\n        var row, cells, cell, col, id, colspan, rowspan, i, j, k, l;\n\n        for (i = 0; i < numberOfTheadRows; i++) {\n            row = theadRows[i];\n            cells = row.cells;\n            col = 0;\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                id = \"table\" + i + j + (++timestamp);\n                cell.setAttribute(\"id\", id);\n                colspan = cell.getAttribute(\"colspan\") || 1;\n                rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                while (theadMatrix[i][j + col]) {\n                    col += 1;\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    for (l = 0; l < colspan; l++) {\n                        theadMatrix[i + k][j + col + l] = id;\n                    }\n                }\n            }\n        }\n    },\n\n    _generateIdsForRows: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n        var that = this;\n        var timestamp = new Date().getTime();\n        var numberOfTableRows = tableRows.length;\n        var row, cells, cell, col, id, colspan, rowspan, i, j, k, l, colIndex, headers;\n\n        var pushHeaderId = function(row) {\n            headers.push(row[colIndex]);\n        };\n\n        for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n            row = tableRows[i];\n            cells = $(row.cells).filter(\"th\");\n            col = 0;\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                id = \"table\" + i + j + (++timestamp);\n                cell.setAttribute(\"id\", id);\n                colspan = cell.getAttribute(\"colspan\") || 1;\n                rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                while (tbodyMatrix[i][j + col]) {\n                    col += 1;\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    for (l = 0; l < colspan; l++) {\n                        tbodyMatrix[i + k][j + col + l] = id;\n                    }\n                }\n\n                colIndex = cell.getAttribute(\"col-index\");\n                headers = [];\n                theadMatrix.forEach(pushHeaderId);\n                headers = headers.filter(that._onlyUnique);\n                cell.setAttribute(\"headers\", headers.join(\" \").trim());\n            }\n        }\n    },\n\n    _assignIds: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n        var that = this;\n        var numberOfTableRows = tableRows.length;\n        var row, cells, cell, i, j, colIndex, headers;\n\n        var pushHeaderId = function(row) {\n            headers.push(row[colIndex]);\n        };\n\n        for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n            row = tableRows[i];\n            cells = $(row.cells).filter(\"td\");\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                colIndex = cell.getAttribute(\"col-index\");\n                headers = tbodyMatrix[i].slice();\n\n                theadMatrix.forEach(pushHeaderId);\n                headers = headers.filter(that._onlyUnique);\n                cell.setAttribute(\"headers\", headers.join(\" \").trim());\n            }\n        }\n    },\n\n    _getNumberOfColumns: function(table) {\n        var cells = $(table).find(\"th, td\");\n        var numberOfCols = 0;\n        var cell, i, currentIndex;\n\n        for (i = 0; i < cells.length; i++) {\n            cell = cells[i];\n            currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n            if (currentIndex > numberOfCols) {\n                numberOfCols = currentIndex;\n            }\n        }\n\n        return numberOfCols;\n    },\n\n    _getNumberOfHeaderColumns: function(table, numberOfHeaderRows) {\n        var rows = table.rows;\n        var numberOfCols = 0;\n        var currentIndex, row, i, j, cell;\n\n        for (i = numberOfHeaderRows; i < rows.length; i++) {\n            row = rows[i];\n\n            for (j = 0; j < row.cells.length; j++) {\n                cell = row.cells[j];\n\n                if (this.is(cell, \"th\")) {\n                    currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n                    if (currentIndex > numberOfCols) {\n                        numberOfCols = currentIndex;\n                    }\n                }\n            }\n        }\n\n        return numberOfCols;\n    },\n\n    _getNumberOfHeaderRows: function(table) {\n        var rows = table.rows;\n        var thead = table.tHead;\n        var number = thead && table.tHead.rows ? table.tHead.rows.length : 0;\n        var j, row, cell, length;\n\n        if (number === 0) {\n            row = rows[0];\n            length = row.cells && row.cells.length;\n\n            while (row && length && this.is(row.cells[0], \"th\")) {\n                for (j = 0; j < length; j++) {\n                    cell = row ? row.cells[j] : null;\n\n                    if (!this.is(cell, \"th\")) {\n                        row = null;\n                    }\n                }\n\n                if (row) {\n                    number += 1;\n                    row = this.next(row);\n                    length = row && row.cells && row.cells.length;\n                }\n            }\n        }\n\n        return number;\n    },\n\n    // End: Table Utilities\n\n    _onlyUnique: function(value, index, self) {\n        return self.indexOf(value) === index;\n    }\n};\n\nkendo.ui.editor.Dom = Dom;\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\n// Imports ================================================================\nvar kendo = window.kendo;\nvar Editor = kendo.ui.editor;\nvar dom = Editor.Dom;\nvar extend = $.extend;\n\nvar fontSizeMappings = 'xx-small,x-small,small,medium,large,x-large,xx-large'.split(',');\nvar quoteRe = /\"/g; //\"\nvar brRe = /<br[^>]*>/i;\nvar pixelRe = /^\\d+(\\.\\d*)?(px)?$/i;\nvar emptyPRe = /<p>(?:&nbsp;)?<\\/p>/i;\nvar cssDeclaration = /(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/g;\nvar sizzleAttr = /^sizzle-\\d+/i;\nvar scriptAttr = /^k-script-/i;\nvar onerrorRe = /\\s*onerror\\s*=\\s*(?:'|\")?([^'\">\\s]*)(?:'|\")?/i;\nvar br = '<br class=\"k-br\">';\nvar bomSpan = \"<span class='k-br'>\\ufeff</span>\";\n\nvar div = document.createElement(\"div\");\ndiv.innerHTML = \" <hr>\";\nvar supportsLeadingWhitespace = div.firstChild.nodeType === 3;\ndiv = null;\nvar isFunction = kendo.isFunction;\n\nvar TD = \"td\";\n\nvar Serializer = {\n    toEditableHtml: function(html) {\n        return (html || \"\")\n            .replace(/<!\\[CDATA\\[(.*)?\\]\\]>/g, \"<!--[CDATA[$1]]-->\")\n            .replace(/<(\\/?)script([^>]*)>/ig, \"<$1k:script$2>\")\n            .replace(/<img([^>]*)>/ig, function(match) {\n                return match.replace(onerrorRe, \"\");\n            })\n            .replace(/(<\\/?img[^>]*>)[\\r\\n\\v\\f\\t ]+/ig, \"$1\")\n            .replace(/^<(table|blockquote)/i, br + '<$1')\n            .replace(/^[\\s]*(&nbsp;|\\u00a0)/i, '$1')\n            .replace(/<\\/(table|blockquote)>$/i, '</$1>' + br);\n    },\n\n    _toEditableImmutables: function(body) {\n        var immutable = Editor.Immutables.immutable,\n            emptyTextNode = dom.emptyTextNode,\n            first = body.firstChild,\n            last = body.lastChild;\n\n        while (emptyTextNode(first)) {\n            first = first.nextSibling;\n        }\n\n        while (emptyTextNode(last)) {\n            last = last.previousSibling;\n        }\n\n        if (first && immutable(first)) {\n            $(bomSpan).prependTo(body);\n        }\n\n        if (last && immutable(last)) {\n            $(bomSpan).appendTo(body);\n        }\n    },\n\n    _fillEmptyElements: function(body) {\n        // fills empty elements to allow them to be focused\n        $(body).find(\"p,td\").each(function() {\n            var p = $(this);\n            if (/^\\s*$/g.test(p.text()) && !p.find(\"img,input\").length) {\n                var node = this;\n                while (node.children[0] && node.children[0].nodeType != 3) {\n                    node = node.children[0];\n                }\n\n                if (node.nodeType == 1 && !dom.empty[dom.name(node)]) {\n                    if (dom.is(node, \"td\")) {\n                        node.innerHTML = kendo.ui.editor.emptyTableCellContent;\n                    }\n                    else {\n                        node.innerHTML = kendo.ui.editor.emptyElementContent;\n                    }\n                }\n            }\n        });\n    },\n\n    _removeSystemElements: function(body) {\n        // removes persisted system elements\n        $(\".k-paste-container\", body).remove();\n    },\n\n    _resetOrderedLists: function(root) {\n        // fix for IE9 OL bug -- https://connect.microsoft.com/IE/feedback/details/657695/ordered-list-numbering-changes-from-correct-to-0-0\n        var ols = root.getElementsByTagName(\"ol\"), i, ol, originalStart;\n\n        for (i = 0; i < ols.length; i++) {\n            ol = ols[i];\n            originalStart = ol.getAttribute(\"start\");\n\n            ol.setAttribute(\"start\", 1);\n\n            if (originalStart) {\n                ol.setAttribute(\"start\", originalStart);\n            } else {\n                ol.removeAttribute(originalStart);\n            }\n        }\n    },\n\n    _preventScriptExecution: function(root) {\n        $(root).find(\"*\").each(function() {\n            var attributes = this.attributes;\n            var attribute, i, l, name;\n            var attributesToRemove = [];\n\n            for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n                name = attribute.nodeName;\n\n                if (attribute.specified && /^on/i.test(name)) {\n                    this.setAttribute(\"k-script-\" + name, attribute.value);\n                    attributesToRemove.push(name);\n                }\n            }\n\n            for (i = 0, l = attributesToRemove.length; i < l; i++) {\n                this.removeAttribute(attributesToRemove[i]);\n            }\n        });\n    },\n\n    htmlToDom: function(html, root, options) {\n        var browser = kendo.support.browser;\n        var msie = browser.msie;\n        var o = options || {};\n        var immutables = o.immutables;\n\n        html = Serializer.toEditableHtml(html);\n\n        if (isFunction(o.custom)) {\n            html = o.custom(html) || html;\n        }\n        root.innerHTML = html;\n\n        if (immutables) {\n            immutables.deserialize(root);\n        }\n\n        if (msie) {\n            // unicode characters denormalize the DOM tree in IE9\n            dom.normalize(root);\n\n            Serializer._resetOrderedLists(root);\n        }\n\n        Serializer._preventScriptExecution(root);\n\n        Serializer._fillEmptyElements(root);\n\n        Serializer._removeSystemElements(root);\n\n        Serializer._toEditableImmutables(root);\n\n        // add k-table class to all tables\n        $(\"table\", root).addClass(\"k-table\");\n\n        return root;\n    },\n\n    domToXhtml: function(root, options) {\n        var result = [];\n        var immutables = options && options.immutables;\n\n        function semanticFilter(attributes) {\n            return $.grep(attributes, function(attr) {\n                return attr.name != \"style\";\n            });\n        }\n\n        function mapStart(node, tag) {\n            result.push('<' + tag);\n            attr(node);\n            result.push('>');\n        }\n\n        var tagMap = {\n            iframe: {\n                start: function(node) { mapStart(node, \"iframe\"); },\n                end: function() { result.push('</iframe>'); }\n            },\n            'k:script': {\n                start: function(node) { mapStart(node, \"script\"); },\n                end: function() { result.push('</script>'); },\n                skipEncoding: true\n            },\n            span: {\n                canOptimize: true,\n                semantic: true,\n                start: function(node) {\n                    var style = node.style;\n\n                    var attributes = specifiedAttributes(node);\n                    var semanticAttributes = semanticFilter(attributes);\n\n                    if (semanticAttributes.length) {\n                        result.push(\"<span\"); attr(node, semanticAttributes); result.push(\">\");\n                    }\n\n                    if (style.textDecoration == \"underline\") {\n                        result.push(\"<u>\");\n                    }\n\n                    var font = [];\n                    if (style.color) {\n                        font.push('color=\"' + dom.toHex(style.color) + '\"');\n                    }\n\n                    if (style.fontFamily) {\n                        font.push('face=\"' + style.fontFamily + '\"');\n                    }\n\n                    if (style.fontSize) {\n                        var size = $.inArray(style.fontSize, fontSizeMappings);\n                        font.push('size=\"' + size + '\"');\n                    }\n\n                    // Apply the rest of the inline styles back\n                    var inlineStyles = [];\n                    var ignoredStylePrefixes = [\"text-decoration\", \"color\", \"font\"];\n\n                    for (let i = 0; i < style.length; i++) {\n                        var inlineStyle = style[i];\n\n                        if (ignoredStylePrefixes.filter(prop => inlineStyle.startsWith(prop)).length <= 0) {\n                            inlineStyles.push(`${inlineStyle}: ${style[inlineStyle]}`);\n                        }\n                    }\n\n                    if (inlineStyles.length) {\n                        font.push('style=\"' + inlineStyles.join(\";\") + '\"');\n                    }\n\n                    if (font.length) {\n                        result.push(\"<font \" + font.join(\" \") + \">\");\n                    }\n                },\n                end: function(node) {\n                    var style = node.style;\n\n                    if (style.color || style.fontFamily || style.fontSize) {\n                        result.push(\"</font>\");\n                    }\n\n                    if (style.textDecoration == \"underline\") {\n                        result.push(\"</u>\");\n                    }\n\n                    if (semanticFilter(specifiedAttributes(node)).length) {\n                        result.push(\"</span>\");\n                    }\n                }\n            },\n            strong: {\n                semantic: true,\n                start: function(node) { mapStart(node, \"b\"); },\n                end: function() { result.push('</b>'); }\n            },\n            em: {\n                semantic: true,\n                start: function(node) { mapStart(node, \"i\"); },\n                end: function() { result.push('</i>'); }\n            },\n            b: {\n                semantic: false,\n                start: function(node) { mapStart(node, \"strong\"); },\n                end: function() { result.push('</strong>'); }\n            },\n            i: {\n                semantic: false,\n                start: function(node) { mapStart(node, \"em\"); },\n                end: function() { result.push('</em>'); }\n            },\n            u: {\n                semantic: false,\n                start: function(node) {\n                    result.push('<span');\n\n                    var attributes = specifiedAttributes(node);\n                    var style = $(attributes).filter(function(i, item) { return item.name == \"style\"; })[0];\n                    var styleObj = { nodeName: \"style\", value: \"text-decoration:underline;\" };\n\n                    if (style) {\n                        styleObj.value = style.value;\n                        if (!/text-decoration/i.test(styleObj.value)) {\n                            styleObj.value = \"text-decoration:underline;\" + styleObj.value;\n                        }\n                        attributes.splice($.inArray(style, attributes), 1);\n                    }\n                    attributes.push(styleObj);\n\n                    attr(node, attributes);\n                    result.push('>');\n                },\n                end: function() { result.push('</span>'); }\n            },\n            font: {\n                canOptimize: true,\n                semantic: false,\n                start: function(node) {\n                    result.push('<span style=\"');\n\n                    var color = node.getAttribute('color');\n                    var size = fontSizeMappings[node.getAttribute('size')];\n                    var face = node.getAttribute('face');\n\n                    if (color) {\n                        result.push('color:');\n                        result.push(dom.toHex(color));\n                        result.push(';');\n                    }\n\n                    if (face) {\n                        result.push('font-family:');\n                        result.push(face);\n                        result.push(';');\n                    }\n\n                    if (size) {\n                        result.push('font-size:');\n                        result.push(size);\n                        result.push(';');\n                    }\n\n                    result.push('\">');\n                },\n                end: function() {\n                    result.push('</span>');\n                }\n            }\n        };\n\n        tagMap.script = tagMap[\"k:script\"];\n\n        options = options || {};\n\n        if (typeof options.semantic == \"undefined\") {\n            options.semantic = true;\n        }\n\n        function cssProperties(cssText) {\n            var trim = kendo.trim;\n            var css = trim(cssText);\n            var match;\n            var property, value;\n            var properties = [];\n\n            cssDeclaration.lastIndex = 0;\n\n            while (true) {\n                match = cssDeclaration.exec(css);\n\n                if (!match) {\n                    break;\n                }\n\n                property = trim(match[1].toLowerCase());\n                value = trim(match[2]);\n\n                if (property == \"font-size-adjust\" || property == \"font-stretch\") {\n                    continue;\n                }\n\n                if (property.indexOf('color') >= 0) {\n                    value = dom.toHex(value);\n                } else if (property.indexOf('font') >= 0) {\n                    value = value.replace(quoteRe, \"'\");\n                } else if (/\\burl\\(/g.test(value)) {\n                    value = value.replace(quoteRe, \"\");\n                }\n\n                properties.push({ property: property, value: value });\n            }\n\n            return properties;\n        }\n\n        function styleAttr(cssText) {\n            var properties = cssProperties(cssText);\n            var i;\n\n            for (i = 0; i < properties.length; i++) {\n                result.push(properties[i].property);\n                result.push(':');\n                result.push(properties[i].value);\n                result.push(';');\n            }\n        }\n\n        function specifiedAttributes(node) {\n            var result = [];\n            var attributes = node.attributes;\n            var attribute, i, l;\n            var name, value, specified;\n\n            for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n\n                name = attribute.nodeName;\n                value = attribute.value;\n                specified = attribute.specified;\n\n                // In IE < 8 the 'value' attribute is not returned as 'specified'. The same goes for type=\"text\"\n                if (name == 'value' && 'value' in node && node.value) {\n                    specified = true;\n                } else if (name == 'type' && value == 'text') {\n                    specified = true;\n                } else if (name == \"class\" && !value) {\n                    specified = false;\n                } else if (sizzleAttr.test(name)) {\n                    specified = false;\n                } else if (name == 'complete') {\n                    specified = false;\n                } else if (name == 'altHtml') {\n                    specified = false;\n                } else if (name == 'start' && dom.is(node, \"ul\")) {\n                    specified = false;\n                } else if (name == 'start' && dom.is(node, \"ol\") && value == \"1\") {\n                    specified = false;\n                } else if (name.indexOf('_moz') >= 0) {\n                    specified = false;\n                } else if (scriptAttr.test(name)) {\n                    specified = !!options.scripts;\n                } else if (name == 'data-role' && value == 'resizable' && (dom.is(node, \"tr\") || dom.is(node, \"td\"))) {\n                    specified = false;\n                }\n\n                if (specified) {\n                    result.push(attribute);\n                }\n            }\n\n            return result;\n        }\n\n        function attr(node, attributes) {\n            var i, l, attribute, name, value;\n\n            attributes = attributes || specifiedAttributes(node);\n\n            if (dom.is(node, 'img')) {\n                var width = node.style.width,\n                    height = node.style.height,\n                    $node = $(node);\n\n                if (width && pixelRe.test(width)) {\n                    $node.attr('width', parseInt(width, 10));\n                    dom.unstyle(node, { width: undefined$1 });\n                }\n\n                if (height && pixelRe.test(height)) {\n                    $node.attr('height', parseInt(height, 10));\n                    dom.unstyle(node, { height: undefined$1 });\n                }\n            }\n\n            if (!attributes.length) {\n                return;\n            }\n\n            // Remove the following if everything seems to be in order.\n            // https://github.com/telerik/kendo-ui-core/issues/3639\n            // attributes.sort(function (a, b) {\n            //     return a.nodeName > b.nodeName ? 1 : a.nodeName < b.nodeName ? -1 : 0;\n            // });\n\n            for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n                name = attribute.nodeName;\n                value = attribute.value;\n\n                if (name == \"class\" && value == \"k-table\") {\n                    continue;\n                }\n\n                name = name.replace(scriptAttr, \"\");\n\n                result.push(' ');\n                result.push(name);\n                result.push('=\"');\n\n                if (name == 'style') {\n                    styleAttr(value || node.style.cssText);\n                } else if (name == 'src' || name == 'href') {\n                    result.push(kendo.htmlEncode(node.getAttribute(name, 2)));\n                } else {\n                    result.push(dom.fillAttrs[name] ? name : value);\n                }\n\n                result.push('\"');\n            }\n        }\n\n        function children(node, skip, skipEncoding) {\n            for (var childNode = node.firstChild; childNode; childNode = childNode.nextSibling) {\n                child(childNode, skip, skipEncoding);\n            }\n        }\n\n        function text(node) {\n            return node.nodeValue.replace(/\\ufeff/g, \"\");\n        }\n\n        function isEmptyBomNode(node) {\n            if (dom.isBom(node)) {\n                do {\n                    node = node.parentNode;\n\n                    if (dom.is(node, TD) && node.childNodes.length === 1) {\n                        return true;\n                    }\n\n                    if (node.childNodes.length !== 1) {\n                        return false;\n                    }\n                } while (!dom.isBlock(node));\n\n                return true;\n            }\n\n            return false;\n        }\n\n        function child(node, skip, skipEncoding) {\n            var nodeType = node.nodeType,\n                tagName, mapper,\n                parent, value, previous, jqNode;\n\n            if (immutables && Editor.Immutables.immutable(node)) {\n                result.push(immutables.serialize(node));\n            } else if (nodeType == 1) {\n                tagName = dom.name(node);\n                jqNode = $(node);\n\n                if (jqNode.hasClass(\"k-element-resize-handle-wrapper\") || jqNode.hasClass(\"k-column-resize-handle-wrapper\") || jqNode.hasClass(\"k-row-resize-handle-wrapper\")) {\n                    return;\n                }\n\n                if (!tagName || dom.insignificant(node)) {\n                    return;\n                }\n\n                if (!options.scripts && (tagName == \"script\" || tagName == \"k:script\")) {\n                    return;\n                }\n\n                mapper = tagMap[tagName];\n\n                if (mapper) {\n                    if (mapper.canOptimize &&\n                        options.optimizeTags &&\n                        shouldOptimize(node)) {\n                            children(node, false, mapper.skipEncoding);\n                        return;\n                    }\n\n                    if (typeof mapper.semantic == \"undefined\" ||\n                        (options.semantic ^ mapper.semantic)) {\n                        mapper.start(node);\n                        children(node, false, mapper.skipEncoding);\n                        mapper.end(node);\n                        return;\n                    }\n                }\n\n                result.push('<');\n                result.push(tagName);\n\n                attr(node);\n\n                if (dom.empty[tagName]) {\n                    result.push(' />');\n                } else {\n                    result.push('>');\n                    children(node, skip || dom.is(node, 'pre'));\n                    result.push('</');\n                    result.push(tagName);\n                    result.push('>');\n                }\n            } else if (nodeType == 3) {\n                if (isEmptyBomNode(node)) {\n                    result.push('&nbsp;');\n                    return;\n                }\n\n                value = text(node);\n\n                if (!skip && supportsLeadingWhitespace) {\n                    parent = node.parentNode;\n                    previous = node.previousSibling;\n\n                    if (!previous) {\n                         previous = (dom.isInline(parent) ? parent : node).previousSibling;\n                    }\n\n                    if (!previous || previous.innerHTML === \"\" || dom.isBlock(previous)) {\n                        if (options.keepEOL) {\n                            value = value.replace(/[\\r\\n\\v\\f\\t ]+/, ' ');\n                        } else {\n                            value = value.replace(/^[\\r\\n\\v\\f\\t ]+/, '');\n                        }\n                    }\n\n                    value = value.replace(/ +/, ' ');\n                }\n\n                result.push(skipEncoding ? value : dom.encode(value, options));\n\n            } else if (nodeType == 4) {\n                result.push('<![CDATA[');\n                result.push(node.data);\n                result.push(']]>');\n            } else if (nodeType == 8) {\n                if (node.data.indexOf('[CDATA[') < 0) {\n                    result.push('<!--');\n                    result.push(node.data);\n                    result.push('-->');\n                } else {\n                    result.push('<!');\n                    result.push(node.data);\n                    result.push('>');\n                }\n            }\n        }\n\n        function shouldOptimize(node) {\n            return node.attributes.length === 0;\n        }\n\n        function textOnly(root) {\n            var childrenCount = root.childNodes.length;\n            var textChild = childrenCount && root.firstChild.nodeType == 3;\n\n            return textChild && (childrenCount == 1 || (childrenCount == 2 && dom.insignificant(root.lastChild)));\n        }\n\n        function runCustom() {\n            if (kendo.isFunction(options.custom)) {\n                result = options.custom(result) || result;\n            }\n        }\n\n        if (textOnly(root)) {\n            result = dom.encode(text(root.firstChild).replace(/[\\r\\n\\v\\f\\t ]+/, ' '), options);\n            runCustom();\n\n            return result;\n        }\n\n        children(root);\n        result = result.join('');\n        runCustom();\n\n        // if serialized dom contains only whitespace elements, consider it empty (required field validation)\n        if (result.replace(brRe, \"\").replace(emptyPRe, \"\") === \"\") {\n            return \"\";\n        }\n\n        return result;\n    }\n\n};\n\nextend(Editor, {\n    Serializer: Serializer\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        browser = kendo.support.browser,\n        dom = Editor.Dom,\n        findNodeIndex = dom.findNodeIndex,\n        isDataNode = dom.isDataNode,\n        findClosestAncestor = dom.findClosestAncestor,\n        getNodeLength = dom.getNodeLength,\n        normalize = dom.normalize;\n\nvar SelectionUtils = {\n    selectionFromWindow: function(window) {\n        if (!window) {\n            return;\n        }\n\n        if (!(\"getSelection\" in window)) {\n            return new W3CSelection(window.document);\n        }\n\n        return window.getSelection();\n    },\n\n    selectionFromRange: function(range) {\n        var rangeDocument = RangeUtils.documentFromRange(range);\n        return SelectionUtils.selectionFromDocument(rangeDocument);\n    },\n\n    selectionFromDocument: function(document) {\n        return SelectionUtils.selectionFromWindow(dom.windowFromDocument(document));\n    }\n};\n\nvar W3CRange = Class.extend({\n    init: function(doc) {\n        $.extend(this, {\n            ownerDocument: doc, /* not part of the spec; used when cloning ranges, traversing the dom and creating fragments */\n            startContainer: doc,\n            endContainer: doc,\n            commonAncestorContainer: doc,\n            startOffset: 0,\n            endOffset: 0,\n            collapsed: true\n        });\n    },\n\n    // Positioning Methods\n    setStart: function(node, offset) {\n        this.startContainer = node;\n        this.startOffset = offset;\n        updateRangeProperties(this);\n        fixIvalidRange(this, true);\n    },\n\n    setEnd: function(node, offset) {\n        this.endContainer = node;\n        this.endOffset = offset;\n        updateRangeProperties(this);\n        fixIvalidRange(this, false);\n    },\n\n    setStartBefore: function(node) {\n        this.setStart(node.parentNode, findNodeIndex(node));\n    },\n\n    setStartAfter: function(node) {\n        this.setStart(node.parentNode, findNodeIndex(node) + 1);\n    },\n\n    setEndBefore: function(node) {\n        this.setEnd(node.parentNode, findNodeIndex(node));\n    },\n\n    setEndAfter: function(node) {\n        this.setEnd(node.parentNode, findNodeIndex(node) + 1);\n    },\n\n    selectNode: function(node) {\n        this.setStartBefore(node);\n        this.setEndAfter(node);\n    },\n\n    selectNodeContents: function(node) {\n        this.setStart(node, 0);\n        this.setEnd(node, node[node.nodeType === 1 ? 'childNodes' : 'nodeValue'].length);\n    },\n\n    collapse: function(toStart) {\n        var that = this;\n\n        if (toStart) {\n            that.setEnd(that.startContainer, that.startOffset);\n        } else {\n            that.setStart(that.endContainer, that.endOffset);\n        }\n    },\n\n    // Editing Methods\n\n    deleteContents: function() {\n        var that = this,\n            range = that.cloneRange();\n\n        if (that.startContainer != that.commonAncestorContainer) {\n            that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n        }\n\n        that.collapse(true);\n\n        (function deleteSubtree(iterator) {\n            while (iterator.next()) {\n                if (iterator.hasPartialSubtree()) {\n                    deleteSubtree(iterator.getSubtreeIterator());\n                } else {\n                    iterator.remove();\n                }\n            }\n        })(new RangeIterator(range));\n    },\n\n    cloneContents: function() {\n        // clone subtree\n        var document = RangeUtils.documentFromRange(this);\n        return (function cloneSubtree(iterator) {\n                var node, frag = document.createDocumentFragment();\n\n                while (node = iterator.next()) {\n                    node = node.cloneNode(!iterator.hasPartialSubtree());\n\n                    if (iterator.hasPartialSubtree()) {\n                        node.appendChild(cloneSubtree(iterator.getSubtreeIterator()));\n                    }\n\n                    frag.appendChild(node);\n                }\n\n                return frag;\n        })(new RangeIterator(this));\n    },\n\n    extractContents: function() {\n        var that = this,\n            range = that.cloneRange();\n\n        if (that.startContainer != that.commonAncestorContainer) {\n            that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n        }\n\n        that.collapse(true);\n\n        var document = RangeUtils.documentFromRange(that);\n\n        return (function extractSubtree(iterator) {\n            var node, frag = document.createDocumentFragment();\n\n            while (node = iterator.next()) {\n                if (iterator.hasPartialSubtree()) {\n                    node = node.cloneNode(false);\n                    node.appendChild(extractSubtree(iterator.getSubtreeIterator()));\n                } else {\n                    iterator.remove(that.originalRange);\n                }\n\n                frag.appendChild(node);\n            }\n\n            return frag;\n        })(new RangeIterator(range));\n    },\n\n    insertNode: function(node) {\n        var that = this;\n\n        if (isDataNode(that.startContainer)) {\n            if (that.startOffset != that.startContainer.nodeValue.length) {\n                dom.splitDataNode(that.startContainer, that.startOffset);\n            }\n\n            dom.insertAfter(node, that.startContainer);\n        } else {\n            dom.insertAt(that.startContainer, node, that.startOffset);\n        }\n\n        that.setStart(that.startContainer, that.startOffset);\n    },\n\n    cloneRange: function() {\n        // fast copy\n        return $.extend(new W3CRange(this.ownerDocument), {\n            startContainer: this.startContainer,\n            endContainer: this.endContainer,\n            commonAncestorContainer: this.commonAncestorContainer,\n            startOffset: this.startOffset,\n            endOffset: this.endOffset,\n            collapsed: this.collapsed,\n\n            originalRange: this /* not part of the spec; used to update the original range when calling extractContents() on clones */\n        });\n    },\n\n    // used for debug purposes\n    toString: function() {\n        var startNodeName = this.startContainer.nodeName,\n            endNodeName = this.endContainer.nodeName;\n\n        return [startNodeName == \"#text\" ? this.startContainer.nodeValue : startNodeName, '(', this.startOffset, ') : ',\n                endNodeName == \"#text\" ? this.endContainer.nodeValue : endNodeName, '(', this.endOffset, ')'].join('');\n    }\n});\n\nW3CRange.fromNode = function(node) {\n    return new W3CRange(node.ownerDocument);\n};\n\n/* can be used in Range.compareBoundaryPoints if we need it one day */\nfunction compareBoundaries(start, end, startOffset, endOffset) {\n    if (start == end) {\n        return endOffset - startOffset;\n    }\n\n    // end is child of start\n    var container = end;\n    while (container && container.parentNode != start) {\n        container = container.parentNode;\n    }\n\n    if (container) {\n        return findNodeIndex(container) - startOffset;\n    }\n\n    // start is child of end\n    container = start;\n    while (container && container.parentNode != end) {\n        container = container.parentNode;\n    }\n\n    if (container) {\n        return endOffset - findNodeIndex(container) - 1;\n    }\n\n    // deep traversal\n    var root = dom.commonAncestor(start, end);\n    var startAncestor = start;\n\n    while (startAncestor && startAncestor.parentNode != root) {\n        startAncestor = startAncestor.parentNode;\n    }\n\n    if (!startAncestor) {\n        startAncestor = root;\n    }\n\n    var endAncestor = end;\n    while (endAncestor && endAncestor.parentNode != root) {\n        endAncestor = endAncestor.parentNode;\n    }\n\n    if (!endAncestor) {\n        endAncestor = root;\n    }\n\n    if (startAncestor == endAncestor) {\n        return 0;\n    }\n\n    return findNodeIndex(endAncestor) - findNodeIndex(startAncestor);\n}\n\nfunction fixIvalidRange(range, toStart) {\n    function isInvalidRange(range) {\n        try {\n            return compareBoundaries(range.startContainer, range.endContainer, range.startOffset, range.endOffset) < 0;\n        } catch (ex) {\n            // range was initially invalid (e.g. when cloned from invalid range) - it must be fixed\n            return true;\n        }\n    }\n\n    if (isInvalidRange(range)) {\n        if (toStart) {\n            range.commonAncestorContainer = range.endContainer = range.startContainer;\n            range.endOffset = range.startOffset;\n        } else {\n            range.commonAncestorContainer = range.startContainer = range.endContainer;\n            range.startOffset = range.endOffset;\n        }\n\n        range.collapsed = true;\n    }\n}\n\nfunction updateRangeProperties(range) {\n    range.collapsed = range.startContainer == range.endContainer && range.startOffset == range.endOffset;\n\n    var node = range.startContainer;\n    while (node && node != range.endContainer && !dom.isAncestorOf(node, range.endContainer)) {\n        node = node.parentNode;\n    }\n\n    range.commonAncestorContainer = node;\n}\n\nvar RangeIterator = Class.extend({\n    init: function(range) {\n        $.extend(this, {\n            range: range,\n            _current: null,\n            _next: null,\n            _end: null\n        });\n\n        if (range.collapsed) {\n            return;\n        }\n\n        var root = range.commonAncestorContainer;\n\n        this._next = range.startContainer == root && !isDataNode(range.startContainer) ?\n        range.startContainer.childNodes[range.startOffset] :\n        findClosestAncestor(root, range.startContainer);\n\n        this._end = range.endContainer == root && !isDataNode(range.endContainer) ?\n        range.endContainer.childNodes[range.endOffset] :\n        findClosestAncestor(root, range.endContainer).nextSibling;\n    },\n\n    hasNext: function() {\n        return !!this._next;\n    },\n\n    next: function() {\n        var that = this,\n            current = that._current = that._next;\n        that._next = that._current && that._current.nextSibling != that._end ?\n        that._current.nextSibling : null;\n\n        if (isDataNode(that._current)) {\n            if (that.range.endContainer == that._current) {\n                current = current.cloneNode(true);\n                current.deleteData(that.range.endOffset, current.length - that.range.endOffset);\n            }\n\n            if (that.range.startContainer == that._current) {\n                current = current.cloneNode(true);\n                current.deleteData(0, that.range.startOffset);\n            }\n        }\n\n        return current;\n    },\n\n    traverse: function(callback) {\n        var that = this,\n            current;\n\n        function next() {\n            that._current = that._next;\n            that._next = that._current && that._current.nextSibling != that._end ? that._current.nextSibling : null;\n            return that._current;\n        }\n\n        while (current = next()) {\n            if (that.hasPartialSubtree()) {\n                that.getSubtreeIterator().traverse(callback);\n            } else {\n                callback(current);\n            }\n        }\n\n        return current;\n    },\n\n    remove: function(originalRange) {\n        var that = this,\n            inStartContainer = that.range.startContainer == that._current,\n            inEndContainer = that.range.endContainer == that._current,\n            start, end, delta;\n\n        if (isDataNode(that._current) && (inStartContainer || inEndContainer)) {\n            start = inStartContainer ? that.range.startOffset : 0;\n            end = inEndContainer ? that.range.endOffset : that._current.length;\n            delta = end - start;\n\n            if (originalRange && (inStartContainer || inEndContainer)) {\n                if (that._current == originalRange.startContainer && start <= originalRange.startOffset) {\n                    originalRange.startOffset -= delta;\n                }\n\n                if (that._current == originalRange.endContainer && end <= originalRange.endOffset) {\n                    originalRange.endOffset -= delta;\n                }\n            }\n\n            that._current.deleteData(start, delta);\n        } else {\n            var parent = that._current.parentNode;\n\n            if (originalRange && (that.range.startContainer == parent || that.range.endContainer == parent)) {\n                var nodeIndex = findNodeIndex(that._current);\n\n                if (parent == originalRange.startContainer && nodeIndex <= originalRange.startOffset) {\n                    originalRange.startOffset -= 1;\n                }\n\n                if (parent == originalRange.endContainer && nodeIndex < originalRange.endOffset) {\n                    originalRange.endOffset -= 1;\n                }\n            }\n\n            dom.remove(that._current);\n        }\n    },\n\n    hasPartialSubtree: function() {\n        return !isDataNode(this._current) &&\n        (dom.isAncestorOrSelf(this._current, this.range.startContainer) ||\n            dom.isAncestorOrSelf(this._current, this.range.endContainer));\n    },\n\n    getSubtreeIterator: function() {\n        return new RangeIterator(this.getSubRange());\n    },\n\n    getSubRange: function() {\n        var that = this,\n            subRange = that.range.cloneRange();\n        subRange.selectNodeContents(that._current);\n        if (dom.isAncestorOrSelf(that._current, that.range.startContainer)) {\n            subRange.setStart(that.range.startContainer, that.range.startOffset);\n        }\n        if (dom.isAncestorOrSelf(that._current, that.range.endContainer)) {\n            subRange.setEnd(that.range.endContainer, that.range.endOffset);\n        }\n\n        return subRange;\n    }\n});\n\nvar W3CSelection = Class.extend({\n    init: function(doc) {\n        this.ownerDocument = doc;\n        this.rangeCount = 1;\n    },\n\n    addRange: function(range) {\n        var textRange = this.ownerDocument.body.createTextRange();\n\n        // end container should be adopted first in order to prevent selection with negative length\n        adoptContainer(textRange, range, false);\n        adoptContainer(textRange, range, true);\n\n        textRange.select();\n    },\n\n    removeAllRanges: function() {\n        var selection = this.ownerDocument.selection;\n\n        if (selection.type != \"None\") {\n            selection.empty();\n        }\n    },\n\n    getRangeAt: function() {\n        var textRange,\n            range = new W3CRange(this.ownerDocument),\n            selection = this.ownerDocument.selection,\n            element, commonAncestor;\n\n        try {\n            textRange = selection.createRange();\n            element = textRange.item ? textRange.item(0) : textRange.parentElement();\n            if (element.ownerDocument != this.ownerDocument) {\n                return range;\n            }\n        } catch (ex) {\n            return range;\n        }\n\n        if (selection.type == \"Control\") {\n            range.selectNode(textRange.item(0));\n        } else {\n            commonAncestor = textRangeContainer(textRange);\n            adoptEndPoint(textRange, range, commonAncestor, true);\n            adoptEndPoint(textRange, range, commonAncestor, false);\n\n            if (range.startContainer.nodeType == 9) {\n                range.setStart(range.endContainer, range.startOffset);\n            }\n\n            if (range.endContainer.nodeType == 9) {\n                range.setEnd(range.startContainer, range.endOffset);\n            }\n\n            if (textRange.compareEndPoints(\"StartToEnd\", textRange) === 0) {\n                range.collapse(false);\n            }\n\n            var startContainer = range.startContainer,\n                endContainer = range.endContainer,\n                body = this.ownerDocument.body;\n\n            if (!range.collapsed && range.startOffset === 0 && range.endOffset == getNodeLength(range.endContainer) && // check for full body selection\n                !(startContainer == endContainer && isDataNode(startContainer) && startContainer.parentNode == body)) { // but not when single textnode is selected\n                var movedStart = false,\n                    movedEnd = false;\n\n                while (findNodeIndex(startContainer) === 0 && startContainer == startContainer.parentNode.firstChild && startContainer != body) {\n                    startContainer = startContainer.parentNode;\n                    movedStart = true;\n                }\n\n                while (findNodeIndex(endContainer) == getNodeLength(endContainer.parentNode) - 1 && endContainer == endContainer.parentNode.lastChild && endContainer != body) {\n                    endContainer = endContainer.parentNode;\n                    movedEnd = true;\n                }\n\n                if (startContainer == body && endContainer == body && movedStart && movedEnd) {\n                    range.setStart(startContainer, 0);\n                    range.setEnd(endContainer, getNodeLength(body));\n                }\n            }\n        }\n\n        return range;\n    }\n});\n\nfunction textRangeContainer(textRange) {\n    var left = textRange.duplicate(),\n        right = textRange.duplicate();\n\n    left.collapse(true);\n    right.collapse(false);\n\n    return dom.commonAncestor(textRange.parentElement(), left.parentElement(), right.parentElement());\n}\n\nfunction adoptContainer(textRange, range, start) {\n    // find anchor node and offset\n    var container = range[start ? \"startContainer\" : \"endContainer\"],\n        offset = range[start ? \"startOffset\" : \"endOffset\"],\n        textOffset = 0,\n        isData = isDataNode(container),\n        anchorNode = isData ? container : container.childNodes[offset] || null,\n        anchorParent = isData ? container.parentNode : container,\n        doc = range.ownerDocument,\n        cursor = doc.body.createTextRange(),\n        cursorNode;\n\n    // visible data nodes need a text offset\n    if (container.nodeType == 3 || container.nodeType == 4) {\n        textOffset = offset;\n    }\n\n    if (!anchorParent) {\n        anchorParent = doc.body;\n    }\n\n    if (anchorParent.nodeName.toLowerCase() == \"img\") {\n        cursor.moveToElementText(anchorParent);\n        cursor.collapse(false);\n        textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n    } else {\n        // create a cursor element node to position range (since we can't select text nodes)\n        cursorNode = anchorParent.insertBefore(dom.create(doc, \"a\"), anchorNode);\n\n        cursor.moveToElementText(cursorNode);\n        dom.remove(cursorNode);\n        cursor[start ? \"moveStart\" : \"moveEnd\"](\"character\", textOffset);\n        cursor.collapse(false);\n        textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n    }\n}\n\nfunction adoptEndPoint(textRange, range, commonAncestor, start) {\n    var cursorNode = dom.create(range.ownerDocument, \"a\"),\n        cursor = textRange.duplicate(),\n        comparison = start ? \"StartToStart\" : \"StartToEnd\",\n        result, parent, target,\n        previous, next,\n        args, index,\n        appended = false;\n\n    cursorNode.innerHTML = \"\\ufeff\";\n    cursor.collapse(start);\n\n    parent = cursor.parentElement();\n\n    if (!dom.isAncestorOrSelf(commonAncestor, parent)) {\n        parent = commonAncestor;\n    }\n\n    // detect range end points\n    // insert cursorNode within the textRange parent and move the cursor until it gets outside of the textRange\n    do {\n        if (appended) {\n            parent.insertBefore(cursorNode, cursorNode.previousSibling);\n        } else {\n            parent.appendChild(cursorNode);\n            appended = true;\n        }\n        cursor.moveToElementText(cursorNode);\n    } while ((result = cursor.compareEndPoints(comparison, textRange)) > 0 && cursorNode.previousSibling);\n\n    target = cursorNode.nextSibling;\n\n    if (result == -1 && isDataNode(target)) {\n        cursor.setEndPoint(start ? \"EndToStart\" : \"EndToEnd\", textRange);\n\n        dom.remove(cursorNode);\n\n        args = [target, cursor.text.length];\n    } else {\n        previous = !start && cursorNode.previousSibling;\n        next = start && cursorNode.nextSibling;\n\n        if (isDataNode(next)) {\n            args = [next, 0];\n        } else if (isDataNode(previous)) {\n            args = [previous, previous.length];\n        } else {\n            index = findNodeIndex(cursorNode);\n\n            if (parent.nextSibling && index == parent.childNodes.length - 1) {\n                args = [parent.nextSibling, 0];\n            } else {\n                args = [parent, index];\n            }\n        }\n\n        dom.remove(cursorNode);\n    }\n\n    range[start ? \"setStart\" : \"setEnd\"].apply(range, args);\n}\n\nvar RangeEnumerator = Class.extend({\n    init: function(range) {\n        this.enumerate = function() {\n            var nodes = [];\n\n            function visit(node) {\n                if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                    nodes.push(node);\n                } else {\n                    node = node.firstChild;\n                    while (node) {\n                        visit(node);\n                        node = node.nextSibling;\n                    }\n                }\n            }\n\n            new RangeIterator(range).traverse(visit);\n\n            return nodes;\n        };\n    }\n});\n\nvar ImmutablesRangeIterator = RangeIterator.extend({\n    hasPartialSubtree: function() {\n        var immutable = Editor.Immutables && Editor.Immutables.immutable;\n        return immutable && !immutable(this._current) && RangeIterator.fn.hasPartialSubtree.call(this);\n    },\n\n    getSubtreeIterator: function() {\n        return new ImmutablesRangeIterator(this.getSubRange());\n    }\n});\n\nvar ImmutablesRangeEnumerator = Class.extend({\n    init: function(range) {\n        this.enumerate = function() {\n            var nodes = [];\n            var immutable = Editor.Immutables && Editor.Immutables.immutable;\n            function visit(node) {\n                if (immutable && !immutable(node)) {\n                    if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                        nodes.push(node);\n                    } else {\n                        node = node.firstChild;\n                        while (node) {\n                            visit(node);\n                            node = node.nextSibling;\n                        }\n                    }\n                }\n            }\n\n            new ImmutablesRangeIterator(range).traverse(visit);\n\n            return nodes;\n        };\n    }\n});\n\nvar RestorePoint = Class.extend({\n    init: function(range, body, options) {\n        var that = this;\n        that.range = range;\n        that.rootNode = RangeUtils.documentFromRange(range);\n        that.body = body || that.getEditable(range);\n        if (dom.name(that.body) != \"body\") {\n            that.rootNode = that.body;\n        }\n\n        that.startContainer = that.nodeToPath(range.startContainer);\n        that.endContainer = that.nodeToPath(range.endContainer);\n        that.startOffset = that.offset(range.startContainer, range.startOffset);\n        that.endOffset = that.offset(range.endContainer, range.endOffset);\n\n        that.immutables = options && options.immutables;\n\n        if (that.immutables) {\n            that.serializedImmutables = Editor.Immutables.removeImmutables(that.body);\n        }\n\n        that.html = that.body.innerHTML;\n\n        if (that.immutables && !that.serializedImmutables.empty) {\n            Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n        }\n    },\n\n    index: function(node) {\n        var result = 0,\n            lastType = node.nodeType;\n\n        while (node = node.previousSibling) {\n            var nodeType = node.nodeType;\n\n            if (nodeType != 3 || lastType != nodeType) {\n                result ++;\n            }\n\n            lastType = nodeType;\n        }\n\n        return result;\n    },\n\n    getEditable: function(range) {\n        var root = range.commonAncestorContainer;\n\n        while (root && (root.nodeType == 3 || root.attributes && (!root.attributes.contentEditable || root.attributes.contentEditable.nodeValue.toLowerCase() == \"false\"))) {\n            root = root.parentNode;\n        }\n\n        return root;\n    },\n\n    restoreHtml: function() {\n        var that = this;\n\n        dom.removeChildren(that.body);\n        that.body.innerHTML = that.html;\n        if (that.immutables && !that.serializedImmutables.empty) {\n            Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n        }\n    },\n\n    offset: function(node, value) {\n        if (node.nodeType == 3) {\n            while ((node = node.previousSibling) && node.nodeType == 3) {\n                value += node.nodeValue.length;\n            }\n        }\n\n        return value;\n    },\n\n    nodeToPath: function(node) {\n        var path = [];\n\n        while (node != this.rootNode) {\n            path.push(this.index(node));\n            node = node.parentNode;\n        }\n\n        return path;\n    },\n\n    toRangePoint: function(range, start, path, denormalizedOffset) {\n        var node = this.rootNode,\n            length = path.length,\n            offset = denormalizedOffset;\n\n        while (length-- && node) {\n            node = node.childNodes[path[length]];\n        }\n\n        while (node && node.nodeType == 3 && node.nodeValue.length < offset) {\n            offset -= node.nodeValue.length;\n            node = node.nextSibling;\n        }\n\n        if (node && offset >= 0) {\n            range[start ? 'setStart' : 'setEnd'](node, offset);\n        }\n    },\n\n    toRange: function() {\n        var that = this,\n            result = that.range.cloneRange();\n\n        that.toRangePoint(result, true, that.startContainer, that.startOffset);\n        that.toRangePoint(result, false, that.endContainer, that.endOffset);\n\n        return result;\n    }\n\n});\n\nvar Marker = Class.extend({\n    init: function() {\n        this.caret = null;\n    },\n\n    addCaret: function(range) {\n        var that = this;\n        var caret = that.caret = dom.create(RangeUtils.documentFromRange(range), 'span', { className: 'k-marker' });\n        range.insertNode(caret);\n\n        dom.stripBomNode(caret.previousSibling);\n        dom.stripBomNode(caret.nextSibling);\n\n        range.selectNode(caret);\n        return caret;\n    },\n\n    removeCaret: function(range) {\n        var that = this,\n            previous = that.caret.previousSibling,\n            startOffset = 0;\n\n        if (previous) {\n            startOffset = isDataNode(previous) ? previous.nodeValue.length : findNodeIndex(previous);\n        }\n\n        var container = that.caret.parentNode;\n        var containerIndex = previous ? findNodeIndex(previous) : 0;\n\n        dom.remove(that.caret);\n        normalize(container);\n\n        var node = container.childNodes[containerIndex];\n\n        if (isDataNode(node)) {\n            range.setStart(node, startOffset);\n        } else if (node) {\n            var textNode = dom.lastTextNode(node);\n            if (textNode) {\n                range.setStart(textNode, textNode.nodeValue.length);\n            } else {\n                range[previous ? 'setStartAfter' : 'setStartBefore'](node);\n            }\n        } else {\n            if (!browser.msie && !container.innerHTML) {\n                container.innerHTML = '<br _moz_dirty=\"\" />';\n            }\n\n            range.selectNodeContents(container);\n        }\n        range.collapse(true);\n    },\n\n    add: function(range, expand) {\n        var that = this;\n\n        var collapsed = range.collapsed && !RangeUtils.isExpandable(range);\n        var doc = RangeUtils.documentFromRange(range);\n\n        if (expand && range.collapsed) {\n            that.addCaret(range);\n            range = RangeUtils.expand(range);\n        }\n\n        var rangeBoundary = range.cloneRange();\n\n        rangeBoundary.collapse(false);\n        that.end = dom.create(doc, 'span', { className: 'k-marker' });\n        rangeBoundary.insertNode(that.end);\n\n        rangeBoundary = range.cloneRange();\n        rangeBoundary.collapse(true);\n        that.start = that.end.cloneNode(true);\n        rangeBoundary.insertNode(that.start);\n\n        that._removeDeadMarkers(that.start, that.end);\n\n        if (collapsed) {\n            var bom = doc.createTextNode(\"\\ufeff\");\n            dom.insertAfter(bom.cloneNode(), that.start);\n            dom.insertBefore(bom, that.end);\n        }\n\n        normalize(range.commonAncestorContainer);\n\n        range.setStartBefore(that.start);\n        range.setEndAfter(that.end);\n\n        return range;\n    },\n\n    _removeDeadMarkers: function(start, end) {\n        if (start.previousSibling && start.previousSibling.nodeValue == \"\\ufeff\") {\n            dom.remove(start.previousSibling);\n        }\n\n        if (end.nextSibling && end.nextSibling.nodeValue == \"\\ufeff\") {\n            dom.remove(end.nextSibling);\n        }\n    },\n\n    _normalizedIndex: function(node) {\n        var index = findNodeIndex(node);\n        var pointer = node;\n\n        while (pointer.previousSibling) {\n            if (pointer.nodeType == 3 && pointer.previousSibling.nodeType == 3) {\n                index--;\n            }\n\n            pointer = pointer.previousSibling;\n        }\n\n        return index;\n    },\n\n    remove: function(range) {\n        var that = this,\n            start = that.start,\n            end = that.end,\n            shouldNormalizeStart,\n            shouldNormalizeEnd,\n            shouldNormalize;\n\n        normalize(range.commonAncestorContainer);\n\n        while (!start.nextSibling && start.parentNode) {\n            start = start.parentNode;\n        }\n\n        while (!end.previousSibling && end.parentNode) {\n            end = end.parentNode;\n        }\n\n        // merely accessing the siblings will solve range issues in IE\n        shouldNormalizeStart = (start.previousSibling && start.previousSibling.nodeType == 3) &&\n                               (start.nextSibling && start.nextSibling.nodeType == 3);\n\n        shouldNormalizeEnd = (end.previousSibling && end.previousSibling.nodeType == 3) &&\n                             (end.nextSibling && end.nextSibling.nodeType == 3);\n\n        shouldNormalize = shouldNormalizeStart && shouldNormalizeEnd;\n\n        start = start.nextSibling;\n        end = end.previousSibling;\n\n        var isBomSelected = start === end && dom.isBom(start);\n        if (isBomSelected && start.length > 1) {\n            start.nodeValue = start.nodeValue.charAt(0);\n        }\n\n        var collapsed = isBomSelected;\n        var collapsedToStart = false;\n        // collapsed range\n        if (start == that.end) {\n            collapsedToStart = !!that.start.previousSibling;\n            start = end = that.start.previousSibling || that.end.nextSibling;\n            collapsed = true;\n        }\n\n        dom.remove(that.start);\n        dom.remove(that.end);\n\n        if (!start || !end) {\n            range.selectNodeContents(range.commonAncestorContainer);\n            range.collapse(true);\n            return;\n        }\n\n        var startOffset = collapsed ? isDataNode(start) ? start.nodeValue.length : start.childNodes.length : 0;\n        var endOffset = isDataNode(end) ? end.nodeValue.length : end.childNodes.length;\n\n        if (start.nodeType == 3) {\n            while (start.previousSibling && start.previousSibling.nodeType == 3) {\n                start = start.previousSibling;\n                startOffset += start.nodeValue.length;\n            }\n        }\n\n        if (end.nodeType == 3) {\n            while (end.previousSibling && end.previousSibling.nodeType == 3) {\n                end = end.previousSibling;\n                endOffset += end.nodeValue.length;\n            }\n        }\n\n        var startParent = start.parentNode;\n        var endParent = end.parentNode;\n        var startIndex = this._normalizedIndex(start);\n        var endIndex = this._normalizedIndex(end);\n\n        normalize(startParent);\n        if (start.nodeType == 3) {\n            start = startParent.childNodes[startIndex];\n        }\n\n        normalize(endParent);\n        if (end.nodeType == 3) {\n            end = endParent.childNodes[endIndex];\n        }\n\n        if (collapsed) {\n            if (start.nodeType == 3) {\n                range.setStart(start, startOffset);\n            } else {\n                range[collapsedToStart ? 'setStartAfter' : 'setStartBefore'](start);\n            }\n\n            range.collapse(true);\n\n        } else {\n            if (start.nodeType == 3) {\n                range.setStart(start, startOffset);\n            } else {\n                range.setStartBefore(start);\n            }\n\n            if (end.nodeType == 3) {\n                range.setEnd(end, endOffset);\n            } else {\n                range.setEndAfter(end);\n            }\n        }\n\n        if (that.caret) {\n            that.removeCaret(range);\n        }\n    }\n});\n\nvar boundary = /[\\u0009-\\u000d]|\\u0020|\\u00a0|\\ufeff|\\.|,|;|:|!|\\(|\\)|\\?/;\n\nvar RangeUtils = {\n    nodes: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n        if (!nodes.length) {\n            range.selectNodeContents(range.commonAncestorContainer);\n            nodes = RangeUtils.textNodes(range);\n            if (!nodes.length) {\n                nodes = dom.significantChildNodes(range.commonAncestorContainer);\n            }\n        }\n        return nodes;\n    },\n\n    textNodes: function(range) {\n        var allNodes = new RangeEnumerator(range).enumerate(),\n            result = allNodes.filter(function(node) {\n                return dom.allowsTextContent(node.parentElement);\n            });\n\n        return result;\n    },\n\n    editableTextNodes: function(range) {\n        var nodes = [],\n            immutableParent = Editor.Immutables && Editor.Immutables.immutableParent,\n            result = [];\n\n        if (immutableParent && !immutableParent(range.commonAncestorContainer)) {\n            nodes = new ImmutablesRangeEnumerator(range).enumerate();\n            result = nodes.filter(function(node) {\n                return dom.allowsTextContent(node.parentElement);\n            });\n        }\n\n        return result;\n    },\n\n    documentFromRange: function(range) {\n        var startContainer = range.startContainer;\n        return startContainer.nodeType == 9 ? startContainer : startContainer.ownerDocument;\n    },\n\n    createRange: function(document) {\n        return document.createRange();\n    },\n\n    selectRange: function(range) {\n        var image = RangeUtils.image(range);\n        if (image) {\n            range.setStartAfter(image);\n            range.setEndAfter(image);\n        }\n        var selection = SelectionUtils.selectionFromRange(range);\n        selection.removeAllRanges();\n        selection.addRange(range);\n    },\n\n    stringify: function(range) {\n        return kendo.format(\n            \"{0}:{1} - {2}:{3}\",\n            dom.name(range.startContainer), range.startOffset,\n            dom.name(range.endContainer), range.endOffset\n        );\n    },\n\n    split: function(range, node, trim) {\n        function partition(start) {\n            var partitionRange = range.cloneRange();\n            partitionRange.collapse(start);\n            partitionRange[start ? 'setStartBefore' : 'setEndAfter'](node);\n            var contents = partitionRange.extractContents();\n            if (trim) {\n                contents = dom.trim(contents);\n            }\n            dom[start ? 'insertBefore' : 'insertAfter'](contents, node);\n        }\n        partition(true);\n        partition(false);\n    },\n\n    mapAll: function(range, map) {\n        var nodes = [];\n\n        new RangeIterator(range).traverse(function(node) {\n            var mapped = map(node);\n\n            if (mapped && $.inArray(mapped, nodes) < 0) {\n                nodes.push(mapped);\n            }\n        });\n\n        return nodes;\n    },\n\n    getAll: function(range, predicate) {\n        var selector = predicate;\n\n        if (typeof predicate == \"string\") {\n            predicate = function(node) {\n                return dom.is(node, selector);\n            };\n        }\n\n        return RangeUtils.mapAll(range, function(node) {\n            if (predicate(node)) {\n                return node;\n            }\n        });\n    },\n\n    getMarkers: function(range) {\n        return RangeUtils.getAll(range, function(node) {\n            return node.className == 'k-marker';\n        });\n    },\n\n    image: function(range) {\n        var nodes = RangeUtils.getAll(range, \"img\");\n\n        if (nodes.length == 1) {\n            return nodes[0];\n        }\n    },\n\n    isStartOf: function(originalRange, node) {\n        if (originalRange.startOffset !== 0) {\n            return false;\n        }\n\n        var range = originalRange.cloneRange();\n\n        while (range.startOffset === 0 && range.startContainer != node) {\n            var index = dom.findNodeIndex(range.startContainer);\n            var parent = range.startContainer.parentNode;\n\n            while (index > 0 && parent[index - 1] && dom.insignificant(parent[index - 1])) {\n                index--;\n            }\n\n            range.setStart(parent, index);\n        }\n\n        return range.startOffset === 0 && range.startContainer == node;\n    },\n\n    isEndOf: function(originalRange, node) {\n        var range = originalRange.cloneRange();\n\n        range.collapse(false);\n\n        var start = range.startContainer;\n\n        if (dom.isDataNode(start) && range.startOffset == dom.getNodeLength(start)) {\n            range.setStart(start.parentNode, dom.findNodeIndex(start) + 1);\n            range.collapse(true);\n        }\n\n        range.setEnd(node, dom.getNodeLength(node));\n\n        var nodes = [];\n\n        function visit(node) {\n            if (!dom.insignificant(node) && !(dom.isDataNode(node) && /^[\\ufeff]*$/.test(node.nodeValue))) {\n                nodes.push(node);\n            }\n        }\n\n        new RangeIterator(range).traverse(visit);\n\n        return !nodes.length;\n    },\n\n    wrapSelectedElements: function(range) {\n        var startEditable = dom.editableParent(range.startContainer);\n        var endEditable = dom.editableParent(range.endContainer);\n\n        while (range.startOffset === 0 && range.startContainer != startEditable) {\n            range.setStart(range.startContainer.parentNode, dom.findNodeIndex(range.startContainer));\n        }\n\n        function isEnd(offset, container) {\n            var length = dom.getNodeLength(container);\n\n            if (offset == length) {\n                return true;\n            }\n\n            for (var i = offset; i < length; i++) {\n                if (!dom.insignificant(container.childNodes[i])) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        while (isEnd(range.endOffset, range.endContainer) && range.endContainer != endEditable) {\n            range.setEnd(range.endContainer.parentNode, dom.findNodeIndex(range.endContainer) + 1);\n        }\n\n        return range;\n    },\n\n    expand: function(range) {\n        var result = range.cloneRange();\n\n        var startContainer = result.startContainer.childNodes[result.startOffset === 0 ? 0 : result.startOffset - 1];\n        var endContainer = result.endContainer.childNodes[result.endOffset];\n\n        if (!isDataNode(startContainer) || !isDataNode(endContainer)) {\n            return result;\n        }\n\n        var beforeCaret = startContainer.nodeValue;\n        var afterCaret = endContainer.nodeValue;\n\n        if (!beforeCaret || !afterCaret) {\n            return result;\n        }\n\n        var startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n        var endOffset = afterCaret.search(boundary);\n\n        if (!startOffset || !endOffset) {\n            return result;\n        }\n\n        endOffset = endOffset == -1 ? afterCaret.length : endOffset;\n        startOffset = startOffset == -1 ? 0 : beforeCaret.length - startOffset;\n\n        result.setStart(startContainer, startOffset);\n        result.setEnd(endContainer, endOffset);\n\n        return result;\n    },\n\n    isExpandable: function(range) {\n        var node = range.startContainer;\n        var rangeDocument = RangeUtils.documentFromRange(range);\n\n        if (node == rangeDocument || node == rangeDocument.body) {\n            return false;\n        }\n\n        var result = range.cloneRange();\n\n        var value = node.nodeValue;\n        if (!value) {\n            return false;\n        }\n\n        var beforeCaret = value.substring(0, result.startOffset);\n        var afterCaret = value.substring(result.startOffset);\n\n        var startOffset = 0, endOffset = 0;\n\n        if (beforeCaret) {\n            startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n        }\n\n        if (afterCaret) {\n            endOffset = afterCaret.search(boundary);\n        }\n\n        return startOffset && endOffset;\n    }\n};\n\nextend(Editor, {\n    SelectionUtils: SelectionUtils,\n    W3CRange: W3CRange,\n    RangeIterator: RangeIterator,\n    W3CSelection: W3CSelection,\n    RangeEnumerator: RangeEnumerator,\n    RestorePoint: RestorePoint,\n    Marker: Marker,\n    RangeUtils: RangeUtils\n});\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        Editor = kendo.ui.editor,\n        dom = Editor.Dom,\n        template = kendo.template,\n        RangeUtils = Editor.RangeUtils,\n        complexBlocks = [\"ul\", \"ol\", \"tbody\", \"thead\", \"table\"],\n        toolsToBeUpdated = [\n            \"bold\",\n            \"italic\",\n            \"underline\",\n            \"strikethrough\",\n            \"superscript\",\n            \"subscript\",\n            \"forecolor\",\n            \"backcolor\",\n            \"fontname\",\n            \"fontsize\",\n            \"createlink\",\n            \"unlink\",\n            \"autolink\",\n            \"addcolumnleft\",\n            \"addcolumnright\",\n            \"addrowabove\",\n            \"addrowbelow\",\n            \"deleterow\",\n            \"deletecolumn\",\n            \"mergecells\",\n            \"formatting\",\n            \"cleanformatting\" ],\n        IMMUTABALE = \"k-immutable\",\n        IMMUTABALE_MARKER_SELECTOR = \"[\" + IMMUTABALE + \"]\",\n        IMMUTABLE_SELECTOR = \"[contenteditable='false']\";\n\n    var rootCondition = function(node) {\n        return $(node).is(\"body,.k-editor\");\n    };\n\n    var immutable = function(node) {\n        return node.getAttribute && node.getAttribute(\"contenteditable\") == \"false\";\n    };\n\n    var immutableParent = function(node) {\n        return dom.closestBy(node, immutable, rootCondition);\n    };\n\n    var expandImmutablesIn = function(range) {\n        var startImmutableParent = immutableParent(range.startContainer);\n        var endImmutableParent = immutableParent(range.endContainer);\n\n        if (startImmutableParent || endImmutableParent) {\n            if (startImmutableParent) {\n                range.setStartBefore(startImmutableParent);\n            }\n            if (endImmutableParent) {\n                range.setEndAfter(endImmutableParent);\n            }\n        }\n    };\n\n    var immutablesContext = function(range) {\n        if (immutableParent(range.commonAncestorContainer)) {\n            return true;\n        } else if (immutableParent(range.startContainer) || immutableParent(range.endContainer)) {\n            var editableNodes = RangeUtils.editableTextNodes(range);\n            if (editableNodes.length === 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    var randomId = function(length) {\n        var result = '';\n        var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        for (var i = length || 10; i > 0; --i) {\n            result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n        }\n        return result;\n    };\n\n    var removeImmutables = function(root) {\n        var serializedImmutables = { empty: true }, nodeName, id, serialized;\n         $(root).find(IMMUTABLE_SELECTOR).each(function(i, node) {\n            nodeName = dom.name(node);\n            id = randomId();\n            serialized = \"<\" + nodeName + \" \" + IMMUTABALE + \"='\" + id + \"'></\" + nodeName + \">\";\n            serializedImmutables[id] = { node: node, style: $(node).attr(\"style\") };\n            serializedImmutables.empty = false;\n            $(node).replaceWith(serialized);\n        });\n\n        return serializedImmutables;\n    };\n\n    var restoreImmutables = function(root, serializedImmutables) {\n        var id, immutable;\n        $(root).find(IMMUTABALE_MARKER_SELECTOR).each(function(i, node) {\n            id = node.getAttribute(IMMUTABALE);\n            immutable = serializedImmutables[id];\n            $(node).replaceWith(immutable.node);\n            if (immutable.style != $(immutable.node).attr(\"style\")) {\n                $(immutable.node).removeAttr(\"style\").attr(\"style\", immutable.style);\n            }\n        });\n    };\n\n    var deletingKey = function(keyCode) {\n        var keys = kendo.keys;\n        return keyCode === keys.BACKSPACE || keyCode == keys.DELETE;\n    };\n    var updateToolOptions = function(tool) {\n        var options = tool ? tool.options : undefined$1;\n        if (options && options.finder) {\n            options.finder._initOptions({ immutables: true });\n        }\n    };\n\n    var Immutables = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n            this.serializedImmutables = {};\n            this.options = $.extend({}, editor && editor.options && editor.options.immutables);\n\n            var tools = kendo.ui.Editor.defaultTools;\n            updateToolOptions(tools.justifyLeft);\n            updateToolOptions(tools.justifyCenter);\n            updateToolOptions(tools.justifyRight);\n            updateToolOptions(tools.justifyFull);\n        },\n\n        serialize: function(node) {\n            var result = this._toHtml(node),\n                id;\n\n            if (result.indexOf(IMMUTABALE) === -1) {\n                id = this.randomId();\n                result = result.replace(/>/, ' ' + IMMUTABALE + '=\"' + id + '\">');\n            } else {\n                id = result.match(/k-immutable\\s*=\\s*['\"](.*)['\"]/)[1];\n            }\n\n            this.serializedImmutables[id] = node;\n            return result;\n        },\n\n        _toHtml: function(node) {\n            var serialization = this.options.serialization;\n            var serializationType = typeof serialization;\n            var nodeName;\n\n            switch (serializationType) {\n                case \"string\":\n                    return template(serialization)(node);\n                case \"function\":\n                    return serialization(node);\n                default:\n                    nodeName = dom.name(node);\n                    return \"<\" + nodeName + \"></\" + nodeName + \">\";\n            }\n        },\n\n        deserialize: function(node) {\n            var that = this;\n            var deserialization = this.options.deserialization;\n\n            $(IMMUTABALE_MARKER_SELECTOR, node).each(function() {\n                var id = this.getAttribute(IMMUTABALE);\n                var immutable = that.serializedImmutables[id];\n                if (kendo.isFunction(deserialization)) {\n                    deserialization(this, immutable);\n                }\n                $(this).replaceWith(immutable);\n            });\n\n            that.serializedImmutables = {};\n        },\n\n        randomId: function(length) {\n            return randomId(length);\n        },\n\n        keydown: function(e, range) {\n            var isDeleting = deletingKey(e.keyCode);\n            var shouldCancelEvent = (isDeleting && this._cancelDeleting(e, range)) ||\n                (!isDeleting && this._cancelTyping(e, range));\n\n            if (shouldCancelEvent) {\n                e.preventDefault();\n                return true;\n            }\n        },\n\n        _cancelTyping: function(e, range) {\n            var editor = this.editor;\n            var keyboard = editor.keyboard;\n\n            return range.collapsed && !keyboard.typingInProgress &&\n                keyboard.isTypingKey(e) && immutablesContext(range);\n        },\n\n        _cancelDeleting: function(e, range) {\n            var keys = kendo.keys;\n            var backspace = e.keyCode === keys.BACKSPACE;\n            var del = e.keyCode == keys.DELETE;\n\n            if (!backspace && !del) {\n                return false;\n            }\n            var cancelDeleting = false;\n            if (range.collapsed) {\n                if (immutablesContext(range)) {\n                    return true;\n                }\n                var immutable = this.nextImmutable(range, del);\n                if (immutable && backspace) {\n                    var closestSelectionLi = dom.closest(range.commonAncestorContainer, \"li\");\n                    if (closestSelectionLi) {\n                        var closestImmutableLi = dom.closest(immutable, \"li\");\n                        if (closestImmutableLi && closestImmutableLi !== closestSelectionLi) {\n                            return cancelDeleting;\n                        }\n                    }\n                }\n                if (immutable && !dom.tableCell(immutable)) {\n                    if (dom.parentOfType(immutable, complexBlocks) === dom.parentOfType(range.commonAncestorContainer, complexBlocks)) {\n                        while (immutable && immutable.parentNode.childNodes.length == 1) {\n                            immutable = immutable.parentNode;\n                        }\n                        if (dom.tableCell(immutable)) {\n                            return cancelDeleting;\n                        }\n                        this._removeImmutable(immutable, range);\n                    }\n                    cancelDeleting = true;\n                }\n            }\n            return cancelDeleting;\n        },\n\n        nextImmutable: function(range, forwards) {\n            var commonContainer = range.commonAncestorContainer;\n            if (dom.isBom(commonContainer) || ((forwards && RangeUtils.isEndOf(range, commonContainer)) || (!forwards && RangeUtils.isStartOf(range, commonContainer)))) {\n                var next = this._nextNode(commonContainer, forwards);\n                if (next && dom.isBlock(next) && !immutableParent(next)) {\n                    while (next && next.children && next.children[forwards ? 0 : next.children.length - 1]) {\n                        next = next.children[forwards ? 0 : next.children.length - 1];\n                    }\n                }\n                return immutableParent(next);\n            }\n        },\n\n        _removeImmutable: function(immutable, range) {\n            var editor = this.editor;\n            var startRestorePoint = new Editor.RestorePoint(range, editor.body);\n            dom.remove(immutable);\n            Editor._finishUpdate(editor, startRestorePoint);\n        },\n\n        _nextNode: function(node, forwards) {\n            var sibling = forwards ? \"nextSibling\" : \"previousSibling\";\n            var current = node, next;\n            while (current && !next && !dom.isChildOfBaseContainer(current)) {\n                next = current[sibling];\n                if (next && dom.isDataNode(next) && /^\\s|[\\ufeff]$/.test(next.nodeValue)) {\n                    current = next;\n                    next = current[sibling];\n                }\n                if (!next) {\n                    current = current.parentNode;\n                }\n            }\n            return next;\n        }\n    });\n\n    Immutables.immutable = immutable;\n    Immutables.immutableParent = immutableParent;\n    Immutables.expandImmutablesIn = expandImmutablesIn;\n    Immutables.immutablesContext = immutablesContext;\n    Immutables.toolsToBeUpdated = toolsToBeUpdated;\n    Immutables.removeImmutables = removeImmutables;\n    Immutables.restoreImmutables = restoreImmutables;\n\n    Editor.Immutables = Immutables;\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        editorNS = kendo.ui.editor,\n        dom = editorNS.Dom,\n        RestorePoint = editorNS.RestorePoint,\n        Marker = editorNS.Marker,\n        extend = $.extend;\n\nfunction finishUpdate(editor, startRestorePoint) {\n    var endRestorePoint = editor.selectionRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n    var command = new GenericCommand(startRestorePoint, endRestorePoint);\n    command.editor = editor;\n\n    editor.undoRedoStack.push(command);\n    editor._refreshTools();\n\n    return endRestorePoint;\n}\n\nvar Command = Class.extend({\n    init: function(options) {\n        this.options = options;\n        this.restorePoint = new RestorePoint(options.range, options.body, { immutables: options.immutables });\n        this.marker = new Marker();\n        this.formatter = options.formatter;\n    },\n\n    getRange: function() {\n        return this.restorePoint.toRange();\n    },\n\n    lockRange: function(expand) {\n        return this.marker.add(this.getRange(), expand);\n    },\n\n    releaseRange: function(range) {\n        this.marker.remove(range);\n        this.editor.selectRange(range);\n    },\n\n    undo: function() {\n        var point = this.restorePoint;\n        point.restoreHtml();\n        this.editor.selectRange(point.toRange());\n    },\n\n    redo: function() {\n        this.exec();\n    },\n\n    createDialog: function(content, options) {\n        var editor = this.editor;\n\n        return $(content).appendTo(document.body)\n            .kendoWindow(extend({}, editor.options.dialogOptions, options))\n            .closest(\".k-window\")\n            .addClass(\"k-editor-window\")\n            .toggleClass(\"k-rtl\", kendo.support.isRtl(editor.wrapper)).end();\n    },\n\n    exec: function() {\n        var range = this.lockRange(true);\n        this.formatter.editor = this.editor;\n        this.formatter.toggle(range);\n        this.releaseRange(range);\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    expandImmutablesIn: function(range) {\n        if (this.immutables()) {\n            kendo.ui.editor.Immutables.expandImmutablesIn(range);\n            this.restorePoint = new RestorePoint(range, this.editor.body);\n        }\n    },\n\n    _actionButtonsTemplate: function({ messages, insertButtonIcon, cancelButtonIcon }) {\n        return '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n        kendo.html.renderButton(`<button class=\"k-dialog-insert\">${messages.dialogInsert}</button>`, { themeColor: \"primary\", icon: insertButtonIcon }) +\n        kendo.html.renderButton(`<button class=\"k-dialog-close\">${messages.dialogCancel}</button>`, { icon: cancelButtonIcon }) +\n    '</div>';\n    }\n});\n\nvar GenericCommand = Class.extend({\n    init: function(startRestorePoint, endRestorePoint) {\n        this.body = startRestorePoint.body;\n        this.startRestorePoint = startRestorePoint;\n        this.endRestorePoint = endRestorePoint;\n    },\n\n    redo: function() {\n        dom.removeChildren(this.body);\n\n        this.body.innerHTML = this.endRestorePoint.html;\n        this.editor.selectRange(this.endRestorePoint.toRange());\n    },\n\n    undo: function() {\n        dom.removeChildren(this.body);\n\n        this.body.innerHTML = this.startRestorePoint.html;\n        this.editor.selectRange(this.startRestorePoint.toRange());\n    }\n});\n\nextend(editorNS, {\n    _finishUpdate: finishUpdate,\n    Command: Command,\n    GenericCommand: GenericCommand\n});\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    dom = Editor.Dom;\n\nvar ViewHtmlCommand = Command.extend({\n    init: function(options) {\n        var cmd = this;\n        cmd.options = options;\n        Command.fn.init.call(cmd, options);\n        cmd.attributes = null;\n        cmd.async = true;\n    },\n\n    exec: function() {\n        var that = this,\n            editor = that.editor,\n            options = editor.options,\n            messages = editor.options.messages,\n            dialog = $(kendo.template(ViewHtmlCommand.template)(messages)).appendTo(document.body),\n            textarea = \".k-editor-textarea > textarea\",\n            content, comments;\n\n        options.serialization.immutables = editor.immutables;\n\n        comments = dom.getAllComments(editor.body);\n\n        content = EditorUtils.cacheComments(editor.value(), comments);\n        content = ViewHtmlCommand.indent(content);\n        content = EditorUtils.retrieveComments(content, comments);\n\n        options.serialization.immutables = undefined$1;\n\n        function apply(e) {\n            options.deserialization.immutables = editor.immutables;\n            editor.value(dialog.find(textarea).val());\n            options.deserialization.immutables = undefined$1;\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n\n            editor.trigger(\"change\");\n        }\n\n        function close(e) {\n            e.preventDefault();\n\n            dialog.data(\"kendoWindow\").destroy();\n\n            if (editor.immutables) {\n                editor.immutables.serializedImmutables = {};\n            }\n\n            editor.focus();\n        }\n\n        let window = this.createDialog(dialog, {\n            title: messages.viewHtml,\n            _footerTemplate: ViewHtmlCommand._footerTemplate,\n            _footerMessages: messages,\n            width: 600,\n            height: 400,\n            resizable: true,\n            close: close,\n            visible: false\n        })\n            .find(textarea).val(content).end()\n            .data(\"kendoWindow\");\n\n            window.center().open();\n\n            window.wrapper.find(\".k-dialog-update\").on(\"click\", apply).end();\n            window.wrapper.find(\".k-dialog-close\").on(\"click\", close).end();\n        dialog.find(textarea).trigger(\"focus\");\n    }\n});\n\nextend(ViewHtmlCommand, {\n    template: () =>\n    '<div class=\"k-editor-dialog k-popup-edit-form k-viewhtml-dialog\">' +\n        '<span class=\"k-input k-textarea k-input-solid k-input-md k-rounded-md k-editor-textarea\"><textarea class=\"k-input-inner !k-overflow-auto !k-resize-none\"></textarea></span>' +\n    '</div>',\n    _footerTemplate: ({ dialogUpdate, dialogCancel }) =>\n    `<div class=\"k-actions k-actions-start k-actions-horizontal k-window-actions\">` +\n        kendo.html.renderButton(`<button class=\"k-dialog-update\">${kendo.htmlEncode(dialogUpdate)}</button>`, { themeColor: \"primary\", icon: \"check\" }) +\n        kendo.html.renderButton(`<button class=\"k-dialog-close\">${kendo.htmlEncode(dialogCancel)}</button>`, { icon: \"cancel-outline\" }) +\n    `</div>`,\n    indent: function(content) {\n        return content.replace(/<\\/(p|li|ul|ol|h[1-6]|table|tr|td|th)>/ig, \"</$1>\\n\")\n                      .replace(/<(ul|ol)([^>]*)><li/ig, \"<$1$2>\\n<li\")\n                      .replace(/<br \\/>/ig, \"<br />\\n\")\n                      .replace(/\\n$/, \"\");\n    }\n});\n\nkendo.ui.editor.ViewHtmlCommand = ViewHtmlCommand;\n\nEditor.EditorUtils.registerTool(\"viewHtml\", new Tool({ command: ViewHtmlCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    Tool = Editor.Tool,\n    Command = Editor.Command,\n    EditorUtils = Editor.EditorUtils;\n\nvar FormatCommand = Command.extend({\n    init: function(options) {\n        options.formatter = options.formatter();\n        var finder = options.formatter.finder;\n        if (finder && EditorUtils.formatByName(\"immutable\", finder.format)) {\n            finder._initOptions({ immutables: options.immutables });\n        }\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar FormatTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n    },\n\n    command: function(commandArguments) {\n        var that = this;\n\n        return new FormatCommand(extend(commandArguments, {\n            formatter: that.options.formatter\n        }));\n    },\n\n    update: function(ui, nodes) {\n        var isFormatted = this.options.finder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (toolbar && ui.getKendoToggleButton()) {\n            toolbar.toggle(ui, isFormatted);\n        }\n    }\n});\n\n$.extend(Editor, {\n    FormatCommand: FormatCommand,\n    FormatTool: FormatTool\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    Editor = kendo.ui.editor,\n    formats = kendo.ui.Editor.fn.options.formats,\n    Tool = Editor.Tool,\n    FormatTool = Editor.FormatTool,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    extend = $.extend,\n    registerTool = Editor.EditorUtils.registerTool,\n    registerFormat = Editor.EditorUtils.registerFormat,\n    MOUSEDOWN_NS = \"mousedown.kendoEditor\",\n    KEYDOWN_NS = \"keydown.kendoEditor\",\n    KMARKER = \"k-marker\";\n\nvar InlineFormatFinder = Class.extend({\n    init: function(format) {\n        this.format = format;\n    },\n\n    numberOfSiblings: function(referenceNode) {\n        var textNodesCount = 0,\n            elementNodesCount = 0,\n            markerCount = 0,\n            parentNode = referenceNode.parentNode,\n            node;\n\n        for (node = parentNode.firstChild; node; node = node.nextSibling) {\n            if (node != referenceNode) {\n                if (node.className == KMARKER) {\n                    markerCount++;\n                } else if (node.nodeType == 3) {\n                    textNodesCount++;\n                } else {\n                    elementNodesCount++;\n                }\n            }\n        }\n\n        if (markerCount > 1 && parentNode.firstChild.className == KMARKER && parentNode.lastChild.className == KMARKER) {\n            // full node selection\n            return 0;\n        } else {\n            return elementNodesCount + textNodesCount;\n        }\n    },\n\n    findSuitable: function(sourceNode, skip) {\n        if (!skip && this.numberOfSiblings(sourceNode) > 0) {\n            return null;\n        }\n\n        var node = sourceNode.parentNode;\n        var tags = this.format[0].tags;\n\n        while (!dom.ofType(node, tags)) {\n            if (this.numberOfSiblings(node) > 0) {\n                return null;\n            }\n\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n\n    findFormat: function(sourceNode) {\n        var format = this.format,\n            attrEquals = dom.attrEquals,\n            i, len, node, tags, attributes;\n\n        for (i = 0, len = format.length; i < len; i++) {\n            node = sourceNode;\n            tags = format[i].tags;\n            attributes = format[i].attr;\n\n            if (node && dom.ofType(node, tags) && attrEquals(node, attributes)) {\n                return node;\n            }\n\n            while (node) {\n                node = dom.parentOfType(node, tags);\n                if (node && attrEquals(node, attributes)) {\n                    return node;\n                }\n            }\n        }\n\n        return null;\n    },\n\n    isFormatted: function(nodes) {\n        var i, len;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            if (this.findFormat(nodes[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n});\n\nvar InlineFormatter = Class.extend({\n    init: function(format, values) {\n        this.finder = new InlineFormatFinder(format);\n        this.attributes = extend({}, format[0].attr, values);\n        this.tag = format[0].tags[0];\n    },\n\n    wrap: function(node) {\n        return dom.wrap(node, dom.create(node.ownerDocument, this.tag, this.attributes));\n    },\n\n    activate: function(range, nodes) {\n        if (this.finder.isFormatted(nodes)) {\n            this.split(range);\n            this.remove(nodes);\n        } else {\n            this.apply(nodes);\n        }\n    },\n\n    toggle: function(range) {\n        var textNodes = this.immutables() ? RangeUtils.editableTextNodes : RangeUtils.textNodes;\n        var nodes = textNodes(range);\n\n        if (nodes.length > 0) {\n            this.activate(range, nodes);\n        }\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    apply: function(nodes) {\n        var formatNodes = [];\n        var i, l, node, formatNode;\n\n        if (nodes.length > 1) {\n            for (i = 0, l = nodes.length; i < l; i++) {\n                node = nodes[i];\n                formatNode = this.format(node, true);\n                formatNodes.push(formatNode);\n\n            }\n        } else {\n            node = nodes[0];\n            formatNode = this.format(node, false);\n        }\n\n        this.consolidate(formatNodes);\n    },\n\n    format: function(node, outerMostInline) {\n        var formatNode = this.finder.findSuitable(node);\n        var attributes = this.attributes;\n        var styleAttr = attributes ? attributes.style || {} : {};\n\n        if (formatNode) {\n            if (dom.is(formatNode, \"font\")) {\n                if (styleAttr.color) {\n                    formatNode.removeAttribute(\"color\");\n                }\n                if (styleAttr.fontName) {\n                    formatNode.removeAttribute(\"face\");\n                }\n                if (styleAttr.fontSize) {\n                    formatNode.removeAttribute(\"size\");\n                }\n            }\n            dom.attr(formatNode, attributes);\n        } else {\n            while (!dom.isBlock(node.parentNode) && node.parentNode.childNodes.length == 1 && node.parentNode.contentEditable !== 'true' && outerMostInline) {\n                node = node.parentNode;\n            }\n\n            formatNode = this.wrap(node);\n        }\n\n        return formatNode;\n    },\n\n    remove: function(nodes) {\n        var i, l, formatNode;\n\n        for (i = 0, l = nodes.length; i < l; i++) {\n            formatNode = this.finder.findFormat(nodes[i]);\n            if (formatNode) {\n                if (this.attributes && this.attributes.style) {\n                    dom.unstyle(formatNode, this.attributes.style);\n                    if (!formatNode.style.cssText && !formatNode.attributes[\"class\"]) {\n                        dom.unwrap(formatNode);\n                    }\n                } else {\n                    dom.unwrap(formatNode);\n                }\n            }\n        }\n    },\n\n    split: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n        var l = nodes.length;\n        var i, formatNode;\n\n        if (l > 0) {\n            for (i = 0; i < l; i++) {\n                formatNode = this.finder.findFormat(nodes[i]);\n                if (formatNode) {\n                    RangeUtils.split(range, formatNode, true);\n                }\n            }\n        }\n    },\n\n    consolidate: function(nodes) {\n        var node, last;\n\n        while (nodes.length > 1) {\n            node = nodes.pop();\n            last = nodes[nodes.length - 1];\n\n            if (node.previousSibling && node.previousSibling.className == KMARKER) {\n                last.appendChild(node.previousSibling);\n            }\n\n            if (node.tagName == last.tagName &&\n                node.previousSibling == last &&\n                node.style.cssText == last.style.cssText &&\n                node.className === last.className) {\n\n                while (node.firstChild) {\n                    last.appendChild(node.firstChild);\n                }\n\n                dom.remove(node);\n            }\n        }\n    }\n});\n\nvar GreedyInlineFormatFinder = InlineFormatFinder.extend({\n    init: function(format, greedyProperty, fontAttr, defaultValue) {\n        this.format = format;\n        this.greedyProperty = greedyProperty;\n        this.fontAttr = fontAttr;\n        this.defaultValue = defaultValue;\n        InlineFormatFinder.fn.init.call(this, format);\n    },\n\n    getInlineCssValue: function(node) {\n        var attributes = node.attributes;\n        var trim = kendo.trim;\n        var i, l, attribute, name, attributeValue, css, pair, cssIndex, len;\n        var propertyAndValue, property, value;\n\n        if (!attributes) {\n            return;\n        }\n\n        for (i = 0, l = attributes.length; i < l; i++) {\n            attribute = attributes[i];\n            name = attribute.nodeName;\n            attributeValue = attribute.nodeValue;\n\n            if (attribute.specified && name == \"style\") {\n\n                css = trim(attributeValue || node.style.cssText).split(\";\");\n\n                for (cssIndex = 0, len = css.length; cssIndex < len; cssIndex++) {\n                    pair = css[cssIndex];\n                    if (pair.length) {\n                        propertyAndValue = pair.split(\":\");\n                        property = trim(propertyAndValue[0].toLowerCase());\n                        value = trim(propertyAndValue[1]);\n\n                        if (property != this.greedyProperty) {\n                            continue;\n                        }\n\n                        return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n                    }\n                }\n            }\n\n            if (this.fontAttr && attribute.specified && name == this.fontAttr) {\n                property = attribute.nodeValue;\n                value = attribute.nodeValue;\n\n                return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n            }\n        }\n    },\n\n    getFormatInner: function(node) {\n        var $node = $(dom.isDataNode(node) ? node.parentNode : node);\n        var parents = $node.parentsUntil(\"[contentEditable]\").addBack().toArray().reverse();\n        var i, len, value;\n\n        for (i = 0, len = parents.length; i < len; i++) {\n            value = this.greedyProperty == \"className\" ? parents[i].className : this.getInlineCssValue(parents[i]);\n\n            if (value) {\n                return value;\n            }\n        }\n\n        return this.defaultValue || \"inherit\";\n    },\n\n    getFormat: function(nodes) {\n        var result = this.getFormatInner(nodes[0]), i, len;\n\n        for (i = 1, len = nodes.length; i < len; i++) {\n            if (result != this.getFormatInner(nodes[i])) {\n                return \"\";\n            }\n        }\n\n        return result;\n    },\n\n    isFormatted: function(nodes) {\n        return this.getFormat(nodes) !== \"\";\n    }\n});\n\nvar GreedyInlineFormatter = InlineFormatter.extend({\n    init: function(format, values, greedyProperty) {\n        InlineFormatter.fn.init.call(this, format, values);\n\n        this.values = values;\n        this.finder = new GreedyInlineFormatFinder(format, greedyProperty);\n\n        if (greedyProperty) {\n            this.greedyProperty = kendo.toCamelCase(greedyProperty);\n        }\n\n    },\n\n    activate: function(range, nodes) {\n        var greedyProperty = this.greedyProperty;\n        var action = \"apply\";\n\n        this.split(range);\n\n        if (greedyProperty && this.values.style[greedyProperty] == \"inherit\") {\n            action = \"remove\";\n        }\n\n        this[action](nodes);\n    }\n});\n\nvar InlineFormatTool = FormatTool.extend({\n    init: function(options) {\n        FormatTool.fn.init.call(this, extend(options, {\n            finder: new InlineFormatFinder(options.format),\n            formatter: function() { return new InlineFormatter(options.format); }\n        }));\n    }\n});\n\nvar DelayedExecutionTool = Tool.extend({\n    update: function(ui, nodes) {\n        var list = ui.data(this.type);\n\n        list.close();\n        list.value(this.finder.getFormat(nodes));\n    }\n});\n\nvar FontTool = DelayedExecutionTool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n\n        // IE has single selection hence we are using select box instead of combobox\n        this.type = \"kendoComboBox\";\n        this.format = [{ tags: [\"span\", \"font\"] }];\n        this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr);\n    },\n\n    command: function(commandArguments) {\n        var options = this.options,\n            format = this.format,\n            style = {};\n\n        return new Editor.FormatCommand(extend(commandArguments, {\n            formatter: function() {\n                style[options.domAttr] = commandArguments.value;\n\n                return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n            }\n        }));\n    },\n\n    initialize: function(ui, editor) {\n        var options = this.options,\n            toolName = options.name,\n            dataSource,\n            range,\n            widget = ui.data(\"kendoComboBox\"),\n            defaultValue = [];\n\n        if (!widget) {\n            return;\n        }\n\n        if (options.defaultValue) {\n           defaultValue = [{\n                text: editor.options.messages[options.defaultValue[0].text],\n                value: options.defaultValue[0].value\n           }];\n        }\n\n        dataSource = defaultValue.concat(options.items ? options.items : (editor.options[toolName] || [] ));\n        widget.setDataSource(dataSource);\n\n        widget.bind(\"change\", (e) => {\n            editor._range = range;\n            if (e.sender.value() !== \"\") {\n                Tool.exec(editor, toolName, e.sender.value());\n            }\n        });\n\n        widget.bind(\"close\", () => {\n            setTimeout(function() {\n                editor._deleteSavedRange();\n            },0);\n        });\n\n        widget.value(\"inherit\");\n\n        widget.wrapper.on(MOUSEDOWN_NS, \".k-select,.k-input-button,.k-input\", function() {\n            var newRange = editor.getRange();\n            range = editor._containsRange(newRange) ? newRange : range;\n        })\n        .on(KEYDOWN_NS, function(e) {\n            if (e.keyCode === kendo.keys.ENTER) {\n                editor._deleteSavedRange();\n                e.preventDefault();\n            }\n        });\n    }\n\n});\n\nvar ColorTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n\n        this.format = [{ tags: [\"span\",\"font\"] }];\n        this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr);\n    },\n\n    options: {\n        palette: \"websafe\",\n        columns: 18\n    },\n\n    update: function() {\n        this._widget.close();\n    },\n\n    command: function(commandArguments) {\n        var options = this.options,\n            format = this.format,\n            style = {};\n\n        return new Editor.FormatCommand(extend(commandArguments, {\n            formatter: function() {\n                style[options.domAttr] = commandArguments.value;\n\n                return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n            }\n        }));\n    },\n\n    initialize: function(ui, editor) {\n        var that = this,\n            toolName = that.options.name,\n            component = this._widget = ui.getKendoColorPicker();\n\n        if (!component) {\n            return;\n        }\n\n        component.bind(\"change\", () => {\n            var color = component.value();\n\n            if (color) {\n                Tool.exec(editor, toolName, color);\n            }\n\n            delete that.storedRange;\n            delete that._inputFocused;\n\n            editor.focus();\n        });\n\n        component.bind(\"open\", () => {\n            that.storedRange = editor.getRange();\n\n            component._popup.element.on(MOUSEDOWN_NS, function(e) {\n                if (!$(e.target).is(\"input.k-color-value\")) {\n                    e.preventDefault();\n                }\n            });\n\n            if (!component._popup.element.is(\"[unselectable='on']\")) {\n                component._popup.element\n                    .attr({ unselectable: \"on\" })\n                    .find(\"*:not(input)\").attr(\"unselectable\", \"on\")\n                    .end().find(\"input\").on(\"focus\", function() {\n                        that._inputFocused = true;\n                    });\n            }\n\n            component._popup.one(\"activate\", () => {\n                component._popup.element.find(\".k-colorpalette\").trigger(\"focus\");\n            });\n        });\n\n        component.bind(\"close\", (e) => {\n            component._popup.element.off(MOUSEDOWN_NS);\n        });\n\n        component.unbind(\"activate\").bind(\"activate\", (e) => {\n            if (!component._value || component._value.toCssRgba() === \"rgba(255, 255, 255, 0)\") {\n                return;\n            }\n\n            component.trigger(\"change\");\n        });\n\n        component.wrapper\n            .attr({ unselectable: \"on\" })\n            .find(\"*:not(input)\").attr(\"unselectable\", \"on\");\n\n        component.value(\"transparent\");\n    }\n});\n\nextend(Editor, {\n    InlineFormatFinder: InlineFormatFinder,\n    InlineFormatter: InlineFormatter,\n    DelayedExecutionTool: DelayedExecutionTool,\n    GreedyInlineFormatFinder: GreedyInlineFormatFinder,\n    GreedyInlineFormatter: GreedyInlineFormatter,\n    InlineFormatTool: InlineFormatTool,\n    FontTool: FontTool,\n    ColorTool: ColorTool\n});\n\nregisterFormat(\"bold\", [ { tags: [\"strong\", \"b\"] }, { tags: [\"span\"], attr: { style: { fontWeight: \"bold\" } } } ]);\nregisterTool(\"bold\", new InlineFormatTool({\n    key: \"B\",\n    ctrl: true,\n    format: formats.bold,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"italic\", [ { tags: [\"em\", \"i\"] }, { tags: [\"span\"], attr: { style: { fontStyle: \"italic\" } } } ]);\nregisterTool(\"italic\", new InlineFormatTool({\n    key: \"I\",\n    ctrl: true,\n    format: formats.italic,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"underline\", [ { tags: [\"span\"], attr: { style: { textDecoration: \"underline\" } } }, { tags: [\"u\"] } ]);\nregisterTool(\"underline\", new InlineFormatTool({\n    key: \"U\",\n    ctrl: true,\n    format: formats.underline,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"strikethrough\", [ { tags: [\"del\", \"strike\"] }, { tags: [\"span\"], attr: { style: { textDecoration: \"line-through\" } } } ]);\nregisterTool(\"strikethrough\", new InlineFormatTool({\n    format: formats.strikethrough,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"superscript\", [ { tags: [\"sup\"] } ]);\nregisterTool(\"superscript\", new InlineFormatTool({\n    format: formats.superscript,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"subscript\", [ { tags: [\"sub\"] } ]);\nregisterTool(\"subscript\", new InlineFormatTool({\n    format: formats.subscript,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterTool(\"foreColor\", new ColorTool({\n    cssAttr: \"color\",\n    fontAttr: \"color\",\n    domAttr: \"color\",\n    name: \"foreColor\",\n    ui: {\n        type: \"component\",\n        overflow: \"never\",\n        component: \"ColorPicker\",\n        componentOptions: {\n            views: [\"palette\"],\n            toolIcon: \"foreground-color\",\n            palette: \"websafe\",\n            columns: 18,\n            preview: false,\n            input: false,\n            buttons: false,\n            commandOn: \"change\",\n            closeOnSelect: true\n        }\n    }\n}));\n\nregisterTool(\"backColor\", new ColorTool({\n    cssAttr: \"background-color\",\n    domAttr: \"backgroundColor\",\n    name: \"backColor\",\n    ui: {\n        type: \"component\",\n        overflow: \"never\",\n        component: \"ColorPicker\",\n        componentOptions: {\n            views: [\"palette\"],\n            toolIcon: \"droplet\",\n            palette: \"websafe\",\n            columns: 18,\n            preview: false,\n            input: false,\n            buttons: false,\n            commandOn: \"change\",\n            closeOnSelect: true\n        }\n    }\n}));\n\nregisterTool(\"fontName\", new FontTool({\n    cssAttr: \"font-family\",\n    fontAttr: \"face\",\n    domAttr: \"fontFamily\",\n    name: \"fontName\",\n    defaultValue: [{ text: \"fontNameInherit\", value: \"inherit\" }],\n    ui: {\n        type: \"component\",\n        component: \"ComboBox\",\n        componentOptions: {\n            dataValueField: \"value\",\n            dataTextField: \"text\",\n            valuePrimitive: true\n        },\n        overflow: \"never\"\n    }\n}));\n\nregisterTool(\"fontSize\", new FontTool({\n    cssAttr: \"font-size\",\n    fontAttr: \"size\",\n    domAttr: \"fontSize\",\n    name: \"fontSize\",\n    defaultValue: [{ text: \"fontSizeInherit\", value: \"inherit\" }],\n    ui: {\n        type: \"component\",\n        component: \"ComboBox\",\n        componentOptions: {\n            dataValueField: \"value\",\n            dataTextField: \"text\",\n            valuePrimitive: true\n        },\n        overflow: \"never\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    encode = kendo.htmlEncode,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    InlineFormatter = Editor.InlineFormatter,\n    InlineFormatFinder = Editor.InlineFormatFinder,\n    textNodes = RangeUtils.textNodes,\n    editableTextNodes = RangeUtils.editableTextNodes,\n    registerTool = Editor.EditorUtils.registerTool,\n    keys = kendo.keys;\n\nvar HTTP_PROTOCOL = \"http://\";\nvar protocolRegExp = /^\\w*:\\/\\//;\nvar endLinkCharsRegExp = /[\\w\\/\\$\\-_\\*\\?]/i;\n\nvar LinkFormatFinder = Class.extend({\n    findSuitable: function(sourceNode) {\n        return dom.parentOfType(sourceNode, [\"a\"]);\n    }\n});\n\nvar LinkFormatter = Class.extend({\n    init: function() {\n        this.finder = new LinkFormatFinder();\n    },\n\n    apply: function(range, attributes) {\n        var nodes = this.immutables ? editableTextNodes(range) : textNodes(range);\n        var markers, doc, formatter, a, parent;\n\n        if (attributes.innerText) {\n            doc = RangeUtils.documentFromRange(range);\n            markers = RangeUtils.getMarkers(range);\n\n            range.deleteContents();\n            a = dom.create(doc, \"a\", attributes);\n            range.insertNode(a);\n\n            parent = a.parentNode;\n            if (dom.name(parent) == \"a\") {\n                dom.insertAfter(a, parent);\n            }\n\n            if (dom.emptyNode(parent)) {\n                dom.remove(parent);\n            }\n\n            // move range and markers after inserted link\n            var ref = a;\n            for (var i = 0; i < markers.length; i++) {\n                dom.insertAfter(markers[i], ref);\n                ref = markers[i];\n            }\n\n            if (markers.length) {\n                dom.insertBefore(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                dom.insertAfter(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                range.setStartBefore(markers[0]);\n                range.setEndAfter(markers[markers.length - 1]);\n            }\n        } else {\n            formatter = new InlineFormatter([{ tags: [\"a\"] }], attributes);\n            formatter.finder = this.finder;\n            formatter.apply(nodes);\n        }\n    }\n});\n\nvar UnlinkCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        options.formatter = /** @ignore */ {\n            toggle: function(range) {\n                var nodes = that.immutables() ? editableTextNodes(range) : textNodes(range);\n                new InlineFormatter([{ tags: [\"a\"] }]).remove(nodes);\n            }\n        };\n        this.options = options;\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar LinkCommand = Command.extend({\n    init: function(options) {\n        var that;\n        this.options = options;\n        Command.fn.init.call(this, options);\n        this.formatter = new LinkFormatter();\n\n        if (!options.url) {\n            this.attributes = null;\n            this.async = true;\n        } else {\n            this.exec = function() {\n                this.formatter.immutables = that && that.immutables();\n                this.formatter.apply(options.range, {\n                    href: options.url,\n                    innerText: options.text || options.url,\n                    target: options.target\n                });\n            };\n        }\n    },\n\n    exec: function() {\n        var messages = this.editor.options.messages;\n        this._initialText = \"\";\n        this._range = this.lockRange(true);\n        this.formatter.immutables = this.immutables();\n\n        var nodes = textNodes(this._range);\n        var a = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null;\n        var img = nodes.length && dom.name(nodes[0]) == \"img\";\n\n        var dialog = this.createDialog(\"<div/>\", {\n            title: messages.createLink,\n            minWidth: 340,\n            close: this._close.bind(this),\n            visible: false\n        }).data(\"kendoWindow\");\n\n        this._form = this._createForm(dialog);\n\n        if (a) {\n            this._range.selectNodeContents(a);\n            nodes = textNodes(this._range);\n        }\n\n        this._initialText = this.linkText(nodes);\n\n        dialog.wrapper\n            .find(\".k-dialog-insert\").on(\"click\", this._apply.bind(this)).end()\n            .find(\".k-dialog-close\").on(\"click\", this._close.bind(this)).end()\n            .find(\".k-form-field input\").on(\"keydown\", this._keydown.bind(this)).end()\n            .find(\"#k-editor-link-url\").val(this.linkUrl(a)).end()\n            .find(\"#k-editor-link-text\").val(this._initialText).end()\n            .find(\"#k-editor-link-title\").val(a ? a.title : \"\").end()\n            .find(\"#k-editor-link-target\").prop(\"checked\", a ? a.target == \"_blank\" : false).end()\n            .find(\".k-editor-link-text-row\").toggle(!img);\n\n        this._dialog = dialog.center().open();\n\n        $(\"#k-editor-link-url\", dialog.element).trigger(\"focus\").select();\n    },\n\n    _createForm: function(dialog) {\n        var that = this;\n        var formElement = $(\"<div/>\").appendTo(dialog.element);\n        var messages = that.editor.options.messages;\n        var form = formElement.kendoForm({\n            renderButtons: false,\n            items: [\n                {\n                    field: \"k-editor-link-url\",\n                    label: encode(messages.linkWebAddress),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-link-text\",\n                    label: encode(messages.linkText),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-link-title\",\n                    label: encode(messages.linkToolTip),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-link-target\",\n                    editorOptions: {\n                        label: encode(messages.linkOpenInNewWindow)\n                    },\n                    label: \"\",\n                    editor: \"CheckBox\"\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        formElement.find(\"#k-editor-link-text\").parents(\".k-form-field\").addClass(\"k-editor-link-text-row\");\n\n        dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"link\", cancelButtonIcon: \"cancel-outline\" })));\n\n        return form;\n    },\n\n    _keydown: function(e) {\n        var keys = kendo.keys;\n\n        if (e.keyCode == keys.ENTER) {\n            this._apply(e);\n        } else if (e.keyCode == keys.ESC) {\n            this._close(e);\n        }\n    },\n\n    _apply: function(e) {\n        var element = this._dialog.element;\n        var href = $(\"#k-editor-link-url\", element).val();\n        var title, text, target;\n        var textInput = $(\"#k-editor-link-text\", element);\n\n        if (href && href != HTTP_PROTOCOL) {\n\n            if (href.indexOf(\"@\") > 0 && !/^(\\w+:)|(\\/\\/)/i.test(href)) {\n                href = \"mailto:\" + href;\n            }\n\n            this.attributes = { href: href };\n\n            title = $(\"#k-editor-link-title\", element).val();\n            if (title) {\n                this.attributes.title = title;\n            }\n\n            if (textInput.is(\":visible\")) {\n                text = kendo.trim(textInput.val());\n                if (!text && !this._initialText) {\n                    this.attributes.innerText = href;\n                } else if (text && (text !== this._initialText)) {\n                    this.attributes.innerText = dom.stripBom(text);\n                }\n            }\n\n            target = $(\"#k-editor-link-target\", element).is(\":checked\");\n            this.attributes.target = target ? \"_blank\" : null;\n\n            this.formatter.apply(this._range, this.attributes);\n        }\n\n        this._close(e);\n\n        if (this.change) {\n            this.change();\n        }\n    },\n\n    _close: function(e) {\n        e.preventDefault();\n        this._form.destroy();\n        this._dialog.destroy();\n\n        dom.windowFromDocument(RangeUtils.documentFromRange(this._range)).focus();\n\n        this.releaseRange(this._range);\n    },\n\n    linkUrl: function(anchor) {\n        if (anchor) {\n            // IE < 8 returns absolute url if getAttribute is not used\n            return anchor.getAttribute(\"href\", 2);\n        }\n\n        return HTTP_PROTOCOL;\n    },\n\n    linkText: function(nodes) {\n        var text = \"\";\n        var i;\n\n        for (i = 0; i < nodes.length; i++) {\n            text += nodes[i].nodeValue;\n        }\n\n        return dom.stripBom(text || \"\");\n    },\n\n    redo: function() {\n        var range = this.lockRange(true);\n\n        this.formatter.apply(range, this.attributes);\n        this.releaseRange(range);\n    }\n\n});\n\nvar AutoLinkCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n\n        this.formatter = new LinkFormatter();\n    },\n\n    exec: function() {\n        var detectedLink = this.detectLink();\n        if (!detectedLink) {\n            return;\n        }\n\n        var range = this.getRange();\n        var linkMarker = new kendo.ui.editor.Marker();\n        var linkRange = range.cloneRange();\n\n        linkRange.setStart(detectedLink.start.node, detectedLink.start.offset);\n        linkRange.setEnd(detectedLink.end.node, detectedLink.end.offset);\n\n        range = this.lockRange();\n        linkMarker.add(linkRange);\n\n        this.formatter.apply(linkRange, {\n            href: this._ensureWebProtocol(detectedLink.text)\n        });\n\n        linkMarker.remove(linkRange);\n        this.releaseRange(range);\n    },\n\n    detectLink: function() {\n        var range = this.getRange();\n        var startNode = range.startContainer;\n        var startOffset = range.startOffset;\n        var prev = startNode.previousSibling;\n        if (!prev && ((dom.isBom(startNode) && !startNode.nextSibling) || (!startOffset && dom.isDataNode(startNode)))) {\n            startNode = startNode.parentNode;\n            startOffset = 0;\n        }\n        var traverser = new LeftDomTextTraverser({\n            node: startNode,\n            offset: startOffset,\n            cancelAtNode: function(node) { return node && dom.name(node) === \"a\"; }\n        });\n\n        var detection = new DomTextLinkDetection(traverser);\n        return detection.detectLink();\n    },\n\n    changesContent: function() {\n        return !!this.detectLink();\n    },\n\n    _ensureWebProtocol: function(linkText) {\n        var hasProtocol = this._hasProtocolPrefix(linkText);\n        return hasProtocol ? linkText : this._prefixWithWebProtocol(linkText);\n    },\n\n    _hasProtocolPrefix: function(linkText) {\n        return protocolRegExp.test(linkText);\n    },\n\n    _prefixWithWebProtocol: function(linkText) {\n        return HTTP_PROTOCOL + linkText;\n    }\n});\n\nvar UnlinkTool = Tool.extend({\n    init: function(options) {\n        this.options = options;\n        this.finder = new InlineFormatFinder([{ tags: [\"a\"] }]);\n\n        Tool.fn.init.call(this, $.extend(options, { command: UnlinkCommand }));\n    },\n\n    update: function(ui, nodes) {\n        var isLink = this.finder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n        if (isLink) {\n            toolbar.enable(ui, true);\n        } else {\n            toolbar.enable(ui, false);\n        }\n    }\n});\n\nvar DomTextLinkDetection = Class.extend({\n    init: function(traverser) {\n        this.traverser = traverser;\n        this.start = DomPos();\n        this.end = DomPos();\n        this.text = \"\";\n    },\n\n    detectLink: function() {\n        var node = this.traverser.node;\n        var offset = this.traverser.offset;\n        if (dom.isDataNode(node)) {\n            var text = node.data.substring(0, offset);\n            if (/\\s{2}$/.test(dom.stripBom(text))) {\n                return;\n            }\n        } else if (offset === 0) {//heuristic for new line\n            var p = dom.closestEditableOfType(node, dom.blockElements);\n            if (p && p.previousSibling) {\n                this.traverser.init({\n                    node: p.previousSibling\n                });\n            }\n        }\n\n        this.traverser.traverse(this._detectEnd.bind(this));\n        if (!this.end.blank()) {\n            this.traverser = this.traverser.clone(this.end);\n            this.traverser.traverse(this._detectStart.bind(this));\n\n            if (!this._isLinkDetected()) {\n                var puntuationOptions = this.traverser.extendOptions(this.start);\n                var puntuationTraverser = new RightDomTextTraverser(puntuationOptions);\n                puntuationTraverser.traverse(this._skipStartPuntuation.bind(this));\n                if (!this._isLinkDetected()) {\n                    this.start = DomPos();\n                }\n            }\n        }\n\n        if (this.start.blank()) {\n            return null;\n        } else {\n            return {\n                start: this.start,\n                end: this.end,\n                text: this.text\n            };\n        }\n    },\n\n    _isLinkDetected: function() {\n        return protocolRegExp.test(this.text) || /^w{3}\\./i.test(this.text);\n    },\n\n    _detectEnd: function(text, node) {\n        var i = lastIndexOfRegExp(text, endLinkCharsRegExp);\n        if (i > -1) {\n            this.end.node = node;\n            this.end.offset = i + 1;\n\n            return false;\n        }\n    },\n\n    _detectStart: function(text, node) {\n        var i = lastIndexOfRegExp(text, /\\s/);\n        var ii = i + 1;\n        this.text = text.substring(ii) + this.text;\n\n        this.start.node = node;\n        this.start.offset = ii;\n\n        if (i > -1) {\n            return false;\n        }\n    },\n\n    _skipStartPuntuation: function(text, node, offset) {\n        var i = indexOfRegExp(text, /\\w/);\n        var ii = i;\n        if (i === -1) {\n            ii = text.length;\n        }\n\n        this.text = this.text.substring(ii);\n        this.start.node = node;\n        this.start.offset = ii + (offset | 0);\n\n        if (i > -1) {\n            return false;\n        }\n    }\n});\n\nfunction lastIndexOfRegExp(str, search) {\n    var i = str.length;\n    while (i-- && !search.test(str[i])) {}\n\n    return i;\n}\nfunction indexOfRegExp(str, search) {\n    var r = search.exec(str);\n\n    return r ? r.index : -1;\n}\n\nvar DomPos = function() {\n    return {\n        node: null,\n        offset: null,\n        blank: function() {\n            return this.node === null && this.offset === null;\n        }\n    };\n};\n\nvar DomTextTraverser = Class.extend({\n    init: function(options) {\n        this.node = options.node;\n        this.offset = options.offset === undefined$1 ? (dom.isDataNode(this.node) && this.node.length) || 0 : options.offset;\n        this.cancelAtNode = options.cancelAtNode || this.cancelAtNode || $.noop;\n    },\n\n    traverse: function(callback) {\n        if (!callback) {\n            return;\n        }\n        this.cancel = false;\n        this._traverse(callback, this.node, this.offset);\n    },\n\n    _traverse: function(callback, node, offset) {\n        if (!node || this.cancel) {\n            return;\n        }\n        if (node.nodeType === 3) {\n            var text = node.data;\n            if (offset !== undefined$1) {\n                text = this.subText(text, offset);\n            }\n            this.cancel = (callback(text, node, offset) === false);\n        }\n        else {\n            var edgeNode = this.edgeNode(node);\n            this.cancel = this.cancel || this.cancelAtNode(edgeNode);\n            return this._traverse(callback, edgeNode);\n        }\n\n        var next = this.next(node);\n        if (!next) {\n            var parent = node.parentNode;\n            while (!next && dom.isInline(parent)) {\n                next = this.next(parent);\n                parent = parent.parentNode;\n            }\n        }\n        this.cancel = this.cancel || this.cancelAtNode(next);\n        this._traverse(callback, next);\n    },\n\n    extendOptions: function(o) {\n        return $.extend({\n            node: this.node,\n            offset: this.offset,\n            cancelAtNode: this.cancelAtNode\n        }, o || {});\n    },\n\n    edgeNode: function(node) {},\n    next: function(node) {},\n    subText: function(text, offset) {}\n\n});\n\nvar LeftDomTextTraverser = DomTextTraverser.extend({\n    subText: function(text, splitIndex) {\n        return text.substring(0, splitIndex);\n    },\n\n    next: function(node) {\n        return node.previousSibling;\n    },\n\n    edgeNode: function(node) {\n        return node.lastChild;\n    },\n\n    clone: function(options) {\n        var o = this.extendOptions(options);\n        return new LeftDomTextTraverser(o);\n    }\n});\n\nvar RightDomTextTraverser = DomTextTraverser.extend({\n    subText: function(text, splitIndex) {\n        return text.substring(splitIndex);\n    },\n\n    next: function(node) {\n        return node.nextSibling;\n    },\n\n    edgeNode: function(node) {\n        return node.firstChild;\n    },\n\n    clone: function(options) {\n        var o = this.extendOptions(options);\n        return new RightDomTextTraverser(o);\n    }\n});\n\nextend(kendo.ui.editor, {\n    LinkFormatFinder: LinkFormatFinder,\n    LinkFormatter: LinkFormatter,\n    UnlinkCommand: UnlinkCommand,\n    LinkCommand: LinkCommand,\n    AutoLinkCommand: AutoLinkCommand,\n    UnlinkTool: UnlinkTool,\n    DomTextLinkDetection: DomTextLinkDetection,\n    LeftDomTextTraverser: LeftDomTextTraverser,\n    RightDomTextTraverser: RightDomTextTraverser\n});\n\nregisterTool(\"createLink\", new Tool({ key: \"K\", ctrl: true, command: LinkCommand }));\nregisterTool(\"unlink\", new UnlinkTool({ key: \"K\", ctrl: true, shift: true, ui: { enable: false } }));\nregisterTool(\"autoLink\", new Tool({ key: [keys.ENTER, keys.SPACEBAR], keyPressCommand: true, command: AutoLinkCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    formats = kendo.ui.Editor.fn.options.formats,\n    dom = Editor.Dom,\n    FormatTool = Editor.FormatTool,\n    EditorUtils = Editor.EditorUtils,\n    registerTool = EditorUtils.registerTool,\n    registerFormat = EditorUtils.registerFormat,\n    RangeUtils = Editor.RangeUtils;\n\nvar BlockFormatFinder = Class.extend({\n    init: function(format) {\n        this.format = format;\n    },\n\n    contains: function(node, children) {\n        var i, len, child;\n\n        for (i = 0, len = children.length; i < len; i++) {\n            child = children[i];\n            if (!child || !dom.isAncestorOrSelf(node, child)) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    findSuitable: function(nodes) {\n        var format = this.format,\n            suitable = [],\n            i, len, candidate;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            for (var f = format.length - 1; f >= 0; f--) {\n                candidate = dom.ofType(nodes[i], format[f].tags) ? nodes[i] : dom.closestEditableOfType(nodes[i], format[f].tags);\n                if (candidate) {\n                    break;\n                }\n            }\n\n            if (!candidate || candidate.contentEditable === 'true') {\n                return [];\n            }\n\n            if ($.inArray(candidate, suitable) < 0) {\n                suitable.push(candidate);\n            }\n        }\n\n        this._resolveListsItems(suitable);\n\n        for (i = 0, len = suitable.length; i < len; i++) {\n            if (this.contains(suitable[i], suitable)) {\n                return [suitable[i]];\n            }\n        }\n\n        return suitable;\n    },\n    _resolveListsItems: function(nodes) {\n        var i, node, wrapper;\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            wrapper = dom.is(node, \"li\") ? node : dom.wrapper(node);\n            wrapper = wrapper && dom.list(wrapper) ? wrapper.children[0] : wrapper;\n            if (dom.is(wrapper, \"li\")) {\n                node = nodes[i] = wrapper;\n            }\n        }\n    },\n\n    findFormat: function(sourceNode, until) {\n        var format = this.format,\n            i, len, node, tags, attributes;\n        var editableParent = dom.editableParent(sourceNode);\n        var immutables = this.options && this.options.immutables;\n        var ImmutablesNS = Editor.Immutables;\n\n        for (i = 0, len = format.length; i < len; i++) {\n            node = sourceNode;\n            tags = format[i].tags;\n            attributes = format[i].attr;\n\n            if (immutables && tags && tags[0] == \"immutable\") {\n                var immutable = ImmutablesNS.immutableParent(node);\n                if (immutable && dom.attrEquals(immutable, attributes)) {\n                    return node;\n                }\n            }\n\n            while (node && dom.isAncestorOf(editableParent, node)) {\n                if (dom.ofType(node, tags) && dom.attrEquals(node, attributes)) {\n                    return node;\n                }\n\n                if (until && until(node)) {\n                    break;\n                }\n\n                node = node.parentNode;\n            }\n        }\n        return null;\n    },\n\n    getFormat: function(nodes) {\n        var that = this,\n            findFormat = function(node) {\n                    return that.findFormat(dom.isDataNode(node) ? node.parentNode : node);\n                },\n            result = findFormat(nodes[0]),\n            i, len;\n\n        if (!result) {\n            return \"\";\n        }\n\n        for (i = 1, len = nodes.length; i < len; i++) {\n            if (result != findFormat(nodes[i])) {\n                return \"\";\n            }\n        }\n\n        return result.nodeName.toLowerCase();\n    },\n\n    isFormatted: function(nodes, until) {\n        for (var i = 0, len = nodes.length; i < len; i++) {\n            if (!this.findFormat(nodes[i], until)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n});\n\nvar BlockFormatter = Class.extend({\n    init: function(format, values) {\n        this.format = format;\n        this.values = values;\n        this.finder = new BlockFormatFinder(format);\n    },\n\n    wrap: function(tag, attributes, nodes) {\n\n        var commonAncestor = nodes.length == 1 ? dom.blockParentOrBody(nodes[0]) : dom.commonAncestor.apply(null, nodes);\n\n        if (dom.isInline(commonAncestor)) {\n            commonAncestor = dom.blockParentOrBody(commonAncestor);\n        }\n\n        var ancestors = dom.significantChildNodes(commonAncestor),\n            position = dom.findNodeIndex(ancestors[0]),\n            wrapper = dom.create(commonAncestor.ownerDocument, tag, attributes),\n            i, ancestor;\n\n        for (i = 0; i < ancestors.length; i++) {\n            ancestor = ancestors[i];\n            if (dom.isBlock(ancestor)) {\n                dom.attr(ancestor, attributes);\n\n                if (wrapper.childNodes.length) {\n                    dom.insertBefore(wrapper, ancestor);\n                    wrapper = wrapper.cloneNode(false);\n                }\n\n                position = dom.findNodeIndex(ancestor) + 1;\n\n                continue;\n            }\n\n            wrapper.appendChild(ancestor);\n        }\n\n        if (wrapper.firstChild) {\n            dom.insertAt(commonAncestor, wrapper, position);\n        }\n    },\n\n    apply: function(nodes) {\n        var format, values = this.values;\n\n        function attributes(format) {\n            return extend({}, format && format.attr, values);\n        }\n\n        this._handleImmutables(nodes, true);\n\n        var images = dom.filter(\"img\", nodes);\n        var imageFormat = EditorUtils.formatByName(\"img\", this.format);\n        var imageAttributes = attributes(imageFormat);\n        $.each(images, function() {\n            dom.attr(this, imageAttributes);\n        });\n\n        // only images were selected, no need to wrap\n        if (images.length == nodes.length) {\n            return;\n        }\n\n        var nonImages = dom.filter(\"img\", nodes, true);\n        var formatNodes = this.finder.findSuitable(nonImages);\n\n        if (formatNodes.length) {\n            for (var i = 0, len = formatNodes.length; i < len; i++) {\n                format = EditorUtils.formatByName(dom.name(formatNodes[i]), this.format);\n                dom.attr(formatNodes[i], attributes(format));\n            }\n        } else {\n            format = this.format[0];\n            this.wrap(format.tags[0], attributes(format), nonImages);\n        }\n    },\n\n    _handleImmutables: function(nodes, applyFormatting) {\n        if (!this.immutables()) {\n            return;\n        }\n        var immutableFormat = EditorUtils.formatByName(\"immutable\", this.format);\n        if (!immutableFormat) {\n            return;\n        }\n        var ImmutablesNS = Editor.Immutables;\n        var l = nodes.length - 1;\n        for (var i = l; i >= 0; i--) {\n            var immutableParent = ImmutablesNS.immutableParent(nodes[i]);\n            if (!immutableParent) {\n                continue;\n            }\n            if (immutableParent !== nodes[i + 1]) {\n                if (applyFormatting) {\n                    dom.attr(immutableParent, immutableFormat.attr);\n                } else {\n                    dom.unstyle(immutableParent, immutableFormat.attr.style);\n                }\n            }\n            nodes.splice(i, 1);\n        }\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    remove: function(nodes) {\n        var i, l, formatNode, namedFormat, name;\n\n        this._handleImmutables(nodes, false);\n\n        for (i = 0, l = nodes.length; i < l; i++) {\n            formatNode = this.finder.findFormat(nodes[i]);\n            if (formatNode) {\n                name = dom.name(formatNode);\n                namedFormat = EditorUtils.formatByName(name, this.format);\n                if (namedFormat.attr.style) {\n                    dom.unstyle(formatNode, namedFormat.attr.style);\n                }\n                if (namedFormat.attr.className) {\n                    dom.removeClass(formatNode, namedFormat.attr.className);\n                }\n            }\n        }\n    },\n\n    toggle: function(range) {\n        var that = this,\n            nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n        if (that.finder.isFormatted(nodes)) {\n            that.remove(nodes);\n        } else {\n            that.apply(nodes);\n        }\n    }\n});\n\nvar GreedyBlockFormatter = Class.extend({\n    init: function(format, values) {\n        var that = this;\n        that.format = format;\n        that.values = values;\n        that.finder = new BlockFormatFinder(format);\n    },\n\n    apply: function(nodes) {\n        var format = this.format;\n        var blocks = dom.blockParents(nodes);\n        var formatTag = format[0].tags[0];\n        var i, len, list, formatter, range;\n        var element;\n        var tagName;\n        var block;\n        var immutalbeParent;\n\n        if (blocks.length) {\n            for (i = 0, len = blocks.length; i < len; i++) {\n                block = blocks[i];\n                immutalbeParent = this.immutables() && Editor.Immutables.immutableParent(block);\n\n                if (!immutalbeParent) {\n                    tagName = dom.name(block);\n\n                    if (tagName == \"li\") {\n                        list = block.parentNode;\n                        formatter = new Editor.ListFormatter(list.nodeName.toLowerCase(), formatTag);\n                        range = this.editor.createRange();\n                        range.selectNode(blocks[i]);\n                        formatter.toggle(range);\n                    } else if (formatTag && (tagName == \"td\" || block.attributes.contentEditable)) {\n                        new BlockFormatter(format, this.values).apply(block.childNodes);\n                    } else {\n                        element = dom.changeTag(block, formatTag);\n                        dom.attr(element, format[0].attr);\n                    }\n                }\n            }\n        } else {\n            var blockFormatter = new BlockFormatter(format, this.values);\n            blockFormatter.editor = this.editor;\n            blockFormatter.apply(nodes);\n        }\n    },\n\n    toggle: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n        if (!nodes.length) {\n            range.selectNodeContents(range.commonAncestorContainer);\n            nodes = RangeUtils.textNodes(range);\n            if (!nodes.length) {\n                nodes = dom.significantChildNodes(range.commonAncestorContainer);\n            }\n        }\n\n        this.apply(nodes);\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    }\n});\n\nvar BlockFormatTool = FormatTool.extend({ init: function(options) {\n        FormatTool.fn.init.call(this, extend(options, {\n            finder: new BlockFormatFinder(options.format),\n            formatter: function() {\n                return new BlockFormatter(options.format);\n            }\n        }));\n    }\n});\n\nextend(Editor, {\n    BlockFormatFinder: BlockFormatFinder,\n    BlockFormatter: BlockFormatter,\n    GreedyBlockFormatter: GreedyBlockFormatter,\n    BlockFormatTool: BlockFormatTool\n});\n\nvar listElements = [\"ul\",\"ol\",\"li\"];\n\nregisterFormat(\"justifyLeft\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"left\" } } },\n    { tags: [\"img\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"left\", listStylePosition: \"\" } } }\n]);\nregisterTool(\"justifyLeft\", new BlockFormatTool({\n    format: formats.justifyLeft,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\nregisterFormat(\"justifyCenter\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"center\" } } },\n    { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"center\", listStylePosition: \"inside\" } } }\n]);\nregisterTool(\"justifyCenter\", new BlockFormatTool({\n    format: formats.justifyCenter,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\nregisterFormat(\"justifyRight\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"right\" } } },\n    { tags: [\"img\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"right\", listStylePosition: \"inside\" } } }\n]);\nregisterTool(\"justifyRight\", new BlockFormatTool({\n    format: formats.justifyRight,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\nregisterFormat(\"justifyFull\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"justify\" } } },\n    { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"justify\", listStylePosition: \"\" } } }\n]);\nregisterTool(\"justifyFull\", new BlockFormatTool({\n    format: formats.justifyFull,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    FormatTool = Editor.FormatTool,\n    BlockFormatFinder = Editor.BlockFormatFinder,\n    textNodes = RangeUtils.textNodes,\n    registerTool = Editor.EditorUtils.registerTool;\n\nvar ListFormatFinder = BlockFormatFinder.extend({\n    init: function(options) {\n        this.tag = options.tag;\n        this.attr = options.attr;\n        this.altAttr = options.altAttr;\n\n        var tags = this.tags = [this.tag == 'ul' ? 'ol' : 'ul', this.tag];\n        var format = [{ tags: tags, attr: this.attr }];\n\n        if (this.altAttr) {\n            format.push({\n                tags: tags,\n                attr: this.altAttr\n            });\n        }\n\n        BlockFormatFinder.fn.init.call(this, format);\n    },\n\n    matchesType: function(node) {\n        return dom.attrEquals(node, this.attr) || (this.altAttr && dom.attrEquals(node, this.altAttr));\n    },\n\n    isList: function(node) {\n        return dom.list(node);\n    },\n\n    isFormatted: function(nodes) {\n        var formatNodes = [];\n        var formatNode, i;\n\n        for (i = 0; i < nodes.length; i++) {\n            formatNode = this.findFormat(nodes[i], this.isList);\n\n            if (formatNode && dom.name(formatNode) == this.tag && this.matchesType(formatNode)) {\n                formatNodes.push(formatNode);\n            }\n        }\n\n        if (formatNodes.length < 1) {\n            return false;\n        }\n\n        if (formatNodes.length != nodes.length) {\n            return false;\n        }\n\n        // check if sequential lists are selected\n        for (i = 0; i < formatNodes.length; i++) {\n            if (formatNodes[i].parentNode != formatNode.parentNode) {\n                break;\n            }\n\n            if (formatNodes[i] != formatNode) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    findSuitable: function(nodes) {\n        var candidate = this.findFormat(nodes[0], this.isList);\n\n        if (candidate && dom.name(candidate) == this.tag) {\n            return candidate;\n        }\n\n        return null;\n    }\n\n});\n\nvar ListFormatter = Class.extend({\n    init: function(options, unwrapTag) {\n        var that = this;\n        options = $.isPlainObject(options) ? options : { tag: options, attr: null };\n        that.tag = options.tag;\n        that.attr = options.attr;\n        that.finder = new ListFormatFinder(options);\n        that.unwrapTag = unwrapTag;\n    },\n\n    isList: function(node) {\n        return dom.list(node);\n    },\n\n    immutables: function() {\n        return this.editor && !!this.editor.options.immutables;\n    },\n\n    wrap: function(list, nodes) {\n        var li = dom.create(list.ownerDocument, \"li\"),\n            i, node,\n            isImmutable = this.immutables() ? Editor.Immutables.immutable : $.noop;\n\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n\n            if (dom.is(node, 'li')) {\n                list.appendChild(node);\n                continue;\n            }\n\n            if (this.isList(node)) {\n                while (node.firstChild) {\n                    list.appendChild(node.firstChild);\n                }\n                continue;\n            }\n\n            if (dom.is(node, \"td\")) {\n                while (node.firstChild) {\n                    li.appendChild(node.firstChild);\n                }\n                list.appendChild(li);\n                node.appendChild(list);\n                list = list.cloneNode(false);\n                li = li.cloneNode(false);\n                continue;\n            }\n\n            li.appendChild(node);\n\n            if (dom.isBlock(node)) {\n                list.appendChild(li);\n                if (!isImmutable(node)) {\n                    dom.unwrap(node);\n                }\n                li = li.cloneNode(false);\n            }\n        }\n\n        if (li.firstChild) {\n            list.appendChild(li);\n        }\n    },\n\n    containsAny: function(parent, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (dom.isAncestorOrSelf(parent, nodes[i])) {\n                return true;\n            }\n        }\n\n        return false;\n    },\n\n    suitable: function(candidate, nodes) {\n        if (candidate.className == \"k-marker\") {\n            var sibling = candidate.nextSibling;\n\n            if (sibling && dom.isBlock(sibling)) {\n                return false;\n            }\n\n            sibling = candidate.previousSibling;\n\n            if (sibling && dom.isBlock(sibling)) {\n                return false;\n            }\n        }\n\n        return this.containsAny(candidate, nodes) || dom.isInline(candidate) || candidate.nodeType == 3;\n    },\n\n    _parentLists: function(node) {\n        var editable = dom.closestEditable(node);\n\n        return $(node).parentsUntil(editable, \"ul,ol\");\n    },\n\n    split: function(range) {\n        var nodes = textNodes(range);\n        var start, end, parents;\n\n        if (nodes.length) {\n            start = dom.parentOfType(nodes[0], ['li']);\n            end = dom.parentOfType(nodes[nodes.length - 1], ['li']);\n            range.setStartBefore(start);\n            range.setEndAfter(end);\n\n            for (var i = 0, l = nodes.length; i < l; i++) {\n                var formatNode = this.finder.findFormat(nodes[i]);\n                if (formatNode) {\n                    parents = this._parentLists(formatNode);\n                    if (parents.length) {\n                        RangeUtils.split(range, parents.last()[0], true);\n                    } else {\n                        RangeUtils.split(range, formatNode, true);\n                    }\n                }\n            }\n        }\n    },\n\n    merge: function(tag, formatNode) {\n        var prev = formatNode.previousSibling, next;\n\n        while (prev && (prev.className == \"k-marker\" || (prev.nodeType == 3 && dom.isWhitespace(prev)))) {\n            prev = prev.previousSibling;\n        }\n\n        // merge with previous list\n        if (prev && dom.name(prev) == tag && this.finder.matchesType(prev)) {\n            while (formatNode.firstChild) {\n                prev.appendChild(formatNode.firstChild);\n            }\n            dom.remove(formatNode);\n            formatNode = prev;\n        }\n\n        next = formatNode.nextSibling;\n        while (next && (next.className == \"k-marker\" || (next.nodeType == 3 && dom.isWhitespace(next)))) {\n            next = next.nextSibling;\n        }\n\n        // merge with next list\n        if (next && dom.name(next) == tag && this.finder.matchesType(next)) {\n            while (formatNode.lastChild) {\n                next.insertBefore(formatNode.lastChild, next.firstChild);\n            }\n            dom.remove(formatNode);\n        }\n    },\n\n    breakable: function(node) {\n        return (\n            node != node.ownerDocument.body &&\n            !/table|tbody|thead|tr|td/.test(dom.name(node)) &&\n            !node.attributes.contentEditable\n        );\n    },\n\n    findSuitableNode: function(nodes) {\n        var that = this,\n            finder = that.finder,\n            tag = that.tag,\n            formatNode;\n\n        formatNode = finder.findSuitable(nodes);\n\n        if (!formatNode) {\n            // Find the opposite tag\n            finder = new ListFormatFinder({ tag: tag == \"ul\" ? \"ol\" : \"ul\" });\n            formatNode = finder.findSuitable(nodes);\n        }\n\n        if (!formatNode) {\n            // Find the same tag\n            finder = new ListFormatFinder({ tag: tag });\n            formatNode = finder.findSuitable(nodes);\n            formatNode = formatNode && that.finder.matchesType(formatNode) ? null : formatNode;\n        }\n\n\n        return formatNode;\n    },\n\n    applyOnSection: function(section, nodes) {\n        var tag = this.tag;\n        var attr = this.attr;\n        var commonAncestor = dom.closestSplittableParent(nodes);\n\n        var ancestors = [];\n        var formatNode = this.findSuitableNode(nodes);\n\n        var childNodes;\n\n        if (/table|tbody|thead/.test(dom.name(commonAncestor))) {\n            childNodes = $.map(nodes, function(node) {\n                return dom.parentOfType(node, [\"td\"]);\n            });\n        } else {\n            childNodes = dom.significantChildNodes(commonAncestor);\n\n            if ($.grep(childNodes, dom.isBlock).length) {\n                childNodes = $.grep(childNodes, (function(node) {\n                    return this.containsAny(node, nodes);\n                }).bind(this));\n            }\n\n            if (!childNodes.length) {\n                childNodes = nodes;\n            }\n        }\n\n        function pushAncestor() {\n            ancestors.push(this);\n        }\n\n        for (var i = 0; i < childNodes.length; i++) {\n            var child = childNodes[i];\n            var suitable = (!formatNode || !dom.isAncestorOrSelf(formatNode, child)) && this.suitable(child, nodes);\n\n            if (!suitable) {\n                continue;\n            }\n\n            if (formatNode && this.isList(child)) {\n                // merging lists\n                $.each(child.children, pushAncestor);\n                dom.remove(child);\n            } else {\n                ancestors.push(child);\n            }\n        }\n\n        if (ancestors.length == childNodes.length && this.breakable(commonAncestor)) {\n            ancestors = [commonAncestor];\n        }\n\n        if (!formatNode) {\n            formatNode = dom.create(commonAncestor.ownerDocument, tag, attr);\n            if (dom.isBlock(ancestors[0])) {\n                dom.mergeAttributes(ancestors[0], formatNode);\n            }\n            dom.insertBefore(formatNode, ancestors[0]);\n        }\n\n        this.wrap(formatNode, ancestors);\n\n        while (dom.isBom(formatNode.nextSibling)) {\n            dom.remove(formatNode.nextSibling);\n        }\n\n        if (!this.finder.matchesType(formatNode)) {\n            formatNode.removeAttribute(\"type\");\n            formatNode.style.listStyleType = \"\";\n            dom.mergeAttributes(dom.create(commonAncestor.ownerDocument, tag, attr), formatNode, true);\n        }\n\n        if (formatNode && formatNode.getAttribute(\"type\") === \"\") {\n            formatNode.removeAttribute(\"type\");\n        }\n\n        if (!dom.is(formatNode, tag)) {\n            dom.changeTag(formatNode, tag);\n        }\n\n        this.merge(tag, formatNode);\n    },\n\n    apply: function(nodes) {\n        var i = 0,\n            sections = [],\n            lastSection,\n            lastNodes,\n            section,\n            node,\n            l = nodes.length,\n            immutableParent = this.immutables() ? Editor.Immutables.immutableParent : $.noop;\n\n        function addLastSection() {\n            if (lastSection) {\n                sections.push({\n                    section: lastSection,\n                    nodes: lastNodes\n                });\n            }\n        }\n\n        // split nodes into sections that need to be different lists\n        for (i = 0; i < l; i++) {\n            node = immutableParent(nodes[i]) || nodes[i];\n            section = dom.closestEditable(node, [\"td\",\"th\",\"body\"]);\n            if (!lastSection || section != lastSection) {\n                addLastSection();\n                lastNodes = [node];\n                lastSection = section;\n            } else {\n                lastNodes.push(node);\n            }\n        }\n\n        addLastSection();\n\n        for (i = 0; i < sections.length; i++) {\n            this.applyOnSection(sections[i].section, sections[i].nodes);\n        }\n    },\n\n    unwrap: function(ul) {\n        var fragment = ul.ownerDocument.createDocumentFragment(),\n            unwrapTag = this.unwrapTag,\n            parents,\n            li,\n            p,\n            child;\n\n        for (li = ul.firstChild; li; li = li.nextSibling) {\n            p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n\n            while (li.firstChild) {\n                child = li.firstChild;\n\n                if (dom.isBlock(child)) {\n\n                    if (p.firstChild) {\n                        fragment.appendChild(p);\n                        p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n                    }\n\n                    fragment.appendChild(child);\n                } else {\n                    p.appendChild(child);\n                }\n            }\n\n            if (p.firstChild) {\n                fragment.appendChild(p);\n            }\n        }\n\n        parents = this._parentLists(ul);\n\n        if (parents[0]) {\n            dom.insertAfter(fragment, parents.last()[0]);\n            parents.last().remove();\n        } else {\n            dom.insertAfter(fragment, ul);\n        }\n\n        dom.remove(ul);\n    },\n\n    remove: function(nodes) {\n        var formatNode;\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            formatNode = this.finder.findFormat(nodes[i]);\n\n            if (formatNode) {\n                this.unwrap(formatNode);\n            }\n        }\n    },\n\n    toggle: function(range) {\n        var that = this,\n            nodes = textNodes(range),\n            ancestor = range.commonAncestorContainer;\n\n        if (!nodes.length) {\n            range.selectNodeContents(ancestor);\n            nodes = textNodes(range);\n            if (!nodes.length) {\n                var text = ancestor.ownerDocument.createTextNode(\"\");\n                range.startContainer.appendChild(text);\n                nodes = [text];\n                range.selectNode(text.parentNode);\n            }\n        }\n        nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n        if (that.finder.isFormatted(nodes)) {\n            that.split(range);\n            that.remove(nodes);\n        } else {\n            that.apply(nodes);\n        }\n    }\n\n});\n\nvar ListCommand = Command.extend({\n    init: function(options) {\n        options.formatter = new ListFormatter({ tag: options.tag, attr: options.attr });\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar ListTool = FormatTool.extend({\n    init: function(options) {\n        this.options = options;\n\n        FormatTool.fn.init.call(this, extend(options, {\n            finder: new ListFormatFinder(options)\n        }));\n    },\n\n    command: function(commandArguments) {\n        return new ListCommand(extend(commandArguments, { tag: this.options.tag, attr: this.options.attr }));\n    }\n});\n\nextend(Editor, {\n    ListFormatFinder: ListFormatFinder,\n    ListFormatter: ListFormatter,\n    ListCommand: ListCommand,\n    ListTool: ListTool\n});\n\nregisterTool(\"insertUnorderedList\", new ListTool({ tag: 'ul', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\nregisterTool(\"insertOrderedList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\nregisterTool(\"insertUpperRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"upper-roman\" } }, altAttr: { type: \"I\" }, ui: { togglable: true, group: \"lists\" } }));\nregisterTool(\"insertLowerRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"lower-roman\" } }, altAttr: { type: \"i\" }, ui: { togglable: true, group: \"lists\" } }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Editor = kendo.ui.editor,\n    Tool = Editor.Tool,\n    DelayedExecutionTool = Editor.DelayedExecutionTool,\n    Command = Editor.Command,\n    dom = Editor.Dom,\n    EditorUtils = Editor.EditorUtils,\n    RangeUtils = Editor.RangeUtils,\n    registerTool = EditorUtils.registerTool;\n\n\nvar FormattingTool = DelayedExecutionTool.extend({\n    init: function(options) {\n        var that = this;\n        Tool.fn.init.call(that, kendo.deepExtend({}, that.options, options));\n\n        that.type = \"kendoDropDownList\";\n\n        that.finder = {\n            getFormat: function() { return \"\"; }\n        };\n    },\n\n    options: {\n        items: [\n            { text: \"Paragraph\", value: \"p\" },\n            { text: \"Quotation\", value: \"blockquote\" },\n            { text: \"Heading 1\", value: \"h1\" },\n            { text: \"Heading 2\", value: \"h2\" },\n            { text: \"Heading 3\", value: \"h3\" },\n            { text: \"Heading 4\", value: \"h4\" },\n            { text: \"Heading 5\", value: \"h5\" },\n            { text: \"Heading 6\", value: \"h6\" }\n        ],\n        width: 110\n    },\n\n    toFormattingItem: function(item) {\n        var value = item.value;\n\n        if (!value) {\n            return item;\n        }\n\n        if (item.tag || item.className) {\n            return item;\n        }\n\n        var dot = value.indexOf(\".\");\n\n        if (dot === 0) {\n            item.className = value.substring(1);\n        } else if (dot == -1) {\n            item.tag = value;\n        } else {\n            item.tag = value.substring(0, dot);\n            item.className = value.substring(dot + 1);\n        }\n\n        return item;\n    },\n\n    command: function(args) {\n        var that = this;\n        var item = args.value;\n\n        item = this.toFormattingItem(item);\n\n        return new Editor.FormatCommand({\n            range: args.range,\n            formatter: function() {\n                var formatter,\n                    tags = (item.tag || item.context || \"span\").split(\",\"),\n                    format = [{\n                        tags: tags,\n                        attr: { className: item.className || \"\" }\n                    }];\n\n                if ($.inArray(tags[0], dom.inlineElements) >= 0) {\n                    formatter = new Editor.GreedyInlineFormatter(format);\n                } else {\n                    formatter = new Editor.GreedyBlockFormatter(format);\n                }\n\n                formatter.editor = that.editor;\n                return formatter;\n            }\n        });\n    },\n\n    decorate: function(body) {\n        var component = this.component,\n            dataSource = component.dataSource,\n            items = dataSource.data(),\n            i, tag, className, style;\n\n        if (body) {\n            component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n        }\n\n        if (this.component && this.component.options && this.component.options.unsafeInline !== false) {\n            for (i = 0; i < items.length; i++) {\n                tag = items[i].tag || \"span\";\n                className = items[i].className;\n\n                style = dom.inlineStyle(body, tag, { className: className });\n\n                style = style.replace(/\"/g, \"'\");\n\n                items[i].style = style + \";display:inline-block\";\n            }\n        }\n\n        dataSource.trigger(\"change\");\n    },\n\n    initialize: function(ui, editor) {\n        var options = this.options;\n        var toolName = options.name;\n        var that = this;\n        var component = ui.getKendoDropDownList();\n\n        if (!component) {\n            return;\n        }\n\n        that.editor = editor;\n        that.component = component;\n\n        // must be moved to themes\n        ui.closest(\".k-dropdownlist\").width(options.width);\n\n        component.setOptions({\n            optionLabel: editor.options.messages.formatting,\n            change: () => {\n                var dataItem = component.dataItem();\n\n                if (dataItem) {\n                    Tool.exec(editor, toolName, dataItem.toJSON());\n                }\n            },\n            dataBound: function() {\n                var i, items = component.dataSource.data(),\n                    optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n                for (i = 0; i < items.length; i++) {\n                    items[i] = that.toFormattingItem(items[i]);\n                }\n\n                if (optionLabel.length) {\n                    optionLabel.remove();\n                }\n            }\n        });\n    },\n\n    getFormattingValue: function(items, nodes) {\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            var tag = item.tag || item.context || \"\";\n            var className = item.className ? \".\" + item.className : \"\";\n            var selector = tag + className;\n\n            var element = $(nodes[0]).closest(selector)[0];\n\n            if (!element) {\n                continue;\n            }\n\n            if (nodes.length == 1) {\n                return item.value;\n            }\n\n            for (var n = 1; n < nodes.length; n++) {\n                if (!$(nodes[n]).closest(selector)[0]) {\n                    break;\n                } else if (n == nodes.length - 1) {\n                    return item.value;\n                }\n            }\n        }\n\n        return \"\";\n    },\n\n    update: function(ui, nodes) {\n        var selectBox = $(ui).data(this.type);\n        // necessary until formatBlock is deleted\n        if (!selectBox) {\n            return;\n        }\n\n        var dataSource = selectBox.dataSource,\n            items = dataSource.data(),\n            i, context,\n            ancestor = dom.commonAncestor.apply(null, nodes);\n\n        if (ancestor != dom.closestEditable(ancestor) && this._ancestor == ancestor) {\n            return;\n        } else {\n            this._ancestor = ancestor;\n        }\n\n        for (i = 0; i < items.length; i++) {\n            context = items[i].context;\n\n            items[i].visible = !context || !!$(ancestor).closest(context).length;\n        }\n\n        dataSource.filter([{ field: \"visible\", operator: \"eq\", value: true }]);\n\n        DelayedExecutionTool.fn.update.call(this, ui, nodes);\n\n        selectBox.value(this.getFormattingValue(dataSource.view(), nodes));\n\n        selectBox.wrapper.toggleClass(\"k-disabled\", !dataSource.view().length);\n    },\n\n    destroy: function() {\n        this._ancestor = null;\n    }\n});\n\nvar CleanFormatCommand = Command.extend({\n    exec: function() {\n        var range = this.lockRange(true);\n        this.tagsToClean = this.options.remove || \"strong,em,span,sup,sub,del,b,i,u,font\".split(\",\");\n\n        RangeUtils.wrapSelectedElements(range);\n\n        var nodes = RangeUtils.mapAll(range, function(node) {\n            return node;\n        });\n\n\n        for (var c = nodes.length - 1; c >= 0; c--) {\n            var node = nodes[c];\n            if (!this.immutableParent(node)) {\n                this.clean(node);\n            }\n        }\n\n        this.releaseRange(range);\n    },\n\n    clean: function(node) {\n        if (!node || dom.isMarker(node)) {\n            return;\n        }\n\n        var name = dom.name(node);\n\n        if (name == \"ul\" || name == \"ol\") {\n            var listFormatter = new Editor.ListFormatter(name);\n            var prev = node.previousSibling;\n            var next = node.nextSibling;\n\n            listFormatter.unwrap(node);\n\n            // clean contents\n            for (; prev && prev != next; prev = prev.nextSibling) {\n                this.clean(prev);\n            }\n        } else if (name == \"blockquote\") {\n            dom.changeTag(node, \"p\");\n        } else if (node.nodeType == 1 && !dom.insignificant(node)) {\n            for (var i = node.childNodes.length - 1; i >= 0; i--) {\n                this.clean(node.childNodes[i]);\n            }\n\n            node.removeAttribute(\"style\");\n            node.removeAttribute(\"class\");\n        } else {\n            unwrapListItem(node);\n        }\n\n        if ($.inArray(name, this.tagsToClean) > -1) {\n            dom.unwrap(node);\n        }\n    },\n\n    immutableParent: function(node) {\n        return this.immutables() && Editor.Immutables.immutableParent(node);\n    }\n});\n\n\nfunction unwrapListItem(node) {\n    var li = dom.closestEditableOfType(node, [\"li\"]);\n    if (li) {\n        var listFormatter = new Editor.ListFormatter(dom.name(li.parentNode));\n        var range = kendo.ui.editor.W3CRange.fromNode(node);\n        range.selectNode(li);\n        listFormatter.toggle(range);\n    }\n}\n\n$.extend(Editor, {\n    FormattingTool: FormattingTool,\n    CleanFormatCommand: CleanFormatCommand\n});\n\nregisterTool(\"formatting\", new FormattingTool({\n    ui: {\n        type: \"component\",\n        component: \"DropDownList\",\n        componentOptions: {\n            dataTextField: \"text\",\n            dataValueField: \"value\",\n            highlightFirst: false,\n            autoWidth: true,\n            template: kendo.template(\n                (data) => `<span unselectable=\"on\" ${data.style ? `class=\"k-d-block\" style=\"display:block;${data.style || \"\"}` : \"\"}\">${kendo.htmlEncode(data.text)}</span>`\n            )\n        },\n        overflow: \"never\"\n    }\n}));\n\nregisterTool(\"cleanFormatting\", new Tool({ command: CleanFormatCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    encode = kendo.htmlEncode,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    dom = Editor.Dom,\n    registerTool = EditorUtils.registerTool,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    keys = kendo.keys,\n    KEDITORIMAGEURL = \"#k-editor-image-url\",\n    KEDITORIMAGETITLE = \"#k-editor-image-title\",\n    KEDITORIMAGEWIDTH = \"#k-editor-image-width\",\n    KEDITORIMAGEHEIGHT = \"#k-editor-image-height\";\n\nvar ImageCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        Command.fn.init.call(that, options);\n\n        that.async = true;\n        that.attributes = {};\n    },\n\n    insertImage: function(img, range) {\n        var attributes = this.attributes;\n        var doc = RangeUtils.documentFromRange(range);\n\n        if (attributes.src && attributes.src != \"http://\") {\n\n            var removeIEAttributes = function() {\n                setTimeout(function() {\n                    if (!attributes.width) {\n                        img.removeAttribute(\"width\");\n                    }\n\n                    if (!attributes.height) {\n                        img.removeAttribute(\"height\");\n                    }\n\n                    img.removeAttribute(\"complete\");\n                });\n            };\n\n            if (!img) {\n                img = dom.create(doc, \"img\", attributes);\n                img.onload = img.onerror = removeIEAttributes;\n\n                range.deleteContents();\n                range.insertNode(img);\n\n                if (!img.nextSibling) {\n                    dom.insertAfter(doc.createTextNode(\"\\ufeff\"), img);\n                }\n\n                removeIEAttributes();\n\n                range.setStartAfter(img);\n                range.setEndAfter(img);\n                RangeUtils.selectRange(range);\n                return true;\n            } else {\n                img.onload = img.onerror = removeIEAttributes;\n                dom.attr(img, attributes);\n                removeIEAttributes();\n            }\n        }\n\n        return false;\n    },\n\n    redo: function() {\n        var that = this,\n            range = that.lockRange();\n\n        if (!that.insertImage(RangeUtils.image(range), range)) {\n            that.releaseRange(range);\n        }\n    },\n\n    exec: function() {\n        var that = this,\n            range = that.lockRange(),\n            applied = false,\n            img = RangeUtils.image(range),\n            imageWidth = img && img.getAttribute(\"width\") || \"\",\n            imageHeight = img && img.getAttribute(\"height\") || \"\",\n            dialog,\n            form,\n            isIE = kendo.support.browser.msie,\n            options = that.editor.options,\n            messages = options.messages,\n            imageBrowser = options.imageBrowser,\n            showBrowser = !!(kendo.ui.ImageBrowser && imageBrowser && imageBrowser.transport && imageBrowser.transport.read !== undefined$1),\n            dialogOptions = {\n                title: messages.insertImage,\n                visible: false,\n                resizable: showBrowser\n            };\n\n        this.expandImmutablesIn(range);\n\n        function apply(e) {\n            var element = dialog.element,\n                w = parseInt(element.find(KEDITORIMAGEWIDTH).val(), 10),\n                h = parseInt(element.find(KEDITORIMAGEHEIGHT).val(), 10);\n\n            that.attributes = {\n                src: element.find(KEDITORIMAGEURL).val().replace(/ /g, \"%20\"),\n                alt: element.find(KEDITORIMAGETITLE).val()\n            };\n\n            that.attributes.width = null;\n            that.attributes.height = null;\n\n            if (!isNaN(w) && w > 0) {\n                that.attributes.width = w;\n            }\n\n            if (!isNaN(h) && h > 0) {\n                that.attributes.height = h;\n            }\n\n            applied = that.insertImage(img, range);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n        }\n\n        function close(e) {\n            e.preventDefault();\n            form.destroy();\n            dialog.destroy();\n\n            dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n            if (!applied) {\n                that.releaseRange(range);\n            }\n        }\n\n        function keyDown(e) {\n            if (e.keyCode == keys.ENTER) {\n                apply(e);\n            } else if (e.keyCode == keys.ESC) {\n                close(e);\n            }\n        }\n\n        dialogOptions.close = close;\n\n        if (showBrowser) {\n            dialogOptions.width = 750;\n        }\n        dialogOptions.minWidth = 350;\n\n        dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n\n        form = that._createForm(dialog, showBrowser);\n\n        dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n        dialog.wrapper\n        .find(\".k-dialog-insert\").on(\"click\", apply).end()\n        .find(\".k-dialog-close\").on(\"click\", close).end()\n        .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n        // IE < 8 returns absolute url if getAttribute is not used\n        .find(KEDITORIMAGEURL).val(img ? img.getAttribute(\"src\", 2) : \"http://\").end()\n        .find(KEDITORIMAGETITLE).val(img ? img.alt : \"\").end()\n        .find(KEDITORIMAGEWIDTH).val(imageWidth).end()\n        .find(KEDITORIMAGEHEIGHT).val(imageHeight).end();\n\n        var element = dialog.element;\n        if (showBrowser) {\n            this._imageBrowser = new kendo.ui.ImageBrowser(\n                element.find(\".k-imagebrowser\"),\n                extend({}, imageBrowser)\n            );\n\n            this._imageBrowser.bind(\"change\", function(ev) {\n                if (ev.selected.get(\"type\") === \"f\") {\n                    element.find(KEDITORIMAGEURL).val(this.value());\n                }\n            });\n\n            this._imageBrowser.bind(\"apply\", apply);\n        }\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n        dialog.center().open();\n        element.find(KEDITORIMAGEURL).trigger(\"focus\").select();\n    },\n\n    _createForm: function(dialog, showBrowser) {\n        var that = this;\n        var formElement = $(\"<div/>\").appendTo(dialog.element);\n        var messages = that.editor.options.messages;\n        var form = formElement.kendoForm({\n            renderButtons: false,\n            items: [\n                {\n                    field: \"k-editor-image-url\",\n                    label: encode(messages.imageWebAddress),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-image-title\",\n                    label: encode(messages.imageAltText),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-image-width\",\n                    label: encode(messages.imageWidth),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-image-height\",\n                    label: encode(messages.imageHeight),\n                    editor: \"TextBox\"\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        if (showBrowser) {\n            formElement.prepend($('<div class=\"k-filebrowser k-imagebrowser\"></div>'));\n        }\n\n        dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"image-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n        return form;\n    }\n\n});\n\nkendo.ui.editor.ImageCommand = ImageCommand;\n\nregisterTool(\"insertImage\", new Editor.Tool({ command: ImageCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    registerTool = EditorUtils.registerTool,\n    loadingOverlay = '<div contenteditable=\"false\" class=\"k-loading-mask\" style=\"width: 100%; height: 100%; position: absolute; top: 0px; left: 0px;\"><div class=\"k-loading-image\"></div><div class=\"k-loading-color\"></div></div>';\n\nvar ImportCommand = Command.extend({\n    exec: function() {\n        (this.editor._uploadWidget || this._initializeUploadWidget()).element.click();\n    },\n\n    _initializeUploadWidget: function() {\n        var cmd = this;\n        var editor = cmd.editor;\n        var importOptions = editor.options[\"import\"];\n        var upload = $('<input id=\"editorImport\" name=\"files\" type=\"file\" />').kendoUpload({\n            success: cmd._onUploadSuccess.bind(cmd),\n            progress: cmd._onUploadProgress.bind(cmd),\n            select: cmd._onUploadSelect.bind(cmd),\n            error: cmd._onUploadError.bind(cmd),\n            complete: cmd._onUploadComplete.bind(cmd),\n            showFileList: false,\n            multiple: false,\n            async: {\n                saveUrl: importOptions.proxyURL,\n                autoUpload: true,\n                saveField: \"file\"\n            },\n            validation: {\n                allowedExtensions: importOptions.allowedExtensions,\n                maxFileSize: importOptions.maxFileSize\n            }\n        }).getKendoUpload();\n\n        editor._uploadWidget = upload;\n\n        return upload;\n    },\n    _onUploadComplete: function(ev) {\n        this._trigger(\"complete\", ev);\n        ev.sender.clearAllFiles();\n\n        this._removeLoadingOverlay();\n    },\n    _onUploadSuccess: function(ev) {\n        this.editor.value(ev.response.html.replace(/<\\/?body>/ig, \"\"));\n        this._trigger(\"success\", ev);\n    },\n    _onUploadProgress: function(ev) {\n        this._trigger(\"progress\", ev);\n    },\n    _onUploadSelect: function(ev) {\n        this._trigger(\"select\", ev);\n        if (!ev.files[0].validationErrors) {\n            this._initLoadingOverlay();\n        }\n    },\n    _onUploadError: function(ev) {\n        this._trigger(\"error\", ev);\n    },\n\n    _trigger: function(eventType, uploadEvent) {\n        var editor = this.editor;\n        var importOptions = editor.options[\"import\"];\n        if (typeof importOptions[eventType] === \"function\") {\n            importOptions[eventType].call(editor, uploadEvent);\n        }\n    },\n\n    _initLoadingOverlay: function() {\n        var editable = this.editor.body;\n        if (Editor.Dom.is(editable, \"body\")) {\n            this._iframeWrapper = this._container =\n                this.editor.wrapper.find(\"iframe\").parent()\n                .css({ position: \"relative\" }).append(loadingOverlay);\n        } else {\n            this._container = $(editable).append(loadingOverlay);\n        }\n\n        kendo.ui.progress(this._container, true);\n    },\n\n    _removeLoadingOverlay: function() {\n        kendo.ui.progress(this._container, false);\n        $(this._iframeWrapper).css({\n            position: \"\"\n        });\n\n        delete this._container;\n        delete this._iframeWrapper;\n    }\n});\n\nextend(Editor, {\n    ImportCommand: ImportCommand\n});\n\nregisterTool(\"import\", new Tool({\n    command: ImportCommand,\n    ui: {\n        showText: \"both\"\n    }\n}));\n\n}(window.kendo.jQuery));\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        editorNS = kendo.ui.editor,\n        Command = editorNS.Command,\n        GenericCommand = editorNS.GenericCommand,\n        EditorUtils = editorNS.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        Tool = editorNS.Tool,\n        RestorePoint = editorNS.RestorePoint,\n        extend = $.extend;\n\nvar InsertHtmlCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n\n        this.managesUndoRedo = true;\n    },\n\n    exec: function() {\n        var editor = this.editor;\n        var options = this.options;\n        var range = options.range;\n        var body = editor.body;\n        var startRestorePoint = new RestorePoint(range, body);\n        var html = options.html || options.value || '';\n\n        editor.selectRange(range);\n\n        editor.clipboard.paste(html, options);\n\n        if (options.postProcess) {\n            options.postProcess(editor, editor.getRange());\n        }\n\n        var genericCommand = new GenericCommand(startRestorePoint, new RestorePoint(editor.getRange(), body));\n        genericCommand.editor = editor;\n        editor.undoRedoStack.push(genericCommand);\n\n        editor.focus();\n    }\n});\n\nvar InsertHtmlTool = Tool.extend({\n    initialize: function(ui, editor) {\n        var options = this.options,\n            dataSource = options.items ? options.items : editor.options.insertHtml,\n            component = ui.getKendoDropDownList();\n\n        if (!component) {\n            return;\n        }\n\n        component.one(\"open\", () => {\n            var optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n            if (optionLabel.length) {\n                optionLabel.remove();\n            }\n        });\n\n        component.setOptions({\n            dataSource: dataSource,\n            optionLabel: editor.options.messages.insertHtml\n        });\n        component.bind(\"change\", () => {\n            Tool.exec(editor, 'insertHtml', component.value());\n        });\n    },\n\n    command: function(commandArguments) {\n        return new InsertHtmlCommand(commandArguments);\n    },\n\n    update: function(ui) {\n        var component = ui.data(\"kendoDropDownList\");\n        component.close();\n        component.value(null);\n    }\n});\n\nextend(editorNS, {\n    InsertHtmlCommand: InsertHtmlCommand,\n    InsertHtmlTool: InsertHtmlTool\n});\n\nregisterTool(\"insertHtml\", new InsertHtmlTool({\n    ui: {\n        initialValue: \"Insert HTML\",\n        type: \"component\",\n        component: \"DropDownList\",\n        componentOptions: {\n            dataTextField: \"text\",\n            dataValueField: \"value\",\n            autoSize: true,\n            highlightFirst: false\n        },\n        overflow: \"never\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    registerTool = EditorUtils.registerTool,\n    defaultExportAsItems = [\n        { text: 'Docx', value: 'docx' },\n        { text: 'Rtf', value: 'rtf' },\n        { text: 'Pdf', value: 'pdf' },\n        { text: 'Html', value: 'html' },\n        { text: 'Plain Text', value: 'txt' }\n    ];\n\nvar ExportAsCommand = Command.extend({\n    init: function(options) {\n        var cmd = this;\n        cmd.options = options;\n        Command.fn.init.call(cmd, options);\n        cmd.attributes = null;\n        cmd.exportType = options.exportType;\n    },\n\n    exec: function() {\n        var cmd = this;\n        var range = this.lockRange(true);\n        cmd.postToProxy();\n        cmd.releaseRange(range);\n    },\n\n    postToProxy: function() {\n        this.generateForm().appendTo('body').submit().remove();\n    },\n\n    generateForm: function() {\n        var cmd = this;\n        var exportAsOptions = cmd.editor.options.exportAs;\n        var form = $('<form>').attr({\n            action: exportAsOptions && exportAsOptions.proxyURL || \"\",\n            method: 'POST'\n        });\n\n        form.append([\n            cmd.valueInput(),\n            cmd.exportTypeInput(),\n            cmd.fileNameInput(),\n            cmd.antiForgeryInput()\n        ]);\n\n        return form;\n    },\n\n    valueInput: function() {\n        var editor = this.editor;\n        return $('<input>').attr({\n            value: editor.encodedValue(),\n            name: 'value',\n            type: 'hidden'\n        });\n    },\n\n    exportTypeInput: function() {\n        var cmd = this;\n        return $('<input>').attr({\n            value: cmd.exportType,\n            name: 'exportType',\n            type: 'hidden'\n        });\n\n    },\n\n    fileNameInput: function() {\n        var editor = this.editor;\n        var exportAsOptions = editor.options.exportAs;\n        var fileName = exportAsOptions && exportAsOptions.fileName || editor.element.attr(\"id\") || \"editor\";\n        return $('<input>').attr({\n            value: fileName,\n            name: 'fileName',\n            type: 'hidden'\n        });\n    },\n\n    antiForgeryInput: function() {\n        var csrf_param = $(\"meta[name=csrf-param],meta[name=_csrf_header]\").attr(\"content\");\n\n        return $(\"input[name^='__RequestVerificationToken']\").clone()\n                    .add($(\"input[name^='\" + csrf_param + \"']\").clone());\n    }\n});\n\nvar ExportAsTool = Tool.extend({\n    init: function(options) {\n        var tool = this;\n        Tool.fn.init.call(tool, kendo.deepExtend({}, tool.options, options));\n        tool.type = 'kendoDropDownList';\n    },\n\n    options: {\n        items: defaultExportAsItems\n    },\n\n    command: function(args) {\n        var value = args.value;\n        return new Editor.ExportAsCommand({\n            range: args.range,\n            exportType: value.exportType\n        });\n    },\n\n    initialize: function(ui, editor) {\n        var tool = this,\n            component = ui.getKendoDropDownList();\n\n        tool.editor = editor;\n\n        component.bind(\"change\", this.changeHandler.bind(this));\n    },\n\n    changeHandler: function(e) {\n        this._exec(e.sender.value());\n        e.sender.value(null);\n        e.sender.wrapper.find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n    },\n\n    update: function(ui, editor) {\n        var component = ui.data(\"kendoDropDownList\");\n\n        component.close();\n        component.value(null);\n        ui.closest(\".k-dropdownlist\").find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n    },\n\n    _exec: function(value) {\n        if (value) {\n            Tool.exec(this.editor, this.options.name, { exportType: value } );\n        }\n    },\n\n    destroy: function() {\n        this._ancestor = null;\n    }\n});\n\nextend(Editor, {\n    ExportAsTool: ExportAsTool,\n    ExportAsCommand: ExportAsCommand\n});\n\nregisterTool('exportAs', new ExportAsTool({\n    ui: {\n        type: \"component\",\n        overflow: \"never\",\n        component: \"DropDownList\",\n        componentOptions: {\n            dataTextField: \"text\",\n            dataValueField: \"value\",\n            valuePrimitive: true,\n            value: null,\n            width: \"140px\",\n            highlightFirst: false,\n            autoWidth: true,\n            itemTemplate: (data) => `<span class=\\\"k-link k-menu-link\\\" data-value=\\\"${data.value}\\\">${data.text}</strong></span>`,\n            icon: \"export\",\n            valueTemplate: () => `<span class=\"k-editor-export\">${kendo.ui.icon({ icon: \"export\", iconClass: \"k-button-icon\" })}<span class=\"k-export-tool-text\"></span></span>`\n        }\n    }\n}));\n\n}(window.kendo.jQuery));\n\n(function($, undefined$1) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    EditorUtils = Editor.EditorUtils,\n    registerTool = EditorUtils.registerTool,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    RangeUtils = Editor.RangeUtils,\n    blockElements = dom.blockElements,\n    BlockFormatFinder = Editor.BlockFormatFinder,\n    BlockFormatter = Editor.BlockFormatter;\n\nfunction indent(node, value) {\n    var isRtl = $(node).css(\"direction\") == \"rtl\",\n        indentDirection = isRtl ? \"Right\" : \"Left\",\n        property = dom.name(node) != \"td\" ? \"margin\" + indentDirection : \"padding\" + indentDirection;\n    if (value === undefined$1) {\n        return node.style[property] || 0;\n    } else {\n        if (value > 0) {\n            node.style[property] = value + \"px\";\n        } else {\n            node.style[property] = \"\";\n\n            if (!node.style.cssText) {\n                node.removeAttribute(\"style\");\n            }\n        }\n    }\n}\n\nvar IndentFormatter = Class.extend({\n    init: function() {\n        this.finder = new BlockFormatFinder([{ tags: dom.blockElements }]);\n    },\n\n    apply: function(nodes) {\n        nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n        var formatNodes = this.finder.findSuitable(nodes),\n            targets = [],\n            i, len, formatNode, parentList, sibling;\n\n        formatNodes = this.mapImmutables(formatNodes);\n\n        if (formatNodes.length) {\n            for (i = 0, len = formatNodes.length; i < len; i++) {\n                if (dom.is(formatNodes[i], \"li\")) {\n                    if (!$(formatNodes[i]).index()) {\n                        targets.push(formatNodes[i].parentNode);\n                    } else if ($.inArray(formatNodes[i].parentNode, targets) < 0) {\n                        targets.push(formatNodes[i]);\n                    }\n                } else {\n                    targets.push(formatNodes[i]);\n                }\n            }\n\n            while (targets.length) {\n                formatNode = targets.shift();\n                if (dom.is(formatNode, \"li\")) {\n                    parentList = formatNode.parentNode;\n                    sibling = $(formatNode).prev(\"li\");\n                    var siblingList = sibling.find(\"ul,ol\").last();\n\n                    var nestedList = $(formatNode).children(\"ul,ol\")[0];\n\n                    if (nestedList && sibling[0]) {\n                        if (siblingList[0]) {\n                           siblingList.append(formatNode);\n                           siblingList.append($(nestedList).children());\n                           dom.remove(nestedList);\n                        } else {\n                            sibling.append(nestedList);\n                            nestedList.insertBefore(formatNode, nestedList.firstChild);\n                        }\n                    } else {\n                        nestedList = sibling.children(\"ul,ol\")[0];\n                        if (!nestedList) {\n                            nestedList = dom.create(formatNode.ownerDocument, dom.name(parentList), this.getListTypeAttr(parentList));\n                            sibling.append(nestedList);\n                        }\n\n                        while (formatNode && formatNode.parentNode == parentList) {\n                            nestedList.appendChild(formatNode);\n                            formatNode = targets.shift();\n                        }\n                    }\n                } else {\n                    var marginLeft = parseInt(indent(formatNode), 10) + 30;\n                    indent(formatNode, marginLeft);\n\n                    for (var targetIndex = 0; targetIndex < targets.length; targetIndex++) {\n                        if ($.contains(formatNode, targets[targetIndex])) {\n                            targets.splice(targetIndex, 1);\n                        }\n                    }\n                }\n            }\n        } else {\n            var formatter = new BlockFormatter([{ tags: [\"p\"] }], { style: { marginLeft: 30 } });\n\n            formatter.apply(nodes);\n        }\n    },\n\n    getListTypeAttr: function(list) {\n        var type = list.getAttribute(\"type\");\n        var styleType = list.style.listStyleType;\n\n        return type ? { type: type } : { style: { listStyleType: styleType } };\n    },\n\n    mapImmutables: function(nodes) {\n        if (!this.immutables) {\n            return nodes;\n        } else {\n            var immutables = [];\n            return $.map(nodes, function(node) {\n                var immutable = Editor.Immutables.immutableParent(node);\n                if (immutable) {\n                    if ($.inArray(immutable, immutables) === -1) {\n                        immutables.push(immutable);\n                    } else {\n                        return null;\n                    }\n                }\n                return immutable || node;\n            });\n        }\n    },\n\n    remove: function(nodes) {\n        nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n        var formatNodes = this.finder.findSuitable(nodes),\n            targetNode, i, len, list, listParent, siblings,\n            formatNode, marginLeft;\n\n        formatNodes = this.mapImmutables(formatNodes);\n\n        for (i = 0, len = formatNodes.length; i < len; i++) {\n            formatNode = $(formatNodes[i]);\n\n            if (formatNode.is(\"li\")) {\n                list = formatNode.parent();\n                listParent = list.parent();\n                // listParent will be ul or ol in case of invalid dom - <ul><li></li><ul><li></li></ul></ul>\n                if (listParent.is(\"li,ul,ol\") && !indent(list[0])) {\n                    // skip already processed nodes\n                    if (targetNode && $.contains(targetNode, listParent[0])) {\n                        continue;\n                    }\n\n                    siblings = formatNode.nextAll(\"li\");\n                    if (siblings.length) {\n                        $(list[0].cloneNode(false)).appendTo(formatNode).append(siblings);\n                    }\n\n                    if (listParent.is(\"li\")) {\n                        formatNode.insertAfter(listParent);\n                    } else {\n                        formatNode.appendTo(listParent);\n                    }\n\n                    if (!list.children(\"li\").length) {\n                        list.remove();\n                    }\n\n                    continue;\n                } else {\n                    if (targetNode == list[0]) {\n                        // removing format on sibling LI elements\n                        continue;\n                    }\n                    targetNode = list[0];\n                }\n            } else {\n                targetNode = formatNodes[i];\n            }\n\n            marginLeft = parseInt(indent(targetNode), 10) - 30;\n            indent(targetNode, marginLeft);\n        }\n    }\n\n});\n\nvar IndentCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        options.formatter = /** @ignore */ {\n            toggle: (function(range) {\n                var indentFormatter = new IndentFormatter();\n                indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                indentFormatter.apply(RangeUtils.nodes(range));\n            }).bind(that)\n        };\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar OutdentCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        options.formatter = {\n            toggle: (function(range) {\n                var indentFormatter = new IndentFormatter();\n                indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                indentFormatter.remove(RangeUtils.nodes(range));\n            }).bind(that)\n        };\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar OutdentTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n\n        this.finder = new BlockFormatFinder([{ tags: blockElements }]);\n    },\n\n    initialize: function(ui, editor) {\n        $.extend(this.options, {\n            immutables: editor && editor.options.immutables\n        });\n    },\n\n    update: function(ui, nodes) {\n        var suitableNodes = this.finder.findSuitable(nodes),\n            toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\"),\n            isOutdentable, listParentsCount, i, len, suitable, immutableParent;\n\n        for (i = 0, len = suitableNodes.length; i < len; i++) {\n            suitable = suitableNodes[i];\n\n            if (this.options.immutables) {\n                immutableParent = Editor.Immutables.immutableParent(suitable);\n\n                if (immutableParent) {\n                    suitable = immutableParent;\n                }\n            }\n\n            isOutdentable = indent(suitable);\n\n            if (!isOutdentable) {\n                listParentsCount = $(suitable).parents(\"ul,ol\").length;\n                isOutdentable = (dom.is(suitable, \"li\") && (listParentsCount > 1 || indent(suitable.parentNode))) ||\n                                (dom.ofType(suitable, [\"ul\",\"ol\"]) && listParentsCount > 0);\n            }\n\n            if (isOutdentable) {\n                toolbar.enable(ui, true);\n                return;\n            }\n        }\n\n        toolbar.enable(ui, false);\n    }\n});\n\nextend(Editor, {\n    IndentFormatter: IndentFormatter,\n    IndentCommand: IndentCommand,\n    OutdentCommand: OutdentCommand,\n    OutdentTool: OutdentTool\n});\n\nregisterTool(\"indent\", new Tool({ command: IndentCommand }));\nregisterTool(\"outdent\", new OutdentTool({ command: OutdentCommand, ui: { enable: false } }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    extend = $.extend,\n    editorNS = kendo.ui.editor,\n    dom = editorNS.Dom,\n    Command = editorNS.Command,\n    Tool = editorNS.Tool,\n    BlockFormatter = editorNS.BlockFormatter,\n    normalize = dom.normalize,\n    RangeUtils = editorNS.RangeUtils,\n    registerTool = editorNS.EditorUtils.registerTool;\n\nvar ParagraphCommand = Command.extend({\n    init: function(options) {\n        this.options = options;\n        Command.fn.init.call(this, options);\n    },\n\n    _insertMarker: function(doc, range) {\n        var marker = dom.create(doc, 'a'), container;\n        marker.className = \"k-marker\";\n\n        range.insertNode(marker);\n\n        if (!marker.parentNode) {\n            // inserting paragraph in Firefox full body range\n            container = range.commonAncestorContainer;\n            container.innerHTML = \"\";\n            container.appendChild(marker);\n        }\n\n        normalize(marker.parentNode);\n\n        return marker;\n    },\n\n    _moveFocus: function(range, candidate) {\n        if (dom.isEmpty(candidate)) {\n            range.setStartBefore(candidate);\n        } else {\n            range.selectNodeContents(candidate);\n\n            var focusNode = RangeUtils.textNodes(range)[0];\n\n            if (!focusNode) {\n                while (candidate.childNodes.length && !dom.is(candidate.firstChild, \"br\")) {\n                    candidate = candidate.firstChild;\n                }\n\n                focusNode = candidate;\n            }\n\n            if (dom.isEmpty(focusNode)) {\n                range.setStartBefore(focusNode);\n            } else {\n                if (dom.emptyNode(focusNode)) {\n                    focusNode.innerHTML = \"\\ufeff\";\n                }\n                var startNode = focusNode.firstChild || focusNode;\n                if (dom.isDataNode(startNode)) {\n                    range.setStart(startNode, 0);\n                } else {\n                    range.setStartBefore(startNode);\n                }\n            }\n        }\n    },\n\n    shouldTrim: function(range) {\n        var blocks = 'p,h1,h2,h3,h4,h5,h6'.split(','),\n            startInBlock = dom.parentOfType(range.startContainer, blocks),\n            endInBlock = dom.parentOfType(range.endContainer, blocks);\n        return (startInBlock && !endInBlock) || (!startInBlock && endInBlock);\n    },\n\n    _blankAfter: function(node) {\n        while (node && (dom.isMarker(node) || dom.stripBom(node.nodeValue) === \"\")) {\n            node = node.nextSibling;\n        }\n\n        return !node;\n    },\n\n    exec: function() {\n        var range = this.getRange(),\n            doc = RangeUtils.documentFromRange(range),\n            parent, previous, next,\n            emptyParagraphContent = editorNS.emptyElementContent,\n            paragraph, marker, li, heading, tableNode, rng,\n            shouldTrim;\n\n        this.expandImmutablesIn(range);\n\n        shouldTrim = this.shouldTrim(range);\n\n        range.deleteContents();\n        marker = this._insertMarker(doc, range);\n\n        dom.stripBomNode(marker.previousSibling);\n        dom.stripBomNode(marker.nextSibling);\n\n        li = dom.closestEditableOfType(marker, ['li']);\n        heading = dom.closestEditableOfType(marker, 'h1,h2,h3,h4,h5,h6'.split(','));\n        tableNode = dom.is(marker.parentNode, 'table') && marker.parentNode;\n\n        if (li) {\n            // hitting 'enter' in empty li\n            if (dom.emptyNode(li)) {\n                paragraph = dom.create(doc, 'p');\n\n                if (dom.next(li)) {\n                    rng = range.cloneRange();\n                    rng.selectNode(li);\n\n                    RangeUtils.split(rng, li.parentNode);\n                }\n\n                var br = $(\"br\", li);\n                if (br.length == 1) {\n                    br.remove();\n                }\n\n                var parentNode = li.parentNode;\n                var parentChildrenLength = li.parentNode.children.length;\n                var firstChild = parentChildrenLength > 1 && li.childNodes.length == 1 && li.children[0];\n\n                dom.insertAfter(paragraph, parentNode);\n                dom.remove(parentChildrenLength == 1 ? li.parentNode : li);\n\n                if (firstChild && firstChild !== marker) {\n                    paragraph.appendChild(firstChild);\n                    paragraph.appendChild(marker);\n                } else {\n                    paragraph.innerHTML = emptyParagraphContent;\n                }\n                next = paragraph;\n            }\n        } else if (heading && this._blankAfter(marker)) {\n            paragraph = this._insertParagraphAfter(heading);\n            dom.remove(marker);\n            next = paragraph;\n        } else if (tableNode) {\n            paragraph = this._insertParagraphAfter(tableNode);\n            dom.remove(marker);\n            next = paragraph;\n        }\n\n        if (!next) {\n            if (!(li || heading)) {\n                new BlockFormatter([{ tags: ['p'] }]).apply([marker]);\n            }\n\n            range.selectNode(marker);\n\n            parent = dom.parentOfType(marker, [li ? 'li' : heading ? dom.name(heading) : 'p']);\n\n            RangeUtils.split(range, parent, shouldTrim);\n\n            previous = parent.previousSibling;\n\n            if (dom.is(previous, 'li') && previous.firstChild && !dom.is(previous.firstChild, 'br')) {\n                previous = previous.firstChild;\n            }\n\n            next = parent.nextSibling;\n\n            this.clean(previous, { links: true });\n            this.clean(next, { links: true });\n\n            if (dom.is(next, 'li') && next.firstChild && !dom.is(next.firstChild, 'br')) {\n                next = next.firstChild;\n            }\n\n            dom.remove(parent);\n\n            // normalize updates the caret display in Gecko\n            normalize(previous);\n        }\n\n        normalize(next);\n\n        this._moveFocus(range, next);\n\n        range.collapse(true);\n\n        dom.scrollTo(next, true);\n\n        RangeUtils.selectRange(range);\n    },\n\n    _insertParagraphAfter: function(node) {\n        var range = this.getRange();\n        var doc = RangeUtils.documentFromRange(range);\n        var emptyElementContent = editorNS.emptyElementContent;\n        var paragraph = dom.create(doc, 'p');\n\n        dom.insertAfter(paragraph, node);\n        paragraph.innerHTML = emptyElementContent;\n\n        return paragraph;\n    },\n\n    clean: function(node, options) {\n        var root = node;\n\n        if (node.firstChild && dom.is(node.firstChild, 'br')) {\n            dom.remove(node.firstChild);\n        }\n\n        if (dom.isDataNode(node) && !node.nodeValue) {\n            node = node.parentNode;\n        }\n\n        if (node) {\n            var siblings = false;\n            while (node.firstChild && node.firstChild.nodeType == 1) {\n                siblings = siblings || (dom.significantNodes(node.childNodes).length > 1);\n                node = node.firstChild;\n            }\n\n            if (!dom.isEmpty(node) && node.className != \"k-br\" && /^\\s*$/.test(node.innerHTML) && !siblings) {\n                $(root).find(\".k-br\").remove();\n                node.innerHTML = editorNS.emptyElementContent;\n            }\n\n            if (options && options.links) {\n                while (node != root) {\n                    if (dom.is(node, \"a\") && dom.emptyNode(node)) {\n                        dom.unwrap(node);\n                        break;\n                    }\n                    node = node.parentNode;\n                }\n            }\n        }\n    }\n});\n\nvar NewLineCommand = Command.extend({\n    init: function(options) {\n        this.options = options;\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var range = this.getRange();\n        this.expandImmutablesIn(range);\n\n        var br = dom.create(RangeUtils.documentFromRange(range), 'br');\n        var node = range.startContainer;\n        var filler;\n        var browser = kendo.support.browser;\n        var oldIE = browser.msie && browser.version < 11;\n        var tableNode = dom.is(node, 'table') && node;\n        var kbrParent;\n\n        range.deleteContents();\n        if (tableNode) {\n            dom.insertAfter(br, tableNode);\n        } else {\n            kbrParent = $(node).closest('.k-br');\n            range.insertNode(br);\n\n            if (kbrParent.length) {\n                // pressing enter in an k-br node\n                dom.unwrap(kbrParent[0]);\n            }\n        }\n\n        normalize(br.parentNode);\n\n        if (!oldIE && (!br.nextSibling || dom.isWhitespace(br.nextSibling))) {\n            // Gecko and WebKit cannot put the caret after only one br.\n            if (!!br.nextSibling && dom.isWhitespace(br.nextSibling)) {\n                $(br.nextSibling).remove();\n            }\n            filler = br.cloneNode(true);\n            filler.className = 'k-br';\n            dom.insertAfter(filler, br);\n        }\n\n        range.setStartAfter(br);\n        range.collapse(true);\n\n        dom.scrollTo(br.nextSibling || br, true);\n\n        RangeUtils.selectRange(range);\n    }\n});\n\nextend(editorNS, {\n    ParagraphCommand: ParagraphCommand,\n    NewLineCommand: NewLineCommand\n});\n\nregisterTool(\"insertLineBreak\", new Tool({ key: 13, shift: true, command: NewLineCommand }));\nregisterTool(\"insertParagraph\", new Tool({ key: 13, command: ParagraphCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    encode = kendo.htmlEncode,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    dom = Editor.Dom,\n    registerTool = EditorUtils.registerTool,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    LinkFormatter = Editor.LinkFormatter,\n    textNodes = RangeUtils.textNodes,\n    keys = kendo.keys,\n    KEDITORFILEURL = \"#k-editor-file-url\",\n    KEDITORFILETEXT = \"#k-editor-file-text\",\n    KEDITORFILETITLE = \"#k-editor-file-title\";\n\nvar FileCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        Command.fn.init.call(that, options);\n\n        that.formatter = new LinkFormatter();\n\n        that.async = true;\n        that.attributes = {};\n    },\n\n    insertFile: function(file, range) {\n        var attributes = this.attributes;\n        var doc = RangeUtils.documentFromRange(range);\n\n        if (attributes.href && attributes.href != \"http://\") {\n\n            if (!file) {\n                file = dom.create(doc, \"a\", { href: attributes.href });\n                file.innerHTML = attributes.innerHTML;\n                file.title = attributes.title;\n\n                range.deleteContents();\n                range.insertNode(file);\n\n                if (!file.nextSibling) {\n                    dom.insertAfter(doc.createTextNode(\"\\ufeff\"), file);\n                }\n\n                range.setStartAfter(file);\n                range.setEndAfter(file);\n                RangeUtils.selectRange(range);\n                return true;\n            } else {\n                dom.attr(file, attributes);\n            }\n        }\n\n        return false;\n    },\n\n    redo: function() {\n        var that = this,\n            range = that.lockRange();\n\n        this.formatter.apply(range, this.attributes);\n        that.releaseRange(range);\n    },\n\n    exec: function() {\n        var that = this,\n            range = that.lockRange(),\n            nodes = textNodes(range),\n            applied = false,\n            file = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null,\n            dialog,\n            form,\n            isIE = kendo.support.browser.msie,\n            options = that.editor.options,\n            messages = options.messages,\n            fileBrowser = options.fileBrowser,\n            showBrowser = !!(kendo.ui.FileBrowser && fileBrowser && fileBrowser.transport && fileBrowser.transport.read !== undefined$1),\n            dialogOptions = {\n                title: messages.insertFile,\n                visible: false,\n                resizable: showBrowser\n            };\n\n        this.expandImmutablesIn(range);\n\n        function apply(e) {\n            var element = dialog.element,\n                href = element.find(KEDITORFILEURL).val().replace(/ /g, \"%20\"),\n                innerHTML = element.find(KEDITORFILETEXT).val(),\n                title = element.find(KEDITORFILETITLE).val();\n\n            that.attributes = {\n                href: href,\n                innerHTML: innerHTML !== \"\" ? innerHTML : href,\n                title: title\n            };\n\n            applied = that.insertFile(file, range);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n        }\n\n        function close(e) {\n            e.preventDefault();\n            form.destroy();\n            dialog.destroy();\n\n            dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n            if (!applied) {\n                that.releaseRange(range);\n            }\n        }\n\n        function keyDown(e) {\n            if (e.keyCode == keys.ENTER) {\n                apply(e);\n            } else if (e.keyCode == keys.ESC) {\n                close(e);\n            }\n        }\n\n        dialogOptions.close = close;\n\n        if (showBrowser) {\n            dialogOptions.width = 750;\n        }\n        dialogOptions.minWidth = 350;\n\n        dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n        form = that._createForm(dialog, showBrowser);\n\n        dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n        dialog.wrapper\n        .find(\".k-dialog-insert\").on(\"click\", apply).end()\n        .find(\".k-dialog-close\").on(\"click\", close).end()\n        .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n        // IE < 8 returns absolute url if getAttribute is not used\n        .find(KEDITORFILEURL).val(file ? file.getAttribute(\"href\", 2) : \"http://\").end()\n        .find(KEDITORFILETEXT).val(file ? file.innerText : \"\").end()\n        .find(KEDITORFILETITLE).val(file ? file.title : \"\").end();\n\n        var element = dialog.element;\n        if (showBrowser) {\n            that._fileBrowser = new kendo.ui.FileBrowser(\n                element.find(\".k-filebrowser\"),\n                extend({}, fileBrowser)\n            );\n\n            that._fileBrowser.bind(\"change\", function(ev) {\n                if (ev.selected.get(\"type\") === \"f\") {\n                    element.find(KEDITORFILEURL).val(this.value());\n                }\n            } );\n\n            that._fileBrowser.bind(\"apply\", apply);\n        }\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n        dialog.center().open();\n        element.find(KEDITORFILEURL).trigger(\"focus\").select();\n    },\n\n    _createForm: function(dialog, showBrowser) {\n        var that = this;\n        var formElement = $(\"<div/>\").appendTo(dialog.element);\n        var messages = that.editor.options.messages;\n\n        var form = formElement.kendoForm({\n            renderButtons: false,\n            items: [\n                {\n                    field: \"k-editor-file-url\",\n                    label: encode(messages.fileWebAddress),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-file-text\",\n                    label: encode(messages.fileText),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-file-title\",\n                    label: encode(messages.fileTitle),\n                    editor: \"TextBox\"\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        if (showBrowser) {\n            formElement.prepend($('<div class=\"k-filebrowser\"></div>'));\n        }\n\n        dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"file-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n        return form;\n    }\n\n});\n\nkendo.ui.editor.FileCommand = FileCommand;\n\nregisterTool(\"insertFile\", new Editor.Tool({ command: FileCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n\n    NS = \"kendoEditor\",\n    ACTIVESTATE = \"k-active\",\n    SELECTEDSTATE = \"k-selected\",\n    SCOPE = \"scope\",\n    ROW = \"row\",\n    COL = \"col\",\n    ROWGROUP = \"rowgroup\",\n    COLGROUP = \"colgroup\",\n    COLSPAN = \"colspan\",\n    ROWSPAN = \"rowspan\",\n    TABLE = \"table\",\n    THEAD = \"thead\",\n    TBODY = \"tbody\",\n    TR = \"tr\",\n    TD = \"td\",\n    TH = \"th\",\n\n    Tool = Editor.Tool,\n    InsertHtmlCommand = Editor.InsertHtmlCommand,\n    BlockFormatFinder = Editor.BlockFormatFinder,\n    BlockFormatTool = Editor.BlockFormatTool,\n    FormatCommand = Editor.FormatCommand,\n    registerTool = Editor.EditorUtils.registerTool,\n    registerFormat = Editor.EditorUtils.registerFormat,\n    formats = kendo.ui.Editor.fn.options.formats,\n    getTouches = kendo.getTouches;\nvar template = kendo.template;\n\nvar columnTemplate = ({ width, content }) => `<td style=\"width:${width}%;\">${content}</td>`;\n\nvar tableFormatFinder = new BlockFormatFinder([{ tags: [TABLE] }]);\n\nvar TableCommand = InsertHtmlCommand.extend({\n    init: function(options) {\n        var o = $.extend({\n            postProcess: this.postProcess,\n            skipCleaners: true\n        }, options || {});\n\n        InsertHtmlCommand.fn.init.call(this, o);\n    },\n    _tableHtml: function(rows, columns) {\n        rows = rows || 1;\n        columns = columns || 1;\n        var columnHtml = template(columnTemplate)({ width: 100 / columns, content: Editor.emptyTableCellContent });\n        var rowHeight = 100 / rows;\n\n        return \"<table class='k-table' data-last>\" +\n                    new Array(rows + 1).join(\n                    \"<tr style='height:\" + rowHeight + \"%;'>\" +\n                        new Array(columns + 1).join(columnHtml) +\n                    \"</tr>\") +\n               \"</table>\";\n    },\n\n    postProcess: function(editor, range) {\n        var insertedTable = $(\"table[data-last]\", editor.document).removeAttr(\"data-last\");\n\n        range.setStart(insertedTable.find(TD)[0], 0);\n        range.collapse(true);\n\n        editor.selectRange(range);\n    },\n\n    exec: function() {\n        var options = this.options;\n        options.html = this._tableHtml(options.rows, options.columns);\n\n        InsertHtmlCommand.fn.exec.call(this);\n    }\n});\n\nvar PopupTool = Tool.extend({\n    initialize: function(ui, editor) {\n        var that = this;\n        var btn = $(\"<button>\" + editor.options.messages.tableWizard + \"</button>\");\n        var popup = $(this.options.popupTemplate).appendTo(\"body\").kendoPopup({\n            anchor: ui,\n            copyAnchorStyles: false,\n            open: this._open.bind(this),\n            activate: this._activate.bind(this),\n            close: this._close.bind(this)\n        }).data(\"kendoPopup\");\n\n        ui.on(\"click\", this._toggle.bind(this))\n          .on(\"keydown\", this._keydown.bind(this));\n\n        this._editor = editor;\n        this._popup = popup;\n\n        editor.tablePopup = this._popup;\n\n        var tableWizard = new Editor.TableWizardTool({\n            command: Editor.TableWizardCommand,\n            insertNewTable: true\n        });\n\n        registerTool(\"tableWizardInsert\", tableWizard);\n\n        btn.appendTo(popup.element);\n        btn.kendoButton({\n            icon: \"table-wizard\"\n        });\n\n        btn.on(\"click\", () => {\n            that._editor.exec(\"tableWizardInsert\");\n        });\n    },\n\n    popup: function() {\n        return this._popup;\n    },\n\n    _activate: $.noop,\n\n    _open: function() {\n        this._popup.options.anchor.addClass(ACTIVESTATE);\n    },\n\n    _close: function() {\n        this._popup.options.anchor.removeClass(ACTIVESTATE);\n    },\n\n    _keydown: function(e) {\n        var that = this,\n            keys = kendo.keys,\n            key = e.keyCode;\n\n        if (key == keys.ESC) {\n            that._popup.close();\n        } else if (key == keys.DOWN && e.altKey) {\n            that._popup.open();\n            that._setTableSize({ row: 1, col: 1 });\n        } else if (key === keys.ENTER) {\n            setTimeout(() => {\n                that._setTableSize({ row: 1, col: 1 });\n            });\n        }\n    },\n\n    _toggle: function(e) {\n        var button = $(e.target).closest(\".k-tool\");\n\n        if (!button.hasClass(\"k-disabled\")) {\n            this.popup().toggle();\n        }\n    },\n\n    update: function(ui) {\n        var popup = this.popup();\n\n        if (popup.wrapper && popup.wrapper.css(\"display\") == \"block\") {\n            popup.close();\n        }\n\n        ui.removeClass(\"k-hover\");\n    },\n\n    destroy: function() {\n        if (this._popup) {\n            this._popup.destroy();\n        }\n    }\n});\n\nvar InsertTableTool = PopupTool.extend({\n    init: function(options) {\n        this.cols = 8;\n        this.rows = 6;\n\n        PopupTool.fn.init.call(this, $.extend(options, {\n            command: TableCommand,\n            popupTemplate:\n                \"<div class='k-ct-popup'>\" +\n                    \"<div>\" +\n                        new Array(this.cols * this.rows + 1).join(\"<span class='k-ct-cell k-disabled'></span>\") +\n                    \"</div>\" +\n                    \"<div class='k-status'></div>\" +\n                \"</div>\"\n        }));\n    },\n\n    _activate: function() {\n        var that = this,\n            element = that._popup.element,\n            cells = element.find(\".k-ct-cell\"),\n            firstCell = cells.eq(0),\n            lastCell = cells.eq(cells.length - 1),\n            start = kendo.getOffset(firstCell),\n            end = kendo.getOffset(lastCell),\n            cols = that.cols,\n            rows = that.rows,\n            cellWidth, cellHeight;\n\n        element.find(\"*\").addBack().attr(\"unselectable\", \"on\");\n\n        end.left += lastCell[0].offsetWidth;\n        end.top += lastCell[0].offsetHeight;\n\n        cellWidth = (end.left - start.left) / cols;\n        cellHeight = (end.top - start.top) / rows;\n\n        function tableFromLocation(e) {\n            var w = $(window);\n            return {\n                row: Math.floor((e.clientY + w.scrollTop() - start.top) / cellHeight) + 1,\n                col: Math.floor((e.clientX + w.scrollLeft() - start.left) / cellWidth) + 1\n            };\n        }\n\n        element.autoApplyNS(NS)\n            .on(\"mousemove\", \".k-ct-cell\", function(e) {\n                that._setTableSize(tableFromLocation(e));\n            })\n            .on(\"mouseleave\", \".k-ct-cell\", function() {\n                that._setTableSize();\n            })\n            .on(\"down\", \".k-ct-cell\", function(e) {\n                e.preventDefault();\n                var touch = getTouches(e)[0];\n                that._exec(tableFromLocation(touch.location));\n            });\n    },\n\n    _valid: function(size) {\n        return size && size.row > 0 && size.col > 0 && size.row <= this.rows && size.col <= this.cols;\n    },\n\n    _exec: function(size) {\n        if (this._valid(size)) {\n            this._editor.exec(\"createTable\", {\n                rows: size.row,\n                columns: size.col\n            });\n            this._popup.close();\n        }\n    },\n\n    _setTableSize: function(size) {\n        var element = this._popup.element;\n        var status = element.find(\".k-status\");\n        var cells = element.find(\".k-ct-cell\");\n        var cols = this.cols;\n        var messages = this._editor.options.messages;\n\n        if (this._valid(size)) {\n            status.text(kendo.format(messages.createTableHint, size.row, size.col));\n\n            cells.each(function(i) {\n                $(this).toggleClass(\n                    SELECTEDSTATE,\n                    i % cols < size.col && i / cols < size.row\n                );\n            });\n        } else {\n            status.text(messages.createTable);\n            cells.removeClass(SELECTEDSTATE);\n        }\n    },\n\n    _keydown: function(e) {\n        var initiallyVisible = this._popup.visible();\n\n        PopupTool.fn._keydown.call(this, e);\n\n        if (!this._popup.visible()) {\n            return;\n        }\n\n        var keys = kendo.keys;\n        var key = e.keyCode;\n        var cells = this._popup.element.find(\".k-ct-cell\");\n        var focus = Math.max(cells.filter(\".k-selected\").last().index(), 0);\n        var selectedRows = Math.floor(focus / this.cols);\n        var selectedColumns = focus % this.cols;\n\n        var changed = false,\n            button;\n\n        if (key == keys.DOWN && !e.altKey) {\n            changed = true;\n            selectedRows++;\n        } else if (key == keys.UP) {\n            changed = true;\n            selectedRows--;\n        } else if (key == keys.RIGHT) {\n            changed = true;\n            selectedColumns++;\n        } else if (key == keys.LEFT) {\n            changed = true;\n            selectedColumns--;\n        } else if (key == keys.TAB) {\n            button = this._popup.element.find(\".k-button\");\n\n            if (button.length > 0) {\n                changed = true;\n                button.trigger(\"focus\");\n            }\n        }\n\n        var tableSize = {\n            row: Math.max(1, Math.min(this.rows, selectedRows + 1)),\n            col: Math.max(1, Math.min(this.cols, selectedColumns + 1))\n        };\n\n        if (key == keys.ENTER && initiallyVisible) {\n            this._exec(tableSize);\n        } else {\n            this._setTableSize(tableSize);\n        }\n\n        if (changed) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n    },\n\n    _open: function() {\n        var messages = this._editor.options.messages;\n\n        PopupTool.fn._open.call(this);\n\n        this.popup().element\n            .find(\".k-status\").text(messages.createTable).end()\n            .find(\".k-ct-cell\").removeClass(SELECTEDSTATE);\n    },\n\n    _close: function() {\n        PopupTool.fn._close.call(this);\n        this.popup().element.off(\".\" + NS);\n    }\n});\n\nvar TableModificationCommand = Command.extend({\n    undo: function() {\n        var point = this.restorePoint;\n        point.restoreHtml();\n\n        $(this.editor.body).find(\".k-element-resize-handle-wrapper\")\n            .each(function(index,el) {\n                el.remove();\n            });\n\n        this.editor.selectRange(point.toRange());\n    },\n    _clearColIndexAttr: function(table) {\n        dom.clearTableMappings(table, \"col-index\");\n    },\n    _mapColIndices: function(table) {\n        dom.reMapTableColumns(table, \"col-index\");\n    },\n    _findRowSpanCell: function(parent, rowIndex, colIndex) {\n        var row, cell;\n\n        for (var i = rowIndex; i >= 0; i--) {\n            row = parent.rows[i];\n            cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n            if (cell.length) {\n                return cell;\n            }\n        }\n    },\n    _resetElementResizing: function(editor) {\n        editor._destroyResizings();\n        editor._initializeColumnResizing();\n        editor._initializeRowResizing();\n        editor._initializeElementResizing();\n    },\n    _findNextTdInRow: function(row, colIndex) {\n        var lastTd = row.find(\"td:last-child\"),\n            lastIndex = parseInt(lastTd.attr(\"col-index\"), 10) + lastTd.prop(\"colSpan\") - 1,\n            td;\n\n        for (var i = colIndex; i <= lastIndex; i++) {\n            td = row.find(\"[col-index=\" + i + \"]\");\n            if (td.length) {\n                return td;\n            }\n        }\n    },\n    _adjustColgroups: function(row, table) {\n        var colElements = table.getElementsByTagName(COL),\n            colgroupElements = table.getElementsByTagName(COLGROUP),\n            cells = row.cells,\n            numberOfCells = cells.length,\n            i, colgroup, cell;\n\n        while (colElements.length > 0) {\n            colElements[0].remove();\n        }\n        while (colgroupElements.length > 0) {\n            colgroupElements[0].remove();\n        }\n\n        for (i = numberOfCells - 1; i >= 0; i--) {\n            cell = cells[i];\n            if (cell.getAttribute(SCOPE) === COLGROUP) {\n                colgroup = dom.createEmptyNode(this.editor.document, COLGROUP);\n                colgroup.setAttribute(\"span\", cell.getAttribute(COLSPAN));\n                table.prepend(colgroup);\n            } else {\n                table.prepend(dom.createEmptyNode(this.editor.document, COL));\n            }\n        }\n    },\n    _associateHeaderIds: function(table) {\n        dom.clearTableMappings(table, \"col-index\");\n        dom.reMapTableColumns(table, \"col-index\");\n        $(table).find(\"th, td\").removeAttr(\"id headers\");\n        dom.associateWithIds(table);\n    },\n    _getNumberOfColumns: function(table) {\n        return dom._getNumberOfColumns(table, \"td, th\");\n    }\n});\n\nvar InsertRowCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(true),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table = dom.closest(td, TABLE),\n            position = this.options.position || \"after\",\n            cellCount, row, cell,\n            newRow, rowIndex, rowSpanIndex, createdCell;\n\n        if (!table || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        this._mapColIndices(table);\n\n        row = td.parentNode;\n        rowIndex = dom.findNodeIndex(row, true);\n\n        if (td.rowSpan > 1 && position === \"after\") {\n            row = table.rows[rowIndex + td.rowSpan - 1];\n        }\n\n        cellCount = this._getNumberOfColumns(table);\n        newRow = row.cloneNode(true);\n        $(newRow).empty();\n\n        for (var i = 0; i < cellCount; i = i + cell.prop(\"colSpan\")) {\n            cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n            if (cell.length) {\n                if (cell.prop(\"rowSpan\") > 1 && position === \"after\" && cell) {\n                    cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                } else {\n                    this._appendCell(newRow, cell);\n                }\n            } else {\n                rowIndex = dom.findNodeIndex(row, true);\n                cell = this._findRowSpanCell(row.parentElement, rowIndex, i);\n                rowSpanIndex = cell.closest(TR).index();\n\n                if (rowSpanIndex + cell.prop(\"rowSpan\") - 1 === rowIndex && position === \"after\") {\n                    this._appendCell(newRow, cell);\n                } else {\n                    cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                }\n            }\n\n            createdCell = $(newRow).find(\"[col-index=\" + i + \"]\");\n            if (createdCell.attr(SCOPE) === ROWGROUP && !createdCell.attr(ROWSPAN)) {\n                createdCell.attr(SCOPE, ROW);\n            }\n        }\n\n        if (position == \"before\") {\n            dom.insertBefore(newRow, row);\n        } else {\n            dom.insertAfter(newRow, row);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        this._clearColIndexAttr(table);\n        this.releaseRange(range);\n\n        this._resetElementResizing(this.editor);\n    },\n    _appendCell: function(row, cell) {\n        var newCell;\n\n        newCell = cell.clone();\n        newCell.html(Editor.emptyTableCellContent);\n        newCell.removeAttr(ROWSPAN);\n        newCell.appendTo(row);\n    }\n});\n\nvar InsertColumnCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(true),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table = dom.closest(td, TABLE),\n            colElements = table.getElementsByTagName(COL),\n            colgroupElements = table.getElementsByTagName(COLGROUP),\n            columnIndex,\n            i,\n            rows = table && table.rows,\n            cell,\n            newCell,\n            position = this.options.position || \"after\";\n\n\n        if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        this._mapColIndices(table);\n\n        columnIndex = parseInt(td.getAttribute(\"col-index\"),10);\n\n        if (td.colSpan > 1 && position === \"after\") {\n            td.setAttribute(\"col-index\", columnIndex + td.colSpan - 1);\n            columnIndex = columnIndex + td.colSpan - 1;\n        }\n\n        for (i = 0; i < rows.length; i++) {\n            cell = this._processForColSpan(rows[i], columnIndex, position, td);\n\n            if (!cell) {\n                continue;\n            }\n\n            newCell = cell.cloneNode();\n            newCell.innerHTML = Editor.emptyTableCellContent;\n            newCell.removeAttribute(COLSPAN);\n\n            if (newCell.getAttribute(SCOPE) && newCell.getAttribute(SCOPE) === COLGROUP) {\n                newCell.setAttribute(SCOPE, COL);\n            }\n\n            if (position == \"before\") {\n                dom.insertBefore(newCell, cell);\n            } else {\n                dom.insertAfter(newCell, cell);\n            }\n\n            this._resizeCells(newCell, cell);\n        }\n\n        if (colElements.length > 0 || colgroupElements.length > 0) {\n            this._adjustColgroups(rows[0], table);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        this._clearColIndexAttr(table);\n        this.releaseRange(range);\n\n        this._resetElementResizing(this.editor);\n    },\n    _processForColSpan: function(row, columnIndex, position, selectedCell) {\n        var cell,\n            colSpanEffect,\n            index = columnIndex - 1;\n\n        cell = $(row).find(\"[col-index=\" + columnIndex + \"]\")[0];\n\n        if (cell && cell.colSpan > 1 && position === \"after\" && cell !== selectedCell) {\n            cell.colSpan += 1;\n            return;\n        }\n\n        if (cell) {\n            return cell;\n        }\n\n        for (index; index >= 0; index--) {\n            cell = $(row).find(\"[col-index=\" + index + \"]\")[0];\n\n            if (cell && cell.colSpan > 1) {\n                break;\n            }\n        }\n\n        if (!cell) {\n            return;\n        }\n\n        colSpanEffect = parseInt(cell.getAttribute(\"col-index\"),10) + cell.colSpan - 1;\n\n        if (colSpanEffect === columnIndex && position === \"after\") {\n            return cell;\n        } else if (columnIndex <= colSpanEffect) {\n            cell.setAttribute(COLSPAN, cell.colSpan + 1);\n        }\n    },\n    _resizeCells: function(newCell, cell) {\n        var width = newCell.style.width,\n        parsedWidth, unit, calculatedWidth;\n\n        if (!width) {\n            return;\n        }\n\n        parsedWidth = parseFloat(width);\n        unit = width.slice(parsedWidth.toString().length);\n        calculatedWidth = (parsedWidth / 2) + unit;\n\n        newCell.style.width = calculatedWidth;\n        cell.style.width = calculatedWidth;\n    }\n});\n\nvar DeleteRowCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange();\n        var rows = RangeUtils.mapAll(range, function(node) {\n            return $(node).closest(TR)[0];\n        });\n        var td = dom.closest(range.endContainer, [TD, TH]);\n        var row = rows[0];\n        var rowSpan = td ? td.rowSpan : 1;\n        var rowIndex = $(rows[0]).index();\n        var table = dom.closest(row, TABLE);\n        var rowParent = row.parentElement;\n        var focusElement;\n\n        if (!table || (this.immutables() && Editor.Immutables.immutableParent(row))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        for (var x = 0; x < rowSpan; x++) {\n            if (rows.indexOf(rowParent.rows[rowIndex + x]) < 0) {\n                rows.push(rowParent.rows[rowIndex + x]);\n            }\n        }\n\n        if (table.rows.length <= rows.length) {\n            focusElement = dom.next(table);\n            if (!focusElement || dom.insignificant(focusElement)) {\n                focusElement = dom.prev(table);\n            }\n\n            if (focusElement && focusElement.rows) {\n                focusElement = focusElement.rows[0].cells[0];\n            }\n\n            dom.remove(table);\n            this._resetElementResizing(this.editor);\n        } else if (rowParent.rows.length <= rows.length) {\n            focusElement = rowParent.nextSibling;\n\n            if (!focusElement) {\n                focusElement = rowParent.previousSibling;\n            }\n\n            dom.remove(rowParent);\n        } else {\n            this._mapColIndices(table);\n\n            for (var i = 0; i < rows.length; i++) {\n                row = rows[i];\n                dom.removeTextSiblings(row);\n                focusElement = dom.next(row) || dom.prev(row);\n                focusElement = focusElement.cells[0];\n\n                // IE needs to focus the new row before removing the old one\n                this._focusElement(range, focusElement);\n                focusElement = null;\n\n                this._handleRowSpanCells(table, row);\n\n                dom.remove(row);\n            }\n\n            this._clearColIndexAttr(table);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        } else if (dom.is(rowParent, THEAD) && $(table).find(\"[scope]\").length > 0) {\n            this._adjustColgroups(rowParent.rows[0], table);\n        }\n\n        if (focusElement) {\n            this._focusElement(range, focusElement);\n        }\n\n        this._resetElementResizing(this.editor);\n    },\n    _focusElement: function(range, node) {\n        range.setStart(node, 0);\n        range.collapse(true);\n        this.editor.selectRange(range);\n    },\n    _handleRowSpanCells: function(table, row) {\n        var index, cell, adjacentCell, nextRow, rowIndex = dom.findNodeIndex(row, true),\n            firstRow = table.rows[0],\n            lastCell = firstRow.cells[firstRow.cells.length - 1],\n            lastIndex = parseInt(lastCell.getAttribute(\"col-index\"),10) + lastCell.colSpan - 1;\n\n        for (index = 0; index <= lastIndex; index = index + cell.prop(\"colSpan\")) {\n            cell = $(row).find(\"[col-index=\" + index + \"]\");\n\n            if (cell.length && cell.prop(\"rowSpan\") > 1) {\n                nextRow = table.rows[rowIndex + 1];\n                adjacentCell = $(nextRow).find(\"[col-index=\" + (index + 1) + \"]\");\n\n                if (adjacentCell.length) {\n                    adjacentCell.before(cell);\n                } else {\n                    $(nextRow).append(cell);\n                }\n                this._reduceRowSpan(cell);\n            }\n\n            if (!cell.length) {\n                cell = this._findRowSpanCell(row.parentElement, rowIndex, index);\n                this._reduceRowSpan(cell);\n            }\n        }\n    },\n    _reduceRowSpan: function(td) {\n        var rowSpanValue = td.prop(\"rowSpan\") - 1;\n\n        if (rowSpanValue <= 1) {\n            td.removeAttr(ROWSPAN);\n            if (td.attr(SCOPE) === ROWGROUP) {\n                td.attr(SCOPE, ROW);\n            }\n        } else {\n            td.attr(ROWSPAN, rowSpanValue);\n        }\n    }\n});\n\nvar DeleteColumnCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table = dom.closest(td, TABLE),\n            rows = table && table.rows,\n            columnIndex = dom.findNodeIndex(td, true),\n            columnCount = rows && rows[0].cells.length,\n            colElements = table.getElementsByTagName(COL),\n            colgroupElements = table.getElementsByTagName(COLGROUP),\n            focusElement, i, cell, x;\n\n        if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        if (columnCount == 1 || td.colSpan == columnCount) {\n            focusElement = dom.next(table);\n            if (!focusElement || dom.insignificant(focusElement)) {\n                focusElement = dom.prev(table);\n            }\n\n            if (focusElement && focusElement.rows) {\n                focusElement = focusElement.rows[0].cells[0];\n            }\n\n            dom.remove(table);\n            this._resetElementResizing(this.editor);\n        } else {\n            dom.removeTextSiblings(td);\n\n            focusElement = dom.next(td) || dom.prev(td);\n\n            this._mapColIndices(table);\n\n            columnIndex = parseInt(td.getAttribute(\"col-index\"), 10);\n\n            for (x = 0; x < td.colSpan; x++) {\n                for (i = 0; i < rows.length; i = i + (cell.prop(\"rowSpan\") || 1)) {\n                    cell = $(rows[i]).find(\"[col-index=\" + (columnIndex + x) + \"]\");\n\n                    if (cell.length && cell.prop(\"colSpan\") <= 1) {\n                        cell.remove();\n                    } else {\n                        this._handleColSpanCells(rows[i], columnIndex + x);\n                    }\n                }\n            }\n\n            this._clearColIndexAttr(table);\n        }\n\n        if (colElements.length > 0 || colgroupElements.length > 0) {\n            this._adjustColgroups(rows[0], table);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        if (focusElement) {\n            range.setStart(focusElement, 0);\n            range.collapse(true);\n            this.editor.selectRange(range);\n        }\n\n        this._resetElementResizing(this.editor);\n    },\n    _handleColSpanCells: function(row, colIndex) {\n        var cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n        if (cell.length && cell.prop(\"colSpan\") > 1) {\n            var clone = cell.clone(true);\n            cell.after(clone);\n            this._reduceColSpan(clone);\n            clone.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n            cell.remove();\n            return;\n        }\n\n        for (var i = colIndex; i >= 0; i--) {\n            cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n            if (cell.length) {\n                this._reduceColSpan(cell);\n                cell.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n                return;\n            }\n        }\n    },\n    _reduceColSpan: function(td) {\n        var colSpanValue = td.prop(\"colSpan\") - 1;\n\n        if (colSpanValue <= 1) {\n            td.removeAttr(COLSPAN);\n            if (td.attr(SCOPE) === COLGROUP) {\n                td.attr(SCOPE, COL);\n            }\n        } else {\n            td.attr(COLSPAN, colSpanValue);\n        }\n    }\n});\n\nvar MergeCellsHorizontallyCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table, row, columnIndex, nextTd, colspan;\n\n            if (!td) {\n                this.releaseRange(range);\n                return;\n            }\n\n            table = dom.closest(td, TABLE);\n            row = td.parentNode;\n            columnIndex = dom.findNodeIndex(td, true);\n            nextTd = row.children[columnIndex + 1];\n\n            if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            columnIndex = parseInt($(td).attr(\"col-index\"), 10);\n            nextTd = $(row).find(\"[col-index=\" + (columnIndex + 1 + this._getColspan(td) - 1) + \"]\").get(0);\n\n            if (!nextTd || nextTd.rowSpan !== td.rowSpan || td.tagName !== nextTd.tagName) {\n                this._clearColIndexAttr(table);\n                this.releaseRange(range);\n                return;\n            }\n\n            colspan = this._getColspan(td) + this._getColspan(nextTd);\n\n            $(td).prop(COLSPAN, colspan)\n                 .append(dom.emptyNode(nextTd) ? \"\" : \"<br/>\" + nextTd.innerHTML);\n\n            $(td).width(td.offsetWidth);\n            $(nextTd).remove();\n\n            if (td.getAttribute(SCOPE) === COL) {\n                td.setAttribute(SCOPE, COLGROUP);\n            }\n            if (td.getAttribute(SCOPE) === COLGROUP) {\n                this._adjustColgroups(row, table);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n            this._resetElementResizing(this.editor);\n    },\n    _getColspan: function(td) {\n        return parseInt(td.getAttribute(COLSPAN), 10) || 1;\n    }\n});\n\nvar MergeCellsVerticallyCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            tr, parent, table, columnIndex, rowIndex, targetRow, bottomTd;\n\n            if (!td) {\n                this.releaseRange(range);\n                return;\n            }\n\n            tr = dom.closest(td, TR);\n            parent = dom.closest(td, [THEAD, TBODY]);\n            table = dom.closest(td, TABLE);\n            columnIndex = dom.findNodeIndex(td, true);\n            rowIndex = dom.findNodeIndex(tr, true);\n\n            if (rowIndex + 1 === parent.rows.length) {\n                this.releaseRange(range);\n                return;\n            }\n\n            targetRow = parent.rows[rowIndex + this._getRowspan(td)];\n            bottomTd = targetRow && targetRow.children[columnIndex];\n\n            if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            columnIndex = $(td).attr(\"col-index\");\n            bottomTd = $(targetRow).find(\"[col-index=\" + columnIndex + \"]\").get(0);\n\n            if (!bottomTd || bottomTd.colSpan !== td.colSpan || td.tagName !== bottomTd.tagName) {\n                this._clearColIndexAttr(table);\n                this.releaseRange(range);\n                return;\n            }\n\n            $(td).prop(ROWSPAN, this._getRowspan(td) + this._getRowspan(bottomTd))\n                 .append(dom.emptyNode(bottomTd) ? \"\" : \"<br/>\" + bottomTd.innerHTML);\n\n            if (td.getAttribute(SCOPE) === ROW) {\n                td.setAttribute(SCOPE, ROWGROUP);\n            }\n\n            $(bottomTd).remove();\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n    },\n    _getRowspan: function(td) {\n        return parseInt(td.getAttribute(ROWSPAN), 10) || 1;\n    }\n});\n\nvar SplitCellCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            type = this.options.type,\n            attr = type === \"row\" ? COLSPAN : ROWSPAN,\n            td = dom.closest(range.endContainer, [TD, TH]),\n            parent = dom.closest(td, [THEAD, TBODY]),\n            table = dom.closest(td, TABLE),\n            emptyTd = dom.createEmptyNode(this.editor.document, td.nodeName.toLowerCase());\n\n        if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        this._mapColIndices(table);\n\n        if (type === \"row\" && $(td).is(\"[\" + attr + \"]\")) {\n            this._splitCellHorizontally(td, parent, attr, emptyTd);\n        } else if (type === \"column\" && $(td).is(\"[\" + attr + \"]\")) {\n            this._splitCellVertically(td, parent, attr, emptyTd);\n        }\n\n        if ($(td).prop(attr.toLowerCase()) <= 1) {\n            $(td).removeAttr(attr);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        this._clearColIndexAttr(table);\n        this.releaseRange(range);\n    },\n    _getRowspanValue: function(td) {\n        return parseInt(td.getAttribute(ROWSPAN), 10);\n    },\n    _getColspanValue: function(td) {\n        return parseInt(td.getAttribute(COLSPAN), 10);\n    },\n    _splitCellHorizontally: function(td, parent, attr, emptyTd) {\n        var rowSpan = td.rowSpan,\n            colSpan = td.colSpan,\n            tdToAdd = $(emptyTd),\n            colSpanResult = Math.floor(colSpan / 2);\n\n            if (colSpanResult > 1) {\n                tdToAdd.attr(COLSPAN, colSpanResult);\n            }\n\n            if (rowSpan > 1) {\n                tdToAdd.attr(ROWSPAN, rowSpan);\n            }\n\n            $(td).prop(attr, colSpan - colSpanResult)\n                .after(tdToAdd);\n\n            $(td).width(td.offsetWidth);\n            tdToAdd.width(tdToAdd[0].offsetWidth);\n\n            if (td.hasAttribute(SCOPE)) {\n                if (td.getAttribute(SCOPE) === COLGROUP) {\n                    tdToAdd.attr(SCOPE, COL);\n                    if (!td.getAttribute(COLSPAN) || td.getAttribute(COLSPAN) === \"1\") {\n                        td.setAttribute(SCOPE, COL);\n                    }\n\n                    this._adjustColgroups(td.parentNode, parent.parentNode);\n                } else {\n                    tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                }\n            }\n    },\n    _splitCellVertically: function(td, parent, attr, emptyTd) {\n        var tr = dom.closest(td,TR),\n            columnIndex = parseInt($(td).attr(\"col-index\"), 10),\n            rowIndex = dom.findNodeIndex(tr, true),\n            rowSpan = td.rowSpan,\n            colSpan = td.colSpan,\n            rowSpanResult = Math.floor(rowSpan / 2),\n            targetRow = $(parent).find(TR).eq(rowIndex + rowSpan - rowSpanResult),\n            nextTd = this._findNextTdInRow(targetRow, columnIndex + colSpan),\n            tdToAdd = $(emptyTd);\n\n            if (rowSpanResult > 1) {\n                tdToAdd.attr(ROWSPAN, rowSpanResult);\n            }\n            if (colSpan > 1) {\n                tdToAdd.attr(COLSPAN, colSpan);\n            }\n\n            if (nextTd && nextTd.length) {\n                nextTd.before(tdToAdd);\n            } else {\n                targetRow.append(tdToAdd);\n            }\n\n            $(td).prop(attr, rowSpan - rowSpanResult);\n\n            if (td.hasAttribute(SCOPE)) {\n                if (td.getAttribute(SCOPE) === ROWGROUP) {\n                    tdToAdd.attr(SCOPE, ROW);\n                    if (!td.getAttribute(ROWSPAN) || td.getAttribute(ROWSPAN) === \"1\") {\n                        td.setAttribute(SCOPE, ROW);\n                    }\n                } else {\n                    tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                }\n            }\n    }\n});\n\nvar TableModificationTool = Tool.extend({\n    command: function(options) {\n        var commandsMap = {\n            row: {\n                insert: InsertRowCommand,\n                \"delete\": DeleteRowCommand,\n                merge: MergeCellsHorizontallyCommand,\n                split: SplitCellCommand\n            },\n            column: {\n                insert: InsertColumnCommand,\n                \"delete\": DeleteColumnCommand,\n                merge: MergeCellsVerticallyCommand,\n                split: SplitCellCommand\n            }\n        };\n\n        options = extend(options, this.options);\n        options.action = options.action || \"insert\";\n\n        return new commandsMap[options.type][options.action](options);\n    },\n\n    update: function(ui, nodes) {\n        var isFormatted = !tableFormatFinder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (isFormatted === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    }\n});\n\nvar TableFormatCommand = FormatCommand.extend({\n    exec: function() {\n        var that = this;\n        var editor = that.editor;\n\n        FormatCommand.fn.exec.call(this);\n\n        if (editor.elementResizing) {\n            editor.elementResizing._showResizeHandles();\n        }\n    }\n});\n\n// var tableAlignFormatFinder = BlockFormatFinder.extend({\n\n// });\n\nvar TableFormatTool = BlockFormatTool.extend({\n    update: function(ui, nodes) {\n        var isTable = !tableFormatFinder.isFormatted(nodes),\n            isFormatted = this.options.finder.isFormatted(nodes, this.isTable),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (toolbar) {\n            toolbar.toggle(ui, isFormatted);\n        }\n\n        if (isTable === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    },\n    command: function(commandArguments) {\n        var that = this;\n\n        return new TableFormatCommand(extend(commandArguments, {\n            formatter: that.options.formatter\n        }));\n    },\n    isTable: function(node) {\n        return dom.is(node, \"table\");\n    }\n});\n\nextend(kendo.ui.editor, {\n    PopupTool: PopupTool,\n    TableCommand: TableCommand,\n    InsertTableTool: InsertTableTool,\n    TableFormatTool: TableFormatTool,\n    TableFormatCommand: TableFormatCommand,\n    TableModificationTool: TableModificationTool,\n    InsertRowCommand: InsertRowCommand,\n    InsertColumnCommand: InsertColumnCommand,\n    DeleteRowCommand: DeleteRowCommand,\n    DeleteColumnCommand: DeleteColumnCommand,\n    MergeCellsHorizontallyCommand: MergeCellsHorizontallyCommand,\n    MergeCellsVerticallyCommand: MergeCellsVerticallyCommand,\n    SplitCellCommand: SplitCellCommand\n});\n\n\nregisterTool(\"createTable\", new InsertTableTool({ ui: { popup: true, overflow: \"never\" } }));\n\nregisterTool(\"addColumnLeft\", new TableModificationTool({ type: \"column\", position: \"before\" }));\nregisterTool(\"addColumnRight\", new TableModificationTool({ type: \"column\" }));\nregisterTool(\"addRowAbove\", new TableModificationTool({ type: \"row\", position: \"before\" }));\nregisterTool(\"addRowBelow\", new TableModificationTool({ type: \"row\" }));\nregisterTool(\"deleteRow\", new TableModificationTool({ type: \"row\", action: \"delete\" }));\nregisterTool(\"deleteColumn\", new TableModificationTool({ type: \"column\", action: \"delete\" }));\nregisterTool(\"mergeCellsHorizontally\", new TableModificationTool({ type: \"row\", action: \"merge\" }));\nregisterTool(\"mergeCellsVertically\", new TableModificationTool({ type: \"column\", action: \"merge\" }));\nregisterTool(\"splitCellHorizontally\", new TableModificationTool({ type: \"row\", action: \"split\" }));\nregisterTool(\"splitCellVertically\", new TableModificationTool({ type: \"column\", action: \"split\" }));\n\nregisterFormat(\"tableAlignLeft\", [\n    { tags: [\"table\"], attr: { style: { marginLeft: \"\", marginRight: \"auto\" } } },\n    { tags: [\"table\"], attr: { align: \"left\" } }\n]);\nregisterTool(\"tableAlignLeft\", new TableFormatTool({\n    format: formats.tableAlignLeft,\n    ui: {\n        togglable: true,\n        group: \"tableAlign\"\n    }\n}));\n\nregisterFormat(\"tableAlignCenter\", [\n    { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"auto\" } } },\n    { tags: [\"table\"], attr: { align: \"center\" } }\n]);\nregisterTool(\"tableAlignCenter\", new TableFormatTool({\n    format: formats.tableAlignCenter,\n    ui: {\n        togglable: true,\n        group: \"tableAlign\"\n    }\n}));\n\nregisterFormat(\"tableAlignRight\", [\n    { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"\" } } },\n    { tags: [\"table\"], attr: { align: \"right\" } }\n]);\nregisterTool(\"tableAlignRight\", new TableFormatTool({\n    format: formats.tableAlignRight,\n    ui: {\n        togglable: true,\n        group: \"tableAlign\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        editorNS = kendo.ui.editor,\n        RangeUtils = editorNS.RangeUtils,\n        dom = editorNS.Dom,\n        RestorePoint = editorNS.RestorePoint,\n        Marker = editorNS.Marker,\n        browser = kendo.support.browser,\n        extend = $.extend;\n\nvar Clipboard = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n        var pasteCleanup = editor.options.pasteCleanup;\n        this.nonSplittableTagsOnPaste = editor.options.nonSplittableTagsOnPaste || [];\n        this.cleaners = [\n            new ScriptCleaner(pasteCleanup),\n            new TabCleaner(pasteCleanup),\n            new MSWordFormatCleaner(pasteCleanup),\n            new WebkitFormatCleaner(pasteCleanup),\n            new HtmlTagsCleaner(pasteCleanup),\n            new HtmlAttrCleaner(pasteCleanup),\n            new HtmlContentCleaner(pasteCleanup),\n            new CustomCleaner(pasteCleanup) //always keep at end\n        ];\n    },\n\n    htmlToFragment: function(html) {\n        var editor = this.editor,\n            doc = editor.document,\n            container = dom.create(doc, 'div'),\n            fragment = doc.createDocumentFragment();\n\n        container.innerHTML = html;\n\n        while (container.firstChild) {\n            fragment.appendChild(container.firstChild);\n        }\n\n        return fragment;\n    },\n\n    isBlock: function(html) {\n        return (/<(div|p|ul|ol|table|h[1-6])/i).test(html);\n    },\n\n    _startModification: function() {\n        var range;\n        var restorePoint;\n        var editor = this.editor;\n\n        if (this._inProgress) {\n            return;\n        }\n\n        this._inProgress = true;\n\n        range = editor.getRange();\n        restorePoint = new RestorePoint(range, editor.body);\n\n        dom.persistScrollTop(editor.document);\n\n        return { range: range, restorePoint: restorePoint };\n    },\n\n    _endModification: function(modificationInfo) {\n        editorNS._finishUpdate(this.editor, modificationInfo.restorePoint);\n\n        this.editor._selectionChange();\n\n        this._inProgress = false;\n    },\n\n    _contentModification: function(before, after) {\n        var that = this;\n        var editor = that.editor;\n        var modificationInfo = that._startModification();\n\n        if (!modificationInfo) {\n            return;\n        }\n\n        before.call(that, editor, modificationInfo.range);\n\n        setTimeout(function() {\n            after.call(that, editor, modificationInfo.range);\n\n            that._endModification(modificationInfo);\n        });\n    },\n\n    _removeBomNodes: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n\n        for (var i = 0; i < nodes.length; i++) {\n            nodes[i].nodeValue = dom.stripBom(nodes[i].nodeValue) || nodes[i].nodeValue;\n        }\n    },\n\n    _onBeforeCopy: function(range) {\n        var marker = new Marker();\n        marker.add(range);\n\n        this._removeBomNodes(range);\n\n        marker.remove(range);\n\n        this.editor.selectRange(range);\n    },\n\n    oncopy: function() {\n        this._onBeforeCopy(this.editor.getRange());\n    },\n\n    oncut: function() {\n        this._onBeforeCopy(this.editor.getRange());\n        this._contentModification($.noop, $.noop);\n    },\n\n    _fileToDataURL: function(blob) {\n        var deferred = $.Deferred();\n\n        var reader = new FileReader();\n\n        if (!(blob instanceof window.File) && blob.getAsFile) {\n            blob = blob.getAsFile();\n        }\n\n        reader.onload = deferred.resolve.bind(deferred);\n\n        reader.readAsDataURL(blob);\n\n        return deferred.promise();\n    },\n\n    _triggerPaste: function(html, options) {\n        var args = { html: html || \"\" };\n\n        args.html = args.html.replace(/\\ufeff/g, \"\");\n\n        this.editor.trigger(\"paste\", args);\n\n        this.paste(args.html, options || {});\n    },\n\n    _handleImagePaste: function(e) {\n        if (!('FileReader' in window) || (browser.msie && browser.version > 10)) {\n            return;\n        }\n\n        var clipboardData = e.clipboardData || e.originalEvent.clipboardData ||\n                    window.clipboardData || {};\n\n        var items = clipboardData.items || clipboardData.files;\n\n        return this._insertImages(items);\n    },\n\n    _insertImages: function(items) {\n        if (!items) {\n            return;\n        }\n\n        var images = $.grep(items, function(item) { return (/^image\\//i).test(item.type); });\n        var html = $.grep(items, function(item) { return (/^text\\/html/i).test(item.type); });\n\n        if (html.length || !images.length) {\n            return;\n        }\n\n        var modificationInfo = this._startModification();\n\n        if (!modificationInfo) {\n            return;\n        }\n\n        $.when.apply($, $.map(images, this._fileToDataURL))\n            .done((function() {\n                var results = Array.prototype.slice.call(arguments);\n                var html = $.map(results, function(e) {\n                    return '<img src=\"' + e.target.result + '\" />';\n                }).join(\"\");\n\n                this._triggerPaste(html);\n\n                this._endModification(modificationInfo);\n            }).bind(this));\n\n        return true;\n    },\n\n    onpaste: function(e) {\n        if (this.editor.body.contentEditable === \"false\") {\n            return;\n        }\n\n        if (this._handleImagePaste(e)) {\n            e.preventDefault();\n            return;\n        }\n\n        this.expandImmutablesIn();\n\n        this._contentModification(\n            function beforePaste(editor, range) {\n                var clipboardNode = dom.create(editor.document, 'div', {\n                        className: 'k-paste-container',\n                        innerHTML: \"\\ufeff\"\n                    });\n                var browser = kendo.support.browser;\n                var body = editor.body;\n\n                this._decoreateClipboardNode(clipboardNode, body);\n\n                body.appendChild(clipboardNode);\n\n                //Browser scrolls to clipboardNode\n                if (browser.webkit) {\n                    this._moveToCaretPosition(clipboardNode, range);\n                }\n\n                // text ranges are slow in IE10-, DOM ranges are buggy in IE9-10\n                if (browser.msie && browser.version < 11) {\n                    e.preventDefault();\n                    var r = editor.createRange();\n                    r.selectNodeContents(clipboardNode);\n                    editor.selectRange(r);\n                    var textRange = editor.document.body.createTextRange();\n                    textRange.moveToElementText(clipboardNode);\n                    $(body).off('paste');\n                    textRange.execCommand('Paste');\n                    $(body).on('paste', this.onpaste.bind(this));\n                } else {\n                    var clipboardRange = editor.createRange();\n                    clipboardRange.selectNodeContents(clipboardNode);\n                    editor.selectRange(clipboardRange);\n                }\n\n                range.deleteContents();\n            },\n            function afterPaste(editor, range) {\n                var html = \"\", containers;\n\n                editor.selectRange(range);\n\n                containers = $(editor.body).children(\".k-paste-container\");\n\n                containers.each(function() {\n                    var lastChild = this.lastChild;\n\n                    if (lastChild && dom.is(lastChild, 'br')) {\n                        dom.remove(lastChild);\n                    }\n\n                    html += this.innerHTML;\n                });\n\n                containers.remove();\n\n                this._triggerPaste(html, { clean: true });\n            }\n        );\n    },\n    ondragover: function(e) {\n        if (browser.msie || browser.edge) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    },\n    ondrop: function(e) {\n        if (!('FileReader' in window)) {\n            return;\n        }\n\n        var dataTransfer = (e.originalEvent || e).dataTransfer || {};\n        var items = dataTransfer.items || dataTransfer.files;\n\n        if (this._insertImages(items)) {\n            e.preventDefault();\n        }\n    },\n    _decoreateClipboardNode: function(node, body) {\n        if (!browser.msie && !browser.webkit) {\n            return;\n        }\n\n        node = $(node);\n        node.css({\n            borderWidth: \"0px\",\n            width: \"0px\",\n            height: \"0px\",\n            overflow: \"hidden\",\n            margin: \"0\",\n            padding: \"0\"\n        });\n\n        if (browser.msie) {\n            //node inherits BODY styles and this causes the browser to add additional\n            var documentElement = $(body.ownerDocument.documentElement);\n\n            node.css({\n                fontVariant: \"normal\",\n                fontWeight: \"normal\",\n                lineSpacing: \"normal\",\n                lineHeight: \"normal\",\n                textDecoration: \"none\"\n            });\n            var color = documentElement.css(\"color\");\n            if (color) {\n                node.css(\"color\", color);\n            }\n            var fontFamily = documentElement.css(\"fontFamily\");\n            if (fontFamily) {\n                node.css(\"fontFamily\", fontFamily);\n            }\n            var fontSize = documentElement.css(\"fontSize\");\n            if (fontSize) {\n                node.css(\"fontSize\", fontSize);\n            }\n        }\n    },\n    _moveToCaretPosition: function(node, range) {\n        var that = this;\n        var body = that.editor.body;\n        var nodeOffset = dom.offset(node, body);\n        var caretOffset = that._caretOffset(range, body);\n        var translateX = caretOffset.left - nodeOffset.left;\n        var translateY = caretOffset.top - nodeOffset.top;\n        var translate = \"translate(\" + translateX + \"px,\" + translateY + \"px)\";\n\n        $(node).css({\n            \"-webkit-transform\": translate,\n            \"transform\": translate\n        });\n    },\n    _caretOffset: function(range, body) {\n        var editor = this.editor;\n        var caret = dom.create(editor.document, 'span', { innerHTML: \"\\ufeff\" });\n        var startContainer = range.startContainer;\n        var rangeChanged;\n\n        if (range.collapsed) {\n            var isStartTextNode = dom.isDataNode(startContainer);\n            if (isStartTextNode && (dom.isBom(startContainer) || range.startOffset === 0)) {\n                dom.insertBefore(caret, startContainer);\n            } else if (isStartTextNode && range.startOffset === startContainer.length) {\n                dom.insertAfter(caret, startContainer);\n            } else {\n                range.insertNode(caret);\n                rangeChanged = true;\n            }\n        } else {\n            startContainer = startContainer === body ?\n                startContainer.childNodes[range.startOffset] : startContainer;\n            dom.insertBefore(caret, startContainer);\n        }\n\n        var offset = dom.offset(caret, body);\n        var prev = caret.previousSibling;\n        var next = caret.nextSibling;\n\n        dom.remove(caret);\n\n        if (rangeChanged && dom.isDataNode(prev) && dom.isDataNode(next) && !dom.isBom(prev) && !dom.isBom(next)) {\n            var prevLength = prev.length;\n            next.data = prev.data + next.data;\n            range.setStart(next, prevLength);\n            dom.remove(prev);\n\n            range.collapse(true);\n            editor.selectRange(range);\n        }\n\n        return offset;\n    },\n\n    expandImmutablesIn: function(range) {\n        var editor = this.editor;\n        if (editor && editor.options.immutables) {\n            var body = editor.body;\n            range = range || editor.getRange();\n            kendo.ui.editor.Immutables.expandImmutablesIn(range);\n            if (range.startContainer === body && range.startOffset === 0) {\n                var doc = body.ownerDocument;\n                var bomNode = doc.createTextNode(\"\\ufeff\");\n                body.insertBefore(bomNode, body.childNodes[0]);\n                range.setStartBefore(bomNode);\n            }\n            editor.selectRange(range);\n        }\n    },\n\n    splittableParent: function(block, node) {\n        var parentNode, body;\n\n        if (block) {\n            return dom.closestEditableOfType(node, ['p', 'ul', 'ol']) || node.parentNode;\n        }\n\n        parentNode = node.parentNode;\n        body = node.ownerDocument.body;\n\n        if (dom.isInline(parentNode)) {\n            while (parentNode.parentNode != body && !dom.isBlock(parentNode.parentNode)) {\n                parentNode = parentNode.parentNode;\n            }\n        }\n\n        return parentNode;\n    },\n\n    paste: function(html, options) {\n        var editor = this.editor,\n            nonSplittableTagsOnPaste = this.nonSplittableTagsOnPaste,\n            preventSplit = false,\n            unwrapPasted = false,\n            i, l, childNodes, isList;\n\n        this.expandImmutablesIn();\n\n        options = extend({ clean: false, split: true }, options);\n\n        if (!options.skipCleaners) {\n            for (i = 0, l = this.cleaners.length; i < l; i++) {\n                if (this.cleaners[i].applicable(html)) {\n                    html = this.cleaners[i].clean(html);\n                }\n            }\n        }\n\n        if (options.clean) {\n            // remove br elements which immediately precede block elements\n            html = html.replace(/(<br>(\\s|&nbsp;)*)+(<\\/?(div|p|li|col|t))/ig, \"$3\");\n            // remove empty inline elements\n            html = html.replace(/<(a|span)[^>]*><\\/\\1>/ig, \"\");\n        }\n\n        html = html.replace(/<(a|span|font)([^>]*)> <\\/\\1>/ig, \"<$1$2>&nbsp;</$1>\");\n\n        // It is possible in IE to copy just <li> tags\n        html = html.replace(/^<li/i, '<ul><li').replace(/li>$/g, 'li></ul>');\n\n        var block = this.isBlock(html);\n\n        editor.focus();\n        var range = editor.getRange();\n        range.deleteContents();\n\n        if (range.startContainer == editor.document) {\n            range.selectNodeContents(editor.body);\n        }\n\n        var marker = new Marker();\n        var caret = marker.addCaret(range);\n\n        var parent = this.splittableParent(block, caret);\n        var unwrap = false;\n\n        for (i = 0; i < nonSplittableTagsOnPaste.length; i++) {\n            const splitter = nonSplittableTagsOnPaste[i],\n                tag = splitter.tag || splitter;\n\n            if (dom.is(parent, tag)) {\n                preventSplit = true;\n                unwrapPasted = splitter.unwrap !== false;\n                break;\n            }\n        }\n\n        var splittable = parent != editor.body && !dom.is(parent, \"td\") && !preventSplit;\n\n        if (options.split && splittable && (block || dom.isInline(parent))) {\n            range.selectNode(caret);\n            RangeUtils.split(range, parent, true);\n            unwrap = true;\n        }\n\n        var fragment = this.htmlToFragment(html);\n\n        if (fragment.firstChild && fragment.firstChild.className === \"k-paste-container\") {\n            var fragmentsHtml = [];\n            for (i = 0, l = fragment.childNodes.length; i < l; i++) {\n                fragmentsHtml.push(fragment.childNodes[i].innerHTML);\n            }\n\n            fragment = this.htmlToFragment(fragmentsHtml.join('<br />'));\n        }\n\n        childNodes = fragment.childNodes;\n\n        if (unwrapPasted) {\n            isList = dom.list(childNodes[0]);\n            dom.unwrap(childNodes[0]);\n\n            if (isList) {\n                range.selectNode(caret.parentNode);\n            }\n        }\n\n        $(childNodes)\n            .filter(\"table\").addClass(\"k-table\").end()\n            .find(\"table\").addClass(\"k-table\");\n\n        $(childNodes).each(function(index, elm) {\n           if (dom.isBlock(elm) && !dom.isSelfClosing(elm) && elm.innerHTML === \"\") {\n                elm.appendChild(editor.document.createTextNode(\"\\ufeff\"));\n           }\n        });\n\n        range.insertNode(fragment);\n\n        parent = this.splittableParent(block, caret);\n        if (unwrap) {\n            while (caret.parentNode != parent) {\n                dom.unwrap(caret.parentNode);\n            }\n\n            dom.unwrap(caret.parentNode);\n        }\n\n        dom.normalize(range.commonAncestorContainer);\n        caret.style.display = 'inline';\n        dom.restoreScrollTop(editor.document);\n        dom.scrollTo(caret);\n        marker.removeCaret(range);\n\n        var rangeEnd = range.commonAncestorContainer.parentNode;\n        if (range.collapsed && dom.name(rangeEnd) == \"tbody\" || range.collapsed && dom.name(rangeEnd) == \"thead\") {\n            range.setStartAfter($(rangeEnd).closest(\"table\")[0]);\n            range.collapse(true);\n        }\n\n        var focusedTable = $(range.commonAncestorContainer.parentNode).closest(\"table\");\n\n        if (focusedTable.get(0)) {\n            var siblingNodes = focusedTable.parent().contents();\n            var lastSiblingIndex = siblingNodes.length - 1;\n            var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n            while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n                lastSiblingIndex -= 1;\n                lastSibling = siblingNodes.get(lastSiblingIndex);\n            }\n\n            if (lastSibling === focusedTable.get(0) && !focusedTable.parents(\"table\").length) {\n                dom.insertAfter(dom.createEmptyNode(editor.document, \"p\"), focusedTable[0]);\n            }\n        }\n\n        editor._handleSpaceAndNewLines();\n        editor.selectRange(range);\n    }\n});\n\nvar Cleaner = Class.extend({\n    init: function(options) {\n        this.options = options || {};\n        this.replacements = [];\n    },\n\n    clean: function(html, customReplacements) {\n        var that = this,\n            replacements = customReplacements || that.replacements,\n            i, l;\n\n        for (i = 0, l = replacements.length; i < l; i += 2) {\n            html = html.replace(replacements[i], replacements[i + 1]);\n        }\n\n        return html;\n    }\n});\n\nvar ScriptCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        this.replacements = [\n            /<(\\/?)script([^>]*)>/i, \"<$1telerik:script$2>\"\n        ];\n    },\n\n    applicable: function(html) {\n        return !this.options.none && (/<script[^>]*>/i).test(html);\n    }\n});\n\nvar TabCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        var replacement = ' ';\n        this.replacements = [\n            /<span\\s+class=\"Apple-tab-span\"[^>]*>\\s*<\\/span>/gi, replacement,\n            /\\t/gi, replacement,\n            /&nbsp;&nbsp; &nbsp;/gi, replacement\n        ];\n    },\n\n    applicable: function(html) {\n        return (/&nbsp;&nbsp; &nbsp;|class=\"?Apple-tab-span/i).test(html);\n    }\n});\n\nvar MSWordFormatCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        this.junkReplacements = [\n            /<\\?xml[^>]*>/gi, '',\n            /<!--(.|\\n)*?-->/g, '', /* comments */\n            /&quot;/g, \"'\", /* encoded quotes (in attributes) */\n            /<o:p>&nbsp;<\\/o:p>/ig, '&nbsp;',\n            /<\\/?(meta|link|style|o:|v:|x:)[^>]*>((?:.|\\n)*?<\\/(meta|link|style|o:|v:|x:)[^>]*>)?/ig, '', /* external references and namespaced tags */\n            /<\\/o>/g, ''\n        ];\n        this.replacements = this.junkReplacements.concat([\n            /(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*(<\\/?(h[1-6]|hr|p|div|table|tbody|thead|tfoot|th|tr|td|li|ol|ul|caption|address|pre|form|blockquote|dl|dt|dd|dir|fieldset)[^>]*>)(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*/g, '$1',\n            /<br><br>/g, '<BR><BR>',\n            /<br>\\n/g, '<br/>',\n            /<br>(?!\\n)/g, ' ',\n            /<table([^>]*)>(\\s|&nbsp;)+<t/gi, '<table$1><t',\n            /<tr[^>]*>(\\s|&nbsp;)*<\\/tr>/gi, '',\n            /<tbody[^>]*>(\\s|&nbsp;)*<\\/tbody>/gi, '',\n            /<table[^>]*>(\\s|&nbsp;)*<\\/table>/gi, '',\n            /<BR><BR>/g, '<br>',\n            /^\\s*(&nbsp;)+/gi, '',\n            /(&nbsp;|<br[^>]*>)+\\s*$/gi, '',\n            /mso-[^;\"]*;?/ig, '', /* office-related CSS attributes */\n            /<(\\/?)b(\\s[^>]*)?>/ig, '<$1strong$2>',\n            /<(\\/?)font(\\s[^>]*)?>/ig, this.convertFontMatch,\n            /<(\\/?)i(\\s[^>]*)?>/ig, '<$1em$2>',\n            /style=([\"|'])\\s*\\1/g, '', /* empty style attributes */\n            /(<br[^>]*>)?\\n/g, function($0, $1) { return $1 ? $0 : ' '; } /* phantom extra line feeds */\n        ]);\n    },\n\n    convertFontMatch: function(match, closing, args) {\n        var faceRe = /face=['\"]([^'\"]+)['\"]/i;\n        var face = faceRe.exec(args);\n        var family = args && face && face[1];\n\n        if (closing) {\n            return '</span>';\n        } else if (family) {\n            return '<span style=\"font-family:' + family + '\">';\n        } else {\n            return '<span>';\n        }\n    },\n\n    applicable: function(html) {\n        return (/class=\"?Mso/i).test(html) ||\n               (/style=\"[^\"]*mso-/i).test(html) ||\n               (/urn:schemas-microsoft-com:office/).test(html);\n    },\n\n    stripEmptyAnchors: function(html) {\n        return html.replace(/<a([^>]*)>\\s*<\\/a>/ig, function(a, attributes) {\n            if (!attributes || attributes.indexOf(\"href\") < 0) {\n                return \"\";\n            }\n\n            return a;\n        });\n    },\n\n    listType: function(p, listData) {\n        var html = p.innerHTML;\n        var text = dom.innerText(p);\n\n        var startingSymbol;\n        var matchSymbol = html.match(/^(?:<span [^>]*texhtml[^>]*>)?<span [^>]*(?:Symbol|Wingdings)[^>]*>([^<]+)/i);\n        var symbol = matchSymbol && matchSymbol[1];\n        var isNumber = /^[a-z\\d]/i.test(symbol);//including alpha-numeric and roman numerals\n\n        var trimStartText = function(text) {\n            return text.replace(/^(?:&nbsp;|[\\u00a0\\n\\r\\s])+/, '');\n        };\n\n        if (matchSymbol) {\n            startingSymbol = true;\n        }\n\n        html = html.replace(/<\\/?\\w+[^>]*>/g, '').replace(/&nbsp;/g, '\\u00a0');\n\n        if ((!startingSymbol && /^[\\u2022\\u00b7\\u00a7\\u00d8o]\\u00a0+/.test(html)) ||\n            (startingSymbol && /^.\\u00a0+/.test(html)) ||\n            (symbol && !isNumber && listData)) {\n            return {\n                tag: 'ul',\n                style: this._guessUnorderedListStyle(trimStartText(text))\n            };\n        }\n\n        if (/^\\s*\\w+[\\.\\)][\\u00a0 ]{2,}/.test(html)) {\n            return {\n                tag: 'ol',\n                style: this._guessOrderedListStyle(trimStartText(text))\n            };\n        }\n    },\n\n    _convertToLi: function(p) {\n        var content;\n\n        if (p.childNodes.length == 1) {\n            content = p.firstChild.nodeType === dom.nodeTypes.TEXT_NODE ? dom.innerText(p) : p.firstChild.innerHTML.replace(/^\\w+[\\.\\)](&nbsp;)+ /, \"\");\n            content = this._checkForBullet(content);\n        } else {\n            content = this._getHtmlNoBullet(p);\n        }\n\n        dom.remove(p);\n\n        return dom.create(document, 'li', { innerHTML: content });\n    },\n\n    _checkForBullet: function(html) {\n        var p = dom.create(document, 'p', { innerHTML: html });\n        var bulletRgx = /^\\s*\\w+[\\.\\)]\\s+/;\n\n        if (bulletRgx.test(p.innerText)) {\n            return this._getHtmlNoBullet(p);\n        }\n\n        return html;\n    },\n\n    _getHtmlNoBullet: function(element) {\n        var content,\n            name = dom.name(element);\n\n        dom.remove(element.firstChild);\n\n        // check for roman numerals\n        if (element.firstChild.nodeType == 3) {\n            if (/^[ivxlcdm]+\\.$/i.test(element.firstChild.nodeValue)) {\n                dom.remove(element.firstChild);\n            }\n        }\n\n        if (/^(&nbsp;|\\s)+$/i.test(element.firstChild.innerHTML)) {\n            dom.remove(element.firstChild);\n        }\n\n        if (name != \"p\") {\n            content = \"<\" + name + \">\" + element.innerHTML + \"</\" + name + \">\";\n        } else {\n            content = element.innerHTML;\n        }\n\n        return content;\n    },\n\n    _guessUnorderedListStyle: function(symbol) {\n        if (/^[\\u2022\\u00b7\\u00FC\\u00D8\\u002dv-]/.test(symbol)) {\n            return null;//return \"disc\"; //default CSS value\n        } else if (/^o/.test(symbol)) {\n            return \"circle\";\n        } else {\n            return \"square\";\n        }\n    },\n    _guessOrderedListStyle: function(symbol) {\n        var listType = null;\n        if (!/^\\d/.test(symbol)) {\n            listType = (/^[a-z]/.test(symbol) ? 'lower-' : 'upper-') +\n                       (/^[ivxlcdm]/i.test(symbol) ? 'roman' : 'alpha');\n        }\n\n        return listType;\n    },\n\n    extractListLevels: function(html) {\n        var msoListRegExp = /style=['\"]?[^'\"]*?mso-list:\\s?[a-zA-Z]+(\\d+)\\s[a-zA-Z]+(\\d+)\\s(\\w+)/gi;\n\n        html = html.replace(msoListRegExp, function(match, list, level) {\n            return kendo.format('data-list=\"{0}\" data-level=\"{1}\" {2}', list, level, match);\n        });\n\n        return html;\n    },\n\n    _createList: function(type, styleType) {\n        return dom.create(document, type, {\n            style: { listStyleType: styleType }\n        });\n    },\n\n    lists: function(placeholder) {\n        var blockChildren = $(placeholder).find(dom.blockElements.join(',')),\n            lastMargin = -1,\n            name,\n            levels = {},\n            li,\n            rootMargin,\n            rootIndex,\n            lastRootLi,\n            isLastRootLi,\n            rootList,\n            i, p, type, margin, list, listData,\n            acceptedNameTags = [\"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n            isParentTable = false;\n\n        for (i = 0; i < blockChildren.length; i++) {\n            p = blockChildren[i];\n            listData = $(p).data();\n            var listIndex = listData.list;\n            name = dom.name(p);\n            isParentTable = !!$(p).parents(\"table\").length;\n\n            if (isParentTable) {\n                continue;\n            }\n\n            var listType = this.listType(p, listData);\n            type = listType && listType.tag;\n\n            if (!type || acceptedNameTags.indexOf(name) < 0) {\n                if (!p.innerHTML) {\n                    dom.remove(p);\n                } else if (li && !isLastRootLi) {\n                    li.appendChild(p);\n                }\n                continue;\n            }\n\n            // not supported list levels in ie\n            if (browser.msie) {\n                continue;\n            }\n\n            margin = listData.level || parseFloat(p.style.marginLeft || 0);\n\n            var levelType = type + listIndex;\n            if (!levels[margin]) {\n                levels[margin] = {};\n            }\n\n            if (!rootMargin || rootMargin < 0) {\n                rootMargin = margin;\n                rootIndex = listIndex;\n                lastRootLi = $(placeholder).find(\"[data-list='\" + rootIndex + \"']\").last()[0];\n                rootList = this._createList(type, listType.style);\n                dom.insertBefore(rootList, p);\n                lastMargin = margin;\n                levels[margin][levelType] = rootList;\n            }\n\n            isLastRootLi = lastRootLi === p;\n\n            list = levels[margin][levelType];\n\n            if (margin > lastMargin || !list) {\n                list = this._createList(type, listType.style);\n                levels[margin][levelType] = list;\n                li.appendChild(list);\n            }\n\n            li = this._convertToLi(p);\n            list.appendChild(li);\n\n            if (isLastRootLi) {\n                rootMargin = lastMargin = -1;\n            } else {\n                lastMargin = margin;\n            }\n        }\n    },\n\n    removeAttributes: function(element) {\n        var attributes = element.attributes,\n            i = attributes.length,\n            significantStyles = [],\n            isSignificantCss = function(val) {\n                var significantCss = [\"border\", \"background\", \"padding\"];\n\n                return significantCss.filter(function(cssAttr) {\n                    return val.trim().indexOf(cssAttr) === 0;\n                }).length > 0;\n            },\n            addSignificantStyles = function(val) {\n                if (isSignificantCss(val)) {\n                    significantStyles.push(val.trim());\n                }\n            },\n            attr, attributeName, attributeValues;\n\n        while (i--) {\n            if (dom.name(attributes[i]) != \"colspan\") {\n                attr = attributes[i];\n                attributeName = attr.name;\n\n                if (attributeName === \"style\" && (element.nodeName === \"TD\" || element.nodeName === \"TH\")) {\n                    attributeValues = attr.value.split(\";\");\n                    attributeValues.forEach(addSignificantStyles);\n                }\n\n                element.removeAttributeNode(attributes[i]);\n            }\n        }\n\n        if (significantStyles.length > 0) {\n            element.setAttribute(\"style\", significantStyles.join(\";\"));\n        }\n    },\n\n    createColGroup: function(row) {\n        var cells = row.cells;\n        var table = $(row).closest(\"table\");\n        var colgroup = table.children(\"colgroup\");\n\n        if (cells.length < 2) {\n            return;\n        } else if (colgroup.length) {\n            cells = colgroup.children();\n            colgroup[0].parentNode.removeChild(colgroup[0]);\n        }\n\n        colgroup = $($.map(cells, function(cell) {\n                var width = cell.width;\n                if (width && parseInt(width, 10) !== 0) {\n                    return kendo.format('<col style=\"width:{0}px;\"/>', width);\n                }\n\n                return \"<col />\";\n            }).join(\"\"));\n\n        // jquery 1.9/2.0 discrepancy\n        if (!colgroup.is(\"colgroup\")) {\n            colgroup = $(\"<colgroup/>\").append(colgroup);\n        }\n\n        colgroup.prependTo(table);\n    },\n\n    convertHeaders: function(row) {\n        var cells = row.cells,\n            i,\n            boldedCells = $.map(cells, function(cell) {\n                var child = $(cell).children(\"p\").children(\"strong\")[0];\n\n                if (child && dom.name(child) == \"strong\") {\n                    return child;\n                }\n            });\n\n        if (boldedCells.length == cells.length) {\n            for (i = 0; i < boldedCells.length; i++) {\n                dom.unwrap(boldedCells[i]);\n            }\n\n            $(row).closest(\"table\")\n                .find(\"colgroup\").after(\"<thead></thead>\").end()\n                .find(\"thead\").append(row);\n\n            for (i = 0; i < cells.length; i++) {\n                dom.changeTag(cells[i], \"th\");\n            }\n        }\n    },\n\n    removeParagraphs: function(cells) {\n        var i, j, len, cell, paragraphs;\n\n        for (i = 0; i < cells.length; i++) {\n            this.removeAttributes(cells[i]);\n\n            // remove paragraphs and insert line breaks between them\n            cell = $(cells[i]);\n            paragraphs = cell.children(\"p\");\n\n            for (j = 0, len = paragraphs.length; j < len; j++) {\n                if (j < len - 1) {\n                    dom.insertAfter(dom.create(document, \"br\"), paragraphs[j]);\n                }\n\n                dom.unwrap(paragraphs[j]);\n            }\n        }\n    },\n\n    removeTextNodes: function(trs) {\n        var i, j, childNodes, currentNode, row;\n\n        for (i = 0; i < trs.length; i++) {\n            row = trs[i];\n            childNodes = row.childNodes;\n\n            for (j = 0; j < childNodes.length; j++) {\n                currentNode = childNodes[j];\n\n                if (currentNode.nodeType === dom.nodeTypes.TEXT_NODE) {\n                    row.removeChild(currentNode);\n                }\n            }\n        }\n    },\n\n    tables: function(placeholder) {\n        var tables = $(placeholder).find(\"table\"),\n            that = this,\n            rows,\n            firstRow, longestRow, i, j;\n\n        for (i = 0; i < tables.length; i++) {\n            rows = tables[i].rows;\n            longestRow = firstRow = rows[0];\n\n            for (j = 1; j < rows.length; j++) {\n                if (rows[j].cells.length > longestRow.cells.length) {\n                    longestRow = rows[j];\n                }\n            }\n\n            that.createColGroup(longestRow);\n            that.convertHeaders(firstRow);\n\n            that.removeAttributes(tables[i]);\n\n            that.removeParagraphs(tables.eq(i).find(\"td,th\"));\n\n            that.removeTextNodes(tables.eq(i).find(\"tr\"));\n        }\n    },\n\n    headers: function(placeholder) {\n        var titles = $(placeholder).find(\"p.MsoTitle\");\n\n        for (var i = 0; i < titles.length; i++) {\n            dom.changeTag(titles[i], \"h1\");\n        }\n    },\n\n    removeFormatting: function(placeholder) {\n        $(placeholder).find(\"*\").each(function() {\n            $(this).css({\n                fontSize: \"\",\n                fontFamily: \"\"\n            });\n\n            if (!this.getAttribute(\"style\") && !this.style.cssText) {\n                this.removeAttribute(\"style\");\n            }\n        });\n    },\n\n    clean: function(html) {\n        var that = this, placeholder;\n        var filters = this.options;\n\n        if (filters.none) {\n            html = Cleaner.fn.clean.call(that, html, this.junkReplacements);\n            html = that.stripEmptyAnchors(html);\n        } else {\n\n            html = filters.msConvertLists ? this.extractListLevels(html) : html;\n            html = Cleaner.fn.clean.call(that, html);\n            html = that.stripEmptyAnchors(html);\n\n            placeholder = dom.create(document, 'div', { innerHTML: html });\n            that.headers(placeholder);\n\n            if (filters.msConvertLists) {\n                that.lists(placeholder);\n            }\n            that.tables(placeholder);\n\n            if (filters.msAllFormatting) {\n                that.removeFormatting(placeholder);\n            }\n\n            html = placeholder.innerHTML.replace(/(<[^>]*)\\s+class=\"?[^\"\\s>]*\"?/ig, '$1');\n        }\n\n        return html;\n    }\n});\n\nvar WebkitFormatCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        this.replacements = [\n            /\\s+class=\"Apple-style-span[^\"]*\"/gi, '',\n            /<(div|p|h[1-6])\\s+style=\"[^\"]*\"/gi, '<$1',\n            /^<div>(.*)<\\/div>$/, '$1'\n        ];\n    },\n\n    applicable: function(html) {\n        return (/class=\"?Apple-style-span|style=\"[^\"]*-webkit-nbsp-mode/i).test(html);\n    }\n});\n\nvar DomCleaner = Cleaner.extend({\n    clean: function(html) {\n        var container = dom.create(document, 'div', { innerHTML: html });\n        container = this.cleanDom(container);\n        return container.innerHTML;\n    },\n\n    cleanDom: function(container) {\n        return container;\n    }\n});\n\nvar HtmlTagsCleaner = DomCleaner.extend({\n    cleanDom: function(container) {\n        var tags = this.collectTags();\n\n        $(container).find(tags).each(function() {\n            dom.unwrap(this);\n        });\n\n        return container;\n    },\n\n    collectTags: function() {\n        if (this.options.span) {\n            return \"span\";\n        }\n    },\n\n    applicable: function() {\n        return this.options.span;\n    }\n});\n\nvar HtmlAttrCleaner = DomCleaner.extend({\n    cleanDom: function(container) {\n        var attributes = this.collectAttr();\n        var nodes = $(container).find(\"[\" + attributes.join(\"],[\") + \"]\");\n        nodes.removeAttr(attributes.join(\" \"));\n\n        return container;\n    },\n\n    collectAttr: function() {\n        if (this.options.css) {\n            return [\"class\", \"style\"];\n        }\n\n        return [];\n    },\n\n    applicable: function() {\n        return this.options.css;\n    }\n});\n\nvar TextContainer = function() {\n    this.text = \"\";\n    this.add = function(text) {\n        this.text += text;\n    };\n};\n\nvar HtmlTextLines = Class.extend({\n    init: function(separators) {\n        this.separators = separators || {\n                text: \" \",\n                line: \"<br/>\"\n            };\n        this.lines = [];\n        this.inlineBlockText = [];\n        this.resetLine();\n    },\n\n    appendText: function(text) {\n        if (text.nodeType === 3) {\n            text = text.nodeValue;\n        }\n\n        this.textContainer.add(text);\n    },\n\n    appendInlineBlockText: function(text) {\n        this.inlineBlockText.push(text);\n    },\n\n    flashInlineBlockText: function() {\n        if (this.inlineBlockText.length) {\n            this.appendText(this.inlineBlockText.join(\" \"));\n            this.inlineBlockText = [];\n        }\n    },\n\n    endLine: function() {\n        this.flashInlineBlockText();\n        this.resetLine();\n    },\n\n    html: function() {\n        var separators = this.separators;\n        var result = \"\";\n        var lines = this.lines;\n\n        this.flashInlineBlockText();\n\n        for (var i = 0, il = lines.length, il1 = il - 1; i < il; i++) {\n            var line = lines[i];\n            for (var j = 0, jl = line.length, jl1 = jl - 1; j < jl; j++) {\n                var text = line[j].text;\n                result += text;\n                if (j !== jl1) {\n                    result += separators.text;\n                }\n            }\n            if (i !== il1) {\n                result += separators.line;\n            }\n        }\n\n        return result;\n    },\n\n    resetLine: function() {\n        this.textContainer = new TextContainer();\n        this.line = [];\n        this.line.push(this.textContainer);\n        this.lines.push(this.line);\n    }\n});\n\nvar DomEnumerator = Class.extend({\n    init: function(callback) {\n        this.callback = callback;\n    },\n    enumerate: function(node) {\n        if (!node) {\n            return;\n        }\n\n        var preventDown = this.callback(node);\n\n        var child = node.firstChild;\n        if (!preventDown && child) {\n            this.enumerate(child);\n        }\n\n        this.enumerate(node.nextSibling);\n    }\n});\n\nvar HtmlContentCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n        this.hasText = false; //unpleasant flag to prevent an empty line at the beginning of the generated content.\n        this.enumerator = new DomEnumerator(this.buildText.bind(this));\n    },\n\n    clean: function(html) {\n        var container = dom.create(document, 'div', { innerHTML: html });\n\n        return this.cleanDom(container);\n    },\n\n    cleanDom: function(container) {\n        this.separators = this.getDefaultSeparators();\n        this.htmlLines = new HtmlTextLines(this.separators);\n        this.enumerator.enumerate(container.firstChild);\n        this.hasText = false;\n\n        return this.htmlLines.html();\n    },\n\n    buildText: function(node) {\n        if (dom.isDataNode(node)) {\n            if (dom.isEmptyspace(node)) {\n                return;\n            }\n            this.htmlLines.appendText(node.nodeValue.replace('\\n', this.separators.line));\n            this.hasText = true;\n        } else if (dom.isBlock(node) && this.hasText) {\n            var action = this.actions[dom.name(node)] || this.actions.block;\n            return action(this, node);\n        } else if (dom.isBr(node)) {\n            this.htmlLines.appendText(this.separators.line);\n        }\n    },\n\n    applicable: function() {\n        var o = this.options;\n        return o.all || o.keepNewLines;\n    },\n\n    getDefaultSeparators: function() {\n        if (this.options.all) {\n            return { text: \" \", line: \" \" };\n        } else {\n            return { text: \" \", line: \"<br/>\" };\n        }\n    },\n\n    actions: {\n        ul: $.noop,\n        ol: $.noop,\n        table: $.noop,\n        thead: $.noop,\n        tbody: $.noop,\n        td: function(cleaner, node) {\n            var tdCleaner = new HtmlContentCleaner({ all: true });\n\n            var cellText = tdCleaner.cleanDom(node);\n            cleaner.htmlLines.appendInlineBlockText(cellText);\n\n            return true;\n        },\n\n        block: function(cleaner) {\n            cleaner.htmlLines.endLine();\n        }\n    }\n});\n\nvar CustomCleaner = Cleaner.extend({\n    clean: function(html) {\n        return this.options.custom(html);\n    },\n\n    applicable: function() {\n        return typeof(this.options.custom) === \"function\";\n    }\n});\n\nextend(editorNS, {\n    Clipboard: Clipboard,\n    Cleaner: Cleaner,\n    ScriptCleaner: ScriptCleaner,\n    TabCleaner: TabCleaner,\n    MSWordFormatCleaner: MSWordFormatCleaner,\n    WebkitFormatCleaner: WebkitFormatCleaner,\n    HtmlTagsCleaner: HtmlTagsCleaner,\n    HtmlAttrCleaner: HtmlAttrCleaner,\n    HtmlContentCleaner: HtmlContentCleaner,\n    HtmlTextLines: HtmlTextLines,\n    CustomCleaner: CustomCleaner\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    editorNS = kendo.ui.editor,\n    RangeUtils = editorNS.RangeUtils,\n    dom = editorNS.Dom,\n    RestorePoint = editorNS.RestorePoint,\n    Marker = editorNS.Marker,\n    browser = kendo.support.browser,\n    bomSpan = \"<span  class='k-br'>\\ufeff</span>\",\n    extend = $.extend;\nvar nodeTypes = dom.nodeTypes;\nvar PREVIOUS_SIBLING = \"previousSibling\";\n\nfunction selected(node, range) {\n    return range.startContainer === node && range.endContainer === node &&\n        range.startOffset === 0 && range.endOffset == node.childNodes.length;\n}\n\nfunction getSibling(node, direction, condition) {\n    var sibling = node ? node[direction] : null;\n\n    while (sibling && !condition(sibling)) {\n        sibling = sibling[direction];\n    }\n\n    return sibling;\n}\n\nvar tableCells = \"td,th,caption\";\nvar tableCellsWrappers = \"table,tbody,thead,tfoot,tr\";\nvar tableElements = tableCellsWrappers + \",\" + tableCells;\nvar inTable = function(range) { return !range.collapsed && $(range.commonAncestorContainer).is(tableCellsWrappers); };\n\nvar RemoveTableContent = Class.extend({\n    remove: function(range) {\n        var that = this;\n        var marker = new Marker();\n        marker.add(range, false);\n\n        var nodes = RangeUtils.getAll(range, function(node) { return $(node).is(tableElements); });\n        var doc = RangeUtils.documentFromRange(range);\n        var start = marker.start;\n        var end = marker.end;\n        var cellsTypes = tableCells.split(\",\");\n        var startCell = dom.parentOfType(start, cellsTypes);\n        var endCell = dom.parentOfType(end, cellsTypes);\n        that._removeContent(start, startCell, true);\n        that._removeContent(end, endCell, false);\n        $(nodes).each(function(i, node) {\n            node = $(node);\n            (node.is(tableCells) ? node : node.find(tableCells)).each(function(j, cell) {\n                cell.innerHTML = \"&#65279;\";\n            });\n        });\n        if (startCell && !start.previousSibling) {\n            dom.insertBefore(doc.createTextNode(\"\\ufeff\"), start);\n        }\n        if (endCell && !end.nextSibling) {\n            dom.insertAfter(doc.createTextNode(\"\\ufeff\"), end);\n        }\n        if (startCell) {\n            range.setStartBefore(start);\n        } else if (nodes[0]) {\n            startCell = $(nodes[0]);\n            startCell = startCell.is(tableCells) ? startCell : startCell.find(tableCells).first();\n            if (startCell.length) {\n                range.setStart(startCell.get(0), 0);\n            }\n        }\n\n        range.collapse(true);\n\n        dom.remove(start);\n        dom.remove(end);\n    },\n    _removeContent: function(start, top, forwards) {\n        if (top) {\n            var sibling = forwards ? \"nextSibling\" : \"previousSibling\",\n                next,\n                getNext = function(node) {\n                    while (node && !node[sibling]) {\n                        node = node.parentNode;\n                    }\n                    return node && $.contains(top, node) ? node[sibling] : null;\n                };\n            start = getNext(start);\n            while (start) {\n                next = getNext(start);\n                dom.remove(start);\n                start = next;\n            }\n        }\n    }\n});\n\nvar TypingHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n    },\n\n    keydown: function(e) {\n        var that = this,\n            editor = that.editor,\n            keyboard = editor.keyboard,\n            isTypingKey = keyboard.isTypingKey(e),\n            evt = extend($.Event(), e);\n\n        that.editor.trigger(\"keydown\", evt);\n\n        if (evt.isDefaultPrevented()) {\n            e.preventDefault();\n            return true;\n        }\n\n        if (!evt.isDefaultPrevented() && isTypingKey && !keyboard.isTypingInProgress()) {\n            var range = editor.getRange();\n            var body = editor.body;\n            that.startRestorePoint = new RestorePoint(range, body);\n\n            if (inTable(range)) {\n                var removeTableContent = new RemoveTableContent(editor);\n                removeTableContent.remove(range);\n                editor.selectRange(range);\n            }\n\n            if (browser.webkit && !range.collapsed && selected(body, range)) {\n                body.innerHTML = \"\";\n            }\n\n            if (editor.immutables && editorNS.Immutables.immutablesContext(range)) {\n                var backspaceHandler = new editorNS.BackspaceHandler(editor);\n                backspaceHandler.deleteSelection(range);\n            }\n\n            keyboard.startTyping(function() {\n                that._removeBomSpan();\n                that.endRestorePoint = editorNS._finishUpdate(editor, that.startRestorePoint);\n            });\n\n            return true;\n        }\n\n        return false;\n    },\n\n    keyup: function(e) {\n        var keyboard = this.editor.keyboard;\n\n        this.editor.trigger(\"keyup\", e);\n\n        if (keyboard.isTypingInProgress()) {\n            keyboard.endTyping();\n            return true;\n        }\n\n        return false;\n    },\n\n    _removeBomSpan: function() {\n        var node = this.editor.getRange().commonAncestorContainer;\n\n        if (!dom.emptyNode(node)) {\n            if (node.nodeType === 3) {\n                node = node.parentNode;\n            }\n\n            if (dom.insignificant(node)) {\n                // typing in an insignificant node\n                // make it significant\n                node.textContent = dom.stripBom(node.textContent);\n                dom.unwrap(node);\n            }\n        }\n    }\n});\n\nvar BackspaceHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n    },\n    _addCaret: function(container) {\n        var caret = dom.create(this.editor.document, \"a\");\n\n        // Only if not Chrome: Make sure to include cared in the formatted inline node\n        if (!kendo.support.browser.chrome && container.firstChild &&\n            container.firstChild.nodeType === nodeTypes.ELEMENT_NODE) {\n\n            container = container.firstChild;\n        }\n\n        dom.insertAt(container, caret, 0);\n        dom.stripBomNode(caret.previousSibling);\n        dom.stripBomNode(caret.nextSibling);\n        return caret;\n    },\n    _restoreCaret: function(caret) {\n        var range = this.editor.createRange();\n\n        if (!caret.nextSibling && dom.isDataNode(caret.previousSibling)) {\n            range.setStart(caret.previousSibling, caret.previousSibling.length);\n        } else {\n            range.setStartAfter(caret);\n        }\n\n        range.collapse(true);\n        this.editor.selectRange(range);\n        dom.remove(caret);\n    },\n    _handleDelete: function(range) {\n        var node = range.endContainer;\n        var block = dom.closestEditableOfType(node, dom.blockElements);\n\n        if (block && editorNS.RangeUtils.isEndOf(range, block)) {\n            // join with next sibling\n            var next = dom.next(block);\n            if (!next || dom.name(next) != \"p\") {\n                return false;\n            }\n\n            var caretPlaceholder = dom.significantChildNodes(next)[0];\n            caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder)) ? caretPlaceholder : next;\n            var caret = this._addCaret(caretPlaceholder);\n\n            this._merge(block, next);\n\n            this._restoreCaret(caret);\n\n            return true;\n        }\n\n        return false;\n    },\n    _cleanBomBefore: function(range) {\n        var offset = range.startOffset;\n        var node = range.startContainer;\n        var text = node.nodeValue;\n        var count = 0;\n        while (offset - count >= 0 && text[offset - count - 1] == \"\\ufeff\") {\n            count++;\n        }\n\n        if (count > 0) {\n            node.deleteData(offset - count, count);\n\n            range.setStart(node, Math.max(0, offset - count));\n            range.collapse(true);\n\n            this.editor.selectRange(range);\n        }\n    },\n    _handleBackspace: function(range) {\n        var node = range.startContainer;\n        var li = dom.closestEditableOfType(node, ['li']);\n        var block = dom.closestEditableOfType(node, 'p,h1,h2,h3,h4,h5,h6'.split(','));\n        var editor = this.editor;\n        var previousSibling;\n\n        if (dom.isDataNode(node)) {\n            if (range.collapsed && /^\\s[\\ufeff]+$/.test(node.nodeValue)) {\n                range.setStart(node, 0);\n                range.setEnd(node, node.length);\n                editor.selectRange(range);\n                return false;\n            }\n            this._cleanBomBefore(range);\n        }\n\n        previousSibling = getSibling(block, PREVIOUS_SIBLING, function(sibling) {\n            return !dom.htmlIndentSpace(sibling);\n        });\n\n        //deleting the first list item with empty content in IE results in invalid range\n        if (range.collapsed && range.startOffset !== range.endOffset && range.startOffset < 0) {\n            range.startOffset = 0;\n            range.endOffset = 0;\n            editor.selectRange(range);\n        }\n\n        var startAtLi = li && editorNS.RangeUtils.isStartOf(range, li);\n        var liIndex = li && $(li).index();\n        var startAtNonFirstLi = startAtLi && liIndex > 0;\n        if (startAtNonFirstLi) {\n            block = li;\n            previousSibling = dom.prev(li);\n        }\n\n        if (block && previousSibling && dom.is(previousSibling, 'table') && editorNS.RangeUtils.isStartOf(range, block)) {\n            if (block.innerText === '') {\n                block.innerHTML = '\\ufeff';\n            }\n            return true;\n        }\n\n        // outdent\n        if (editorNS.RangeUtils.isStartOf(range, block) && parseInt(block.style.marginLeft,10) > 0) {\n            editor.exec(\"outdent\");\n            return true;\n        }\n\n        // unwrap block\n        if ((block && previousSibling && editorNS.RangeUtils.isStartOf(range, block)) || startAtNonFirstLi) {\n            var caretPlaceholder = dom.significantChildNodes(block)[0];\n            caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder) && !dom.isImg(caretPlaceholder)) ? caretPlaceholder : block;\n\n            var caret = this._addCaret(caretPlaceholder);\n            this._merge(previousSibling, block);\n            this._restoreCaret(caret);\n\n            return true;\n        }\n\n        // unwrap li element\n        if (startAtLi && liIndex === 0) {\n            var child = li.firstChild;\n            if (!child) {\n                li.innerHTML = editorNS.emptyElementContent;\n                child = li.firstChild;\n            }\n\n            var formatter = new editorNS.ListFormatter(dom.name(li.parentNode), \"p\");\n            range.selectNodeContents(li);\n            formatter.toggle(range);\n\n            if (dom.insignificant(child)) {\n                range.setStartBefore(child);\n            } else {\n                range.setStart(child, 0);\n            }\n\n            editor.selectRange(range);\n\n            return true;\n        }\n\n        var rangeStartNode = node.childNodes[range.startOffset - 1];\n        var linkRange = range;\n        var anchor = rangeStartNode && dom.closestEditableOfType(rangeStartNode, ['a']);\n        var previousNode = getSibling(rangeStartNode || node, PREVIOUS_SIBLING, function(sibling) {\n            return !dom.isDataNode(sibling) || (!dom.isBom(sibling) && sibling.length > 0);\n        });\n        if (anchor || ((range.startOffset === 0 || rangeStartNode) && dom.is(previousNode, \"a\"))) {\n            anchor = anchor || previousNode;\n            linkRange = editor.createRange();\n            linkRange.setStart(anchor, anchor.childNodes.length);\n            linkRange.collapse(true);\n        }\n\n        anchor = anchor || dom.closestEditableOfType(rangeStartNode || linkRange.startContainer, ['a']);\n        var isEndOfLink = anchor && editorNS.RangeUtils.isEndOf(linkRange, anchor);\n        if (isEndOfLink) {\n            var command = new editorNS.UnlinkCommand({ range: linkRange, body: editor.body, immutables: !!editor.immutables });\n            editor.execCommand(command);\n            editor._selectionChange();\n        }\n        return false;\n    },\n    _handleSelection: function(range) {\n        var ancestor = range.commonAncestorContainer;\n        var table = dom.closest(ancestor, \"table\");\n        var emptyParagraphContent = editorNS.emptyElementContent;\n        var editor = this.editor;\n        var parentElementOrNode;\n\n        if (inTable(range)) {\n            var removeTableContent = new RemoveTableContent(editor);\n            removeTableContent.remove(range);\n            editor.selectRange(range);\n            return true;\n        }\n\n        var marker = new Marker();\n        marker.add(range, false);\n\n        if (range.commonAncestorContainer === editor.body) {\n            this._surroundFullyContent(marker, range);\n        }\n\n        if (editor.immutables) {\n            this._handleImmutables(marker);\n        }\n\n        this._surroundFullySelectedAnchor(marker, range);\n\n        range.setStartAfter(marker.start);\n        range.setEndBefore(marker.end);\n\n        var start = range.startContainer;\n        var end = range.endContainer;\n\n        range.deleteContents();\n\n        if (end.tagName.toLocaleLowerCase() === \"li\" && dom.emptyNode(end)) {\n            range.selectNode(end);\n            range.deleteContents();\n        }\n\n        if (table && $(table).text() === \"\") {\n            range.selectNode(table);\n            range.deleteContents();\n        }\n\n        ancestor = range.commonAncestorContainer;\n\n        if (dom.name(ancestor) === \"p\" && ancestor.innerHTML === \"\") {\n            ancestor.innerHTML = emptyParagraphContent;\n            range.setStart(ancestor, 0);\n        }\n\n        this._join(start, end);\n\n        dom.insertAfter(editor.document.createTextNode(\"\\ufeff\"), marker.start);\n        marker.remove(range);\n\n        start = range.startContainer;\n        if (dom.name(start) == \"tr\") {\n            start = start.childNodes[Math.max(0, range.startOffset - 1)];\n            range.setStart(start, dom.getNodeLength(start));\n        }\n\n        range.collapse(true);\n\n        editor.selectRange(range);\n\n        parentElementOrNode = start.parentElement || start.parentNode;\n\n        if (dom.isDataNode(start) && !dom.emptyNode(parentElementOrNode)) {\n            this._cleanBomBefore(range);\n        }\n\n        return true;\n    },\n    _handleImmutables: function(marker) {\n        var immutableParent = editorNS.Immutables.immutableParent;\n        var startImmutable = immutableParent(marker.start);\n        var endImmutable = immutableParent(marker.start);\n        if (startImmutable) {\n            dom.insertBefore(marker.start, startImmutable);\n        }\n        if (endImmutable) {\n            dom.insertAfter(marker.end, endImmutable);\n        }\n        if (startImmutable) {\n            dom.remove(startImmutable);\n        }\n        if (endImmutable && endImmutable.parentNode) {\n            dom.remove(endImmutable);\n        }\n    },\n    _surroundFullyContent: function(marker, range) {\n        var children = range.commonAncestorContainer.children,\n            startParent = children[0],\n            endParent = children[children.length - 1];\n\n        this._moveMarker(marker, range, startParent, endParent);\n    },\n    _surroundFullySelectedAnchor: function(marker, range) {\n        var start = marker.start,\n            startParent = $(start).closest(\"a\").get(0),\n            end = marker.end,\n            endParent = $(end).closest(\"a\").get(0);\n\n        this._moveMarker(marker, range, startParent, endParent);\n    },\n    _moveMarker: function(marker, range, startParent, endParent) {\n        var start = marker.start,\n            end = marker.end;\n\n        if (startParent && RangeUtils.isStartOf(range, startParent)) {\n            dom.insertBefore(start, startParent);\n        }\n\n        if (endParent && RangeUtils.isEndOf(range, endParent)) {\n            dom.insertAfter(end, endParent);\n        }\n    },\n    _root: function(node) {\n        while (node && dom.name(node) != \"body\" && node.parentNode && dom.name(node.parentNode) != \"body\") {\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n    _join: function(start, end) {\n        start = this._root(start);\n        end = this._root(end);\n\n        if (start != end && dom.is(end, \"p\")) {\n            this._merge(start, end);\n        }\n    },\n    _merge: function(dest, src) {\n        dom.removeTrailingBreak(dest);\n\n        while (dest && src.firstChild) {\n            if (dest.nodeType == 1) {\n                dest = dom.list(dest) ? dest.children[dest.children.length - 1] : dest;\n\n                if (dest) {\n                    dest.appendChild(src.firstChild);\n                }\n            } else if (dest.nodeType === nodeTypes.TEXT_NODE) {\n                this._mergeWithTextNode(dest, src.firstChild);\n            } else {\n                dest.parentNode.appendChild(src.firstChild);\n            }\n        }\n\n        dom.remove(src);\n    },\n\n    _mergeWithTextNode: function(textNode, appendedNode) {\n        if (textNode && textNode.nodeType === nodeTypes.TEXT_NODE) {\n            if (textNode.nextSibling && this._isCaret(textNode.nextSibling)) {\n                dom.insertAfter(appendedNode, textNode.nextSibling);\n            }\n            else {\n                dom.insertAfter(appendedNode, textNode);\n            }\n        }\n    },\n\n    _isCaret: function(element) {\n        return $(element).is(\"a\");\n    },\n\n    keydown: function(e) {\n        var method, startRestorePoint;\n        var editor = this.editor;\n        var range = editor.getRange();\n        var keyCode = e.keyCode;\n        var keys = kendo.keys;\n        var backspace = keyCode === keys.BACKSPACE;\n        var del = keyCode == keys.DELETE;\n\n        if (editor.immutables && editor.immutables.keydown(e, range)) {\n            return;\n        }\n\n        if ((backspace || del) && !range.collapsed) {\n            method = \"_handleSelection\";\n        } else if (backspace) {\n            method = \"_handleBackspace\";\n        } else if (del) {\n            method = \"_handleDelete\";\n        }\n\n        if (!method) {\n            return;\n        }\n\n        startRestorePoint = new RestorePoint(range, editor.body);\n\n        if (this[method](range)) {\n            e.preventDefault();\n\n            editorNS._finishUpdate(editor, startRestorePoint);\n        }\n    },\n    deleteSelection: function(range) {\n        this._handleSelection(range);\n    },\n    keyup: $.noop\n});\n\nvar SystemHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n        this.systemCommandIsInProgress = false;\n    },\n\n    createUndoCommand: function() {\n        this.startRestorePoint = this.endRestorePoint = editorNS._finishUpdate(this.editor, this.startRestorePoint);\n    },\n\n    changed: function() {\n        if (this.startRestorePoint) {\n            return this.startRestorePoint.html != this.editor.body.innerHTML;\n        }\n\n        return false;\n    },\n\n    keydown: function(e) {\n        var that = this,\n            editor = that.editor,\n            keyboard = editor.keyboard;\n\n        if (keyboard.isModifierKey(e)) {\n\n            if (keyboard.isTypingInProgress()) {\n                keyboard.endTyping(true);\n            }\n\n            that.startRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n            return true;\n        }\n\n        if (keyboard.isSystem(e)) {\n            that.systemCommandIsInProgress = true;\n\n            if (that.changed()) {\n                that.systemCommandIsInProgress = false;\n                that.createUndoCommand();\n            }\n\n            return true;\n        }\n\n        return false;\n    },\n\n    keyup: function() {\n        var that = this;\n\n        if (that.systemCommandIsInProgress && that.changed()) {\n            that.systemCommandIsInProgress = false;\n            that.createUndoCommand();\n            return true;\n        }\n\n        return false;\n    }\n});\n\nvar SelectAllHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n    },\n\n    keydown: function(e) {\n        if (!browser.webkit || e.isDefaultPrevented() ||\n            !(e.ctrlKey && e.keyCode == 65 && !e.altKey && !e.shiftKey)) {\n            return;\n        }\n        if (this.editor.options.immutables) {\n            this._toSelectableImmutables();\n        }\n        this._selectEditorBody();\n    },\n\n    _selectEditorBody: function() {\n        var editor = this.editor;\n        var range = editor.getRange();\n        range.selectNodeContents(editor.body);\n\n        setTimeout(function() {\n            editor.selectRange(range);\n        });\n    },\n\n    _toSelectableImmutables: function() {\n        var editor = this.editor,\n            body = editor.body,\n            immutable = editorNS.Immutables.immutable,\n            emptyTextNode = dom.emptyTextNode,\n            first = body.firstChild,\n            last = body.lastChild;\n\n        while (emptyTextNode(first)) {\n            first = first.nextSibling;\n        }\n\n        while (emptyTextNode(last)) {\n            last = last.previousSibling;\n        }\n\n        if (first && immutable(first)) {\n            $(bomSpan).prependTo(body);\n        }\n\n        if (last && immutable(last)) {\n            $(bomSpan).appendTo(body);\n        }\n    },\n\n    keyup: $.noop\n});\n\nvar Keyboard = Class.extend({\n    init: function(handlers) {\n        this.handlers = handlers;\n        this.typingInProgress = false;\n    },\n\n    isCharacter: function(keyCode) {\n        return (keyCode >= 48 && keyCode <= 90) || (keyCode >= 96 && keyCode <= 111) ||\n               (keyCode >= 186 && keyCode <= 192) || (keyCode >= 219 && keyCode <= 222) ||\n               keyCode == 229;\n    },\n\n    toolFromShortcut: function(tools, e) {\n        var key = String.fromCharCode(e.keyCode),\n            toolName,\n            toolOptions,\n            modifier = this._getShortcutModifier(e, navigator.platform);\n\n        for (toolName in tools) {\n            toolOptions = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n            if ((toolOptions.key == key || toolOptions.key == e.keyCode) &&\n                toolOptions.ctrl == modifier &&\n                toolOptions.alt == e.altKey &&\n                toolOptions.shift == e.shiftKey) {\n                return toolName;\n            }\n        }\n    },\n\n    _getShortcutModifier: function(e, platform) {\n        var mac = platform.toUpperCase().indexOf('MAC') >= 0;\n        return mac ? e.metaKey : e.ctrlKey;\n    },\n\n    toolsFromShortcut: function(tools, e) {\n        var key = String.fromCharCode(e.keyCode),\n            toolName,\n            o,\n            matchesKey,\n            found = [];\n        var matchKey = function(toolKey) { return toolKey == key || toolKey == e.keyCode || toolKey == e.charCode; };\n\n        for (toolName in tools) {\n            o = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n            matchesKey = Array.isArray(o.key) ? $.grep(o.key, matchKey).length > 0 : matchKey(o.key);\n            if (matchesKey &&\n                o.ctrl == e.ctrlKey &&\n                o.alt == e.altKey &&\n                o.shift == e.shiftKey) {\n                found.push(tools[toolName]);\n            }\n        }\n\n        return found;\n    },\n\n    isTypingKey: function(e) {\n        var keyCode = e.keyCode;\n        return (this.isCharacter(keyCode) && !e.ctrlKey && !e.altKey) ||\n               keyCode == 32 || keyCode == 13 || keyCode == 8 ||\n               (keyCode == 46 && !e.shiftKey && !e.ctrlKey && !e.altKey);\n    },\n\n    isModifierKey: function(e) {\n        var keyCode = e.keyCode;\n        return (keyCode == 17 && !e.shiftKey && !e.altKey) ||\n               (keyCode == 16 && !e.ctrlKey && !e.altKey) ||\n               (keyCode == 18 && !e.ctrlKey && !e.shiftKey);\n    },\n\n    isSystem: function(e) {\n        return e.keyCode == 46 && e.ctrlKey && !e.altKey && !e.shiftKey;\n    },\n\n    startTyping: function(callback) {\n        this.onEndTyping = callback;\n        this.typingInProgress = true;\n    },\n\n    stopTyping: function() {\n        if (this.typingInProgress && this.onEndTyping) {\n            this.onEndTyping();\n        }\n        this.typingInProgress = false;\n    },\n\n    endTyping: function(force) {\n        var that = this;\n        that.clearTimeout();\n        if (force) {\n            that.stopTyping();\n        } else {\n            that.timeout = window.setTimeout(that.stopTyping.bind(that), 1000);\n        }\n    },\n\n    isTypingInProgress: function() {\n        return this.typingInProgress;\n    },\n\n    clearTimeout: function() {\n        window.clearTimeout(this.timeout);\n    },\n\n    notify: function(e, what) {\n        var i, handlers = this.handlers;\n\n        for (i = 0; i < handlers.length; i++) {\n            if (handlers[i][what](e)) {\n                break;\n            }\n        }\n    },\n\n    keydown: function(e) {\n        this.notify(e, 'keydown');\n    },\n\n    keyup: function(e) {\n        this.notify(e, 'keyup');\n    }\n});\n\nextend(editorNS, {\n    TypingHandler: TypingHandler,\n    SystemHandler: SystemHandler,\n    BackspaceHandler: BackspaceHandler,\n    SelectAllHandler: SelectAllHandler,\n    Keyboard: Keyboard\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        editorNS = kendo.ui.editor,\n        Command = editorNS.Command,\n        EditorUtils = editorNS.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        Tool = editorNS.Tool,\n        extend = $.extend;\n\nvar ExportPdfCommand = Command.extend({\n    init: function(options) {\n        this.async = true;\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var that = this;\n        var range = that.lockRange(true);\n        var editor = that.editor;\n\n        editor._destroyResizings();\n\n        editor.saveAsPDF().then(function() {\n            that.releaseRange(range);\n            editor._initializeColumnResizing();\n            editor._initializeRowResizing();\n            editor._initializeElementResizing();\n        });\n    }\n});\n\nextend(editorNS, {\n    ExportPdfCommand: ExportPdfCommand\n});\n\nregisterTool(\"pdf\", new Tool({ command: ExportPdfCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        editorNS = kendo.ui.editor,\n        Command = editorNS.Command,\n        EditorUtils = editorNS.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        Tool = editorNS.Tool,\n        extend = $.extend;\n\nvar PrintCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n\n        this.managesUndoRedo = true;\n    },\n\n    exec: function() {\n        var editor = this.editor;\n\n        if (kendo.support.browser.msie) {\n            editor.document.execCommand(\"print\", false, null);\n        } else if (editor.window.print) {\n            editor.window.print();\n        }\n    }\n});\n\nextend(editorNS, {\n    PrintCommand: PrintCommand\n});\n\nregisterTool(\"print\", new Tool({ command: PrintCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Editor = kendo.ui.editor,\n    Tool = Editor.Tool,\n    Command = Editor.Command,\n    EditorUtils = Editor.EditorUtils,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    registerTool = EditorUtils.registerTool;\n\nvar CopyFormatCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var range = this.lockRange(true);\n        this.inlineStyles = [];\n        this.blockStyles = [];\n        this.collectStyles(range);\n        this.editor.inlineStyles = this.inlineStyles;\n        this.editor.blockStyles = this.blockStyles;\n        this.releaseRange(range);\n    },\n\n    collectStyles: function(range) {\n        var rangeNodes = RangeUtils.nodes(range);\n        var node;\n\n        if (rangeNodes.length === 1) {\n            node = rangeNodes[0].parentNode;\n        } else {\n            node = range.startContainer;\n        }\n\n        while (node && !dom.is(node, \"body\") && node.getAttribute(\"data-role\") !== \"editor\") {\n            if (dom.isBlock(node)) {\n                this.populateStyles(node, \"blockStyles\");\n                if (dom.is(node, \"li\")) {\n                    node = node.parentNode;\n                } else {\n                    node = null;\n                }\n            } else {\n                this.populateStyles(node, \"inlineStyles\");\n                node = node.parentNode;\n            }\n        }\n    },\n\n    populateStyles: function(node, destination) {\n        var styles = node.style;\n        var attributes = node.attributes;\n        var nodeStyles = {\n            tags: [ node.tagName ],\n            attr: {\n                style: {}\n            }\n        };\n        var styleValue, styleKey, attributeKey, attributeValue, i;\n\n        for (i = 0; styles && i < styles.length; i++) {\n            styleKey = styles[i];\n            styleValue = styles[styleKey];\n            nodeStyles.attr.style[styleKey] = styleValue;\n        }\n\n        for (i = 0; attributes && i < attributes.length; i++) {\n            attributeKey = attributes[i].nodeName;\n            attributeValue = attributes[i].nodeValue;\n            if (attributeKey === \"style\") {\n                continue;\n            } else if (attributeKey === \"class\") {\n                nodeStyles.attr.className = attributeValue;\n            } else {\n                nodeStyles.attr[attributeKey] = attributeValue;\n            }\n        }\n\n        this[destination].push(nodeStyles);\n    }\n});\n\nvar ApplyFormatCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var range = this.lockRange(true);\n        var markers = RangeUtils.getMarkers(range);\n        var editor = this.editor;\n        var inlineStyles = editor.inlineStyles;\n        var blockStyles = editor.blockStyles;\n        var nodes;\n\n        if ((!inlineStyles || inlineStyles.length === 0) && (!blockStyles || blockStyles.length === 0)) {\n            return;\n        }\n\n        if (markers.length === 3) {\n            this.marker.removeCaret(range);\n            this.marker.caret = null;\n        }\n\n        this.removeEmptyElementsFromRange(range);\n        nodes = RangeUtils.nodes(range);\n        this.cleanInlineParents(nodes);\n        dom.normalize(range.commonAncestorContainer);\n\n        if (markers.length === 2) {\n            range.setStartAfter(markers[0]);\n            range.setEndBefore(markers[1]);\n        } else {\n            range.setStartBefore(nodes[0]);\n            range.setEndAfter(nodes[0]);\n        }\n\n        nodes = RangeUtils.nodes(range);\n\n        if (nodes && blockStyles && blockStyles.length) {\n            this.applyBlockStyles(nodes, blockStyles);\n        }\n\n        if (nodes && inlineStyles && inlineStyles.length) {\n            this.applyInlineStyles(nodes, inlineStyles);\n        }\n\n        this.releaseRange(range);\n    },\n\n    removeEmptyElementsFromRange: function(range) {\n        var isEmptyInline = function(node) {\n            return dom.isInline(node) && !node.firstChild && !dom.isMarker(node);\n        };\n        var emptyElements, i;\n\n        emptyElements = RangeUtils.getAll(range, isEmptyInline);\n\n        if (emptyElements && emptyElements.length > 0) {\n            for (i = 0; i < emptyElements.length; i++) {\n                emptyElements[i].parentNode.removeChild(emptyElements[i]);\n            }\n        }\n    },\n\n    cleanInlineParents: function(nodes) {\n        var i, node, parent, children, j, child, newNode;\n\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            parent = node.parentNode;\n\n            if (this.immutableParent(node)) {\n                continue;\n            }\n\n            while (parent && dom.isInline(parent)) {\n                children = parent.childNodes;\n\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n\n                    if (!dom.isMarker(child) && child !== node) {\n                        newNode = parent.cloneNode(true);\n                        newNode.innerHTML = \"\";\n                        dom.wrap(child, newNode);\n                    }\n                }\n\n                dom.unwrap(parent);\n                parent = node.parentNode;\n            }\n        }\n    },\n\n    applyBlockStyles: function(nodes, blockStyles) {\n        var formatTag = blockStyles[0].tags[0];\n        var attr = blockStyles[0].attr;\n        var document = this.editor.document;\n        var i, len, node, wrapper, blockParent, outerWrapper;\n        var previousNodes, nextNodes, previous, next, prevWrapper, nextWrapper, child, j, listItems;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            node = nodes[i];\n\n            if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                continue;\n            }\n\n            blockParent = dom.blockParentOrBody(node);\n\n            if (blockParent.tagName !== \"BODY\" && blockParent.tagName !== formatTag) {\n                if (blockParent.tagName !== \"LI\" && blockParent.tagName !== \"TD\" && blockParent.tagName !== \"TH\") {\n                    previousNodes = [];\n                    nextNodes = [];\n                    previous = node.previousSibling;\n                    next = node.nextSibling;\n\n                    while (previous) {\n                        if (!dom.isMarker(previous)) {\n                            previousNodes.push(previous);\n                        }\n\n                        previous = previous.previousSibling;\n                    }\n\n                    if (previousNodes.length) {\n                        prevWrapper = blockParent.cloneNode(true);\n                        prevWrapper.innerHTML = \"\";\n                        dom.insertBefore(prevWrapper, previousNodes[0]);\n\n                        for (j = 0; j < previousNodes.length; j++) {\n                            child = previousNodes[j];\n                            dom.insertAt(prevWrapper, child, 0);\n                        }\n                    }\n\n                    while (next) {\n                        if (!dom.isMarker(next)) {\n                            nextNodes.push(next);\n                        }\n\n                        next = next.nextSibling;\n                    }\n\n                    if (nextNodes.length) {\n                        nextWrapper = blockParent.cloneNode(true);\n                        nextWrapper.innerHTML = \"\";\n                        dom.insertBefore(nextWrapper, nextNodes[0]);\n\n                        for (j = 0; j < nextNodes.length; j++) {\n                            child = nextNodes[j];\n                            nextWrapper.appendChild(child);\n                        }\n                    }\n\n                    dom.unwrap(blockParent);\n                }\n\n                wrapper = dom.create(document, formatTag, attr);\n                dom.wrap(node, wrapper);\n            } else if (blockParent.tagName === formatTag) {\n                dom.attr(blockParent, attr);\n            }\n        }\n\n        if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\" && formatTag === \"LI\") {\n            listItems = [];\n\n            while (dom.is(wrapper, \"li\")) {\n                listItems.push(wrapper);\n                wrapper = dom.prev(wrapper);\n            }\n\n            outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n            dom.insertBefore(outerWrapper, listItems[listItems.length - 1]);\n            outerWrapper.appendChild(listItems[0]);\n\n            for (i = 1, len = listItems.length; i < len; i++) {\n                dom.insertBefore(listItems[i], outerWrapper.firstChild);\n            }\n        } else if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\") {\n            outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n            dom.wrap(wrapper, outerWrapper);\n        }\n    },\n\n    applyInlineStyles: function(nodes, inlineStyles) {\n        var document = this.editor.document;\n        var currentStyle, createdNode, topNode, i, newNode, node;\n\n        for (i = 0; i < inlineStyles.length; i++) {\n            currentStyle = inlineStyles[i];\n            createdNode = dom.create(document, currentStyle.tags[0], currentStyle.attr);\n\n            if (topNode) {\n                createdNode.appendChild(topNode);\n            }\n\n            topNode = createdNode;\n        }\n\n        if (topNode) {\n            for (i = 0; i < nodes.length; i++) {\n                node = nodes[i];\n                if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                    continue;\n                }\n                newNode = topNode.cloneNode(true);\n                dom.insertBefore(newNode, node);\n\n                while (newNode.children && newNode.children.length) {\n                    newNode = newNode.children[0];\n                }\n\n                newNode.appendChild(node);\n            }\n        }\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    immutableParent: function(node) {\n        return this.immutables() && Editor.Immutables.immutableParent(node);\n    }\n});\n\nvar CopyFormatTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n    },\n\n    command: function(commandArguments) {\n        return new CopyFormatCommand(commandArguments);\n    }\n});\n\nvar ApplyFormatTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n    },\n\n    command: function(commandArguments) {\n        return new ApplyFormatCommand(commandArguments);\n    }\n});\n\n$.extend(Editor, {\n    CopyFormatCommand: CopyFormatCommand,\n    ApplyFormatCommand: ApplyFormatCommand,\n    CopyFormatTool: CopyFormatTool,\n    ApplyFormatTool: ApplyFormatTool\n});\n\nregisterTool(\"copyFormat\", new CopyFormatTool({ }));\nregisterTool(\"applyFormat\", new ApplyFormatTool({ }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    const kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        formats = kendo.ui.Editor.fn.options.formats,\n        dom = Editor.Dom,\n        Tool = Editor.Tool,\n        DelayedExecutionTool = Editor.DelayedExecutionTool,\n        BlockFormatter = Editor.BlockFormatter,\n        FormatCommand = Editor.FormatCommand,\n        GreedyInlineFormatFinder = Editor.GreedyInlineFormatFinder,\n        EditorUtils = Editor.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        registerFormat = EditorUtils.registerFormat,\n        RangeUtils = Editor.RangeUtils;\n\n    const LineHeightCommand = FormatCommand.extend({\n        exec: function() {\n            const cmd = this,\n                range = cmd.lockRange(true),\n                nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n            cmd.formatter.format[0].attr.style.lineHeight = cmd.options.value.lineHeight;\n            cmd.formatter.apply(nodes);\n            cmd.releaseRange(range);\n        }\n    });\n\n    const LineHeightFormatTool = DelayedExecutionTool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n\n            this.type = \"kendoComboBox\";\n            this.format = [{ tags: [\"p\", \"lineHeight\"] }];\n            this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr, options.defaultValue);\n        },\n\n        command: function(commandArguments) {\n            var that = this;\n\n            return new LineHeightCommand(extend(commandArguments, {\n                formatter: function() {\n                    return new BlockFormatter(that.options.format);\n                }\n            }));\n        },\n\n        initialize: function(ui, editor) {\n            var tool = this,\n                component = ui.getKendoComboBox();\n\n            tool.editor = editor;\n\n            component.bind(\"change\", this.changeHandler.bind(this));\n        },\n\n        changeHandler: function(e) {\n            this._exec(e.sender.value());\n        },\n\n        _exec: function(value) {\n            if (value) {\n                Tool.exec(this.editor, this.options.name, { lineHeight: value });\n            }\n        },\n    });\n\n    $.extend(Editor, {\n        LineHeightCommand: LineHeightCommand,\n        LineHeightFormatTool: LineHeightFormatTool\n    });\n\n    registerFormat(\"lineHeight\", [\n        { tags: dom.blockElements, attr: { style: { lineHeight: \"normal\" } } }\n    ]);\n\n    registerTool(\"lineHeight\", new LineHeightFormatTool({\n        cssAttr: \"line-height\",\n        format: formats.lineHeight,\n        defaultValue: 1.15,\n        ui: {\n            type: \"component\",\n            component: \"ComboBox\",\n            componentOptions: {\n                value: 1.15,\n                dataTextField: \"text\",\n                dataValueField: \"value\",\n                prefixOptions: {\n                    icon: \"paragraphHeight\"\n                },\n                autoSize: true,\n                dataSource: [\n                    { text: \"1\", value: \"1\" },\n                    { text: \"1.15\", value: \"1.15\" },\n                    { text: \"1.5\", value: \"1.5\" },\n                    { text: \"2\", value: \"2\" },\n                    { text: \"2.5\", value: \"2.5\" },\n                ]\n            }\n        }\n    }));\n})(window.kendo.jQuery);\n\n(function($) {\n\n    const kendo = window.kendo,\n        Editor = kendo.ui.editor,\n        Tool = Editor.Tool,\n        Command = Editor.Command,\n        EditorUtils = Editor.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        DOM = Editor.Dom,\n        SPACE_UNICODE = \"\\u00B7\",\n        NEW_LINE_UNICODE = \"\\u21B5\";\n\n    const createMark = function(range, document, character, scrollTop, index) {\n        const clonedRange = range.cloneRange(),\n              container = clonedRange.startContainer;\n\n        let domRect, x, y, textNode;\n\n        if (index !== undefined) {\n            clonedRange.setStart(container, index);\n            clonedRange.setEnd(container, index + 1);\n        }\n\n        domRect = clonedRange.getBoundingClientRect();\n\n        if (character === SPACE_UNICODE) {\n            x = domRect.x - domRect.width / 4;\n            y = domRect.y + domRect.height + scrollTop;\n        } else if (character === NEW_LINE_UNICODE) {\n            x = domRect.x;\n            y = domRect.y + domRect.height + scrollTop;\n        }\n\n        textNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        textNode.setAttributeNS(null, \"x\", x);\n        textNode.setAttributeNS(null, \"y\", y);\n        textNode.setAttributeNS(null, \"fill\", \"#6098f2\");\n        textNode.setAttributeNS(null, \"font-size\", `${Math.ceil(domRect.height + domRect.width)}px`);\n        textNode.textContent = character;\n\n        return textNode;\n    };\n\n    const appendSvgMarks = function() {\n        const that = this,\n            range = that.getRange().cloneRange(),\n            svgNodes = [],\n            overlay = that._formattingMarksOverlay[0],\n            fragment = that.document.createDocumentFragment(),\n            document = that.document,\n            scrollTop = document.documentElement.scrollTop;\n\n        range.setStart(that.body.firstChild, 0);\n        range.setEnd(that.body.lastChild, 0);\n\n        const nodes = DOM.getTextNodes(that.body).concat($(that.body).find(\"br\").toArray());\n\n        nodes.forEach((node) => {\n            if (node.nodeType === DOM.nodeTypes.TEXT_NODE) {\n                range.selectNodeContents(node);\n\n                for (let i = range.startOffset; i < range.endOffset; i++) {\n                    if ((range.startContainer.textContent.charCodeAt(i) === 32 || range.startContainer.textContent.charCodeAt(i) === 160)) {\n                        fragment.appendChild(createMark(range, document, SPACE_UNICODE, scrollTop, i));\n                    }\n                }\n            } else {\n                range.selectNode(node);\n                fragment.appendChild(createMark(range, document, NEW_LINE_UNICODE, scrollTop));\n            }\n        });\n\n        overlay.appendChild(fragment);\n    };\n\n    const clearFormattingMarksOverlay = function(editor) {\n        editor._formattingMarksOverlay.empty();\n    };\n\n    const applyFormattingMarks = function(editor) {\n        appendSvgMarks.call(editor);\n    };\n\n    const FormattingMarksCommand = Command.extend({\n        exec: function() {\n            const cmd = this,\n                range = cmd.lockRange(true),\n                editor = cmd.editor;\n\n            if (!editor._toggledFormattingMarks) {\n                editor._toggledFormattingMarks = true;\n                editor._appendFormattingMarksOverlay();\n                editor._appendFormattingMarksStyles();\n                clearFormattingMarksOverlay(editor);\n                applyFormattingMarks(editor);\n            } else {\n                editor._toggledFormattingMarks = false;\n                editor._destroyFormattingMarksOverlay();\n            }\n\n            cmd.releaseRange(range);\n        }\n    });\n\n    $.extend(Editor, {\n        FormattingMarksCommand: FormattingMarksCommand,\n        applyFormattingMarks: applyFormattingMarks,\n        clearFormattingMarksOverlay: clearFormattingMarksOverlay\n    });\n\n    registerTool(\"formattingMarks\", new Tool({ command: FormattingMarksCommand, icon: \"paragraphMark\", ui: { togglable: true } }));\n})(window.kendo.jQuery);\n\n(function(kendo, undefined$1) {\n    var global = window;\n    var math = global.Math;\n    var min = math.min;\n    var max = math.max;\n    var parseFloat = global.parseFloat;\n\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n\n    var Editor = kendo.ui.editor;\n\n    var PERCENTAGE = \"%\";\n    var PIXEL = \"px\";\n    var REGEX_NUMBER_IN_PERCENTAGES = /(\\d+)(\\.?)(\\d*)%/;\n    var REGEX_NUMBER_IN_PIXELS = /(\\d+)(\\.?)(\\d*)px/;\n    var STRING = \"string\";\n\n    function constrain(options) {\n        var value = options.value;\n        var lowerBound = options.min;\n        var upperBound = options.max;\n\n        return max(min(parseFloat(value), parseFloat(upperBound)), parseFloat(lowerBound));\n    }\n\n    function getScrollBarWidth(element) {\n        if (element && !$(element).is(\"body\") && element.scrollHeight > element.clientHeight) {\n            return kendo.support.scrollbar();\n        }\n\n        return 0;\n    }\n\n    function calculatePercentageRatio(value, total) {\n        if (inPercentages(value)) {\n            return parseFloat(value);\n        }\n        else {\n            return ((parseFloat(value) / total) * 100);\n        }\n    }\n\n    function inPercentages(value) {\n        return (typeof(value) === STRING && REGEX_NUMBER_IN_PERCENTAGES.test(value));\n    }\n\n    function inPixels(value) {\n        return (typeof(value) === STRING && REGEX_NUMBER_IN_PIXELS.test(value));\n    }\n\n    function toPercentages(value) {\n        return (parseFloat(value) + PERCENTAGE);\n    }\n\n    function toPixels(value) {\n        return (parseFloat(value) + PIXEL);\n    }\n\n    var ResizingUtils = {\n        constrain: constrain,\n        getScrollBarWidth: getScrollBarWidth,\n        calculatePercentageRatio: calculatePercentageRatio,\n        inPercentages: inPercentages,\n        inPixels: inPixels,\n        toPercentages: toPercentages,\n        toPixels: toPixels\n    };\n\n    extend(Editor, {\n        ResizingUtils: ResizingUtils\n    });\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n    var noop = $.noop;\n\n    var Editor = kendo.ui.editor;\n    var Class = kendo.Class;\n\n    var KEY_DOWN = \"keydown\";\n    var MOUSE_DOWN = \"mousedown\";\n    var MOUSE_ENTER = \"mouseenter\";\n    var MOUSE_LEAVE = \"mouseleave\";\n    var MOUSE_MOVE = \"mousemove\";\n    var MOUSE_UP = \"mouseup\";\n\n    var COMMA = \",\";\n    var DOT = \".\";\n    var LAST_CHILD = \":last-child\";\n\n    var TABLE = \"table\";\n\n    var TableElementResizing = Class.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that.options = extend({}, that.options, options);\n\n            that.options.tags = Array.isArray(that.options.tags) ? that.options.tags : [that.options.tags];\n\n            if ($(element).is(TABLE)) {\n                that.element = element;\n                that._attachEventHandlers();\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            var eventNamespace = that.options.eventNamespace;\n\n            if (that.element) {\n                $(that.element).off(eventNamespace);\n                that.element = null;\n            }\n\n            $(that.options.rootElement).off(KEY_DOWN + eventNamespace);\n\n            that._destroyResizeHandle();\n        },\n\n        options: {\n            tags: [],\n            min: 0,\n            rootElement: null,\n            eventNamespace: \"\",\n            rtl: false,\n            handle: {\n                dataAttribute: \"\",\n                height: 0,\n                width: 0,\n                classNames: {},\n                template: \"\"\n            }\n        },\n\n        _attachEventHandlers: function() {\n            var that = this;\n            var options = that.options;\n\n            $(that.element).on(MOUSE_MOVE + options.eventNamespace, options.tags.join(COMMA), that.detectElementBorderHovering.bind(that));\n        },\n\n        resizingInProgress: function() {\n            var that = this;\n            var resizable = that._resizable;\n\n            if (resizable) {\n                return !!resizable.resizing;\n            }\n\n            return false;\n        },\n\n        resize: noop,\n\n        detectElementBorderHovering: function(e) {\n            var that = this;\n            var options = that.options;\n            var handleOptions = options.handle;\n            var tableElement = $(e.currentTarget);\n            var resizeHandle = that.resizeHandle;\n            var dataAttribute = handleOptions.dataAttribute;\n\n            if (!that.resizingInProgress()) {\n                if (!tableElement.is(LAST_CHILD) && that.elementBorderHovered(tableElement, e)) {\n                    if (resizeHandle) {\n                        if (resizeHandle.data(dataAttribute) && resizeHandle.data(dataAttribute) !== tableElement[0]) {\n                            that.showResizeHandle(tableElement, e);\n                        }\n                    }\n                    else {\n                        that.showResizeHandle(tableElement, e);\n                    }\n                }\n                else {\n                    if (resizeHandle) {\n                        that._destroyResizeHandle();\n                    }\n                }\n            }\n        },\n\n        elementBorderHovered: noop,\n\n        showResizeHandle: function(tableElement, e) {\n            var that = this;\n\n            if (e.buttons !== 0) {\n                //prevent showing when a mouse button is still being pressed\n                return;\n            }\n\n            that._initResizeHandle();\n            that.setResizeHandlePosition(tableElement);\n            that.setResizeHandleDimensions();\n            that.setResizeHandleDataAttributes(tableElement[0]);\n            that._attachResizeHandleEventHandlers();\n\n            that._initResizable(tableElement);\n\n            that._hideResizeMarker();\n            that.resizeHandle.show();\n        },\n\n        _initResizeHandle: function() {\n            var that = this;\n            var options = that.options;\n\n            that._destroyResizeHandle();\n\n            that.resizeHandle = $(options.handle.template).appendTo(options.rootElement);\n        },\n\n        setResizeHandlePosition: noop,\n\n        setResizeHandleDimensions: noop,\n\n        setResizeHandleDataAttributes: function(tableElement) {\n            var that = this;\n\n            that.resizeHandle.data(that.options.handle.dataAttribute, tableElement);\n        },\n\n        _attachResizeHandleEventHandlers: function() {\n            var that = this;\n            var options = that.options;\n            var eventNamespace = options.eventNamespace;\n            var markerClass = options.handle.classNames.marker;\n            var resizeHandle = that.resizeHandle;\n\n            that.resizeHandle\n                .on(MOUSE_DOWN + eventNamespace, function() {\n                    resizeHandle.find(DOT + markerClass).show();\n                })\n                .on(MOUSE_UP + eventNamespace, function() {\n                    resizeHandle.find(DOT + markerClass).hide();\n                });\n        },\n\n        _hideResizeMarker: function() {\n            var that = this;\n\n            that.resizeHandle.find(DOT + that.options.handle.classNames.marker).hide();\n        },\n\n        _destroyResizeHandle: function() {\n            var that = this;\n\n            if (that.resizeHandle) {\n                that._destroyResizable();\n                that.resizeHandle.off(that.options.eventNamespace).remove();\n                that.resizeHandle = null;\n            }\n        },\n\n        _initResizable: function(tableElement) {\n            var that = this;\n\n            if (!that.resizeHandle) {\n                return;\n            }\n\n            that._destroyResizable();\n\n            that._resizable = new kendo.ui.Resizable(tableElement, {\n                draggableElement: that.resizeHandle[0],\n                start: that.onResizeStart.bind(that),\n                resize: that.onResize.bind(that),\n                resizeend: that.onResizeEnd.bind(that)\n            });\n        },\n\n        _destroyResizable: function() {\n            var that = this;\n\n            if (that._resizable) {\n                that._resizable.destroy();\n                that._resizable = null;\n            }\n        },\n\n        onResizeStart: function() {\n            this._disableKeyboard();\n        },\n\n        onResize: function(e) {\n            this.setResizeHandleDragPosition(e);\n        },\n\n        setResizeHandleDragPosition: noop,\n\n        onResizeEnd: function(e) {\n            var that = this;\n\n            that.resize(e);\n            that._destroyResizeHandle();\n            that._enableKeyboard();\n        },\n\n        _enableKeyboard: function() {\n            var options = this.options;\n\n            $(options.rootElement).off(KEY_DOWN + options.eventNamespace);\n        },\n\n        _disableKeyboard: function() {\n            var options = this.options;\n\n            $(options.rootElement).on(KEY_DOWN + options.eventNamespace, function(e) {\n                e.preventDefault();\n            });\n        },\n\n        _forceResizing: function(e) {\n            var resizable = this._resizable;\n\n            if (resizable && resizable.userEvents) {\n                resizable.userEvents._end(e);\n            }\n        }\n    });\n\n    var ResizingFactory = Class.extend({\n        create: function(editor, options) {\n            var that = this;\n            var resizingName = options.name;\n            var NS = options.eventNamespace;\n\n            $(editor.body)\n                .on(MOUSE_ENTER + NS, TABLE, function(e) {\n                    var table = e.currentTarget;\n                    var resizing = editor[resizingName];\n\n                    e.stopPropagation();\n\n                    if (resizing) {\n                        if (resizing.element !== table && !resizing.resizingInProgress()) {\n                            that._destroyResizing(editor, options);\n                            that._initResizing(editor, table, options);\n                        }\n                    }\n                    else {\n                        that._initResizing(editor, table, options);\n                    }\n                })\n                .on(MOUSE_LEAVE + NS, TABLE, function(e) {\n                    var parentTable;\n                    var resizing = editor[resizingName];\n\n                    e.stopPropagation();\n\n                    if (resizing && !resizing.resizingInProgress() && !resizing.resizeHandle) {\n                        parentTable = $(resizing.element).parents(TABLE)[0];\n\n                        if (parentTable) {\n                            that._destroyResizing(editor, options);\n                            that._initResizing(editor, parentTable, options);\n                        }\n                    }\n                })\n                .on(MOUSE_LEAVE + NS, function() {\n                    var resizing = editor[resizingName];\n\n                    if (resizing && !resizing.resizingInProgress()) {\n                        that._destroyResizing(editor, options);\n                    }\n                })\n                .on(MOUSE_UP + NS, function(e) {\n                    var resizing = editor[resizingName];\n                    var parentTable;\n\n                    if (resizing && resizing.resizingInProgress()) {\n                        parentTable = $(e.target).parents(TABLE)[0];\n\n                        if (parentTable) {\n                            resizing._forceResizing(e);\n                            that._destroyResizing(editor, options);\n                            that._initResizing(editor, parentTable, options);\n                        }\n                    }\n                });\n        },\n\n        dispose: function(editor, options) {\n            $(editor.body).off(options.eventNamespace);\n        },\n\n        _initResizing: function(editor, tableElement, options) {\n            var resizingName = options.name;\n            var resizingType = options.type;\n\n            editor[resizingName] = new resizingType(tableElement, {\n                rtl: kendo.support.isRtl(editor.element),\n                rootElement: editor.body\n            });\n        },\n\n        _destroyResizing: function(editor, options) {\n            var resizingName = options.name;\n\n            if (editor[resizingName]) {\n                editor[resizingName].destroy();\n                editor[resizingName] = null;\n            }\n        }\n    });\n    ResizingFactory.current = new ResizingFactory();\n\n    TableElementResizing.create = function(editor, options) {\n        ResizingFactory.current.create(editor, options);\n    };\n\n    TableElementResizing.dispose = function(editor, options) {\n        ResizingFactory.current.dispose(editor, options);\n    };\n\n    extend(Editor, {\n        TableElementResizing: TableElementResizing\n    });\n\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var global = window;\n    var math = global.Math;\n    var abs = math.abs;\n\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n\n    var Editor = kendo.ui.editor;\n    var dom = Editor.Dom;\n    var TableElementResizing = Editor.TableElementResizing;\n    var ResizingUtils = Editor.ResizingUtils;\n    var constrain = ResizingUtils.constrain;\n    var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n    var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n    var inPercentages = ResizingUtils.inPercentages;\n    var toPercentages = ResizingUtils.toPercentages;\n    var toPixels = ResizingUtils.toPixels;\n    var outerWidth = kendo._outerWidth;\n\n    var NS = \".kendoEditorColumnResizing\";\n    var RESIZE_HANDLE_CLASS = \"k-column-resize-handle\";\n    var RESIZE_MARKER_CLASS = \"k-column-resize-marker\";\n\n    var BODY = \"body\";\n    var TBODY = \"tbody\";\n    var THEAD = \"thead\";\n    var TD = \"td\";\n    var TH = \"th\";\n    var TR = \"tr\";\n\n    var COLATTR = \"col-index\";\n\n    var COMMA = \",\";\n    var WIDTH = \"width\";\n\n    var ColumnResizing = TableElementResizing.extend({\n        options: {\n            tags: [TD, TH],\n            min: 20,\n            rootElement: null,\n            eventNamespace: NS,\n            rtl: false,\n            handle: {\n                dataAttribute: \"column\",\n                width: 10,\n                height: 0,\n                classNames: {\n                    handle: RESIZE_HANDLE_CLASS,\n                    marker: RESIZE_MARKER_CLASS\n                },\n                template:\n                    '<div class=\"k-column-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                        '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                            '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                        '</div>' +\n                    '</div>'\n            }\n        },\n\n        elementBorderHovered: function(column, e) {\n            var that = this;\n            var options = that.options;\n            var handleWidth = options.handle.width;\n            var borderOffset = column.offset().left + (options.rtl ? 0 : outerWidth(column));\n\n\n            var mousePosition = e.clientX + $(column[0].ownerDocument).scrollLeft();\n\n            if ((mousePosition > (borderOffset - handleWidth)) && (mousePosition < (borderOffset + handleWidth))) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        },\n\n        setResizeHandlePosition: function(column) {\n            var that = this;\n            var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n            var options = that.options;\n            var rtl = options.rtl;\n            var handleWidth = options.handle.width;\n            var rootElement = $(options.rootElement);\n            var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n            var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n            var columnWidthOffset = rtl ? 0 : outerWidth(column);\n            var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n            var columnOffsetLeft = column.offset().left -\n                                    (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                    parseFloat(column.css(\"marginLeft\"));\n            var innerElementOffsetTop = tableInnerElement.offset().top -\n                                    (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat(tableInnerElement.css(\"marginTop\"));\n            var browser = kendo.support.browser;\n\n            if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrollLeftOffset = scrollLeftOffset * -1;\n            }\n\n            that.resizeHandle.css({\n                top: innerElementOffsetTop + scrollTopOffset,\n                left: columnOffsetLeft + columnWidthOffset + (scrollLeftOffset - scrollBarWidth) - (handleWidth / 2),\n                position: \"absolute\"\n            });\n        },\n\n        setResizeHandleDimensions: function() {\n            var that = this;\n            var tableHead = $(that.element).children(THEAD);\n            var tableBody = $(that.element).children(TBODY);\n            var fullHeight = tableHead.length > 0 ? tableHead.height() + tableBody.height() : tableBody.height();\n\n            that.resizeHandle.css({\n                width: that.options.handle.width,\n                height: fullHeight\n            });\n        },\n\n        setResizeHandleDragPosition: function(e) {\n            var that = this;\n            var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n            var options = that.options;\n            var rootElement = $(options.rootElement);\n            var handleWidth = options.handle ? options.handle.width : 0;\n            var min = options.min;\n            var rtl = options.rtl;\n            var columnWidth = outerWidth(column);\n            var columnLeftOffset = column.offset().left -\n                                    (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                    parseFloat(column.css(\"marginLeft\"));\n            var adjacentColumnWidth = outerWidth(column.next());\n            var resizeHandle = $(that.resizeHandle);\n            var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n            var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n            var resizeHandleOffsetLeft = resizeHandle.offset().left -\n                                            (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                            parseFloat(resizeHandle.css(\"marginLeft\"));\n            var browser = kendo.support.browser;\n\n            if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrollLeftOffset = scrollLeftOffset * -1;\n            }\n\n            var handleOffset = constrain({\n                value: resizeHandleOffsetLeft + (scrollLeftOffset - scrollBarWidth) + e.x.delta,\n                min: columnLeftOffset + (scrollLeftOffset - scrollBarWidth) - (rtl ? adjacentColumnWidth : 0) + min,\n                max: columnLeftOffset + columnWidth + (scrollLeftOffset - scrollBarWidth) + (rtl ? 0 : adjacentColumnWidth) - handleWidth - min\n            });\n\n            resizeHandle.css({ left: handleOffset });\n        },\n\n        resize: function(e) {\n            var that = this;\n            var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n            var options = that.options;\n            var rtlModifier = options.rtl ? (-1) : 1;\n            var min = options.min;\n            var initialDeltaX = rtlModifier * e.x.initialDelta;\n            var newWidth;\n            var initialAdjacentColumnWidth;\n            var initialColumnWidth;\n            var colIndex;\n            var nextColumn;\n\n            dom.reMapTableColumns(that.element, COLATTR);\n\n            colIndex = parseInt(column.attr(COLATTR), 10);\n\n            if (column.prop(\"colSpan\") > 1) {\n                column = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + column.prop(\"colSpan\") - 1) + \"]\").eq(0);\n                colIndex = parseInt(column.attr(COLATTR), 10);\n            }\n\n            nextColumn = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + 1) + \"]:not([colspan])\");\n\n            that._setTableComputedWidth();\n            that._setColumnsComputedWidth();\n\n            initialColumnWidth = outerWidth(column);\n            initialAdjacentColumnWidth = outerWidth(nextColumn);\n\n            newWidth = constrain({\n                value: initialColumnWidth + initialDeltaX,\n                min: min,\n                max: initialColumnWidth + initialAdjacentColumnWidth - min\n            });\n\n            that._resizeColumn(column[0], newWidth);\n            that._resizeTopAndBottomColumns(column[0], newWidth);\n            that._resizeAdjacentColumns(parseInt(column.attr(COLATTR),10), initialAdjacentColumnWidth, initialColumnWidth, (initialColumnWidth - newWidth));\n\n            dom.clearTableMappings(that.element, COLATTR);\n        },\n\n        _setTableComputedWidth: function() {\n            var element = this.element;\n\n            if (element.style[WIDTH] === \"\") {\n                element.style[WIDTH] = toPixels(outerWidth($(element)));\n            }\n        },\n\n        _setColumnsComputedWidth: function() {\n            var that = this;\n            var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n            var innerElementWidth = outerWidth(tableInnerElement);\n            var columns = tableInnerElement.children(TR).children(TD);\n            var length = columns.length;\n            var currentColumnsWidths = columns.map(function() {\n                return outerWidth($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                if (inPercentages(columns[i].style[WIDTH])) {\n                    columns[i].style[WIDTH] = toPercentages(calculatePercentageRatio(currentColumnsWidths[i], innerElementWidth));\n                }\n                else {\n                    columns[i].style[WIDTH] = toPixels(currentColumnsWidths[i]);\n                }\n            }\n        },\n\n        _resizeTopAndBottomColumns: function(column, newWidth) {\n            var that = this;\n            var columnIndex = $(column).attr(COLATTR);\n            var topAndBottomColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                .filter(function() {\n                    var cell = this;\n                    return ($(cell).attr(COLATTR) === columnIndex && cell !== column);\n                });\n            var length = topAndBottomColumns.length;\n            var i;\n\n            for (i = 0; i < length; i++) {\n                that._resizeColumn(topAndBottomColumns[i], newWidth);\n            }\n        },\n\n        _resizeColumn: function(column, newWidth) {\n            var innerTableElement = $(this.element.tHead || this.element.tBodies[0]);\n            if (inPercentages(column.style[WIDTH])) {\n                column.style[WIDTH] = toPercentages(calculatePercentageRatio(newWidth, outerWidth(innerTableElement)));\n            }\n            else {\n                column.style[WIDTH] = toPixels(newWidth);\n            }\n        },\n\n        _resizeAdjacentColumns: function(columnIndex, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n            var that = this;\n            var adjacentColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                .filter(function() {\n                    return (parseInt($(this).attr(COLATTR),10) === (columnIndex + 1));\n                });\n            var length = adjacentColumns.length;\n            var i;\n\n            for (i = 0; i < length; i++) {\n                that._resizeAdjacentColumn(adjacentColumns[i], initialAdjacentColumnWidth, initialColumnWidth, deltaWidth);\n            }\n        },\n\n        _resizeAdjacentColumn: function(adjacentColumn, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n            var that = this;\n            var min = that.options.min;\n            var newWidth;\n\n            newWidth = constrain({\n                value: initialAdjacentColumnWidth + deltaWidth,\n                min: min,\n                max: abs(initialColumnWidth + initialAdjacentColumnWidth - min)\n            });\n\n            that._resizeColumn(adjacentColumn, newWidth);\n        }\n    });\n\n    ColumnResizing.create = function(editor) {\n        TableElementResizing.create(editor, {\n            name: \"columnResizing\",\n            type: ColumnResizing,\n            eventNamespace: NS\n        });\n    };\n\n    ColumnResizing.dispose = function(editor) {\n        TableElementResizing.dispose(editor, {\n            eventNamespace: NS\n        });\n    };\n\n    extend(Editor, {\n        ColumnResizing: ColumnResizing\n    });\n\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var math = window.Math;\n    var abs = math.abs;\n\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n\n    var Editor = kendo.ui.editor;\n    var TableElementResizing = Editor.TableElementResizing;\n    var ResizingUtils = Editor.ResizingUtils;\n    var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n    var constrain = ResizingUtils.constrain;\n    var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n    var inPercentages = ResizingUtils.inPercentages;\n    var toPercentages = ResizingUtils.toPercentages;\n    var toPixels = ResizingUtils.toPixels;\n    var outerHeight = kendo._outerHeight;\n\n    var NS = \".kendoEditorRowResizing\";\n    var RESIZE_HANDLE_CLASS = \"k-row-resize-handle\";\n    var RESIZE_HANDLE_MARKER_WRAPPER_CLASS = \"k-row-resize-marker-wrapper\";\n    var RESIZE_MARKER_CLASS = \"k-row-resize-marker\";\n\n    var BODY = \"body\";\n    var TR = \"tr\";\n    var TBODY = \"tbody\";\n    var THEAD = \"thead\";\n\n    var COMMA = \",\";\n    var HEIGHT = \"height\";\n\n    var RowResizing = TableElementResizing.extend({\n        options: {\n            tags: [TR],\n            min: 20,\n            rootElement: null,\n            eventNamespace: NS,\n            rtl: false,\n            handle: {\n                dataAttribute: \"row\",\n                width: 0,\n                height: 10,\n                classNames: {\n                    handle: RESIZE_HANDLE_CLASS,\n                    marker: RESIZE_MARKER_CLASS\n                },\n                template:\n                    '<div class=\"k-row-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                        '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                            '<div class=\"' + RESIZE_HANDLE_MARKER_WRAPPER_CLASS + '\">' +\n                                '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                            '</div>' +\n                        '</div>' +\n                    '</div>'\n            }\n        },\n\n        elementBorderHovered: function(tableElement, e) {\n            var that = this;\n            var handleHeight = that.options.handle[HEIGHT];\n            var borderOffset = tableElement.offset().top + outerHeight(tableElement);\n            var mousePosition = e.clientY + $(tableElement[0].ownerDocument).scrollTop();\n\n            if ((mousePosition > (borderOffset - handleHeight)) && (mousePosition < (borderOffset + handleHeight))) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        },\n\n        setResizeHandlePosition: function(row) {\n            var that = this;\n            var options = that.options;\n            var handleHeight = options.handle[HEIGHT];\n            var rootElement = $(options.rootElement);\n            var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n            var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n            var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n\n            var rowOffsetLeft = row.offset().left -\n                                    (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                    parseFloat(row.css(\"marginLeft\"));\n            var rowOffsetTop = row.offset().top -\n                                    (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat(row.css(\"marginTop\"));\n            var browser = kendo.support.browser;\n\n            if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrollLeftOffset = scrollLeftOffset * -1;\n            }\n\n            that.resizeHandle.css({\n                top: rowOffsetTop + outerHeight(row) + scrollTopOffset - (handleHeight / 2),\n                left: rowOffsetLeft + (scrollLeftOffset - scrollBarWidth),\n                position: \"absolute\"\n            });\n        },\n\n        setResizeHandleDimensions: function() {\n            var that = this;\n            var innerTableElement = $(that.element.tHead || that.element.tBodies[0]);\n\n            that.resizeHandle.css({\n                width: innerTableElement.width(),\n                height: that.options.handle[HEIGHT]\n            });\n        },\n\n        setResizeHandleDragPosition: function(e) {\n            var that = this;\n            var options = that.options;\n            var min = options.min;\n            var tableHead = $(that.element).children(THEAD);\n            var tableBody = $(that.element).children(TBODY);\n            var topInnerTableElement = tableHead.length > 0 ? tableHead : tableBody;\n            var resizeHandle = $(that.resizeHandle);\n            var row = $(e.currentTarget).data(options.handle.dataAttribute);\n            var $row = $(row);\n            var rootElement = $(options.rootElement);\n            var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n            var tableTopOffset = topInnerTableElement.offset().top -\n                                    (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat(topInnerTableElement.css(\"marginTop\"));\n\n            var rowOffsetTop = $row.offset().top -\n                                (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                parseFloat($row.css(\"marginTop\"));\n\n            var resizeHandleOffsetTop = resizeHandle.offset().top -\n                                (Math.max(0 , rootElement.offset().top) + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                parseFloat(resizeHandle.css(\"marginTop\"));\n\n            var handleOffset = constrain({\n                value: resizeHandleOffsetTop + scrollTopOffset + e.y.delta,\n                min: rowOffsetTop + scrollTopOffset + min,\n                max: tableTopOffset + outerHeight(tableHead) + outerHeight(tableBody) + scrollTopOffset - options.handle[HEIGHT] - min\n            });\n\n            resizeHandle.css({ top: handleOffset });\n        },\n\n        resize: function(e) {\n            var that = this;\n            var options = that.options;\n            var row = $(e.currentTarget).data(options.handle.dataAttribute);\n            var currentRowHeight = outerHeight($(row));\n            var element = $(that.element);\n            var initialTableHeight = outerHeight(element);\n            var tableHead = element.children(THEAD);\n            var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n            var tableBody = element.children(TBODY);\n            var tableBodyHeight = tableBody.height();\n            var initialStyleHeight = row.style[HEIGHT];\n            var newRowHeight = constrain({\n                value: currentRowHeight + e.y.initialDelta,\n                min: options.min,\n                max: abs(tableHeadHeight + tableBodyHeight - options.min)\n            });\n\n            that._setRowsHeightInPixels();\n            row.style[HEIGHT] = toPixels(newRowHeight);\n            that._setTableHeight(initialTableHeight + (newRowHeight - currentRowHeight));\n\n            if (inPercentages(initialStyleHeight)) {\n                //resize rows in percentages as late as possible to prevent incorrect precision calculations\n                that._setRowsHeightInPercentages();\n            }\n        },\n\n        _setRowsHeightInPixels: function() {\n            var that = this;\n            var rows = $(that.element).children(TBODY + COMMA + THEAD).children(TR);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n            }\n        },\n\n        _setRowsHeightInPercentages: function() {\n            var that = this;\n            var tableHead = $(that.element).children(THEAD);\n            var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n            var tableBody = $(that.element).children(TBODY);\n            var tableBodyHeight = tableBody.height();\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(TR);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n            }\n        },\n\n        _setTableHeight: function(newHeight) {\n            var element = this.element;\n\n            if (inPercentages(element.style[HEIGHT])) {\n                element.style[HEIGHT] = toPercentages(calculatePercentageRatio(newHeight, $(element).parent().height()));\n            }\n            else {\n                element.style[HEIGHT] = toPixels(newHeight);\n            }\n        }\n    });\n\n    RowResizing.create = function(editor) {\n        TableElementResizing.create(editor, {\n            name: \"rowResizing\",\n            type: RowResizing,\n            eventNamespace: NS\n        });\n    };\n\n    RowResizing.dispose = function(editor) {\n        TableElementResizing.dispose(editor, {\n            eventNamespace: NS\n        });\n    };\n\n    extend(Editor, {\n        RowResizing: RowResizing\n    });\n\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n    var noop = $.noop;\n\n    var Editor = kendo.ui.editor;\n    var Class = kendo.Class;\n    var Draggable = kendo.ui.Draggable;\n    var Observable = kendo.Observable;\n    var getScrollBarWidth = Editor.ResizingUtils.getScrollBarWidth;\n    var outerWidth = kendo._outerWidth;\n    var outerHeight = kendo._outerHeight;\n\n    var NS = \".kendoEditorElementResizeHandle\";\n    var RESIZE_HANDLE_CLASS = \"k-element-resize-handle\";\n\n    var DRAG_START = \"dragStart\";\n    var DRAG = \"drag\";\n    var DRAG_END = \"dragEnd\";\n    var HALF_INSIDE = \"halfInside\";\n    var MOUSE_OVER = \"mouseover\";\n    var MOUSE_OUT = \"mouseout\";\n\n    var BODY = \"body\";\n    var TABLE = \"table\";\n\n    var EAST = \"east\";\n    var NORTH = \"north\";\n    var NORTHEAST = \"northeast\";\n    var NORTHWEST = \"northwest\";\n    var SOUTH = \"south\";\n    var SOUTHEAST = \"southeast\";\n    var SOUTHWEST = \"southwest\";\n    var WEST = \"west\";\n\n    var DOT = \".\";\n\n    var ElementResizeHandle = Observable.extend({\n        init: function(options) {\n            var that = this;\n\n            Observable.fn.init.call(that);\n\n            that.options = extend({}, that.options, options);\n            that.element = $(that.options.template).appendTo(that.options.appendTo)[0];\n\n            that._attachEventHandlers();\n            that._addStyles();\n            that._initDraggable();\n            that._initPositioningStrategy();\n            that._initDraggingStrategy();\n\n            $(that.element).data(TABLE, that.options.resizableElement);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            $(that.element).off(NS).remove();\n            that.element = null;\n\n            that._destroyDraggable();\n\n            that.unbind();\n        },\n\n        options: {\n            appendTo: null,\n            direction: SOUTHEAST,\n            resizableElement: null,\n            rtl: false,\n            template:\n                \"<div class='k-element-resize-handle-wrapper' unselectable='on' contenteditable='false'>\" +\n                    \"<div class='\" + RESIZE_HANDLE_CLASS + \"'></div>\" +\n                \"</div>\"\n        },\n\n        events: [\n            DRAG_START,\n            DRAG,\n            DRAG_END,\n            MOUSE_OVER,\n            MOUSE_OUT\n        ],\n\n        show: function() {\n            this._setPosition();\n        },\n\n        _setPosition: function() {\n            var that = this;\n            var position = that._positioningStrategy.getPosition();\n\n            $(that.element).css({\n                top: position.top,\n                left: position.left,\n                position: \"absolute\"\n            });\n        },\n\n        _attachEventHandlers: function() {\n            var that = this;\n\n            $(that.element)\n                .on(MOUSE_OVER + NS, that._onMouseOver.bind(that))\n                .on(MOUSE_OUT + NS, that._onMouseOut.bind(that));\n        },\n\n        _onMouseOver: function() {\n            this.trigger(MOUSE_OVER);\n        },\n\n        _onMouseOut: function() {\n            this.trigger(MOUSE_OUT);\n        },\n\n        _addStyles: function() {\n            var that = this;\n            $(that.element).children(DOT + RESIZE_HANDLE_CLASS).addClass(\"k-resize-\" + that.options.direction);\n        },\n\n        _initPositioningStrategy: function() {\n            var that = this;\n            var options = that.options;\n\n            that._positioningStrategy = HandlePositioningStrategy.create({\n                name: options.direction,\n                handle: that.element,\n                resizableElement: options.resizableElement,\n                rootElement: options.rootElement,\n                rtl: options.rtl\n            });\n        },\n\n        _initDraggable: function() {\n            var that = this;\n            var element = that.element;\n\n            if (that._draggable || !element) {\n                return;\n            }\n\n            that._draggable = new Draggable(element, {\n                dragstart: that._onDragStart.bind(that),\n                drag: that._onDrag.bind(that),\n                dragend: that._onDragEnd.bind(that)\n            });\n        },\n\n        _onDragStart: function() {\n            this.trigger(DRAG_START);\n        },\n\n        _onDrag: function(e) {\n            var that = this;\n\n            that.trigger(DRAG, that._draggingStrategy.adjustDragDelta({\n                deltaX: e.x.delta,\n                deltaY: e.y.delta,\n                initialDeltaX: e.x.initialDelta,\n                initialDeltaY: e.y.initialDelta\n            }));\n        },\n\n        _onDragEnd: function() {\n            this.trigger(DRAG_END);\n        },\n\n        _destroyDraggable: function() {\n            var that = this;\n\n            if (that._draggable) {\n                that._draggable.destroy();\n                that._draggable = null;\n            }\n        },\n\n        _initDraggingStrategy: function() {\n            var that = this;\n\n            that._draggingStrategy = HandleDraggingStrategy.create({\n                name: that.options.direction\n            });\n        }\n    });\n\n    var StrategyFactory = Class.extend({\n        init: function() {\n            this._items = [];\n        },\n\n        register: function(name, type) {\n            this._items.push({\n                name: name,\n                type: type\n            });\n        },\n\n        create: function(options) {\n            var items = this._items;\n            var itemsLength = items.length;\n            var name = options.name ? options.name.toLowerCase() : \"\";\n            var match;\n            var item;\n            var i;\n\n            for (i = 0; i < itemsLength; i++) {\n                item = items[i];\n\n                if (item.name.toLowerCase() === name) {\n                    match = item;\n                    break;\n                }\n            }\n\n            if (match) {\n                return new match.type(options);\n            }\n        }\n    });\n\n    var PositioningStrategyFactory = StrategyFactory.extend({});\n    PositioningStrategyFactory.current = new PositioningStrategyFactory();\n\n    var HandlePositioningStrategy = Class.extend({\n        init: function(options) {\n            var that = this;\n            that.options = extend({}, that.options, options);\n        },\n\n        options: {\n            handle: null,\n            offset: HALF_INSIDE,\n            resizableElement: null,\n            rootElement: null,\n            rtl: false\n        },\n\n        getPosition: function() {\n            var that = this;\n\n            var position = that.calculatePosition();\n            var handleOffsetPosition = that.applyHandleOffset(position);\n            var scrollOffsetPosition = that.applyScrollOffset(handleOffsetPosition);\n\n            return scrollOffsetPosition;\n        },\n\n        calculatePosition: noop,\n\n        applyHandleOffset: function(position) {\n            var options = this.options;\n            var handle = $(options.handle);\n\n            if (options.offset === HALF_INSIDE) {\n                return {\n                    top: position.top - (outerHeight(handle) / 2),\n                    left: position.left - (outerWidth(handle) / 2)\n                };\n            }\n\n            return position;\n        },\n\n        applyScrollOffset: function(position) {\n            var options = this.options;\n            var rootElement = $(options.rootElement);\n            var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n            var browser = kendo.support.browser;\n            var rootLeft;\n\n            if (!rootElement.is(BODY)) {\n                rootLeft = kendo.scrollLeft(rootElement) || 0;\n\n                if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    rootLeft = rootLeft * -1;\n                }\n\n                return {\n                    top: position.top + (rootElement.scrollTop() || 0),\n                    left: position.left + rootLeft - scrollBarWidth\n                };\n            }\n\n            return position;\n        }\n    });\n\n    HandlePositioningStrategy.create = function(options) {\n        return PositioningStrategyFactory.current.create(options);\n    };\n\n    var EastPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + (outerHeight(resizableElement) / 2),\n                left: offset.left + outerWidth(resizableElement) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(EAST, EastPositioningStrategy);\n\n    var NorthPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top,\n                left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(NORTH, NorthPositioningStrategy);\n\n    var NortheastPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top,\n                left: offset.left + outerWidth(resizableElement) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(NORTHEAST, NortheastPositioningStrategy);\n\n    var NorthwestPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top,\n                left: offset.left + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(NORTHWEST, NorthwestPositioningStrategy);\n\n    var SouthPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + outerHeight(resizableElement),\n                left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(SOUTH, SouthPositioningStrategy);\n\n    var SoutheastPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + outerHeight(resizableElement),\n                left: offset.left + outerWidth(resizableElement) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(SOUTHEAST, SoutheastPositioningStrategy);\n\n    var SouthwestPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + outerHeight(resizableElement),\n                left: offset.left + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(SOUTHWEST, SouthwestPositioningStrategy);\n\n    var WestPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + (outerHeight(resizableElement) / 2),\n                left: offset.left + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(WEST, WestPositioningStrategy);\n\n    var DraggingStrategyFactory = StrategyFactory.extend({});\n    DraggingStrategyFactory.current = new DraggingStrategyFactory();\n\n    var HandleDraggingStrategy = Class.extend({\n        init: function(options) {\n            var that = this;\n            that.options = extend({}, that.options, options);\n        },\n\n        options: {\n            deltaX: {\n                adjustment: null,\n                modifier: null\n            },\n            deltaY: {\n                adjustment: null,\n                modifier: null\n            }\n        },\n\n        adjustDragDelta: function(deltas) {\n            var options = this.options;\n            var xAxisAdjustment = options.deltaX.adjustment * options.deltaX.modifier;\n            var yAxisAdjustment = options.deltaY.adjustment * options.deltaY.modifier;\n\n            return {\n                deltaX: deltas.deltaX * xAxisAdjustment,\n                deltaY: deltas.deltaY * yAxisAdjustment,\n                initialDeltaX: deltas.initialDeltaX * xAxisAdjustment,\n                initialDeltaY: deltas.initialDeltaY * yAxisAdjustment\n            };\n        }\n    });\n\n    HandleDraggingStrategy.create = function(options) {\n        return DraggingStrategyFactory.current.create(options);\n    };\n\n    var HorizontalDraggingStrategy = HandleDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                adjustment: 1,\n                modifier: 1\n            },\n            deltaY: {\n                adjustment: 0,\n                modifier: 0\n            }\n        }\n    });\n\n    var EastDraggingStrategy = HorizontalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(EAST, EastDraggingStrategy);\n\n    var WestDraggingStrategy = HorizontalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(WEST, WestDraggingStrategy);\n\n    var VerticalDraggingStrategy = HandleDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                adjustment: 0,\n                modifier: 0\n            },\n            deltaY: {\n                adjustment: 1,\n                modifier: 1\n            }\n        }\n    });\n\n    var NorthDraggingStrategy = VerticalDraggingStrategy.extend({\n        options: {\n            deltaY: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(NORTH, NorthDraggingStrategy);\n\n    var SouthDraggingStrategy = VerticalDraggingStrategy.extend({\n        options: {\n            deltaY: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(SOUTH, SouthDraggingStrategy);\n\n    var HorizontalAndVerticalDraggingStrategy = HandleDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                adjustment: 1,\n                modifier: 1\n            },\n            deltaY: {\n                adjustment: 1,\n                modifier: 1\n            }\n        }\n    });\n\n    var NorthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: 1\n            },\n            deltaY: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(NORTHEAST, NorthEastDraggingStrategy);\n\n    var NorthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: (-1)\n            },\n            deltaY: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(NORTHWEST, NorthWestDraggingStrategy);\n\n    var SouthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: 1\n            },\n            deltaY: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(SOUTHEAST, SouthEastDraggingStrategy);\n\n    var SouthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: (-1)\n            },\n            deltaY: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(SOUTHWEST, SouthWestDraggingStrategy);\n\n    extend(Editor, {\n        ElementResizeHandle: ElementResizeHandle\n    });\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var global = window;\n    var math = global.Math;\n    var min = math.min;\n    var max = math.max;\n\n    var $ = kendo.jQuery;\n    var contains = $.contains;\n    var extend = $.extend;\n\n    var browser = kendo.support.browser;\n    var Editor = kendo.ui.editor;\n    var Class = kendo.Class;\n    var ElementResizeHandle = Editor.ElementResizeHandle;\n    var ResizingUtils = Editor.ResizingUtils;\n    var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n    var constrain = ResizingUtils.constrain;\n    var inPercentages = ResizingUtils.inPercentages;\n    var inPixels = ResizingUtils.inPixels;\n    var toPercentages = ResizingUtils.toPercentages;\n    var toPixels = ResizingUtils.toPixels;\n    var outerWidth = kendo._outerWidth;\n    var outerHeight = kendo._outerHeight;\n    var RangeUtils = Editor.RangeUtils;\n\n    var NS = \".kendoEditorElementResizing\";\n    var RESIZE_HANDLE_WRAPPER_CLASS = \"k-element-resize-handle-wrapper\";\n    var TABLE_CLASS = \"k-table\";\n    var ELEMENT_RESIZING_CLASS = \"k-element-resizing\";\n\n    var DRAG_START = \"dragStart\";\n    var DRAG = \"drag\";\n    var DRAG_END = \"dragEnd\";\n    var KEY_DOWN = \"keydown\";\n    var MOUSE_DOWN = \"mousedown\";\n    var SELECT = \"select\";\n    var DROP = \"drop\";\n\n    var COLUMN = \"td\";\n    var ROW = \"tr\";\n    var TBODY = \"tbody\";\n    var THEAD = \"thead\";\n    var TABLE = \"table\";\n    var IMG = \"img\";\n    var ELEMENT_TYPES = [\"TABLE\", \"IMG\"];\n\n    var COMMA = \",\";\n    var WIDTH = \"width\";\n    var HEIGHT = \"height\";\n\n    var EAST = \"east\";\n    var NORTH = \"north\";\n    var NORTHEAST = \"northeast\";\n    var NORTHWEST = \"northwest\";\n    var SOUTH = \"south\";\n    var SOUTHEAST = \"southeast\";\n    var SOUTHWEST = \"southwest\";\n    var WEST = \"west\";\n\n    var DOT = \".\";\n\n    function isUndefined(value) {\n        return typeof(value) === \"undefined\";\n    }\n\n    var ElementResizing = Class.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that.options = extend({}, that.options, options);\n            that.handles = [];\n\n            // Check whether the element is TABLE or IMG\n            if (ELEMENT_TYPES.indexOf(element.nodeName) >= 0) {\n                that.element = element;\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            $(that.element).off(NS);\n            that.element = null;\n\n            $(that.options.rootElement).off(KEY_DOWN + NS);\n\n            that._destroyResizeHandles();\n        },\n\n        options: {\n            appendHandlesTo: null,\n            rtl: false,\n            rootElement: null,\n            minWidth: 10,\n            minHeight: 10,\n            handles: [{\n                direction: NORTHWEST\n            }, {\n                direction: NORTH\n            }, {\n                direction: NORTHEAST\n            }, {\n                direction: EAST\n            }, {\n                direction: SOUTHEAST\n            }, {\n                direction: SOUTH\n            }, {\n                direction: SOUTHWEST\n            }, {\n                direction: WEST\n            }]\n        },\n\n        resize: function(args) {\n            var that = this;\n            var deltas = extend({}, {\n                deltaX: 0,\n                deltaY: 0,\n                initialDeltaX: 0,\n                initialDeltaY: 0\n            }, args);\n\n            that._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n            that._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n            that.showResizeHandles();\n        },\n\n        _resizeWidth: function() {\n            return false;\n        },\n\n        _resizeHeight: function() {\n            return false;\n        },\n\n        _getMaxDimensionValue: function(dimension) {\n            var that = this;\n            var element = $(that.element);\n            var dimensionLowercase = dimension.toLowerCase();\n            var rtlModifier = that.options.rtl ? (-1) : 1;\n            var parent = $(that.element).parent();\n            var parentElement = parent[0];\n            var parentDimension = parent[dimensionLowercase]();\n            var parentScrollOffset = rtlModifier * (dimension === WIDTH ? kendo.scrollLeft(parent) : parent.scrollTop());\n\n            if (parentElement && parentElement === element.closest(COLUMN)[0]) {\n                if (parentElement.style[dimensionLowercase] === \"\" && !inPercentages(that.element.style[dimensionLowercase])) {\n                    return Infinity;\n                }\n                else {\n                    return (parentDimension + parentScrollOffset);\n                }\n            }\n            else {\n                return (parentDimension + parentScrollOffset);\n            }\n        },\n\n        showResizeHandles: function() {\n            var that = this;\n\n            that._initResizeHandles();\n            that._showResizeHandles();\n        },\n\n        _initResizeHandles: function() {\n            var that = this;\n            var handles = that.handles;\n            var options = that.options;\n            var handleOptions = that.options.handles;\n            var length = handleOptions.length;\n            var i;\n\n            if (handles && handles.length > 0) {\n                return;\n            }\n\n            for (i = 0; i < length; i++) {\n                that.handles.push(new ElementResizeHandle(extend({\n                    appendTo: options.appendHandlesTo,\n                    resizableElement: that.element,\n                    rootElement: options.rootElement,\n                    rtl: options.rtl\n                }, handleOptions[i])));\n            }\n\n            that._bindToResizeHandlesEvents();\n        },\n\n        _destroyResizeHandles: function() {\n            var that = this;\n            var length = that.handles ? that.handles.length : 0;\n\n            for (var i = 0; i < length; i++) {\n                that.handles[i].destroy();\n            }\n\n            that.handles = [];\n        },\n\n        _showResizeHandles: function() {\n            var that = this;\n            var handles = that.handles || [];\n            var length = handles.length;\n            var i;\n\n            for (i = 0; i < length; i++) {\n                that.handles[i].show();\n            }\n        },\n\n        _bindToResizeHandlesEvents: function() {\n            return false;\n        },\n\n        _onResizeHandleDragStart: function() {\n            var that = this;\n            var element = $(that.element);\n\n            element.addClass(ELEMENT_RESIZING_CLASS);\n\n            that._initialElementHeight = outerHeight(element);\n            that._initialElementWidth = outerWidth(element);\n            that._disableKeyboard();\n        },\n\n        _onResizeHandleDrag: function(e) {\n            this.resize(e);\n        },\n\n        _onResizeHandleDragEnd: function() {\n            var that = this;\n            $(that.element).removeClass(ELEMENT_RESIZING_CLASS);\n            that._enableKeyboard();\n        },\n\n        _enableKeyboard: function() {\n            $(this.options.rootElement).off(KEY_DOWN + NS);\n        },\n\n        _disableKeyboard: function() {\n            $(this.options.rootElement).on(KEY_DOWN + NS, function(e) {\n                e.preventDefault();\n            });\n        }\n    });\n\n    var TableResizing = ElementResizing.extend({\n        _bindToResizeHandlesEvents: function() {\n            var that = this;\n            var handles = that.handles || [];\n            var length = handles.length;\n            var i;\n            var handle;\n\n            for (i = 0; i < length; i++) {\n                handle = handles[i];\n                handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n                handle.bind(DRAG, that._onResizeHandleDrag.bind(that));\n                handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n            }\n        },\n\n        _hasRowsInPixels: function() {\n            var that = this;\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n\n            for (var i = 0; i < rows.length; i++) {\n                if (rows[i].style.height === \"\" || inPixels(rows[i].style.height)) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _resizeWidth: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var styleWidth = element[0].style[WIDTH];\n            var currentWidth = outerWidth(element);\n            var parentWidth = element.parent().width();\n            var maxWidth = that._getMaxDimensionValue(WIDTH);\n            var newWidth;\n            var ratioValue;\n            var ratioTotalValue;\n            var constrainedWidth;\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementWidth)) {\n                that._initialElementWidth = currentWidth;\n            }\n\n            //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedWidth = constrain({\n                value: that._initialElementWidth + initialDelta,\n                min: that.options.minWidth,\n                max: maxWidth\n            });\n\n            if (inPercentages(styleWidth)) {\n                //detect resizing greater than 100%\n                if (currentWidth + delta > parentWidth) {\n                    ratioValue = max(constrainedWidth, parentWidth);\n                    ratioTotalValue = min(constrainedWidth, parentWidth);\n                }\n                else {\n                    ratioValue = min(constrainedWidth, parentWidth);\n                    ratioTotalValue = max(constrainedWidth, parentWidth);\n                }\n\n                newWidth = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n            }\n            else {\n                newWidth = toPixels(constrainedWidth);\n            }\n\n            that._setColumnsWidth();\n\n            element[0].style[WIDTH] = newWidth;\n        },\n\n        _resizeHeight: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var styleHeight = element[0].style[HEIGHT];\n            var currentHeight = outerHeight(element);\n            var parent = element.parent();\n            var parentHeight = parent.height();\n            var maxHeight = that._getMaxDimensionValue(HEIGHT);\n            var newHeight;\n            var ratioValue;\n            var ratioTotalValue;\n            var constrainedHeight;\n            var minHeight = that.options.minHeight;\n            var hasRowsInPixels = that._hasRowsInPixels();\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementHeight)) {\n                that._initialElementHeight = currentHeight;\n            }\n\n            //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedHeight = constrain({\n                value: that._initialElementHeight + initialDelta,\n                min: minHeight,\n                max: maxHeight\n            });\n\n            if (hasRowsInPixels && delta < 0) {\n                //decreasing table height when rows are sized in pixels is not possible\n                that._setRowsHeightInPercentages();\n            }\n\n            if (inPercentages(styleHeight)) {\n                //detect resizing greater than 100%\n                if (currentHeight + delta > parentHeight) {\n                    ratioValue = max(constrainedHeight, parentHeight);\n                    ratioTotalValue = min(constrainedHeight, parentHeight);\n                }\n                else {\n                    ratioValue = min(constrainedHeight, parentHeight);\n                    ratioTotalValue = max(constrainedHeight, parentHeight);\n                }\n\n                newHeight = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n            }\n            else {\n                newHeight = toPixels(constrainedHeight);\n            }\n\n            element[0].style[HEIGHT] = newHeight;\n\n            if (hasRowsInPixels && delta < 0) {\n                //restore original rows height unit\n                that._setRowsHeightInPixels();\n            }\n        },\n\n        _setColumnsWidth: function() {\n            var that = this;\n            var element = $(that.element);\n            var parentElement = element.parent()[0];\n            var parentColumn = element.closest(COLUMN);\n            var columns = parentColumn.closest(ROW).children();\n            var columnsLength = columns.length;\n            var i;\n\n            function isWidthInPercentages(element) {\n                var styleWidth = element.style.width;\n\n                if (styleWidth !== \"\") {\n                    return inPercentages(styleWidth) ? true : false;\n                }\n                else {\n                    return $(element).hasClass(TABLE_CLASS) ? true : false;\n                }\n            }\n\n            if (isWidthInPercentages(element[0]) && parentElement === parentColumn[0] && parentElement.style[WIDTH] === \"\") {\n                for (i = 0; i < columnsLength; i++) {\n                    columns[i].style[WIDTH] = toPixels($(columns[i]).width());\n                }\n            }\n        },\n\n        _setRowsHeightInPercentages: function() {\n            var that = this;\n            var tableHead = $(that.element).children(THEAD);\n            var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n            var tableBody = $(that.element).children(TBODY);\n            var tableBodyHeight = tableBody.height();\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n            }\n        },\n\n        _setRowsHeightInPixels: function() {\n            var that = this;\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n            }\n        }\n    });\n\n    var ImageResizing = ElementResizing.extend({\n        _bindToResizeHandlesEvents: function() {\n            var that = this;\n            var handles = that.handles || [];\n            var length = handles.length;\n            var i;\n            var handle;\n\n            for (i = 0; i < length; i++) {\n                handle = handles[i];\n                handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n\n                if (handle.options.direction === \"north\" || handle.options.direction === \"south\") {\n                    handle.bind(DRAG, that._onResizeHandleDragVertical.bind(that));\n                } else if (handle.options.direction === \"east\" || handle.options.direction === \"west\") {\n                    handle.bind(DRAG, that._onResizeHandleDragHorizontal.bind(that));\n                } else {\n                    handle.bind(DRAG, that._onResizeHandleDragLocked.bind(that));\n                }\n\n                handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n            }\n        },\n\n        _getDeltas: function(args) {\n            return extend({}, {\n                deltaX: 0,\n                deltaY: 0,\n                initialDeltaX: 0,\n                initialDeltaY: 0\n            }, args);\n        },\n\n        _onResizeHandleDragVertical: function(args) {\n            var deltas = this._getDeltas(args);\n\n            this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n            this.showResizeHandles();\n        },\n\n        _onResizeHandleDragHorizontal: function(args) {\n            var deltas = this._getDeltas(args);\n\n            this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n            this.showResizeHandles();\n        },\n\n        _onResizeHandleDragLocked: function(args) {\n            var min = Math.min(Math.abs(args.initialDeltaX), Math.abs(args.initialDeltaY)),\n                initialWidth = this._initialElementWidth,\n                initialHeight = this._initialElementHeight,\n                deltas;\n\n            if (min === args.initialDeltaX || min === args.initialDeltaX * -1) {\n                args.initialDeltaY = args.initialDeltaX * initialHeight / initialWidth;\n                args.deltaY = args.deltaX;\n            } else if (min === args.initialDeltaY || min === args.initialDeltaY * -1) {\n                args.initialDeltaX = args.initialDeltaY * initialWidth / initialHeight;\n                args.deltaX = args.deltaY;\n            }\n\n            deltas = this._getDeltas(args);\n\n            this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n            this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n            this.showResizeHandles();\n        },\n\n        _resizeWidth: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var currentWidth = outerWidth(element);\n            var newWidth;\n            var constrainedWidth;\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementWidth)) {\n                that._initialElementWidth = currentWidth;\n            }\n\n            //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedWidth = constrain({\n                value: that._initialElementWidth + initialDelta,\n                min: that.options.minWidth,\n                max: that._getMaxDimensionValue(WIDTH)\n            });\n\n            newWidth = toPixels(constrainedWidth);\n            element[0].style[WIDTH] = newWidth;\n            element.attr(WIDTH, Math.floor(constrainedWidth));\n        },\n\n        _resizeHeight: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var currentHeight = outerHeight(element);\n            var newHeight;\n            var constrainedHeight;\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementHeight)) {\n                that._initialElementHeight = currentHeight;\n            }\n\n            //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedHeight = constrain({\n                value: that._initialElementHeight + initialDelta,\n                min: that.options.minHeight,\n                max: Number.MAX_SAFE_INTEGER\n            });\n\n            newHeight = toPixels(constrainedHeight);\n            element[0].style[HEIGHT] = newHeight;\n            element.attr(HEIGHT, Math.floor(constrainedHeight));\n        }\n    });\n\n    var ElementResizingFactory = Class.extend({\n        create: function(editor) {\n            var factory = this;\n\n            $(editor.body)\n                .on(\"dragstart\" + NS, function() {\n                    var nodes = RangeUtils.nodes(editor.getRange()),\n                        hasImg = false;\n\n                    nodes.forEach(function(node) {\n                        if (node.nodeName === \"IMG\") {\n                            hasImg = true;\n                        }\n                    });\n\n                    if (hasImg && nodes.length > 1) {\n                        editor.elementResizing._destroyResizeHandles();\n                    }\n                })\n                .on(DROP + NS, function() {\n                    setTimeout(function() {\n                        var image = RangeUtils.image(editor.getRange());\n\n                        if (image) {\n                            editor.elementResizing._destroyResizeHandles();\n                            editor.elementResizing.element = image;\n                            editor.elementResizing.showResizeHandles();\n                        }\n                    });\n                })\n                .on(MOUSE_DOWN + NS, TABLE + COMMA + IMG, function(e) {\n                    var eventTarget = e.target;\n                    var eventCurrentTarget = e.currentTarget;\n                    var elementResizing = editor.elementResizing;\n                    var element = elementResizing ? elementResizing.element : null;\n\n                    if (elementResizing) {\n                        if (element && eventCurrentTarget !== element) {\n                            if (contains(eventCurrentTarget, element) && element !== eventTarget && contains(element, eventTarget)) {\n                                //prevent a parent table resizing init when clicking on a nested table when the event bubbles\n                                //instead of stopping event propagation\n                                return;\n                            }\n                            else {\n                                if (element !== eventTarget) {\n                                    editor._destroyElementResizing();\n                                    factory._initResizing(editor, eventCurrentTarget);\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        factory._initResizing(editor, eventCurrentTarget);\n                    }\n\n                    editor._showElementResizeHandles();\n                })\n                .on(MOUSE_DOWN + NS, function(e) {\n                    var elementResizing = editor.elementResizing;\n                    var element = elementResizing ? elementResizing.element : null;\n                    var target = e.target;\n                    var isResizeHandleOrChild = $(target).hasClass(RESIZE_HANDLE_WRAPPER_CLASS) || $(target).parents(DOT + RESIZE_HANDLE_WRAPPER_CLASS).length > 0;\n\n                    if (elementResizing && element !== target && !contains(element, target) && !isResizeHandleOrChild) {\n                        editor._destroyElementResizing();\n                    }\n                });\n        },\n\n        dispose: function(editor) {\n            $(editor.body).off(NS);\n        },\n\n        _initResizing: function(editor, element) {\n            // table and image resizing is natively supported in IE\n            // https://stackoverflow.com/questions/53831846/resizing-images-in-contenteditable-div-stopped-working-in-firefox\n            // Enable custom resize handlers for FF too\n            if (!browser.msie) {\n                if ($(element).is(TABLE)) {\n                    editor.elementResizing = editor.tableResizing = new TableResizing(element, {\n                        appendHandlesTo: editor.body,\n                        rtl: kendo.support.isRtl(editor.element),\n                        rootElement: editor.body\n                    });\n                } else if ($(element).is(IMG)) {\n                    editor.elementResizing = new ImageResizing(element, {\n                        appendHandlesTo: editor.body,\n                        rtl: kendo.support.isRtl(editor.element),\n                        rootElement: editor.body\n                    });\n                }\n\n                if (editor._showElementResizeHandlesProxy) {\n                    editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n                    editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n                }\n            }\n        }\n    });\n\n    ElementResizingFactory.current = new ElementResizingFactory();\n\n    extend(Editor, {\n        TableResizing: TableResizing,\n        ImageResizing: ImageResizing,\n        ElementResizing: ElementResizing,\n        ElementResizingFactory: ElementResizingFactory\n    });\n\n})(window.kendo);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    RangeUtils = Editor.RangeUtils,\n    dom = Editor.Dom,\n    registerTool = EditorUtils.registerTool,\n    Command = Editor.Command;\n\nvar tableFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"table\"] }]);\nvar cellsFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"td\",\"th\"] }]);\nvar reUnit = /([a-z]+|%)$/i;\n\nvar COL = \"col\";\nvar ROW = \"row\";\nvar COLGROUP = \"colgroup\";\nvar SCOPE = \"scope\";\nvar COL_INDEX = \"col-index\";\nvar TH = \"th\";\nvar TD = \"td\";\nvar THEAD = \"thead\";\nvar HEADERS = \"headers\";\nvar TABLE = \"table\";\n\nvar TableWizardCommand = Command.extend({\n    exec: function() {\n        var cmd = this;\n        var editor = cmd.editor;\n        var range = cmd.range = cmd.lockRange();\n        var isTableCellWizard = cmd.options.tableCellWizard;\n        var selectedTable = cmd._sourceTable = !cmd.options.insertNewTable ? cmd._selectedTable(range) : undefined$1;\n        var selectedCells = cmd._selectedTableCells = selectedTable ? cmd._selectedCells(range) : undefined$1;\n        var options = {\n            visible: false,\n            messages: editor.options.messages,\n            closeCallback: cmd.onDialogClose.bind(cmd),\n            table: cmd.parseTable(selectedTable, selectedCells),\n            dialogOptions: editor.options.dialogOptions,\n            isRtl: kendo.support.isRtl(editor.wrapper)\n        };\n\n        var dialog = new Editor.TableWizardDialog(options);\n        dialog.open(isTableCellWizard);\n    },\n\n    onDialogClose: function(data) {\n        var cmd = this;\n        cmd.releaseRange(cmd.range);\n\n        if (data) { //Ok button pressed\n            if (cmd.options.insertNewTable) {\n                cmd.insertTable(cmd.createNewTable(data));\n            } else {\n                cmd.updateTable(data, cmd._sourceTable, cmd._selectedTableCells);\n            }\n        }\n    },\n    releaseRange: function(range) {\n        var cmd = this;\n        var doc = cmd.editor.document;\n        dom.windowFromDocument(doc).focus();\n        Command.fn.releaseRange.call(cmd, range);\n    },\n    insertTable: function(table) {\n        var range = this.range;\n\n        range.insertNode(table);\n        range.collapse(true);\n        this.editor.selectRange(range);\n\n        this._ensureFocusableAfterTable(table);\n    },\n    _ensureFocusableAfterTable: function(table) {\n        var siblingNodes = $(table).parent().contents();\n        var lastSiblingIndex = siblingNodes.length - 1;\n        var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n        while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n            lastSiblingIndex -= 1;\n            lastSibling = siblingNodes.get(lastSiblingIndex);\n        }\n\n        if (lastSibling === table) {\n            dom.insertAfter(dom.createEmptyNode(this.editor.document, \"p\"), table);\n        }\n    },\n    updateTable: function(data, table, selectedCells) {\n        var cmd = this;\n        var tableRows = $(table.rows).toArray();\n        var tableProp = data.tableProperties;\n        var rows = tableProp.rows;\n        var tHead = table.tHead;\n        var last = cmd._lastInCollection;\n        var lastSelectedRow, cellProp;\n\n        //Leave only first selected cell\n        while (selectedCells.length > 1) {\n            selectedCells.pop();\n        }\n\n        lastSelectedRow = selectedCells.length ? last(selectedCells).parentNode : last(tableRows);\n\n        cmd._deleteTableRows(tableRows, tableRows.length - rows);\n\n        if (tableRows.length < rows) {\n            cmd._addRows(lastSelectedRow, rows, tableRows);\n        }\n\n        dom.reMapTableColumns(table, COL_INDEX);\n        cmd._updateColumns(tableRows, tableProp.columns, selectedCells, lastSelectedRow);\n        cmd._updateTableProperties(table, tableProp);\n\n        cellProp = data.cellProperties;\n        if (selectedCells[0]) {\n            dom.attr(selectedCells[0], { id: (cellProp || {}).id || null });\n        }\n        if (cellProp) {\n            (cellProp.selectAllCells ? $(tableRows).children() : $(selectedCells)).each(function(i, cell) {\n                cmd._updateCellProperties(cell, cellProp, tableProp);\n            });\n        }\n\n        cmd._updateCaption(table, tableProp);\n\n        if (tHead) {\n            cmd._updateHeadersWithThead(table, data);\n        } else {\n            cmd._updateHeadersNoThead(table, data);\n        }\n\n        cmd._updateHeaderAssociates(table, tableProp);\n        dom.clearTableMappings(table, COL_INDEX);\n    },\n    _isHeadingRow: function(row) {\n        return dom.is(row.cells[0], TH) && dom.is(row.parentNode, THEAD);\n    },\n    _isHeadingCell: function(cell) {\n        return dom.is(cell, TH);\n    },\n    cellsWithHeadersAssociated: function(table) {\n        var cells = $(table.rows).children();\n        var headingIds = [];\n        var checkHeader = function(header) {\n            return headingIds.indexOf(header) > -1;\n        };\n\n        cells.each(function(c, cell) {\n            if (cell.id && dom.is(cell, TH)) {\n                headingIds.push(cell.id);\n            }\n        });\n\n        var associatedCells = cells.filter(function(c, cell) {\n            var headersAttr = cell.getAttribute(HEADERS);\n            var headersArray;\n\n            if (headersAttr && !dom.is(cell, TH)) {\n                headersArray = headersAttr.split(\" \");\n\n                if (headersArray && headersArray.length > 0) {\n                    return headersArray.some(checkHeader);\n                }\n            }\n\n            return false;\n        });\n\n        return !!associatedCells.length;\n    },\n    _insertCells: function(count, row, index) {\n        index = isNaN(index) ? -1 : index;\n        for (var i = 0, cell; i < count; i++) {\n            cell = row.insertCell(index);\n            cell.innerHTML = \"&nbsp;\";\n        }\n    },\n    _deleteTableRows: function(rows, count) {\n        for (var i = 0, row, rowParent; i < count; i++) {\n            row = rows.pop();\n            rowParent = row.parentNode;\n            rowParent.removeChild(row);\n            if (!rowParent.rows.length) {\n                dom.remove(rowParent);\n            }\n        }\n    },\n    createNewTable: function(data) {\n        var cmd = this;\n        var doc = cmd.editor.document;\n        var tableProp = data.tableProperties;\n        var table = dom.create(doc, TABLE);\n        var rowIndex = 0;\n        var thead;\n\n        cmd._updateTableProperties(table, tableProp);\n        cmd._updateCaption(table, tableProp);\n\n        if (tableProp.headerRows && tableProp.headerRows > 0) {\n            thead = table.createTHead();\n            cmd._createTableRows(data, thead, rowIndex, true);\n            rowIndex += tableProp.headerRows;\n        }\n\n        var tbody = table.createTBody();\n        cmd._createTableRows(data, tbody, rowIndex, false);\n\n        dom.reMapTableColumns(table, COL_INDEX);\n\n        if (tableProp.cellsWithHeaders === \"ids\") {\n            dom.associateWithIds(table);\n        } else if (tableProp.cellsWithHeaders === \"scope\") {\n            cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n        }\n\n        dom.clearTableMappings(table, COL_INDEX);\n\n        return table;\n    },\n    _createTableRows: function(data, container, initialIndex, headerRows) {\n        var cmd = this;\n        var tableProp = data.tableProperties;\n        var cellProp = data.cellProperties;\n        var columns = tableProp.columns;\n        var rows = headerRows ? tableProp.headerRows : tableProp.rows;\n        var headerColumns = tableProp.headerColumns;\n\n        for (var r = initialIndex, row; r < rows; r++) {\n            row = container.insertRow();\n\n            for (var c = 0, cell; c < columns; c++) {\n                if (headerRows || headerColumns > c) {\n                    cell = document.createElement(TH);\n                } else {\n                    cell = document.createElement(TD);\n                }\n\n                row.appendChild(cell);\n                cell.innerHTML = \"&nbsp;\";\n                if (cellProp && r === 0 && c === 0 && cellProp.id) {\n                    cell.id = cellProp.id;\n                }\n\n                cmd._updateCellProperties(cell, cellProp && (cellProp.selectAllCells || (r === 0 && c === 0)) ? cellProp : {}, tableProp);\n            }\n        }\n    },\n    _addRows: function(lastSelectedRow, rows, tableRows) {\n        var cmd = this;\n        var rowIndex = $(lastSelectedRow).index();\n        var cellsLength = lastSelectedRow.cells.length;\n        var newRowsCount = rows - tableRows.length;\n        var parent = lastSelectedRow.parentNode;\n        var row;\n\n        while (newRowsCount) {\n            row = parent.insertRow(rowIndex + 1);\n            cmd._insertCells(cellsLength - row.cells.length, row);\n            newRowsCount--;\n        }\n    },\n    _updateColumns: function(tableRows, columns, selectedCells, lastSelectedRow) {\n        var cmd = this;\n        var last = cmd._lastInCollection;\n        var firstRowLastCell = last(tableRows[0].cells);\n        var numberOfColumns = Number(firstRowLastCell.getAttribute(COL_INDEX)) + firstRowLastCell.colSpan;\n\n        if (numberOfColumns > columns) {\n            $(tableRows).each(function(i, row) {\n                var lastCurrentCell = last(row.cells);\n                var rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n\n                while (rowColumns > columns) {\n                    if (lastCurrentCell.colSpan && lastCurrentCell.colSpan > 1) {\n                        lastCurrentCell.colSpan -= 1;\n                    } else {\n                        row.deleteCell(-1);\n                    }\n\n                    lastCurrentCell = last(row.cells);\n                    rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n                }\n            });\n        }\n\n        if (numberOfColumns < columns) {\n            var cellIndex = $(last(selectedCells) || last(lastSelectedRow.cells)).index();\n            $(tableRows).each(function(i, row) {\n                var lastCurrentCell = last(row.cells);\n                cmd._insertCells(columns - Number(lastCurrentCell.getAttribute(COL_INDEX)) - lastCurrentCell.colSpan, row, cellIndex + 1);\n            });\n        }\n    },\n    _updateTableProperties: function(table, data) {\n        var style = this._getStylesData(data);\n        dom.attr(table, {\n            cellSpacing: data.cellSpacing || null,\n            topCellPadding: this._getNumericValue(data.topCellPadding) ?? '',\n            leftCellPadding: this._getNumericValue(data.leftCellPadding) ?? '',\n            bottomCellPadding: this._getNumericValue(data.bottomCellPadding) ?? '',\n            rightCellPadding: this._getNumericValue(data.rightCellPadding) ?? '',\n            className: data.className || null,\n            id: data.id || null,\n            summary: data.summary || null,\n            style: style || null\n        });\n        $(table).addClass(\"k-table\");\n    },\n    _updateCellProperties: function(cell, data, tableData) {\n        var style = this._getStylesData(data);\n        style.paddingTop = this._getNumericValue(data.topCellPadding) ?? this._getNumericValue(tableData?.topCellPadding) ?? '';\n        style.paddingLeft = this._getNumericValue(data.leftCellPadding) ?? this._getNumericValue(tableData?.leftCellPadding) ?? '';\n        style.paddingBottom = this._getNumericValue(data.bottomCellPadding) ?? this._getNumericValue(tableData?.bottomCellPadding) ?? '';\n        style.paddingRight = this._getNumericValue(data.rightCellPadding) ?? this._getNumericValue(tableData?.rightCellPadding) ?? '';\n        style.margin = data.cellMargin || null;\n        dom.attr(cell, {\n            style: style || null,\n            className: data.className || null\n        });\n    },\n    _updateCaption: function(table, data) {\n        if (table.caption && !data.captionContent) {\n            table.deleteCaption();\n        } else if (data.captionContent) {\n            var caption = table.createCaption();\n            caption.innerHTML = data.captionContent;\n            var alignment = this._getAlignmentData(data.captionAlignment);\n            dom.attr(caption, {\n                style: {\n                    textAlign: alignment.textAlign,\n                    verticalAlign: alignment.verticalAlign\n                }\n            });\n        }\n    },\n    _updateHeadersNoThead: function(table, data) {\n        var cmd = this;\n        var tableProp = data.tableProperties;\n        var rows = table.rows;\n        var row, cells, cell, i, j;\n\n        for (i = 0; i < rows.length; i++) {\n            row = rows[i];\n            cells = row.cells;\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                if (!cmd._isHeadingCell(cell) && (i < tableProp.headerRows || tableProp.headerColumns > cell.getAttribute(COL_INDEX))) {\n                    dom.changeTag(cell, TH, false);\n                } else if (cmd._isHeadingCell(cell) && i >= tableProp.headerRows && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                    dom.changeTag(cell, TD, false);\n                }\n            }\n        }\n    },\n    _updateHeadersWithThead: function(table, data) {\n        var cmd = this;\n        var tableProp = data.tableProperties;\n        var thead = table.tHead;\n        var rowIndex = 0;\n        var tbody = table.tBodies[0];\n        var row, cell, i;\n\n        if (!tbody) {\n            tbody = table.createTBody();\n        }\n\n        if (tableProp.headerRows && tableProp.headerRows > 0) {\n            if (!thead) {\n                thead = table.createTHead();\n            }\n\n            while (thead.rows.length < tableProp.headerRows) {\n                thead.appendChild(tbody.rows[0]);\n            }\n\n            while (thead.rows.length > tableProp.headerRows) {\n                tbody.appendChild(thead.rows[0]);\n            }\n\n            cmd._swapToHeaderCells(thead);\n        } else if (thead) {\n            while (thead.rows.length > 0) {\n                tbody.appendChild(thead.rows[thead.rows.length - 1]);\n            }\n\n            table.deleteTHead();\n        }\n\n        while (tbody.rows.length > rowIndex) {\n            row = tbody.rows[rowIndex];\n            for (i = 0; i < row.cells.length; i++) {\n                cell = row.cells[i];\n                if (cmd._isHeadingCell(cell) && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                    dom.changeTag(cell, TD, false);\n                } else if (!cmd._isHeadingCell(cell) && tableProp.headerColumns > cell.getAttribute(COL_INDEX)) {\n                    dom.changeTag(cell, TH, false);\n                }\n            }\n            rowIndex += 1;\n        }\n    },\n    _updateHeaderAssociates: function(table, tableProp) {\n        var cmd = this;\n\n        if (tableProp.cellsWithHeaders === \"ids\") {\n            if (!cmd.cellsWithHeadersAssociated(table)) {\n                cmd._removeScopes(table);\n            }\n            dom.associateWithIds(table);\n        } else if (tableProp.cellsWithHeaders === \"scope\") {\n            if (cmd.cellsWithHeadersAssociated(table)) {\n                cmd._removeAssociates(table);\n            }\n            cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n        } else {\n            if (cmd.cellsWithHeadersAssociated(table)) {\n                cmd._removeAssociates(table);\n            } else {\n                cmd._removeScopes(table);\n            }\n        }\n    },\n    _addScopes: function(table, headerRows, headerCols) {\n        var rows = table.rows;\n        var i, j, row, cell;\n\n        for (i = 0; i < rows.length; i++) {\n            row = rows[i];\n\n            for (j = 0; j < row.cells.length; j++) {\n                cell = row.cells[j];\n\n                if (i < headerRows) {\n                    cell.setAttribute(SCOPE, COL);\n                } else if (cell.getAttribute(COL_INDEX) < headerCols) {\n                    cell.setAttribute(SCOPE, ROW);\n                }\n            }\n        }\n    },\n    _removeScopes: function(table) {\n        $(table).find(TH).removeAttr(SCOPE);\n        $(table).find(COL).remove();\n        $(table).find(COLGROUP).remove();\n    },\n    _removeAssociates: function(table) {\n        $(table).find(\"th, td\").removeAttr(\"id headers\");\n    },\n    _swapToHeaderCells: function(thead) {\n        var tds = $(thead).find(\"td\");\n        var swapCell = function(index, cell) {\n            dom.changeTag(cell, TH, false);\n        };\n        tds.each(swapCell);\n    },\n    _getStylesData: function(data) {\n        var that = this;\n        var alignment = this._getAlignmentData(data.alignment);\n        var whiteSpace = \"wrapText\" in data ? (data.wrapText ? \"\" : \"nowrap\") : null;\n\n        return $.extend({\n            width: data.width ? data.width + data.widthUnit : null,\n            height: data.height ? data.height + data.heightUnit : null,\n            textAlign: alignment.textAlign,\n            verticalAlign: alignment.verticalAlign,\n            backgroundColor: data.bgColor || \"\",\n            borderWidth: data.borderWidth,\n            borderStyle: data.borderStyle,\n            borderColor: data.borderColor || \"\",\n            borderCollapse: data.collapseBorders ? \"collapse\" : null,\n            whiteSpace: whiteSpace\n        }, that._getTablePositionData(data.position));\n    },\n    _getAlignmentData: function(alignment) {\n        var textAlign = \"\";\n        var verticalAlign = textAlign;\n\n        if (alignment) {\n            if (alignment.indexOf(\" \") != -1) {\n                var align = alignment.split(\" \");\n                textAlign = align[0];\n                verticalAlign = align[1];\n            } else {\n                textAlign = alignment;\n            }\n        }\n        return { textAlign: textAlign, verticalAlign: verticalAlign };\n    },\n    _getTablePositionData: function(position) {\n        if (!position) {\n            return {};\n        }\n\n        return { marginLeft: position != \"left\" ? \"auto\" : \"\", marginRight: position != \"right\" ? \"auto\" : \"\" };\n    },\n    parseTable: function(table, selectedCells) {\n        if (!table) {\n            return { tableProperties: {}, selectedCells: [] };\n        }\n\n        var cmd = this;\n        var tStyle = table.style;\n        var rows = table.rows;\n        var caption = table.caption;\n        var captionClone = $(caption ? caption.cloneNode(true) : undefined$1);\n        captionClone.find(\".k-marker\").remove();\n\n        var cssClass = table.className;\n        cssClass = cssClass.replace(/^k-table\\s|\\sk-table$/, \"\");\n        cssClass = cssClass.replace(/\\sk-table\\s/, \" \");\n        cssClass = cssClass.replace(/^k-table$/, \"\");\n\n        var tableAlignment = cmd._getAlignment(table, true);\n        var tablePosition = cmd._getTablePosition(table);\n        var captionAlignment = caption ? cmd._getAlignment(caption) : undefined$1;\n        var numberOfHeaderRows = dom._getNumberOfHeaderRows(table);\n\n        var cellsWithHeaders;\n        if (cmd.cellsWithHeadersAssociated(table)) {\n            cellsWithHeaders = \"ids\";\n        } else if ($(table).find(\"th[scope]\").length > 0) {\n            cellsWithHeaders = \"scope\";\n        } else {\n            cellsWithHeaders = \"none\";\n        }\n\n        dom.reMapTableColumns(table, COL_INDEX);\n        var numberOfColumns = dom._getNumberOfColumns(table);\n        var numberOfHeaderColumns = dom._getNumberOfHeaderColumns(table, numberOfHeaderRows);\n        dom.clearTableMappings(table, COL_INDEX);\n\n        var tableJson = {\n            tableProperties: {\n                width: tStyle.width || table.width ? parseFloat(tStyle.width || table.width) : null,\n                height: tStyle.height || table.height ? parseFloat(tStyle.height || table.height) : null,\n                columns: numberOfColumns,\n                rows: rows.length,\n                widthUnit: cmd._getUnit(tStyle.width),\n                heightUnit: cmd._getUnit(tStyle.height),\n                cellSpacing: table.cellSpacing,\n                topCellPadding: table.topCellPadding,\n                leftCellPadding: table.leftCellPadding,\n                bottomCellPadding: table.bottomCellPadding,\n                rightCellPadding: table.rightCellPadding,\n                alignment: tableAlignment.textAlign,\n                position: tablePosition,\n                bgColor: tStyle.backgroundColor || table.bgColor,\n                className: cssClass,\n                id: table.id,\n                borderWidth: tStyle.borderWidth || table.border,\n                borderColor: tStyle.borderColor,\n                borderStyle: tStyle.borderStyle || \"\",\n                collapseBorders: !!tStyle.borderCollapse,\n                summary: table.summary,\n                captionContent: caption ? captionClone.html() : \"\",\n                captionAlignment: caption && captionAlignment.textAlign ? captionAlignment.textAlign + \" \" + captionAlignment.verticalAlign : \"\",\n                headerRows: numberOfHeaderRows,\n                headerColumns: numberOfHeaderColumns,\n                cellsWithHeaders: cellsWithHeaders\n            },\n            selectedCells: []\n        };\n\n        tableJson.rows = cmd.parseTableRows(rows, selectedCells, tableJson);\n\n        return tableJson;\n    },\n    parseTableRows: function(rows, selectedCells, tableJson) {\n        var cmd = this;\n        var data = [], row, rowData, cells, cell, cellData;\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowData = { cells: [] };\n            cells = row.cells;\n            data.push(rowData);\n            for (var j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                cellData = cmd.parseCell(cell);\n                if ($.inArray(cell, selectedCells) != -1) {\n                    tableJson.selectedCells.push(cellData);\n                }\n                rowData.cells.push(cellData);\n            }\n        }\n        return data;\n    },\n    parseCell: function(cell) {\n        var cmd = this;\n        var cStyle = cell.style;\n        var alignment = cmd._getAlignment(cell);\n        alignment = alignment.textAlign ? alignment.textAlign + \" \" + alignment.verticalAlign : \"\";\n\n        var data = {\n            width: cStyle.width || cell.width ? parseFloat(cStyle.width || cell.width) : null,\n            height: cStyle.height || cell.height ? parseFloat(cStyle.height || cell.height) : null,\n            widthUnit: cmd._getUnit(cStyle.width),\n            heightUnit: cmd._getUnit(cStyle.height),\n            cellMargin: cStyle.margin,\n            topCellPadding: cStyle.paddingTop,\n            leftCellPadding: cStyle.paddingLeft,\n            bottomCellPadding: cStyle.paddingBottom,\n            rightCellPadding: cStyle.paddingRight,\n            alignment: alignment,\n            bgColor: cStyle.backgroundColor || cell.bgColor,\n            className: cell.className,\n            id: cell.id,\n            borderWidth: cStyle.borderWidth || cell.border,\n            borderColor: cStyle.borderColor,\n            borderStyle: cStyle.borderStyle,\n            wrapText: cStyle.whiteSpace != \"nowrap\"\n        };\n\n        return data;\n    },\n    _getTablePosition: function(element) {\n        var style = element.style;\n        if (style.marginLeft == \"auto\" && style.marginRight == \"auto\") {\n            return \"center\";\n        }\n\n        if (style.marginLeft == \"auto\") {\n            return \"right\";\n        }\n\n        return \"left\";\n    },\n    _getAlignment: function(element, horizontalOnly) {\n        var style = element.style;\n        var hAlign = style.textAlign || element.align || \"\";\n        if (horizontalOnly) {\n            return { textAlign: hAlign };\n        }\n        var vAlign = style.verticalAlign || element.vAlign || \"\";\n        if (hAlign && vAlign) {\n            return { textAlign: hAlign, verticalAlign: vAlign };\n        }\n        if (!hAlign && vAlign) {\n            return { textAlign: \"left\", verticalAlign: vAlign };\n        }\n        if (hAlign && !vAlign) {\n            return { textAlign: hAlign, verticalAlign: \"top\" };\n        }\n        return { textAlign: \"\", verticalAlign: \"\" };\n    },\n    _getUnit: function(value) {\n        var unit = (value || \"\").match(reUnit);\n        return unit ? unit[0] : \"px\";\n    },\n    _selectedTable: function(range) {\n        var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n        return tableFormatFinder.findSuitable(nodes)[0];\n    },\n    _selectedCells: function(range) {\n        var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n        return cellsFormatFinder.findSuitable(nodes);\n    },\n    _lastInCollection: function(collection) {\n        return collection[collection.length - 1];\n    },\n    _getNumericValue: function(value) {\n        return !isNaN(value) || typeof value === \"string\" ? value : null;\n    }\n});\n\nvar TableWizardTool = Editor.Tool.extend({\n    command: function(options) {\n        options.insertNewTable = this.options.insertNewTable;\n        options.tableCellWizard = !!this.options.tableCellWizard;\n        return new TableWizardCommand(options);\n    }\n});\n\nvar TableWizardEditTool = TableWizardTool.extend({\n    update: function(ui, nodes) {\n        var isFormatted = !tableFormatFinder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (isFormatted === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    }\n});\n\nvar TableCellWizardEditTool = TableWizardTool.extend({\n    update: function(ui, nodes) {\n        var isFormatted = !tableFormatFinder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (isFormatted === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    }\n});\n\nkendo.ui.editor.TableWizardTool = TableWizardTool;\nkendo.ui.editor.TableWizardCommand = TableWizardCommand;\n\nregisterTool(\"tableProperties\", new TableWizardEditTool({ command: TableWizardCommand, insertNewTable: false, property: \"tableProperties\" }));\nregisterTool(\"tableCellProperties\", new TableCellWizardEditTool({ command: TableWizardCommand, tableCellWizard: true, insertNewTable: false, property: \"tableCellProperties\" }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nconst FORM_FIELD_CLASS = \"k-form-field\",\n      INVISIBLE_CLASS = \"k-visibility-invisible\",\n      DOT = \".\";\n\nvar kendo = window.kendo,\n    encode = kendo.htmlEncode,\n    numericTextBoxSettings = { format: \"0\", min: 0 },\n    units = [\"px\", \"em\"],\n    borderStyles = [\"solid\", \"dotted\", \"dashed\", \"double\", \"groove\", \"ridge\", \"inset\", \"outset\", \"initial\", \"inherit\", \"none\", \"hidden\"];\n\nvar DEFAULT_NUMBER_OF_COLS_AND_ROWS = 4;\n\nvar textWrapDropDownSettings = {\n    dataSource: [{\n        className: \"text-wrap\",\n        value: \"wrap\"\n    }, {\n        className: \"parameter-string\",\n        value: \"nowrap\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-text-wrap\" }) + encode(tooltip)\n};\n\nvar tablePositionDropDownSettings = {\n    dataSource: [{\n        className: \"table-position-start\",\n        value: \"left\"\n    }, {\n        className: \"table-position-center\",\n        value: \"center\"\n    }, {\n        className: \"table-position-end\",\n        value: \"right\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n};\n\nvar tableAlignmentDropDownSettings = {\n    dataSource: [{\n        className: \"table-align-middle-left\",\n        value: \"left\"\n    }, {\n        className: \"table-align-middle-center\",\n        value: \"center\"\n    }, {\n        className: \"table-align-middle-right\",\n        value: \"right\"\n    }, {\n        className: \"align-remove\",\n        value: \"\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n};\n\nvar cellAlignmentDropDownSettings = {\n    dataSource: [{\n        className: \"table-align-top-left\",\n        value: \"left top\"\n    }, {\n        className: \"table-align-top-center\",\n        value: \"center top\"\n    }, {\n        className: \"table-align-top-right\",\n        value: \"right top\"\n    }, {\n        className: \"table-align-middle-left\",\n        value: \"left middle\"\n    }, {\n        className: \"table-align-middle-center\",\n        value: \"center middle\"\n    }, {\n        className: \"table-align-middle-right\",\n        value: \"right middle\"\n    }, {\n        className: \"table-align-bottom-left\",\n        value: \"left bottom\"\n    }, {\n        className: \"table-align-bottom-center\",\n        value: \"center bottom\"\n    }, {\n        className: \"table-align-bottom-right\",\n        value: \"right bottom\"\n    }, {\n        className: \"align-remove\",\n        value: \"\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n};\n\nvar accessibilityAlignmentDropDownSettings = {\n    dataSource: [{\n        className: \"table-align-top-left\",\n        value: \"left top\"\n    }, {\n        className: \"table-align-top-center\",\n        value: \"center top\"\n    }, {\n        className: \"table-align-top-right\",\n        value: \"right top\"\n    }, {\n        className: \"table-align-bottom-left\",\n        value: \"left bottom\"\n    }, {\n        className: \"table-align-bottom-center\",\n        value: \"center bottom\"\n    }, {\n        className: \"table-align-bottom-right\",\n        value: \"right bottom\"\n    }, {\n        className: \"align-remove\",\n        value: \"\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" })\n};\n\nvar tablePropertiesDialogTemplate = ({ messages }) =>\n    '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n        '<div id=\"k-table-wizard-tabs\" class=\"k-root-tabs\">' +\n            '<ul>' +\n                `<li class=\"k-active\">${ messages.tableTab }</li>` +\n                `<li>${ messages.accessibilityTab }</li>` +\n            '</ul>' +\n            '<div id=\"k-table-properties\"></div>' +\n            '<div id=\"k-accessibility-properties\"></div>' +\n        '</div>' +\n        '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                    icon: 'check',\n                        themeColor: \"primary\"\n                    }) +\n                    kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                        icon: 'cancel-outline'\n                    }) +\n        '</div>' +\n    '</div>';\n    var cellPropertiesDialogTemplate = ({ messages }) =>\n    '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n        '<div id=\"k-cell-properties\"></div>' +\n        '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                    icon: 'check',\n                        themeColor: \"primary\"\n                    }) +\n                    kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                        icon: 'cancel-outline'\n                    }) +\n        '</div>' +\n    '</div>';\n\nvar TableWizardDialog = kendo.Class.extend({\n    init: function(options) {\n        this.options = options;\n    },\n    _openTablePropertiesDialog: function() {\n        var that = this,\n            options = that.options,\n            dialogOptions = options.dialogOptions,\n            tableData = options.table,\n            dialog,\n            messages = options.messages,\n            isIE = kendo.support.browser.msie;\n\n        function close(e) {\n            e.preventDefault();\n            that.destroy();\n            dialog.destroy();\n        }\n\n        function okHandler(e) {\n            that.collectTableDialogValues(tableData);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n\n            options.closeCallback(tableData);\n        }\n\n        function closeHandler(e) {\n            close(e);\n            options.closeCallback();\n        }\n\n        dialogOptions.close = closeHandler;\n        dialogOptions.minWidth = 700;\n        dialogOptions.width = 700;\n        dialogOptions.title = messages.tableProperties;\n        dialogOptions.visible = options.visible;\n\n        dialog = $(that._dialogTemplate(messages)).appendTo(document.body)\n            .kendoWindow(dialogOptions)\n            .addClass(\"k-editor-window\")\n            .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n            .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n            .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n            .data(\"kendoWindow\");\n\n        var element = dialog.element;\n        this.components = {};\n        that._initTabStripComponent(element);\n        that._tablePropertiesForm = that._createTablePropertiesForm(dialog, messages);\n        that._accessibilityPropertiesForm = that._createAccessibilityPropertiesForm(dialog, messages);\n\n        dialog.center();\n        dialog.open();\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n    },\n    _openCellPropertiesDialog: function() {\n        var that = this,\n            options = that.options,\n            dialogOptions = options.dialogOptions,\n            tableData = options.table,\n            dialog,\n            messages = options.messages,\n            isIE = kendo.support.browser.msie;\n\n        function close(e) {\n            e.preventDefault();\n            that.destroy();\n            dialog.destroy();\n        }\n\n        function okHandler(e) {\n            that.collectCellDialogValues(tableData);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n\n            options.closeCallback(tableData);\n        }\n\n        function closeHandler(e) {\n            close(e);\n            options.closeCallback();\n        }\n\n        dialogOptions.close = closeHandler;\n        dialogOptions.minWidth = 400;\n        dialogOptions.title = messages.tableCellProperties;\n        dialogOptions.visible = options.visible;\n\n        dialog = $(that._dialogTemplate(messages, cellPropertiesDialogTemplate)).appendTo(document.body)\n            .kendoWindow(dialogOptions)\n            .addClass(\"k-editor-window\")\n            .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n            .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n            .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n            .data(\"kendoWindow\");\n\n        var element = dialog.element;\n        that._cellPropertiesForm = that._createCellPropertiesForm(dialog, messages);\n\n        dialog.center();\n        dialog.open();\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n    },\n    open: function(isCellProperties) {\n        if (!isCellProperties) {\n            this._openTablePropertiesDialog();\n        } else {\n            this._openCellPropertiesDialog();\n        }\n    },\n\n    _initTabStripComponent: function(element) {\n        var components = this.components = {};\n        components.tabStrip = element.find(\"#k-table-wizard-tabs\").kendoTabStrip({\n            animation: false\n        }).data(\"kendoTabStrip\");\n    },\n\n    collectTableDialogValues: function() {\n        var that = this;\n        var data = that.options.table;\n        that._collectTableViewValues(data);\n        that._collectAccessibilityViewValues(data);\n    },\n\n    collectCellDialogValues: function() {\n        var that = this;\n        var data = that.options.table;\n        that._collectCellViewValues(data);\n    },\n\n    _collectTableViewValues: function(tableData) {\n        var tableView = this.components.tableView;\n        var tableProperties = tableData.tableProperties;\n        var cellData = tableData.cellProperties = tableData.cellProperties || {};\n        tableProperties.width = tableView.width.value();\n        tableProperties.widthUnit = tableView.widthUnit.value();\n        tableProperties.height = tableView.height.value();\n        tableProperties.columns = tableView.columns.value();\n        tableProperties.rows = tableView.rows.value();\n        tableProperties.heightUnit = tableView.heightUnit.value();\n        tableProperties.cellSpacing = tableView.cellSpacing.value();\n        tableProperties.topCellPadding = tableView.topCellPadding.value();\n        tableProperties.leftCellPadding = tableView.leftCellPadding.value();\n        tableProperties.bottomCellPadding = tableView.bottomCellPadding.value();\n        tableProperties.rightCellPadding = tableView.rightCellPadding.value();\n        tableProperties.alignment = tableView.alignment.value();\n        tableProperties.position = tableView.position.value();\n        tableProperties.bgColor = tableView.bgColor.value();\n        tableProperties.borderWidth = tableView.borderWidth.value();\n        tableProperties.borderColor = tableView.borderColor.value();\n        tableProperties.borderStyle = tableView.borderStyle.value();\n        tableProperties.collapseBorders = tableView.collapseBorders.check();\n\n        if (!cellData.width) {\n            cellData.selectAllCells = true;\n            cellData.width = 100 / tableData.tableProperties.columns;\n            cellData.widthUnit = \"%\";\n        }\n    },\n\n    _collectCellViewValues: function(table) {\n        var cellData = table.cellProperties = table.cellProperties || {};\n        var cellView = this.components.cellView;\n\n        cellData.selectAllCells = cellView.selectAllCells.check();\n        cellData.width = cellView.width.value();\n        cellData.widthUnit = cellView.widthUnit.value();\n        cellData.height = cellView.height.value();\n        cellData.heightUnit = cellView.heightUnit.value();\n        cellData.independentCellPaddings = cellView.independentCellPaddings.check();\n        cellData.topCellPadding = cellView.topCellPadding.value();\n        cellData.leftCellPadding = cellView.leftCellPadding.value();\n        cellData.bottomCellPadding = cellView.bottomCellPadding.value();\n        cellData.rightCellPadding = cellView.rightCellPadding.value();\n        cellData.cellMargin = cellView.cellMargin.value();\n        cellData.alignment = cellView.alignment.value();\n        cellData.bgColor = cellView.bgColor.value();\n        cellData.className = cellView.className.value();\n        cellData.id = cellView.id.value();\n        cellData.borderWidth = cellView.borderWidth.value();\n        cellData.borderColor = cellView.borderColor.value();\n        cellData.borderStyle = cellView.borderStyle.value();\n        cellData.wrapText = cellView.wrapTextValue.value() == \"wrap\";\n\n        if (!cellData.width) {\n            cellData.selectAllCells = true;\n            cellData.width = 100 / table.tableProperties.columns;\n            cellData.widthUnit = \"%\";\n        }\n    },\n\n   _collectAccessibilityViewValues: function(table) {\n        var tableProperties = table.tableProperties;\n        var accessibilityView = this.components.accessibilityView;\n        tableProperties.captionContent = accessibilityView.captionContent.value();\n        tableProperties.captionAlignment = accessibilityView.captionAlignment.value();\n        tableProperties.summary = accessibilityView.summary.value();\n        tableProperties.cellsWithHeaders = accessibilityView.cellsWithHeaders.value();\n        tableProperties.className = accessibilityView.className.value();\n        tableProperties.id = accessibilityView.id.value();\n        tableProperties.headerRows = accessibilityView.headerRows.value();\n        tableProperties.headerColumns = accessibilityView.headerColumns.value();\n    },\n    _addUnit: function(units, value) {\n        if (value && $.inArray(value, units) == -1) {\n            units.push(value);\n        }\n    },\n\n    _initNumericTextbox: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoNumericTextBox(\n                settings ? $.extend({}, numericTextBoxSettings, settings) : numericTextBoxSettings\n            ).data(\"kendoNumericTextBox\");\n        if (property in data) {\n            component.value(parseInt(data[property], 10));\n        }\n    },\n\n    _initDropDownList: function(element, property, data, storage, dataSource) {\n        var component = storage[property] = element.kendoDropDownList({\n            dataSource: dataSource\n        }).data(\"kendoDropDownList\");\n        this._setComponentValue(component, data, property);\n    },\n\n    _initBorderStyleDropDown: function(element, property, data, storage, dataSource) {\n        var component = storage[property] = element.kendoDropDownList({\n            dataSource: dataSource,\n            optionLabel: this.options.messages.borderNone\n        }).data(\"kendoDropDownList\");\n        this._setComponentValue(component, data, property);\n    },\n\n    _initTablePositionDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var tableView = this.components.tableView;\n        var dataSource = tablePositionDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.tableAlignLeft;\n        dataSource[1].tooltip = messages.tableAlignCenter;\n        dataSource[2].tooltip = messages.tableAlignRight;\n\n        this._initPositionDropDown(element, tablePositionDropDownSettings, \"position\", data, tableView);\n    },\n\n    _initTableAlignmentDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var tableView = this.components.tableView;\n        var dataSource = tableAlignmentDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.alignLeft;\n        dataSource[1].tooltip = messages.alignCenter;\n        dataSource[2].tooltip = messages.alignRight;\n        dataSource[3].tooltip = messages.alignRemove;\n\n        this._initAlignmentDropDown(element, tableAlignmentDropDownSettings, \"alignment\", data, tableView);\n    },\n\n    _initCellAlignmentDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var cellView = this.components.cellView;\n        var dataSource = cellAlignmentDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.alignLeftTop;\n        dataSource[1].tooltip = messages.alignCenterTop;\n        dataSource[2].tooltip = messages.alignRightTop;\n        dataSource[3].tooltip = messages.alignLeftMiddle;\n        dataSource[4].tooltip = messages.alignCenterMiddle;\n        dataSource[5].tooltip = messages.alignRightMiddle;\n        dataSource[6].tooltip = messages.alignLeftBottom;\n        dataSource[7].tooltip = messages.alignCenterBottom;\n        dataSource[8].tooltip = messages.alignRightBottom;\n        dataSource[9].tooltip = messages.alignRemove;\n\n        this._initAlignmentDropDown(element, cellAlignmentDropDownSettings, \"alignment\", data, cellView);\n    },\n\n    _initAccessibilityAlignmentDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var accessibilityView = this.components.accessibilityView;\n        var dataSource = accessibilityAlignmentDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.alignLeftTop;\n        dataSource[1].tooltip = messages.alignCenterTop;\n        dataSource[2].tooltip = messages.alignRightTop;\n        dataSource[3].tooltip = messages.alignLeftBottom;\n        dataSource[4].tooltip = messages.alignCenterBottom;\n        dataSource[5].tooltip = messages.alignRightBottom;\n        dataSource[6].tooltip = messages.alignRemove;\n\n        this._initAlignmentDropDown(element, accessibilityAlignmentDropDownSettings, \"captionAlignment\", data, accessibilityView);\n    },\n    _initTextWrapDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var name = \"wrapTextValue\";\n        data.wrapTextValue = data.wrapText ? \"wrap\" : \"nowrap\";\n\n        var cellView = this.components.cellView;\n        var dataSource = textWrapDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.wrapText;\n        dataSource[1].tooltip = messages.fitToCell;\n        var component = cellView[name] =\n            element.kendoDropDownList(textWrapDropDownSettings).data(\"kendoDropDownList\");\n\n        component.list.addClass('k-text-wrap');\n        this._setComponentValue(component, data, name);\n    },\n    _initPositionDropDown: function(element, settings, name, data, storage) {\n        var component = storage[name] =\n            element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n        component.list.addClass('k-position');\n        this._setComponentValue(component, data, name);\n    },\n    _initAlignmentDropDown: function(element, settings, name, data, storage) {\n        var component = storage[name] =\n            element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n        component.list.addClass('k-align');\n        this._setComponentValue(component, data, name);\n    },\n    _initAssociationDropDown: function(element, name, settings, data, storage) {\n        var component = storage[name] =\n            element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n        this._setComponentValue(component, data, name);\n    },\n    _setComponentValue: function(component, data, property) {\n        if (property in data) {\n            component.value(data[property]);\n        }\n    },\n\n    _initColorPicker: function(element, property, data, storage) {\n        var component = storage[property] =\n            element.kendoColorPicker({ buttons: false, clearButton: true }).data(\"kendoColorPicker\");\n\n        if (data[property]) {\n            component.value(data[property]);\n        }\n    },\n    _initInput: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoTextBox(settings || {}).data(\"kendoTextBox\");\n        if (property in data) {\n            component.value(data[property]);\n        }\n    },\n\n    _initCheckbox: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoCheckBox(settings || {}).data(\"kendoCheckBox\");\n        if (property in data) {\n            component.check(data[property]);\n        }\n    },\n\n    _initTextArea: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoTextArea(settings || {}).data(\"kendoTextArea\");\n        if (property in data) {\n            component.value(data[property]);\n        }\n    },\n\n    destroy: function() {\n        var that = this;\n        that._destroyComponents(this.components);\n\n        delete that.components;\n    },\n    _destroyComponents: function(components) {\n        for (var widget in components) {\n            if (components[widget].destroy) {\n                components[widget].destroy();\n            }\n            delete components[widget];\n        }\n    },\n\n    _dialogTemplate: function(messages, dialogTemplate) {\n        return kendo.template(dialogTemplate || tablePropertiesDialogTemplate)({ messages: messages });\n    },\n\n    _onPaddingTopChange: function(e) {\n        let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n            view = this.components[viewType],\n            independentCellPaddings = !view.independentCellPaddings.check(),\n            topCellPaddingNumeric = view.topCellPadding,\n            topCellPaddingValue = topCellPaddingNumeric.value(),\n            leftCellPaddingNumeric = view.leftCellPadding,\n            bottomCellPaddingNumeric = view.bottomCellPadding,\n            rightCellPaddingNumeric = view.rightCellPadding;\n\n        if (independentCellPaddings) {\n            leftCellPaddingNumeric.value(topCellPaddingValue);\n            bottomCellPaddingNumeric.value(topCellPaddingValue);\n            rightCellPaddingNumeric.value(topCellPaddingValue);\n        }\n\n        topCellPaddingNumeric._cachedPadding = topCellPaddingValue;\n    },\n\n    _onPaddingCheckChange: function(e) {\n        let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n            messages = this.options.messages,\n            checked = e.sender.check(),\n            view = this.components[viewType],\n            topCellPaddingNumeric = view.topCellPadding,\n            leftCellPaddingNumeric = view.leftCellPadding,\n            bottomCellPaddingNumeric = view.bottomCellPadding,\n            rightCellPaddingNumeric = view.rightCellPadding,\n            topCellPaddingValue = topCellPaddingNumeric.value(),\n            bottomCellPaddingValue = bottomCellPaddingNumeric.value(),\n            leftCellPaddingValue = leftCellPaddingNumeric.value(),\n            rightCellPaddingValue = rightCellPaddingNumeric.value();\n\n        if (!checked) {\n            if (topCellPaddingValue === bottomCellPaddingValue &&\n                    topCellPaddingValue === leftCellPaddingValue &&\n                    topCellPaddingValue === rightCellPaddingValue) {\n                leftCellPaddingNumeric.value(topCellPaddingValue);\n                bottomCellPaddingNumeric.value(topCellPaddingValue);\n                rightCellPaddingNumeric.value(topCellPaddingValue);\n            } else {\n                topCellPaddingNumeric.value(null);\n            }\n\n            leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n            bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n            rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n\n            topCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.cellPadding);\n        } else {\n            if (!isNaN(topCellPaddingNumeric._cachedPadding)) {\n                topCellPaddingNumeric.value(topCellPaddingNumeric._cachedPadding);\n            }\n\n            leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n            bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n            rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n\n            topCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.topPadding);\n        }\n    },\n\n    _onColumnsNumberChange: function(args) {\n        var that = this;\n        var accessibilityView = that.components.accessibilityView;\n        var headerColumnsNumeric = accessibilityView.headerColumns;\n        var currentNumberOfColumnsHeaders = headerColumnsNumeric.value();\n        var numberOfColumns = args.sender.value();\n\n        if (numberOfColumns < currentNumberOfColumnsHeaders) {\n            headerColumnsNumeric.value(numberOfColumns);\n        }\n\n        headerColumnsNumeric.max(numberOfColumns);\n    },\n\n    _onRowsNumberChange: function(args) {\n        var that = this;\n        var accessibilityView = that.components.accessibilityView;\n        var headerRowsNumeric = accessibilityView.headerRows;\n        var currentNumberOfRowHeaders = headerRowsNumeric.value();\n        var numberOfRows = args.sender.value();\n\n        if (numberOfRows < currentNumberOfRowHeaders) {\n            headerRowsNumeric.value(numberOfRows);\n        }\n\n        headerRowsNumeric.max(numberOfRows);\n    },\n\n    _createTablePropertiesForm: function(dialog, messages) {\n        var that = this;\n        var table = that.options.table;\n        var formElement = dialog.element.find(\"#k-table-properties\");\n        var components = that.components;\n        var tableView = components.tableView = {};\n        var tableProperties = table.tableProperties = table.tableProperties || {};\n        var form;\n\n        that._addUnit(units, tableProperties.widthUnit);\n        that._addUnit(units, tableProperties.heightUnit);\n        tableProperties.borderStyle = tableProperties.borderStyle || \"\";\n        form = formElement.kendoForm({\n            renderButtons: false,\n            layout: \"grid\",\n            grid: {\n                cols: 4\n            },\n            items: [\n                {\n                    colSpan: 2,\n                    field: \"k-editor-table-columns\",\n                    label: encode(messages.columns),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-columns\" />').appendTo(container),\n                            \"columns\",\n                            tableProperties,\n                            tableView,\n                            {\n                                min: 1,\n                                value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                change: that._onColumnsNumberChange.bind(that)\n                            });\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-rows\",\n                    label: encode(messages.rows),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-rows\" />').appendTo(container),\n                            \"rows\",\n                            tableProperties,\n                            tableView,\n                            {\n                                min: 1,\n                                value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                change: that._onRowsNumberChange.bind(that)\n                            });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-width\",\n                    label: encode(messages.width),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-width\" />').appendTo(container), \"width\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-width-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-table-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"widthUnit\",\n                            tableProperties,\n                            tableView,\n                            units);\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-height\",\n                    label: encode(messages.height),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-height\" />').appendTo(container), \"height\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-height-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-table-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"heightUnit\",\n                            tableProperties,\n                            tableView,\n                            units);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-position\",\n                    label: encode(messages.position),\n                    editor: function(container, options) {\n                        that._initTablePositionDropDown($('<input id=\"k-editor-table-position\" class=\"k-position\" />').appendTo(container), tableProperties);\n                    }\n                },\n                {\n                    colSpan: 2,\n                    field: \"k-editor-table-alignment\",\n                    label: encode(messages.alignment),\n                    editor: function(container, options) {\n                        that._initTableAlignmentDropDown($('<input id=\"k-editor-table-alignment\" class=\"k-align\" />').appendTo(container), tableProperties);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-cell-spacing\",\n                    label: encode(messages.cellSpacing),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-cell-spacing\" />').appendTo(container), \"cellSpacing\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    type: \"group\",\n                    label: \"Cell Paddings\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 20\n                    },\n                    items: [\n                        {\n                            colSpan: \"full\",\n                            field: \"k-editor-padding-all-sides\",\n                            label: \"\",\n                            editor: function(container, options) {\n                                that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", tableProperties, tableView,\n                                {\n                                    checked: true,\n                                    label: encode(messages.independentCellPaddings),\n                                    change: that._onPaddingCheckChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cell-padding-top\",\n                            label: encode(messages.topPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-top\" />').appendTo(container), \"topCellPadding\", tableProperties, tableView,\n                                {\n                                    placeholder: encode(messages.auto),\n                                    change: that._onPaddingTopChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cell-padding-right\",\n                            label: encode(messages.rightPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-right\" />').appendTo(container), \"rightCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-bottom\",\n                            label: encode(messages.bottomPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cell-padding-left\",\n                            label: encode(messages.leftPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-left\" />').appendTo(container), \"leftCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                            }\n                        }\n                    ]\n                }, {\n                    type: \"group\",\n                    label: \"Borders\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 10\n                    },\n                    items: [{\n                        colSpan: \"full\",\n                        field: \"k-editor-table-bg\",\n                        label: encode(messages.tableBackground),\n                        editor: function(container, options) {\n                            that._initColorPicker($('<input id=\"k-editor-table-bg\" />').appendTo(container), \"bgColor\", tableProperties, tableView);\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-border-width\",\n                        label: encode(messages.borderWidth),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-border-width\" />').appendTo(container), \"borderWidth\", tableProperties, tableView);\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-border-color\",\n                        label: encode(messages.borderColor),\n                        editor: function(container, options) {\n                            that._initColorPicker($('<input id=\"k-editor-border-color\" />').appendTo(container), \"borderColor\", tableProperties, tableView);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-border-style\",\n                        label: encode(messages.borderStyle),\n                        editor: function(container, options) {\n                            that._initBorderStyleDropDown($('<input id=\"k-editor-border-style\" />').appendTo(container),\n                                \"borderStyle\",\n                                tableProperties,\n                                tableView,\n                                borderStyles);\n                        }\n                    },{\n                        colSpan: \"full\",\n                        field: \"k-editor-collapse-borders\",\n                        label: \"\",\n                        editor: function(container, options) {\n                            that._initCheckbox($('<input id=\"k-editor-collapse-borders\"/>').appendTo(container), \"collapseBorders\", tableProperties, tableView, { label: encode(messages.collapseBorders) });\n                        }\n                    }]\n                }\n            ]\n        }).data(\"kendoForm\");\n        form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n        return form;\n    },\n\n    _createCellPropertiesForm: function(dialog, messages) {\n        var that = this;\n        var table = that.options.table;\n        var formElement = dialog.element.find(\"#k-cell-properties\");\n        var components = that.components = that.components || {};\n        var cellView = components.cellView = {};\n        var cellProperties = (table.selectedCells && table.selectedCells[0]) || { borderStyle: \"\", wrapText: true };\n        var form;\n\n        that._addUnit(units, cellProperties.widthUnit);\n        that._addUnit(units, cellProperties.heightUnit);\n        form = formElement.kendoForm({\n            renderButtons: false,\n            layout: \"grid\",\n            grid: {\n                cols: 4\n            },\n            items: [\n                {\n                    colSpan: \"full\",\n                    field: \"k-editor-selectAllCells\",\n                    label: \"\",\n                    editor: function(container, options) {\n                        that._initCheckbox($('<input id=\"k-editor-selectAllCells\" />').appendTo(container), \"selectAllCells\", table.tableProperties, cellView, { label: encode(messages.selectAllCells) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-width\",\n                    label: encode(messages.width),\n                    hint: encode(messages.applyToColumn),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-cell-width\" />').appendTo(container), \"width\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-width-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-cell-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"widthUnit\",\n                            cellProperties,\n                            cellView,\n                            units);\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-height\",\n                    label: encode(messages.height),\n                    hint: encode(messages.applyToRow),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-cell-height\" />').appendTo(container), \"height\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-height-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-cell-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"heightUnit\",\n                            cellProperties,\n                            cellView,\n                            units);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-cell-alignment\",\n                    label: encode(messages.alignment),\n                    editor: function(container, options) {\n                        that._initCellAlignmentDropDown($('<input id=\"k-editor-cell-alignment\" class=\"k-align\" />').appendTo(container), cellProperties);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-wrap-text\",\n                    label: \"Text control\",\n                    editor: function(container, options) {\n                        that._initTextWrapDropDown($('<input id=\"k-editor-wrap-text\" />').appendTo(container),\n                        cellProperties);\n                    }\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-cell-bg\",\n                    label: encode(messages.background),\n                    editor: function(container, options) {\n                        that._initColorPicker($('<input id=\"k-editor-cell-bg\" />').appendTo(container), \"bgColor\", cellProperties, cellView);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-cell-margin\",\n                    label: encode(messages.cellMargin),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-cell-margin\" />').appendTo(container), \"cellMargin\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    type: \"group\",\n                    label: \"Cell Paddings\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 20\n                    },\n                    items: [\n                        {\n                            colSpan: \"full\",\n                            field: \"k-editor-padding-all-sides\",\n                            label: \"\",\n                            editor: function(container, options) {\n                                that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", table.tableProperties, cellView,\n                                {\n                                    checked: true,\n                                    label: encode(messages.independentCellPaddings),\n                                    change: that._onPaddingCheckChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-top\",\n                            label: encode(messages.topPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-top\" />').appendTo(container), \"topCellPadding\", cellProperties, cellView,\n                                {\n                                    placeholder: encode(messages.auto),\n                                    change: that._onPaddingTopChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-right\",\n                            label: encode(messages.rightPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-right\" />').appendTo(container), \"rightCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-bottom\",\n                            label: encode(messages.bottomPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-left\",\n                            label: encode(messages.leftPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-left\" />').appendTo(container), \"leftCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        }\n                    ]\n                },{\n                    type: \"group\",\n                    label: \"Borders\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 10\n                    },\n                    items: [{\n                        colSpan: 1,\n                        field: \"k-editor-cell-border-width\",\n                        label: encode(messages.borderWidth),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-cell-border-width\" />').appendTo(container), \"borderWidth\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-cell-border-color\",\n                        label: encode(messages.borderColor),\n                        editor: function(container, options) {\n                            that._initColorPicker($('<input id=\"k-editor-cell-border-color\" />').appendTo(container), \"borderColor\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-cell-border-style\",\n                        label: encode(messages.borderStyle),\n                        editor: function(container, options) {\n                            that._initBorderStyleDropDown($('<input id=\"k-editor-cell-border-style\" />').appendTo(container),\n                                \"borderStyle\",\n                                cellProperties,\n                                cellView,\n                                borderStyles);\n                        }\n                    }]\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-cell-id\",\n                    label: {\n                        text: encode(messages.id),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-cell-id\" />').appendTo(container), \"id\", cellProperties, cellView);\n                    }\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-cell-css-class\",\n                    label: {\n                        text: encode(messages.cssClass),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-cell-css-class\" />').appendTo(container), \"className\", cellProperties, cellView);\n                    }\n                }\n            ]\n        }).data(\"kendoForm\");\n        form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n        return form;\n    },\n\n    _createAccessibilityPropertiesForm: function(dialog, messages) {\n        var that = this;\n        var table = that.options.table;\n        var formElement = dialog.element.find(\"#k-accessibility-properties\");\n        var components = that.components;\n        var accessibilityView = components.accessibilityView = {};\n        var tableProperties = table.tableProperties;\n        var form;\n\n        form = formElement.kendoForm({\n            renderButtons: false,\n            layout: \"grid\",\n            grid: {\n                cols: 4\n            },\n            items: [\n                {\n                    colSpan: \"full\",\n                    field: \"k-editor-id\",\n                    label: {\n                        text: encode(messages.id),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-id\" />').appendTo(container), \"id\", tableProperties, accessibilityView);\n                    }\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-css-class\",\n                    label: {\n                        text: encode(messages.cssClass),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-css-class\" />').appendTo(container), \"className\", tableProperties, accessibilityView);\n                    }\n                },\n                {\n                    layout: \"grid\",\n                    grid: {\n                        cols: 4,\n                        gutter: 16\n                    },\n                    colSpan: \"full\",\n                    type: \"group\",\n                    label: \"Accessibility\",\n                    items: [\n                        {\n                            colSpan: 2,\n                            field: \"k-editor-table-caption\",\n                            label: {\n                                text: encode(messages.caption),\n                                optional: true\n                            },\n                            editor: function(container, options) {\n                                that._initInput($('<input id=\"k-editor-table-caption\" />').appendTo(container), \"captionContent\", tableProperties, accessibilityView);\n                            }\n                        },{\n                            colSpan: 2,\n                            field: \"k-editor-accessibility-alignment\",\n                            label: encode(messages.captionAlignment),\n                            editor: function(container, options) {\n                                that._initAccessibilityAlignmentDropDown($('<input id=\"k-editor-accessibility-alignment\" />').appendTo(container), tableProperties);\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-header-rows\",\n                            label: encode(messages.headerRows),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-header-rows\" />').appendTo(container),\n                                \"headerRows\",\n                                tableProperties,\n                                accessibilityView,\n                                {\n                                    max: tableProperties.rows || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-header-columns\",\n                            label: encode(messages.headerColumns),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-header-columns\" />').appendTo(container),\n                                \"headerColumns\",\n                                tableProperties,\n                                accessibilityView,\n                                {\n                                    max: tableProperties.columns || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                });\n                            }\n                        },{\n                            colSpan: 2,\n                            field: \"k-editor-cells-headers\",\n                            label: encode(messages.associateCellsWithHeaders),\n                            editor: function(container, options) {\n                                var element = $(`<select id=\"k-editor-cells-headers\">\n                                    <option value=\"none\">${ messages.associateNone }</option>\n                                    <option value=\"scope\">${ messages.associateScope }</option>\n                                    <option value=\"ids\">${ messages.associateIds }</option>\n                                </select>`).appendTo(container);\n\n                                that._initAssociationDropDown(element, \"cellsWithHeaders\", { valuePrimitive: true }, tableProperties, accessibilityView);\n                            }\n                        },{\n                            colSpan: \"full\",\n                            field: \"k-editor-accessibility-summary\",\n                            label: {\n                                text: encode(messages.summary),\n                                optional: true\n                            },\n                            editor: function(container, options) {\n                                that._initTextArea($('<textarea id=\"k-editor-accessibility-summary\"></textarea>').appendTo(container), \"summary\", tableProperties, accessibilityView, {\n                                    rows: 5,\n                                    placeholder: messages.tableSummaryPlaceholder\n                                });\n                            }\n                        }\n                    ]\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n        return form;\n    }\n});\n\nkendo.ui.editor.TableWizardDialog = TableWizardDialog;\n\n})(window.kendo.jQuery);\n\nvar __meta__ = {\n        id: \"editor\",\n        name: \"Editor\",\n        category: \"web\",\n        description: \"Rich text editor component\",\n        depends: [ \"combobox\", \"dropdownlist\", \"window\", \"colorpicker\", \"toolbar\", \"icons\" ],\n        features: [ {\n            id: \"editor-imagebrowser\",\n            name: \"Image Browser\",\n            description: \"Support for uploading and inserting images\",\n            depends: [ \"imagebrowser\" ]\n        }, {\n            id: \"editor-resizable\",\n            name: \"Resize handle\",\n            description: \"Support for resizing the content area via a resize handle\",\n            depends: [ \"resizable\" ]\n        }, {\n            id: \"editor-tablewizard\",\n            name: \"Table wizard dialog\",\n            description: \"Support for table properties configuration\",\n            depends: [ \"tabstrip\", \"button\", \"numerictextbox\", \"textarea\" ]\n        }, {\n            id: \"editor-pdf-export\",\n            name: \"PDF export\",\n            description: \"Export Editor content as PDF\",\n            depends: [ \"pdf\", \"drawing\" ]\n        }]\n    };\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}