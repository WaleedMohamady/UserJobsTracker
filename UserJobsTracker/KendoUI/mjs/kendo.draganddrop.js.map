{"version":3,"sources":["raw-mjs/kendo.draganddrop.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","lastDropTarget","kendo","window","support","document","$window","Class","Widget","ui","Observable","UserEvents","ClickMoveClick","extend","getOffset","draggables","dropTargets","dropAreas","elementUnderCursor","KEYUP","CHANGE","DRAGSTART","HOLD","DRAG","DRAGEND","DRAGCANCEL","HINTDESTROYED","DRAGENTER","DRAGLEAVE","DROP","numericCssPropery","element","property","parseInt","css","within","value","range","Math","min","max","containerBoundaries","container","offset","outerWidth","_outerWidth","outerHeight","_outerHeight","minX","left","minY","top","x","width","y","height","translate","TapCapture","init","options","that","this","domElement","capture","addEventListener","each","eventMap","down","split","_press","bind","up","_release","attachEvent","fn","call","captureNext","cancelCapture","e","trigger","preventDefault","PaneDimension","forcedEnabled","scale","horizontal","measure","scrollSize","axis","makeVirtual","virtual","_virtualMin","_virtualMax","virtualSize","update","outOfBounds","forceEnabled","getSize","getTotal","rescale","silent","total","scaledTotal","size","minScale","centerOffset","enabled","PaneDimensions","forcedMinScale","maxScale","newScale","refresh","centerCoordinates","fitScale","PaneAxis","dimension","movable","dragMove","delta","position","resistance","translateAxis","Pane","elastic","dimensions","userEvents","gesturestart","gesture","press","event","target","closest","is","sender","cancel","gesturechange","coordinates","previousGesture","previousCenter","center","scaleDelta","distance","offsetX","offsetY","scaleWith","move","tagName","match","touch","skip","end","TRANSFORM_STYLE","transitions","prefix","hasHW3D","Movable","style","webkitTransformOrigin","_saveCoordinates","by","scaleTo","moveAxis","moveTo","newCoordinates","round","browser","msie","version","destroyDroppable","collection","widget","i","groupName","group","droppables","destroy","length","splice","DropTarget","push","events","_trigger","eventName","draggable","dropTarget","_over","_out","_drop","dropped","destroyGroup","_cache","DropTargetArea","filter","Draggable","_activated","clickMoveClick","global","start","_startClickMoveClick","_drag","_end","_onCancel","allowSelection","threshold","_start","hold","_hold","select","_select","find","_afterEndHandler","_afterEnd","_captureEscape","cursorOffset","ignore","holdToDrag","showHintOnHold","autoScroll","preventOsHoldFeatures","cancelHold","keyCode","keys","ESC","_updateHint","boundaries","location","hintOffset","startLocation","initialDelta","hint","_shouldIgnoreTarget","ignoreSelector","_hint","stop","remove","isFunction","currentTarget","zIndex","appendTo","body","initialTouch","currentTargetOffset","on","cursorElement","_elementUnderCursor","_cursorElement","_scrollableParent","findScrollableParent","_lastEvent","_processMovement","velocity","autoScrollVelocity","scrollableViewPort","_scrollCompenstation","_scrollVelocity","clearInterval","_scrollInterval","setInterval","_autoScroll","_withDropTarget","targetElement","parent","compensation","yIsScrollable","xIsScrollable","isRootNode","scrollableRoot","scrollHeight","scrollWidth","offsetHeight","offsetWidth","yDelta","scrollTop","yInBounds","xDelta","scrollLeft","xInBounds","ev","attr","one","_cancel","isDefaultPrevented","setTimeout","animate","initialTarget","child","contains","hide","show","callback","result","targets","areas","theTarget","theFilter","targetLen","areaLen","parentNode","matchesSelector","checkTarget","off","root","bottom","right","edge","safari","documentElement","isScrollable","mouseX","mouseY","rect","AUTO_SCROLL_AREA","plugin","utils","jQuery","kendo$1"],"mappings":"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","file":"kendo.draganddrop.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.userevents.js';\n\nvar __meta__ = {\n    id: \"draganddrop\",\n    name: \"Drag & drop\",\n    category: \"framework\",\n    description: \"Drag & drop functionality for any DOM element.\",\n    depends: [ \"core\", \"userevents\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        support = kendo.support,\n        document = window.document,\n        $window = $(window),\n        Class = kendo.Class,\n        Widget = kendo.ui.Widget,\n        Observable = kendo.Observable,\n        UserEvents = kendo.UserEvents,\n        ClickMoveClick = kendo.ClickMoveClick,\n        extend = $.extend,\n        getOffset = kendo.getOffset,\n        draggables = {},\n        dropTargets = {},\n        dropAreas = {},\n        lastDropTarget,\n        elementUnderCursor = kendo.elementUnderCursor,\n        KEYUP = \"keyup\",\n        CHANGE = \"change\",\n\n        // Draggable events\n        DRAGSTART = \"dragstart\",\n        HOLD = \"hold\",\n        DRAG = \"drag\",\n        DRAGEND = \"dragend\",\n        DRAGCANCEL = \"dragcancel\",\n        HINTDESTROYED = \"hintDestroyed\",\n\n        // DropTarget events\n        DRAGENTER = \"dragenter\",\n        DRAGLEAVE = \"dragleave\",\n        DROP = \"drop\";\n\n    function contains(parent, child) {\n        try {\n            return $.contains(parent, child) || parent == child;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    function numericCssPropery(element, property) {\n        return parseInt(element.css(property), 10) || 0;\n    }\n\n    function within(value, range) {\n        return Math.min(Math.max(value, range.min), range.max);\n    }\n\n    function containerBoundaries(container, element) {\n        var offset = getOffset(container),\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            minX = offset.left + numericCssPropery(container, \"borderLeftWidth\") + numericCssPropery(container, \"paddingLeft\"),\n            minY = offset.top + numericCssPropery(container, \"borderTopWidth\") + numericCssPropery(container, \"paddingTop\"),\n            maxX = minX + container.width() - outerWidth(element, true),\n            maxY = minY + container.height() - outerHeight(element, true);\n\n        return {\n            x: { min: minX, max: maxX },\n            y: { min: minY, max: maxY }\n        };\n    }\n\n    function checkTarget(target, targets, areas) {\n        var theTarget, theFilter, i = 0,\n            targetLen = targets && targets.length,\n            areaLen = areas && areas.length;\n\n        while (target && target.parentNode) {\n            for (i = 0; i < targetLen; i ++) {\n                theTarget = targets[i];\n                if (theTarget.element[0] === target) {\n                    return { target: theTarget, targetElement: target };\n                }\n            }\n\n            for (i = 0; i < areaLen; i ++) {\n                theFilter = areas[i];\n                if ($.contains(theFilter.element[0], target) && support.matchesSelector.call(target, theFilter.options.filter)) {\n                    return { target: theFilter, targetElement: target };\n                }\n            }\n\n            target = target.parentNode;\n        }\n\n        return undefined$1;\n    }\n\n    var TapCapture = Observable.extend({\n        init: function(element, options) {\n            var that = this,\n                domElement = element[0];\n\n            that.capture = false;\n\n            if (domElement.addEventListener) {\n                $.each(kendo.eventMap.down.split(\" \"), function() {\n                    domElement.addEventListener(this, that._press.bind(that), true);\n                });\n                $.each(kendo.eventMap.up.split(\" \"), function() {\n                    domElement.addEventListener(this, that._release.bind(that), true);\n                });\n            } else {\n                $.each(kendo.eventMap.down.split(\" \"), function() {\n                    domElement.attachEvent(this, that._press.bind(that));\n                });\n                $.each(kendo.eventMap.up.split(\" \"), function() {\n                    domElement.attachEvent(this, that._release.bind(that));\n                });\n            }\n\n            Observable.fn.init.call(that);\n\n            that.bind([\"press\", \"release\"], options || {});\n        },\n\n        captureNext: function() {\n            this.capture = true;\n        },\n\n        cancelCapture: function() {\n            this.capture = false;\n        },\n\n        _press: function(e) {\n            var that = this;\n            that.trigger(\"press\");\n            if (that.capture) {\n                e.preventDefault();\n            }\n        },\n\n        _release: function(e) {\n            var that = this;\n            that.trigger(\"release\");\n\n            if (that.capture) {\n                e.preventDefault();\n                that.cancelCapture();\n            }\n        }\n    });\n\n    var PaneDimension = Observable.extend({\n        init: function(options) {\n            var that = this;\n            Observable.fn.init.call(that);\n\n            that.forcedEnabled = false;\n\n            $.extend(that, options);\n\n            that.scale = 1;\n\n            if (that.horizontal) {\n                that.measure = \"offsetWidth\";\n                that.scrollSize = \"scrollWidth\";\n                that.axis = \"x\";\n            } else {\n                that.measure = \"offsetHeight\";\n                that.scrollSize = \"scrollHeight\";\n                that.axis = \"y\";\n            }\n        },\n\n        makeVirtual: function() {\n            $.extend(this, {\n                virtual: true,\n                forcedEnabled: true,\n                _virtualMin: 0,\n                _virtualMax: 0\n            });\n        },\n\n        virtualSize: function(min, max) {\n            if (this._virtualMin !== min || this._virtualMax !== max) {\n                this._virtualMin = min;\n                this._virtualMax = max;\n                this.update();\n            }\n        },\n\n        outOfBounds: function(offset) {\n            return offset > this.max || offset < this.min;\n        },\n\n        forceEnabled: function() {\n            this.forcedEnabled = true;\n        },\n\n        getSize: function() {\n            return this.container[0][this.measure];\n        },\n\n        getTotal: function() {\n            return this.element[0][this.scrollSize];\n        },\n\n        rescale: function(scale) {\n            this.scale = scale;\n        },\n\n        update: function(silent) {\n            var that = this,\n                total = that.virtual ? that._virtualMax : that.getTotal(),\n                scaledTotal = total * that.scale,\n                size = that.getSize();\n\n            if (total === 0 && !that.forcedEnabled) {\n                return; // we are not visible.\n            }\n\n            that.max = that.virtual ? -that._virtualMin : 0;\n            that.size = size;\n            that.total = scaledTotal;\n            that.min = Math.min(that.max, size - scaledTotal);\n            that.minScale = size / total;\n            that.centerOffset = (scaledTotal - size) / 2;\n\n            that.enabled = that.forcedEnabled || (scaledTotal > size);\n\n            if (!silent) {\n                that.trigger(CHANGE, that);\n            }\n        }\n    });\n\n    var PaneDimensions = Observable.extend({\n        init: function(options) {\n            var that = this;\n\n            Observable.fn.init.call(that);\n\n            that.x = new PaneDimension(extend({ horizontal: true }, options));\n            that.y = new PaneDimension(extend({ horizontal: false }, options));\n            that.container = options.container;\n            that.forcedMinScale = options.minScale;\n            that.maxScale = options.maxScale || 100;\n\n            that.bind(CHANGE, options);\n        },\n\n        rescale: function(newScale) {\n            this.x.rescale(newScale);\n            this.y.rescale(newScale);\n            this.refresh();\n        },\n\n        centerCoordinates: function() {\n            return { x: Math.min(0, -this.x.centerOffset), y: Math.min(0, -this.y.centerOffset) };\n        },\n\n        refresh: function() {\n            var that = this;\n            that.x.update();\n            that.y.update();\n            that.enabled = that.x.enabled || that.y.enabled;\n            that.minScale = that.forcedMinScale || Math.min(that.x.minScale, that.y.minScale);\n            that.fitScale = Math.max(that.x.minScale, that.y.minScale);\n            that.trigger(CHANGE);\n        }\n    });\n\n    var PaneAxis = Observable.extend({\n        init: function(options) {\n            var that = this;\n            extend(that, options);\n            Observable.fn.init.call(that);\n        },\n\n        outOfBounds: function() {\n            return this.dimension.outOfBounds(this.movable[this.axis]);\n        },\n\n        dragMove: function(delta) {\n            var that = this,\n                dimension = that.dimension,\n                axis = that.axis,\n                movable = that.movable,\n                position = movable[axis] + delta;\n\n            if (!dimension.enabled) {\n                return;\n            }\n\n            if ((position < dimension.min && delta < 0) || (position > dimension.max && delta > 0)) {\n                delta *= that.resistance;\n            }\n\n            movable.translateAxis(axis, delta);\n            that.trigger(CHANGE, that);\n        }\n    });\n\n    var Pane = Class.extend({\n\n        init: function(options) {\n            var that = this,\n                x,\n                y,\n                resistance,\n                movable;\n\n            extend(that, { elastic: true }, options);\n\n            resistance = that.elastic ? 0.5 : 0;\n            movable = that.movable;\n\n            that.x = x = new PaneAxis({\n                axis: \"x\",\n                dimension: that.dimensions.x,\n                resistance: resistance,\n                movable: movable\n            });\n\n            that.y = y = new PaneAxis({\n                axis: \"y\",\n                dimension: that.dimensions.y,\n                resistance: resistance,\n                movable: movable\n            });\n\n            that.userEvents.bind([\"press\", \"move\", \"end\", \"gesturestart\", \"gesturechange\"], {\n                gesturestart: function(e) {\n                    that.gesture = e;\n                    that.offset = that.dimensions.container.offset();\n                },\n\n                press: function(e) {\n                    if ($(e.event.target).closest(\"a\").is(\"[data-navigate-on-press=true]\")) {\n                        e.sender.cancel();\n                    }\n                },\n\n                gesturechange: function(e) {\n                    var previousGesture = that.gesture,\n                        previousCenter = previousGesture.center,\n\n                        center = e.center,\n\n                        scaleDelta = e.distance / previousGesture.distance,\n\n                        minScale = that.dimensions.minScale,\n                        maxScale = that.dimensions.maxScale,\n                        coordinates;\n\n                    if (movable.scale <= minScale && scaleDelta < 1) {\n                        // Resist shrinking. Instead of shrinking from 1 to 0.5, it will shrink to 0.5 + (1 /* minScale */ - 0.5) * 0.8 = 0.9;\n                        scaleDelta += (1 - scaleDelta) * 0.8;\n                    }\n\n                    if (movable.scale * scaleDelta >= maxScale) {\n                        scaleDelta = maxScale / movable.scale;\n                    }\n\n                    var offsetX = movable.x + that.offset.left,\n                        offsetY = movable.y + that.offset.top;\n\n                    coordinates = {\n                        x: (offsetX - previousCenter.x) * scaleDelta + center.x - offsetX,\n                        y: (offsetY - previousCenter.y) * scaleDelta + center.y - offsetY\n                    };\n\n                    movable.scaleWith(scaleDelta);\n\n                    x.dragMove(coordinates.x);\n                    y.dragMove(coordinates.y);\n\n                    that.dimensions.rescale(movable.scale);\n                    that.gesture = e;\n                    e.preventDefault();\n                },\n\n                move: function(e) {\n                    if (e.event.target.tagName.match(/textarea|input/i)) {\n                        return;\n                    }\n\n                    if (x.dimension.enabled || y.dimension.enabled) {\n                        x.dragMove(e.x.delta);\n                        y.dragMove(e.y.delta);\n                        e.preventDefault();\n                    } else {\n                        e.touch.skip();\n                    }\n                },\n\n                end: function(e) {\n                    e.preventDefault();\n                }\n            });\n        }\n    });\n\n    var TRANSFORM_STYLE = support.transitions.prefix + \"Transform\",\n        translate;\n\n\n    if (support.hasHW3D) {\n        translate = function(x, y, scale) {\n            return \"translate3d(\" + x + \"px,\" + y + \"px,0) scale(\" + scale + \")\";\n        };\n    } else {\n        translate = function(x, y, scale) {\n            return \"translate(\" + x + \"px,\" + y + \"px) scale(\" + scale + \")\";\n        };\n    }\n\n    var Movable = Observable.extend({\n        init: function(element) {\n            var that = this;\n\n            Observable.fn.init.call(that);\n\n            that.element = $(element);\n            that.element[0].style.webkitTransformOrigin = \"left top\";\n            that.x = 0;\n            that.y = 0;\n            that.scale = 1;\n            that._saveCoordinates(translate(that.x, that.y, that.scale));\n        },\n\n        translateAxis: function(axis, by) {\n            this[axis] += by;\n            this.refresh();\n        },\n\n        scaleTo: function(scale) {\n            this.scale = scale;\n            this.refresh();\n        },\n\n        scaleWith: function(scaleDelta) {\n            this.scale *= scaleDelta;\n            this.refresh();\n        },\n\n        translate: function(coordinates) {\n            this.x += coordinates.x;\n            this.y += coordinates.y;\n            this.refresh();\n        },\n\n        moveAxis: function(axis, value) {\n            this[axis] = value;\n            this.refresh();\n        },\n\n        moveTo: function(coordinates) {\n            extend(this, coordinates);\n            this.refresh();\n        },\n\n        refresh: function() {\n            var that = this,\n                x = that.x,\n                y = that.y,\n                newCoordinates;\n\n            if (that.round) {\n                x = Math.round(x);\n                y = Math.round(y);\n            }\n\n            newCoordinates = translate(x, y, that.scale);\n\n            if (newCoordinates != that.coordinates) {\n                if (kendo.support.browser.msie && kendo.support.browser.version < 10) {\n                    that.element[0].style.position = \"absolute\";\n                    that.element[0].style.left = that.x + \"px\";\n                    that.element[0].style.top = that.y + \"px\";\n\n                } else {\n                    that.element[0].style[TRANSFORM_STYLE] = newCoordinates;\n                }\n                that._saveCoordinates(newCoordinates);\n                that.trigger(CHANGE);\n            }\n        },\n\n        _saveCoordinates: function(coordinates) {\n            this.coordinates = coordinates;\n        }\n    });\n\n    function destroyDroppable(collection, widget) {\n        var groupName = widget.options.group,\n        droppables = collection[groupName],\n        i;\n\n        Widget.fn.destroy.call(widget);\n\n        if (droppables.length > 1) {\n            for (i = 0; i < droppables.length; i++) {\n                if (droppables[i] == widget) {\n                    droppables.splice(i, 1);\n                    break;\n                }\n            }\n        } else {\n            droppables.length = 0; // WTF, porting this from the previous destroyGroup\n            delete collection[groupName];\n        }\n    }\n\n    var DropTarget = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            var group = that.options.group;\n\n            if (!(group in dropTargets)) {\n                dropTargets[group] = [ that ];\n            } else {\n                dropTargets[group].push( that );\n            }\n        },\n\n        events: [\n            DRAGENTER,\n            DRAGLEAVE,\n            DROP\n        ],\n\n        options: {\n            name: \"DropTarget\",\n            group: \"default\"\n        },\n\n        destroy: function() {\n            destroyDroppable(dropTargets, this);\n        },\n\n        _trigger: function(eventName, e) {\n            var that = this,\n                draggable = draggables[that.options.group];\n\n            if (draggable) {\n                return that.trigger(eventName, extend({}, e.event, {\n                           draggable: draggable,\n                           dropTarget: e.dropTarget\n                       }));\n            }\n        },\n\n        _over: function(e) {\n            this._trigger(DRAGENTER, e);\n        },\n\n        _out: function(e) {\n            this._trigger(DRAGLEAVE, e);\n        },\n\n        _drop: function(e) {\n            var that = this,\n                draggable = draggables[that.options.group];\n\n            if (draggable) {\n                draggable.dropped = !that._trigger(DROP, e);\n            }\n        }\n    });\n\n    DropTarget.destroyGroup = function(groupName) {\n        var group = dropTargets[groupName] || dropAreas[groupName],\n            i;\n\n        if (group) {\n            for (i = 0; i < group.length; i++) {\n                Widget.fn.destroy.call(group[i]);\n            }\n\n            group.length = 0;\n            delete dropTargets[groupName];\n            delete dropAreas[groupName];\n        }\n    };\n\n    DropTarget._cache = dropTargets;\n\n    var DropTargetArea = DropTarget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            var group = that.options.group;\n\n            if (!(group in dropAreas)) {\n                dropAreas[group] = [ that ];\n            } else {\n                dropAreas[group].push( that );\n            }\n        },\n\n        destroy: function() {\n            destroyDroppable(dropAreas, this);\n        },\n\n        options: {\n            name: \"DropTargetArea\",\n            group: \"default\",\n            filter: null\n        }\n    });\n\n    var Draggable = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._activated = false;\n\n            if (this.options.clickMoveClick) {\n                that.clickMoveClick = new ClickMoveClick(that.element, {\n                    global: true,\n                    filter: that.options.filter,\n                    start: that._startClickMoveClick.bind(that),\n                    move: that._drag.bind(that),\n                    end: that._end.bind(that),\n                    cancel: that._onCancel.bind(that)\n                });\n            }\n\n            that.userEvents = new UserEvents(that.element, {\n                global: true,\n                allowSelection: true,\n                filter: that.options.filter,\n                threshold: that.options.distance,\n                start: that._start.bind(that),\n                hold: that._hold.bind(that),\n                move: that._drag.bind(that),\n                end: that._end.bind(that),\n                cancel: that._onCancel.bind(that),\n                select: that._select.bind(that),\n                press: that._press.bind(that),\n            });\n\n            if (kendo.support.touch) {\n                that.element.find(that.options.filter).css('touch-action', 'none');\n            }\n\n            that._afterEndHandler = that._afterEnd.bind(that);\n            that._captureEscape = that._captureEscape.bind(that);\n        },\n\n        events: [\n            HOLD,\n            DRAGSTART,\n            DRAG,\n            DRAGEND,\n            DRAGCANCEL,\n            HINTDESTROYED\n        ],\n\n        options: {\n            name: \"Draggable\",\n            distance: ( kendo.support.touch ? 0 : 5),\n            group: \"default\",\n            cursorOffset: null,\n            axis: null,\n            container: null,\n            filter: null,\n            ignore: null,\n            holdToDrag: false,\n            showHintOnHold: false,\n            autoScroll: false,\n            dropped: false,\n            clickMoveClick: false,\n            preventOsHoldFeatures: false\n        },\n\n        cancelHold: function() {\n            this._activated = false;\n        },\n\n        _captureEscape: function(e) {\n            var that = this;\n\n            if (e.keyCode === kendo.keys.ESC) {\n                that.userEvents.cancel();\n\n                if (that.clickMoveClick) {\n                    that.clickMoveClick.cancel();\n                }\n\n                this._trigger(DRAGCANCEL, { event: e });\n            }\n        },\n\n        _updateHint: function(e) {\n            var that = this,\n                coordinates,\n                options = that.options,\n                boundaries = that.boundaries,\n                axis = options.axis,\n                cursorOffset = that.options.cursorOffset;\n\n            if (cursorOffset) {\n               coordinates = { left: e.x.location + cursorOffset.left, top: e.y.location + cursorOffset.top };\n            } else {\n                if (e.x.delta !== 0 || e.y.delta !== 0) {\n                    that.hintOffset.left += e.x.delta;\n                    that.hintOffset.top += e.y.delta;\n                    coordinates = $.extend({}, that.hintOffset);\n                } else {\n                    that.hintOffset.left = e.x.startLocation + e.x.initialDelta;\n                    that.hintOffset.top = e.y.startLocation + e.y.initialDelta;\n                    coordinates = $.extend({}, that.hintOffset);\n                }\n            }\n\n            if (boundaries) {\n                coordinates.top = within(coordinates.top, boundaries.y);\n                coordinates.left = within(coordinates.left, boundaries.x);\n            }\n\n            if (axis === \"x\") {\n                delete coordinates.top;\n            } else if (axis === \"y\") {\n                delete coordinates.left;\n            }\n\n            that.hint.css(coordinates);\n        },\n\n        _shouldIgnoreTarget: function(target) {\n            var ignoreSelector = this.options.ignore;\n            return ignoreSelector && $(target).is(ignoreSelector);\n        },\n\n        _select: function(e) {\n            if (!this._shouldIgnoreTarget(e.event.target)) {\n                e.preventDefault();\n            }\n        },\n\n        _startClickMoveClick: function(e) {\n            this._activated = true;\n\n            this._start(e);\n        },\n\n        _hint: function() {\n            var that = this,\n                hint = that.options.hint;\n\n            if (hint) {\n                if (that.hint) {\n                    that.hint.stop(true, true).remove();\n                }\n\n                that.hint = kendo.isFunction(hint) ? $(hint.call(that, that.currentTarget)) : hint;\n\n                var offset = getOffset(that.currentTarget);\n                that.hintOffset = offset;\n\n                that.hint.css( {\n                    position: \"absolute\",\n                    zIndex: 20000, // the Window's z-index is 10000 and can be raised because of z-stacking\n                    left: offset.left,\n                    top: offset.top\n                })\n                .appendTo(document.body);\n            }\n        },\n\n        _start: function(e) {\n            var that = this,\n                options = that.options,\n                container = options.container ? $(options.container) : null,\n                hint = options.hint;\n\n            if (this._shouldIgnoreTarget(e.touch.initialTouch) || (options.holdToDrag && !that._activated)) {\n                that.userEvents.cancel();\n                return;\n            }\n\n            that.currentTarget = e.target;\n            that.currentTargetOffset = getOffset(that.currentTarget);\n\n            if (hint) {\n                that._hint();\n            }\n\n            draggables[options.group] = that;\n\n            that.dropped = false;\n\n            if (container) {\n                that.boundaries = containerBoundaries(container, that.hint);\n            }\n\n            $(document).on(KEYUP, that._captureEscape);\n\n            if (that._trigger(DRAGSTART, e)) {\n                that.userEvents.cancel();\n\n                if (that.clickMoveClick) {\n                    that.clickMoveClick.cancel();\n                }\n\n                that._afterEnd();\n            }\n\n            that.userEvents.capture();\n        },\n\n        _hold: function(e) {\n            this.currentTarget = e.target;\n\n            if (this._trigger(HOLD, e)) {\n                this.userEvents.cancel();\n            } else {\n                this._activated = true;\n                if (this.options.showHintOnHold) {\n                    this._hint();\n                }\n            }\n        },\n\n        _drag: function(e) {\n            e.preventDefault();\n\n            var cursorElement = this._elementUnderCursor(e);\n\n            if (this.options.autoScroll && this._cursorElement !== cursorElement) {\n                this._scrollableParent = findScrollableParent(cursorElement);\n                this._cursorElement = cursorElement;\n            }\n\n            this._lastEvent = e;\n            this._processMovement(e, cursorElement);\n\n            if (this.options.autoScroll) {\n                // chrome seems to trigger mousemove when mouse is moved outside of the window (over the Chrome), too.\n                if (this._scrollableParent[0]) {\n                    var velocity = autoScrollVelocity(e.x.location, e.y.location, scrollableViewPort(this._scrollableParent));\n\n\n                    this._scrollCompenstation = $.extend({}, this.hintOffset);\n                    this._scrollVelocity = velocity;\n\n                    if (velocity.y === 0 && velocity.x === 0) {\n                        clearInterval(this._scrollInterval);\n                        this._scrollInterval = null;\n                    } else if (!this._scrollInterval) {\n                        this._scrollInterval = setInterval(this._autoScroll.bind(this), 50);\n                    }\n                }\n            }\n\n            if (this.hint) {\n                this._updateHint(e);\n            }\n        },\n\n        _processMovement: function(e, cursorElement) {\n            this._withDropTarget(cursorElement, function(target, targetElement) {\n                if (!target) {\n                    if (lastDropTarget) {\n                        lastDropTarget._trigger(DRAGLEAVE, extend(e, { dropTarget: $(lastDropTarget.targetElement) }));\n                        lastDropTarget = null;\n                    }\n                    return;\n                }\n\n                if (lastDropTarget) {\n                    if (targetElement === lastDropTarget.targetElement) {\n                        return;\n                    }\n\n                    lastDropTarget._trigger(DRAGLEAVE, extend(e, { dropTarget: $(lastDropTarget.targetElement) }));\n                }\n\n                target._trigger(DRAGENTER, extend(e, { dropTarget: $(targetElement) }));\n                lastDropTarget = extend(target, { targetElement: targetElement });\n            });\n\n            this._trigger(DRAG, extend(e, { dropTarget: lastDropTarget, elementUnderCursor: cursorElement }));\n        },\n\n        _autoScroll: function() {\n            var parent = this._scrollableParent[0],\n                velocity = this._scrollVelocity,\n                compensation = this._scrollCompenstation;\n\n            if (!parent) {\n                return;\n            }\n\n            var cursorElement = this._elementUnderCursor(this._lastEvent);\n            this._processMovement(this._lastEvent, cursorElement);\n\n            var yIsScrollable, xIsScrollable;\n\n            var isRootNode = parent === scrollableRoot()[0];\n\n            if (isRootNode) {\n                yIsScrollable = document.body.scrollHeight > $window.height();\n                xIsScrollable = document.body.scrollWidth > $window.width();\n            } else {\n                yIsScrollable = parent.offsetHeight <= parent.scrollHeight;\n                xIsScrollable = parent.offsetWidth <= parent.scrollWidth;\n            }\n\n            var yDelta = parent.scrollTop + velocity.y;\n            var yInBounds = yIsScrollable && yDelta > 0 && yDelta < parent.scrollHeight;\n\n            var xDelta = parent.scrollLeft + velocity.x;\n            var xInBounds = xIsScrollable && xDelta > 0 && xDelta < parent.scrollWidth;\n\n            if (yInBounds) {\n                parent.scrollTop += velocity.y;\n            } else if (yIsScrollable && yDelta < 0) {\n                parent.scrollTop = 0;\n            }\n\n            if (xInBounds) {\n                parent.scrollLeft += velocity.x;\n            } else if (xIsScrollable && xDelta < 0) {\n                parent.scrollLeft = 0;\n            }\n\n            if (this.hint && isRootNode && (xInBounds || yInBounds)) {\n                if (yInBounds) {\n                    compensation.top += velocity.y;\n                }\n\n                if (xInBounds) {\n                    compensation.left += velocity.x;\n                }\n\n                this.hint.css(compensation);\n            }\n        },\n\n        _press: function(ev) {\n            if (this.options.preventOsHoldFeatures) {\n                ev.target.css('-webkit-user-select', 'none');\n                ev.target.attr('unselectable', 'on');\n                ev.target.one('contextmenu', (ev) => {\n                    ev.preventDefault();\n                });\n            }\n        },\n\n        _end: function(e) {\n            this._withDropTarget(this._elementUnderCursor(e), function(target, targetElement) {\n                if (target) {\n                    target._drop(extend({}, e, { dropTarget: $(targetElement) }));\n                    lastDropTarget = null;\n                }\n            });\n\n            clearInterval(this._scrollInterval);\n            this._scrollInterval = null;\n            this._cancel(this._trigger(DRAGEND, e));\n        },\n\n        _onCancel: function(e) {\n            this._cancel();\n            this._trigger(DRAGCANCEL, { event: e });\n        },\n\n        _cancel: function(isDefaultPrevented) {\n            var that = this;\n\n            that._scrollableParent = null;\n            this._cursorElement = null;\n            clearInterval(this._scrollInterval);\n            that._activated = false;\n\n            if (that.hint && !that.dropped) {\n                setTimeout(function() {\n                    that.hint.stop(true, true);\n\n                    if (isDefaultPrevented) {\n                        that._afterEndHandler();\n                    } else {\n                        that.hint.animate(that.currentTargetOffset, \"fast\", that._afterEndHandler);\n                    }\n                }, 0);\n            } else {\n                that._afterEnd();\n            }\n        },\n\n        _trigger: function(eventName, e) {\n            var that = this;\n\n            return that.trigger(\n                eventName, extend(\n                {},\n                e.event,\n                {\n                    x: e.x,\n                    y: e.y,\n                    currentTarget: that.currentTarget,\n                    initialTarget: e.touch ? e.touch.initialTouch : null,\n                    dropTarget: e.dropTarget,\n                    elementUnderCursor: e.elementUnderCursor,\n                    clickMoveClick: e.clickMoveClick\n                }\n            ));\n        },\n\n        _elementUnderCursor: function(e) {\n            var target = elementUnderCursor(e),\n                hint = this.hint;\n\n            if (hint && contains(hint[0], target)) {\n                hint.hide();\n                target = elementUnderCursor(e);\n                // IE8 does not return the element in iframe from first attempt\n                if (!target) {\n                    target = elementUnderCursor(e);\n                }\n                hint.show();\n            }\n\n            return target;\n        },\n\n        _withDropTarget: function(element, callback) {\n            var result,\n                group = this.options.group,\n                targets = dropTargets[group],\n                areas = dropAreas[group];\n\n            if (targets && targets.length || areas && areas.length) {\n                result = checkTarget(element, targets, areas);\n\n                if (result) {\n                    callback(result.target, result.targetElement);\n                } else {\n                    callback();\n                }\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that._afterEnd();\n\n            that.userEvents.destroy();\n\n            if (that.clickMoveClick) {\n                that.clickMoveClick.destroy();\n            }\n\n            this._scrollableParent = null;\n            this._cursorElement = null;\n            clearInterval(this._scrollInterval);\n\n            that.currentTarget = null;\n        },\n\n        _afterEnd: function() {\n            var that = this;\n\n            if (that.hint) {\n                that.hint.remove();\n            }\n\n            delete draggables[that.options.group];\n\n            that.trigger(\"destroy\");\n            that.trigger(HINTDESTROYED);\n            $(document).off(KEYUP, that._captureEscape);\n        }\n    });\n\n    kendo.ui.plugin(DropTarget);\n    kendo.ui.plugin(DropTargetArea);\n    kendo.ui.plugin(Draggable);\n    kendo.TapCapture = TapCapture;\n    kendo.containerBoundaries = containerBoundaries;\n\n    extend(kendo.ui, {\n        Pane: Pane,\n        PaneDimensions: PaneDimensions,\n        Movable: Movable\n    });\n\n    function scrollableViewPort(element) {\n        var root = scrollableRoot()[0],\n            offset,\n            top,\n            left;\n\n        if (element[0] === root) {\n            top = root.scrollTop;\n            left = root.scrollLeft;\n\n            return {\n                top: top,\n                left: left,\n                bottom: top + $window.height(),\n                right: left + $window.width()\n            };\n        } else {\n            offset = element.offset();\n            offset.bottom = offset.top + element.height();\n            offset.right = offset.left + element.width();\n            return offset;\n        }\n    }\n\n    function scrollableRoot() {\n        return $(kendo.support.browser.edge || kendo.support.browser.safari ? document.body : document.documentElement);\n    }\n\n    function findScrollableParent(element) {\n        var root = scrollableRoot();\n\n        if (!element || element === document.body || element === document.documentElement) {\n            return root;\n        }\n\n        var parent = $(element)[0];\n\n        while (parent && !kendo.isScrollable(parent) && parent !== document.body) {\n            parent = parent.parentNode;\n        }\n\n        if (parent === document.body) {\n            return root;\n        }\n\n        return $(parent);\n    }\n\n    function autoScrollVelocity(mouseX, mouseY, rect) {\n        var velocity = { x: 0, y: 0 };\n\n        var AUTO_SCROLL_AREA = 50;\n\n        if (mouseX - rect.left < AUTO_SCROLL_AREA) {\n            velocity.x = -(AUTO_SCROLL_AREA - (mouseX - rect.left));\n        } else if (rect.right - mouseX < AUTO_SCROLL_AREA) {\n            velocity.x = AUTO_SCROLL_AREA - (rect.right - mouseX);\n        }\n\n        if (mouseY - rect.top < AUTO_SCROLL_AREA) {\n            velocity.y = -(AUTO_SCROLL_AREA - (mouseY - rect.top));\n        } else if (rect.bottom - mouseY < AUTO_SCROLL_AREA) {\n            velocity.y = AUTO_SCROLL_AREA - (rect.bottom - mouseY);\n        }\n\n        return velocity;\n    }\n\n    // export for testing\n    kendo.ui.Draggable.utils = {\n        autoScrollVelocity: autoScrollVelocity,\n        scrollableViewPort: scrollableViewPort,\n        findScrollableParent: findScrollableParent\n    };\n\n })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}