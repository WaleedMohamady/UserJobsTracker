{"version":3,"sources":["raw-mjs/kendo.mobile.scroller.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","mobile","fx","effects","ui","extend","Widget","Class","Movable","Pane","PaneDimensions","Transition","Animation","abs","Math","RELEASECLASS","REFRESHCLASS","CHANGE","SCROLL","ZoomSnapBack","init","options","that","this","fn","call","userEvents","bind","start","tapCapture","cancel","enabled","movable","scale","dimensions","minScale","done","tick","scaleWith","rescale","onEnd","scaleTo","DragInertia","transition","axis","_end","onCancel","freeze","location","_moveTo","paneAxis","outOfBounds","_snapBack","velocity","e","dimension","_started","min","touch","velocityMultiplier","max","captureNext","friction","delta","elastic","moveAxis","cancelCapture","end","snapBack","moveTo","duration","ease","easeOutExpo","AnimatedScroller","origin","destination","offset","_updateCoordinates","y","x","callback","setCoordinates","from","to","setCallback","isFunction","ScrollBar","horizontal","element","controlsId","attr","elementSize","scrollMovable","alwaysVisible","size","refresh","container","append","show","paneSize","sizeRatio","total","position","round","css","_ariaValue","opacity","visibility","hide","current","Scroller","_native","useNative","support","hasNativeScrolling","addClass","prepend","scrollElement","fixedContainer","children","first","wrapInner","inner","eq","TapCapture","forcedEnabled","zoom","avoidScrolling","UserEvents","touchAction","fastTap","allowSelection","preventDragEvent","captureUpIfMoved","multiTouch","supportDoubleTap","velocityX","velocityY","horizontalSwipe","verticalSwipe","contains","event","target","capture","pane","zoomSnapBack","animatedScroller","coordinates","scrollTo","scrollTop","scrollLeft","trigger","mousewheelScrolling","on","_wheelScroll","pulled","_initAxis","_wheelEnd","_wheel","_wheelY","pullToRefresh","_initPullToRefresh","ctrlKey","press","clearTimeout","_wheelTimeout","setTimeout","wheelDeltaY","move","preventDefault","makeVirtual","virtualSize","height","scrollHeight","scrollWidth","pullOffset","visibleScrollHints","messages","pullTemplate","releaseTemplate","refreshTemplate","events","_resize","contentResized","setOptions","reset","_scale","zoomOut","fitScale","centerCoordinates","enable","disable","animatedScrollTo","pullHandled","refreshHint","removeClass","hintContainer","html","yinertia","xinertia","destroy","forceEnabled","template","_paneChange","_dragEnd","scrollBar","elementId","guid","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.mobile.scroller.js","sourcesContent":["import './kendo.fx.js';\nimport './kendo.draganddrop.js';\n\nvar __meta__ = {\n    id: \"mobile.scroller\",\n    name: \"Scroller\",\n    category: \"mobile\",\n    description: \"The Kendo Mobile Scroller widget enables touch friendly kinetic scrolling for the contents of a given DOM element.\",\n    depends: [ \"fx\", \"draganddrop\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        mobile = kendo.mobile,\n        fx = kendo.effects,\n        ui = mobile.ui,\n        extend = $.extend,\n        Widget = ui.Widget,\n        Class = kendo.Class,\n        Movable = kendo.ui.Movable,\n        Pane = kendo.ui.Pane,\n        PaneDimensions = kendo.ui.PaneDimensions,\n        Transition = fx.Transition,\n        Animation = fx.Animation,\n        abs = Math.abs,\n        SNAPBACK_DURATION = 500,\n        SCROLLBAR_OPACITY = 0.7,\n        FRICTION = 0.96,\n        VELOCITY_MULTIPLIER = 10,\n        MAX_VELOCITY = 55,\n        OUT_OF_BOUNDS_FRICTION = 0.5,\n        ANIMATED_SCROLLER_PRECISION = 5,\n        RELEASECLASS = \"km-scroller-release\",\n        REFRESHCLASS = \"km-scroller-refresh\",\n        PULL = \"pull\",\n        CHANGE = \"change\",\n        RESIZE = \"resize\",\n        SCROLL = \"scroll\",\n        MOUSE_WHEEL_ID = 2;\n\n    var ZoomSnapBack = Animation.extend({\n        init: function(options) {\n            var that = this;\n            Animation.fn.init.call(that);\n            extend(that, options);\n\n            that.userEvents.bind(\"gestureend\", that.start.bind(that));\n            that.tapCapture.bind(\"press\", that.cancel.bind(that));\n        },\n\n        enabled: function() {\n          return this.movable.scale < this.dimensions.minScale;\n        },\n\n        done: function() {\n            return this.dimensions.minScale - this.movable.scale < 0.01;\n        },\n\n        tick: function() {\n            var movable = this.movable;\n            movable.scaleWith(1.1);\n            this.dimensions.rescale(movable.scale);\n        },\n\n        onEnd: function() {\n            var movable = this.movable;\n            movable.scaleTo(this.dimensions.minScale);\n            this.dimensions.rescale(movable.scale);\n        }\n    });\n\n    var DragInertia = Animation.extend({\n        init: function(options) {\n            var that = this;\n\n            Animation.fn.init.call(that);\n\n            extend(that, options, {\n                transition: new Transition({\n                    axis: options.axis,\n                    movable: options.movable,\n                    onEnd: function() { that._end(); }\n                })\n            });\n\n            that.tapCapture.bind(\"press\", function() { that.cancel(); });\n            that.userEvents.bind(\"end\", that.start.bind(that));\n            that.userEvents.bind(\"gestureend\", that.start.bind(that));\n            that.userEvents.bind(\"tap\", that.onEnd.bind(that));\n        },\n\n        onCancel: function() {\n            this.transition.cancel();\n        },\n\n        freeze: function(location) {\n            var that = this;\n            that.cancel();\n            that._moveTo(location);\n        },\n\n        onEnd: function() {\n            var that = this;\n            if (that.paneAxis.outOfBounds()) {\n                that._snapBack();\n            } else {\n                that._end();\n            }\n        },\n\n        done: function() {\n            return abs(this.velocity) < 1;\n        },\n\n        start: function(e) {\n            var that = this,\n                velocity;\n\n            if (!that.dimension.enabled) { return; }\n\n            if (that.paneAxis.outOfBounds()) {\n                if (that.transition._started) {\n                    that.transition.cancel();\n                    that.velocity = Math.min(e.touch[that.axis].velocity * that.velocityMultiplier, MAX_VELOCITY);\n\n                    Animation.fn.start.call(that);\n                } else {\n                    that._snapBack();\n                }\n            } else {\n                velocity = e.touch.id === MOUSE_WHEEL_ID ? 0 : e.touch[that.axis].velocity;\n                that.velocity = Math.max(Math.min(velocity * that.velocityMultiplier, MAX_VELOCITY), -MAX_VELOCITY);\n\n                that.tapCapture.captureNext();\n                Animation.fn.start.call(that);\n            }\n        },\n\n        tick: function() {\n            var that = this,\n                dimension = that.dimension,\n                friction = that.paneAxis.outOfBounds() ? OUT_OF_BOUNDS_FRICTION : that.friction,\n                delta = (that.velocity *= friction),\n                location = that.movable[that.axis] + delta;\n\n                if (!that.elastic && dimension.outOfBounds(location)) {\n                    location = Math.max(Math.min(location, dimension.max), dimension.min);\n                    that.velocity = 0;\n                }\n\n            that.movable.moveAxis(that.axis, location);\n        },\n\n        _end: function() {\n            this.tapCapture.cancelCapture();\n            this.end();\n        },\n\n        _snapBack: function() {\n            var that = this,\n                dimension = that.dimension,\n                snapBack = that.movable[that.axis] > dimension.max ? dimension.max : dimension.min;\n            that._moveTo(snapBack);\n        },\n\n        _moveTo: function(location) {\n            this.transition.moveTo({ location: location, duration: SNAPBACK_DURATION, ease: Transition.easeOutExpo });\n        }\n    });\n\n    var AnimatedScroller = Animation.extend({\n        init: function(options) {\n            var that = this;\n\n            kendo.effects.Animation.fn.init.call(this);\n\n            extend(that, options, {\n                origin: {},\n                destination: {},\n                offset: {}\n            });\n        },\n\n        tick: function() {\n            this._updateCoordinates();\n            this.moveTo(this.origin);\n        },\n\n        done: function() {\n            return abs(this.offset.y) < ANIMATED_SCROLLER_PRECISION && abs(this.offset.x) < ANIMATED_SCROLLER_PRECISION;\n        },\n\n        onEnd: function() {\n            this.moveTo(this.destination);\n            if (this.callback) {\n                this.callback.call();\n            }\n        },\n\n        setCoordinates: function(from, to) {\n            this.offset = {};\n            this.origin = from;\n            this.destination = to;\n        },\n\n        setCallback: function(callback) {\n            if (callback && kendo.isFunction(callback)) {\n                this.callback = callback;\n            } else {\n                callback = undefined$1;\n            }\n        },\n\n        _updateCoordinates: function() {\n            this.offset = {\n                x: (this.destination.x - this.origin.x) / 4,\n                y: (this.destination.y - this.origin.y) / 4\n            };\n\n            this.origin = {\n                y: this.origin.y + this.offset.y,\n                x: this.origin.x + this.offset.x\n            };\n        }\n    });\n\n    var ScrollBar = Class.extend({\n        init: function(options) {\n            var that = this,\n                horizontal = options.axis === \"x\",\n                element = $('<div role=\"scrollbar\" aria-controls=\"' + options.controlsId + '\" class=\"km-touch-scrollbar km-' + (horizontal ? \"horizontal\" : \"vertical\") + '-scrollbar\" />');\n\n            if (horizontal) {\n                element.attr(\"aria-orientation\", \"horizontal\");\n            }\n\n            extend(that, options, {\n                element: element,\n                elementSize: 0,\n                movable: new Movable(element),\n                scrollMovable: options.movable,\n                alwaysVisible: options.alwaysVisible,\n                size: horizontal ? \"width\" : \"height\"\n            });\n\n            that.scrollMovable.bind(CHANGE, that.refresh.bind(that));\n            that.container.append(element);\n            if (options.alwaysVisible) {\n                that.show();\n            }\n        },\n\n        refresh: function() {\n            var that = this,\n                axis = that.axis,\n                dimension = that.dimension,\n                paneSize = dimension.size,\n                scrollMovable = that.scrollMovable,\n                sizeRatio = paneSize / dimension.total,\n                position = Math.round(-scrollMovable[axis] * sizeRatio),\n                size = Math.round(paneSize * sizeRatio);\n\n                if (sizeRatio >= 1) {\n                    this.element.css(\"display\", \"none\");\n                } else {\n                    this.element.css(\"display\", \"\");\n                }\n\n                if (position + size > paneSize) {\n                    size = paneSize - position;\n                } else if (position < 0) {\n                    size += position;\n                    position = 0;\n                }\n\n            if (that.elementSize != size) {\n                that.element.css(that.size, size + \"px\");\n                that.elementSize = size;\n            }\n\n            that._ariaValue(position, dimension.size - that.elementSize);\n\n            that.movable.moveAxis(axis, position);\n        },\n\n        show: function() {\n            this.element.css({ opacity: SCROLLBAR_OPACITY, visibility: \"visible\" });\n        },\n\n        hide: function() {\n            if (!this.alwaysVisible) {\n                this.element.css({ opacity: 0 });\n            }\n        },\n\n        _ariaValue: function(current, total) {\n            var element = this.element;\n\n            if (current > total) {\n                current = total;\n            }\n\n            element.attr(\"aria-valuemax\", total);\n            element.attr(\"aria-valuenow\", current);\n        }\n    });\n\n    var Scroller = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n\n            element = that.element;\n\n            that._native = that.options.useNative && kendo.support.hasNativeScrolling;\n            if (that._native) {\n                element.addClass(\"km-native-scroller\")\n                    .prepend('<div class=\"km-scroll-header\"/>');\n\n                extend(that, {\n                    scrollElement: element,\n                    fixedContainer: element.children().first()\n                });\n\n                return;\n            }\n\n            element\n                .css(\"overflow\", \"hidden\")\n                .addClass(\"km-scroll-wrapper\")\n                .wrapInner('<div class=\"km-scroll-container\"/>')\n                .prepend('<div class=\"km-scroll-header\"/>');\n\n            var inner = element.children().eq(1),\n\n                tapCapture = new kendo.TapCapture(element),\n\n                movable = new Movable(inner),\n\n                dimensions = new PaneDimensions({\n                    element: inner,\n                    container: element,\n                    forcedEnabled: that.options.zoom\n                }),\n\n                avoidScrolling = this.options.avoidScrolling,\n\n                userEvents = new kendo.UserEvents(element, {\n                    touchAction: \"pan-y\",\n                    fastTap: true,\n                    allowSelection: true,\n                    preventDragEvent: true,\n                    captureUpIfMoved: true,\n                    multiTouch: that.options.zoom,\n                    supportDoubleTap: that.options.supportDoubleTap,\n                    start: function(e) {\n                        dimensions.refresh();\n\n                        var velocityX = abs(e.x.velocity),\n                            velocityY = abs(e.y.velocity),\n                            horizontalSwipe = velocityX * 2 >= velocityY,\n                            originatedFromFixedContainer = $.contains(that.fixedContainer[0], e.event.target),\n                            verticalSwipe = velocityY * 2 >= velocityX;\n\n\n                        if (!originatedFromFixedContainer && !avoidScrolling(e) && that.enabled && (dimensions.x.enabled && horizontalSwipe || dimensions.y.enabled && verticalSwipe)) {\n                            userEvents.capture();\n                        } else {\n                            userEvents.cancel();\n                        }\n                    }\n                }),\n\n                pane = new Pane({\n                    movable: movable,\n                    dimensions: dimensions,\n                    userEvents: userEvents,\n                    elastic: that.options.elastic\n                }),\n\n                zoomSnapBack = new ZoomSnapBack({\n                    movable: movable,\n                    dimensions: dimensions,\n                    userEvents: userEvents,\n                    tapCapture: tapCapture\n                }),\n\n                animatedScroller = new AnimatedScroller({\n                    moveTo: function(coordinates) {\n                        that.scrollTo(coordinates.x, coordinates.y);\n                    }\n                });\n\n            movable.bind(CHANGE, function() {\n                that.scrollTop = - movable.y;\n                that.scrollLeft = - movable.x;\n\n                that.trigger(SCROLL, {\n                    scrollTop: that.scrollTop,\n                    scrollLeft: that.scrollLeft\n                });\n            });\n\n            if (that.options.mousewheelScrolling) {\n                element.on(\"DOMMouseScroll mousewheel\", this._wheelScroll.bind(this));\n            }\n\n            extend(that, {\n                movable: movable,\n                dimensions: dimensions,\n                zoomSnapBack: zoomSnapBack,\n                animatedScroller: animatedScroller,\n                userEvents: userEvents,\n                pane: pane,\n                tapCapture: tapCapture,\n                pulled: false,\n                enabled: true,\n                scrollElement: inner,\n                scrollTop: 0,\n                scrollLeft: 0,\n                fixedContainer: element.children().first()\n            });\n\n            that._initAxis(\"x\");\n            that._initAxis(\"y\");\n\n            // build closure\n            that._wheelEnd = function() {\n                that._wheel = false;\n                that.userEvents.end(0, that._wheelY);\n            };\n\n            dimensions.refresh();\n\n            if (that.options.pullToRefresh) {\n                that._initPullToRefresh();\n            }\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            if (!this._wheel) {\n                this._wheel = true;\n                this._wheelY = 0;\n                this.userEvents.press(0, this._wheelY);\n            }\n\n            clearTimeout(this._wheelTimeout);\n            this._wheelTimeout = setTimeout(this._wheelEnd, 50);\n\n            var delta = kendo.wheelDeltaY(e);\n\n            if (delta) {\n                this._wheelY += delta;\n                this.userEvents.move(0, this._wheelY);\n            }\n\n            e.preventDefault();\n        },\n\n        makeVirtual: function() {\n            this.dimensions.y.makeVirtual();\n        },\n\n        virtualSize: function(min, max) {\n            this.dimensions.y.virtualSize(min, max);\n        },\n\n        height: function() {\n            return this.dimensions.y.size;\n        },\n\n        scrollHeight: function() {\n            return this.scrollElement[0].scrollHeight;\n        },\n\n        scrollWidth: function() {\n            return this.scrollElement[0].scrollWidth;\n        },\n\n        options: {\n            name: \"Scroller\",\n            zoom: false,\n            pullOffset: 140,\n            visibleScrollHints: false,\n            elastic: true,\n            useNative: false,\n            mousewheelScrolling: true,\n            avoidScrolling: function() { return false; },\n            pullToRefresh: false,\n            messages: {\n                pullTemplate: \"Pull to refresh\",\n                releaseTemplate: \"Release to refresh\",\n                refreshTemplate: \"Refreshing\"\n            }\n        },\n\n        events: [\n            PULL,\n            SCROLL,\n            RESIZE\n        ],\n\n        _resize: function() {\n            if (!this._native) {\n                this.contentResized();\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            Widget.fn.setOptions.call(that, options);\n            if (options.pullToRefresh) {\n                that._initPullToRefresh();\n            }\n        },\n\n        reset: function() {\n            if (this._native) {\n                this.scrollElement.scrollTop(0);\n            } else {\n                this.movable.moveTo({ x: 0, y: 0 });\n                this._scale(1);\n            }\n        },\n\n        contentResized: function() {\n            this.dimensions.refresh();\n            if (this.pane.x.outOfBounds()) {\n                this.movable.moveAxis(\"x\", this.dimensions.x.min);\n            }\n\n            if (this.pane.y.outOfBounds()) {\n                this.movable.moveAxis(\"y\", this.dimensions.y.min);\n            }\n        },\n\n        zoomOut: function() {\n            var dimensions = this.dimensions;\n            dimensions.refresh();\n            this._scale(dimensions.fitScale);\n            this.movable.moveTo(dimensions.centerCoordinates());\n        },\n\n        enable: function() {\n            this.enabled = true;\n        },\n\n        disable: function() {\n            this.enabled = false;\n        },\n\n        scrollTo: function(x, y) {\n            if (this._native) {\n                kendo.scrollLeft(this.scrollElement, abs(x));\n                this.scrollElement.scrollTop(abs(y));\n            } else {\n                this.dimensions.refresh();\n                this.movable.moveTo({ x: x, y: y });\n            }\n        },\n\n        animatedScrollTo: function(x, y, callback) {\n            var from,\n                to;\n\n            if (this._native) {\n                this.scrollTo(x, y);\n            } else {\n                from = { x: this.movable.x, y: this.movable.y };\n                to = { x: x, y: y };\n\n                this.animatedScroller.setCoordinates(from, to);\n                this.animatedScroller.setCallback(callback);\n                this.animatedScroller.start();\n            }\n        },\n\n        pullHandled: function() {\n            var that = this;\n            that.refreshHint.removeClass(REFRESHCLASS);\n            that.hintContainer.html(that.pullTemplate({}));\n            that.yinertia.onEnd();\n            that.xinertia.onEnd();\n            that.userEvents.cancel();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            if (this.userEvents) {\n                this.userEvents.destroy();\n            }\n        },\n\n        _scale: function(scale) {\n            this.dimensions.rescale(scale);\n            this.movable.scaleTo(scale);\n        },\n\n        _initPullToRefresh: function() {\n            var that = this;\n\n            that.dimensions.y.forceEnabled();\n            that.pullTemplate = kendo.template(that.options.messages.pullTemplate);\n            that.releaseTemplate = kendo.template(that.options.messages.releaseTemplate);\n            that.refreshTemplate = kendo.template(that.options.messages.refreshTemplate);\n\n            that.scrollElement.prepend('<span class=\"km-scroller-pull\"><span class=\"km-icon\"></span><span class=\"km-loading-left\"></span><span class=\"km-loading-right\"></span><span class=\"km-template\">' + that.pullTemplate({}) + '</span></span>');\n            that.refreshHint = that.scrollElement.children().first();\n            that.hintContainer = that.refreshHint.children(\".km-template\");\n\n            that.pane.y.bind(\"change\", that._paneChange.bind(that));\n            that.userEvents.bind(\"end\", that._dragEnd.bind(that));\n        },\n\n        _dragEnd: function() {\n            var that = this;\n\n            if (!that.pulled) {\n                return;\n            }\n\n            that.pulled = false;\n            that.refreshHint.removeClass(RELEASECLASS).addClass(REFRESHCLASS);\n            that.hintContainer.html(that.refreshTemplate({}));\n            that.yinertia.freeze(that.options.pullOffset / 2);\n            that.trigger(\"pull\");\n        },\n\n        _paneChange: function() {\n            var that = this;\n\n            if (that.movable.y / OUT_OF_BOUNDS_FRICTION > that.options.pullOffset) {\n                if (!that.pulled) {\n                    that.pulled = true;\n                    that.refreshHint.removeClass(REFRESHCLASS).addClass(RELEASECLASS);\n                    that.hintContainer.html(that.releaseTemplate({}));\n                }\n            } else if (that.pulled) {\n                that.pulled = false;\n                that.refreshHint.removeClass(RELEASECLASS);\n                that.hintContainer.html(that.pullTemplate({}));\n            }\n        },\n\n        _initAxis: function(axis) {\n            var that = this,\n                elementId = that.element.attr(\"id\"),\n                movable = that.movable,\n                dimension = that.dimensions[axis],\n                tapCapture = that.tapCapture,\n                paneAxis = that.pane[axis],\n                scrollBar;\n\n            if (!elementId) {\n                elementId = kendo.guid();\n                that.element.attr(\"id\", elementId);\n            }\n\n            scrollBar = new ScrollBar({\n                axis: axis,\n                movable: movable,\n                dimension: dimension,\n                container: that.element,\n                alwaysVisible: that.options.visibleScrollHints,\n                controlsId: elementId\n            });\n\n            dimension.bind(CHANGE, function() {\n                scrollBar.refresh();\n            });\n\n            paneAxis.bind(CHANGE, function() {\n                scrollBar.show();\n            });\n\n            that[axis + \"inertia\"] = new DragInertia({\n                axis: axis,\n                paneAxis: paneAxis,\n                movable: movable,\n                tapCapture: tapCapture,\n                userEvents: that.userEvents,\n                dimension: dimension,\n                elastic: that.options.elastic,\n                friction: that.options.friction || FRICTION,\n                velocityMultiplier: that.options.velocityMultiplier || VELOCITY_MULTIPLIER,\n                end: function() {\n                    scrollBar.hide();\n                    that.trigger(\"scrollEnd\", {\n                        axis: axis,\n                        scrollTop: that.scrollTop,\n                        scrollLeft: that.scrollLeft\n                    });\n                }\n            });\n        }\n    });\n\n    ui.plugin(Scroller);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}