{"version":3,"sources":["raw-mjs/kendo.virtuallist.js"],"names":["$","kendo","jQuery","valueMapperOptions","options","value","callback","selectable","checkboxes","success","response","__meta__","id","name","category","depends","hidden","undefined$1","window","ui","encode","htmlEncode","Widget","DataBoundWidget","percentageUnitsRegex","LIST_ITEM","TABLE_ITEM","GROUPITEM","SELECTED","FOCUSED","HOVER","CHANGE","CLICK","LISTBOUND","ITEMCHANGE","ACTIVATE","DEACTIVATE","GROUP_ROW_SEL","VIRTUAL_LIST_NS","lastFrom","array","length","toArray","Array","isPrimitive","dataItem","appendChild","parent","className","tagName","element","document","createElement","render","data","templates","itemTemplate","template","hasColumns","this","columns","altRow","index","item","placeholderTemplate","header","group","html","fixedGroupTemplate","attr","uid","addClass","removeClass","renderedColumns","i","currentWidth","width","currentWidthInt","parseInt","widthStyle","widthValue","test","renderColumns","applyStylesFromKendoAttributes","empty","append","find","remove","toggleClass","current","selected","newGroup","isLastGroupedItem","groupTemplate","appendTo","top","y","style","webkitTransform","transform","position","isActivePromise","promise","state","VirtualList","extend","init","listSize","lineHeight","mockList","that","contentClasses","bound","_fetching","fn","call","itemHeight","css","left","visibility","body","parseFloat","getComputedStyles","height","contentSelector","split","join","wrapper","closest","content","wrap","thead","row","TABLE_LIST","before","prev","ariaLabel","ariaLabelledBy","on","_values","_selectedDataItems","_selectedIndexes","_rangesList","_promisesList","_optionID","guid","_templates","setDataSource","dataSource","throttle","_renderItems","_triggerListBound","delay","_selectable","autoBind","listScreens","threshold","oppositeBuffer","type","dataValueField","mapValueTo","valueMapper","events","setOptions","itemClass","_selectProxy","off","refresh","items","_items","destroy","unbind","_refreshHandler","source","isArray","DataSource","create","_clean","_deferValueSet","mute","bind","setDSFilter","filter","view","fetch","skip","currentRangeStart","_selectingValue","_skip","trigger","_getValues","dataItems","getter","_valueGetter","map","_highlightSelectedItems","_getElementByDataItem","e","result","action","isItemChange","filtered","isFiltered","_mute","focus","_createList","skipUpdateOnBind","_emptySearch","done","itemsToMatch","found","j","itemsLength","selectedLength","changed","unchanged","push","mapChangedItems","removeAt","splice","_removeSelectedDataItem","valueGetter","idx","setValue","_forcePrefetch","slice","_valueDeferred","Deferred","select","_prefetchByValue","_checkValuesOrder","_removedAddedIndexes","newValue","dataView","_dataView","forSelection","mapValueToIndex","mapValueToDataItem","indexes","removed","_deselect","_triggerChange","added","_getIndecies","resolve","deferredRange","take","itemCount","ranges","defs","low","Math","floor","high","ceil","pages","each","_","deferred","end","existingRange","_multiplePrefetch","when","apply","prefetch","isEmptyList","_activeDeferred","_getSkip","_findDataItem","_getRange","_findRange","min","total","dataItemByIndex","progress","range","selectedDataItems","scrollWith","scrollTop","scrollTo","scrollToIndex","candidate","triggerEvent","flatView","isNaN","_getElementByIndex","_focusedIndex","hasClass","removeAttr","_getElementLocation","_screenHeight","focusIndex","focusFirst","focusLast","lastIndex","heightContainer","offsetHeight","focusPrev","focusNext","indices","initialIndices","isAlreadySelected","singleSelection","prefetchStarted","_selectDeferred","_deselectCurrentValues","_select","_listCreated","_lastDSFilter","Query","compareFilters","skipUpdate","noop","_lastScrollTop","_height","hasData","setScreenHeight","screenHeight","yPosition","yDownPostion","screenEnd","key","forEach","column","templateText","field","toString","_generateItems","count","text","tabIndex","setAttribute","minHeight","_saveInitialRanges","_ranges","start","reorder","get","_buildValueGetter","_setHeight","hide","show","_getter","_onScroll","force","getList","_listItems","_fixedHeader","_whenChanged","_reorderList","list","_calculateGroupPadding","_calculateColumnsHeaderPadding","currentHeight","innerHTML","padHeight","lastRequestedRange","lastRangeStart","pageSize","flatGroups","rangeStart","inRange","flatGroup","groups","len","groupLength","_getterDeferred","reject","then","firstItemIndex","_indexConstraint","currentVisibleGroup","firstVisibleDataItemIndex","firstVisibleDataItem","firstVisibleGroup","fixedGroupText","_itemMapper","listType","currentIndex","_currentGroup","_range","_view","_getDataItemsCollection","lastScrollTop","_listIndex","theValidator","downThreshold","upThreshold","listValidator","theNew","currentOffset","Infinity","arr1","arr2","ns","list2","offset","range2","diff","abs","unshift","reshift","_bufferSizes","opposite","down","up","max","buffers","_clickHandler","getElementIndex","elementIndex","selectedIndex","selectedIndexes","removedindexesCounter","inArray","_deselectSingleItem","children","values","oldSkip","currentTarget","isDefaultPrevented","firstItem","first","groupHeader","padding","display","support","scrollbar","isRtl","columnsHeader","plugin","kendo$1"],"mappings":"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","file":"kendo.virtuallist.js","sourcesContent":["import './kendo.data.js';\n\nlet $ = kendo.jQuery;\n\nfunction valueMapperOptions(options, value, callback) {\n    return {\n        value: (options.selectable === \"multiple\" || options.checkboxes) ? value : value[0],\n        success: function(response) {\n            callback(response);\n        }\n    };\n}\n\nvar __meta__ = {\n    id: \"virtuallist\",\n    name: \"VirtualList\",\n    category: \"framework\",\n    depends: [ \"data\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        Widget = ui.Widget,\n        DataBoundWidget = ui.DataBoundWidget,\n        percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n        LIST_CONTENT = \"k-list-content k-virtual-content\",\n        TABLE_CONTENT = \"k-table-body k-table-scroller\",\n        HEADER = \"k-list-group-sticky-header\",\n        LIST_ITEM = \"k-list-item\",\n        TABLE_ITEM = \"k-table-row\",\n        HEIGHTCONTAINER = \"k-height-container\",\n        GROUPITEM = \"k-list-item-group-label\",\n        LIST_UL = \"k-list-ul\",\n        TABLE_LIST = \"k-table-list\",\n\n        SELECTED = \"k-selected\",\n        FOCUSED = \"k-focus\",\n        HOVER = \"k-hover\",\n        CHANGE = \"change\",\n        CLICK = \"click\",\n        LISTBOUND = \"listBound\",\n        ITEMCHANGE = \"itemChange\",\n\n        ACTIVATE = \"activate\",\n        DEACTIVATE = \"deactivate\",\n\n        GROUP_ROW_SEL = \".k-table-group-row\",\n\n        VIRTUAL_LIST_NS = \".VirtualList\";\n\n    function lastFrom(array) {\n        return array[array.length - 1];\n    }\n\n    function toArray(value) {\n        return value instanceof Array ? value : [value];\n    }\n\n    function isPrimitive(dataItem) {\n        return typeof dataItem === \"string\" || typeof dataItem === \"number\" || typeof dataItem === \"boolean\";\n    }\n\n    function getItemCount(screenHeight, listScreens, itemHeight) {\n        return Math.ceil(screenHeight * listScreens / itemHeight);\n    }\n\n    function appendChild(parent, className, tagName) {\n        var element = document.createElement(tagName || \"div\");\n        if (className) {\n            element.className = className;\n        }\n        parent.appendChild(element);\n\n        return element;\n    }\n\n    function getDefaultItemHeight(listSize) {\n        var mockList = $('<div class=\"k-list ' + listSize + ' k-virtual-list\">' +\n                '<div class=\"k-list-content k-virtual-content\">' +\n                    '<ul class=\"k-list-ul\">' +\n                        '<li class=\"k-list-item\">' +\n                            '<span class=\"k-list-item-text\">test</span>' +\n                        '</li>' +\n                    '</ul>' +\n                '</div>' +\n            '</div>');\n        var lineHeight;\n\n        mockList.css({\n            position: \"absolute\",\n            left: \"-200000px\",\n            visibility: \"hidden\"\n        });\n        mockList.appendTo(document.body);\n        lineHeight = parseFloat(kendo.getComputedStyles(mockList.find(\".k-list-item\")[0], [\"height\"]).height);\n        mockList.remove();\n\n        return lineHeight;\n    }\n\n    function bufferSizes(screenHeight, listScreens, opposite) { //in pixels\n        return {\n            down: screenHeight * opposite,\n            up: screenHeight * (listScreens - 1 - opposite)\n        };\n    }\n\n    function listValidator(options, screenHeight) {\n        var downThreshold = (options.listScreens - 1 - options.threshold) * screenHeight;\n        var upThreshold = options.threshold * screenHeight;\n\n        return function(list, scrollTop, lastScrollTop) {\n            if (scrollTop > lastScrollTop) {\n                return scrollTop - list.top < downThreshold;\n            } else {\n                return list.top === 0 || scrollTop - list.top > upThreshold;\n            }\n        };\n    }\n\n    function scrollCallback(element, callback) {\n        return function(force) {\n            return callback(element.scrollTop, force);\n        };\n    }\n\n    function syncList(reorder) {\n        return function(list, force) {\n            reorder(list.items, list.index, force);\n            return list;\n        };\n    }\n\n    function position(element, y) {\n        element.style.webkitTransform = 'translateY(' + y + \"px)\";\n        element.style.transform = 'translateY(' + y + \"px)\";\n    }\n\n    function map2(callback, templates) {\n        return function(arr1, arr2) {\n            for (var i = 0, len = arr1.length; i < len; i++) {\n                callback(arr1[i], arr2[i], templates);\n                if (arr2[i].item) {\n                    this.trigger(ITEMCHANGE, { item: $(arr1[i]), data: arr2[i].item, ns: kendo.ui });\n                }\n            }\n        };\n    }\n\n    function reshift(items, diff) {\n        var range;\n\n        if (diff > 0) { // down\n            range = items.splice(0, diff);\n            items.push.apply(items, range);\n        } else { // up\n            range = items.splice(diff, -diff);\n            items.unshift.apply(items, range);\n        }\n\n        return range;\n    }\n\n    function render(element, data, templates) {\n        var itemTemplate = templates.template,\n            hasColumns = this.options.columns && this.options.columns.length,\n            altRow = data.index % 2 === 1 ? \"k-table-alt-row\" : \"\";\n\n        element = $(element);\n\n        if (!data.item) {\n            itemTemplate = templates.placeholderTemplate;\n        }\n\n        if (data.index === 0 && this.header && data.group) {\n            this.header.html(templates.fixedGroupTemplate(data.group));\n        }\n\n        element\n            .attr(\"data-uid\", data.item ? data.item.uid : \"\")\n            .attr(\"data-offset-index\", data.index);\n\n        if (hasColumns && data.item) {\n            if (altRow.length > 0) {\n                element.addClass(altRow);\n            } else {\n                element.removeClass(\"k-table-alt-row\");\n            }\n\n            let renderedColumns = $(renderColumns(this.options, data.item, templates));\n            kendo.applyStylesFromKendoAttributes(renderedColumns, [\"width\", \"max-width\"]);\n            element.empty().append(renderedColumns);\n        } else {\n            element.find(\".\" + GROUPITEM).remove();\n            element.find(\".k-list-item-text\").html(itemTemplate(data.item || {}));\n        }\n\n        element.toggleClass(FOCUSED, data.current);\n        element.toggleClass(SELECTED, data.selected);\n        element.toggleClass(\"k-first\", data.newGroup);\n        element.toggleClass(\"k-last\", data.isLastGroupedItem);\n        element.toggleClass(\"k-loading-item\", !data.item);\n\n        if (data.index !== 0 && data.newGroup) {\n            if (hasColumns) {\n                $('<span class=\"k-table-td k-table-group-td\"><span>' + templates.groupTemplate(data.group) + '</span></span>')\n                    .appendTo(element);\n            } else {\n                $(\"<div class=\" + GROUPITEM + \"></div>\")\n                    .appendTo(element)\n                    .html(templates.groupTemplate(data.group));\n            }\n        } else if (data.group && hasColumns) {\n            element.append($('<span class=\"k-table-td k-table-spacer-td\"></span>'));\n        }\n\n        if (data.top !== undefined$1) {\n            position(element[0], data.top);\n        }\n    }\n\n    function renderColumns(options, dataItem, templates) {\n        var item = \"\";\n\n        for (var i = 0; i < options.columns.length; i++) {\n            var currentWidth = options.columns[i].width;\n            var currentWidthInt = parseInt(currentWidth, 10);\n            var widthStyle = '';\n\n            if (currentWidth) {\n                let widthValue = `${currentWidthInt}${percentageUnitsRegex.test(currentWidth) ? \"%\" : \"px\"}`;\n                widthStyle = `${kendo.attr(\"style-width\")}=\"${widthValue}\" ${kendo.attr(\"style-max-width\")}=\"${widthValue}\"`;\n            }\n\n            item += \"<span class='k-table-td' \" + widthStyle + \">\";\n            item += templates[\"column\" + i](dataItem);\n            item += \"</span>\";\n        }\n\n        return item;\n    }\n\n    function mapChangedItems(selected, itemsToMatch) {\n        var itemsLength = itemsToMatch.length;\n        var selectedLength = selected.length;\n        var dataItem;\n        var found;\n        var i, j;\n\n        var changed = [];\n        var unchanged = [];\n\n        if (selectedLength) {\n            for (i = 0; i < selectedLength; i++) {\n                dataItem = selected[i];\n                found = false;\n\n                for (j = 0; j < itemsLength; j++) {\n                    if (dataItem === itemsToMatch[j]) {\n                        found = true;\n                        changed.push({ index: i, item: dataItem });\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    unchanged.push(dataItem);\n                }\n            }\n        }\n\n        return {\n            changed: changed,\n            unchanged: unchanged\n        };\n    }\n\n    function isActivePromise(promise) {\n        return promise && promise.state() !== \"resolved\";\n    }\n\n    var VirtualList = DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this,\n                contentClasses = options.columns && options.columns.length ? TABLE_CONTENT : LIST_CONTENT;\n\n            that.bound(false);\n            that._fetching = false;\n\n            Widget.fn.init.call(that, element, options);\n\n            if (!that.options.itemHeight) {\n                that.options.itemHeight = getDefaultItemHeight(options.listSize);\n            }\n\n            options = that.options;\n\n            that.element.attr(\"role\", \"listbox\");\n\n            var contentSelector = \".\" + contentClasses.split(' ').join('.');\n            var wrapper = that.element.closest(contentSelector);\n\n            that.content = that.wrapper = wrapper.length ? wrapper : that.element.wrap(\"<div unselectable='on' class='\" + contentClasses + \"'></div>\").parent();\n\n            if (that.options.columns && that.options.columns.length) {\n                var thead = that.element.closest(\".k-data-table\").find('.k-table-thead');\n                var row = $('<tr class=\"k-table-group-row\">' +\n                    '<th class=\"k-table-th\" colspan=\"' + that.options.columns.length + '\"></th>' +\n                '</tr>');\n\n                thead.append(row);\n\n                that.header = row.find(\".k-table-th\");\n                that.element.addClass(TABLE_LIST + \" k-virtual-table\");\n            } else {\n                that.header = that.content.before(\"<div class='\" + HEADER + \"'></div>\").prev();\n                that.element.addClass(LIST_UL);\n            }\n\n            if (options.ariaLabel) {\n                this.element.attr(\"aria-label\", options.ariaLabel);\n            } else if (options.ariaLabelledBy) {\n                this.element.attr(\"aria-labelledby\", options.ariaLabelledBy);\n            }\n\n            that.element.on(\"mouseenter\" + VIRTUAL_LIST_NS, \"li:not(.k-loading-item)\", function() { $(this).addClass(HOVER); })\n                        .on(\"mouseleave\" + VIRTUAL_LIST_NS, \"li\", function() { $(this).removeClass(HOVER); });\n\n            that._values = toArray(that.options.value);\n            that._selectedDataItems = [];\n            that._selectedIndexes = [];\n            that._rangesList = {};\n            that._promisesList = [];\n            that._optionID = kendo.guid();\n\n            that._templates();\n\n            that.setDataSource(options.dataSource);\n\n            that.content.on(\"scroll\" + VIRTUAL_LIST_NS, kendo.throttle(function() {\n                that._renderItems();\n                that._triggerListBound();\n            }, options.delay));\n\n            that._selectable();\n        },\n\n        options: {\n            name: \"VirtualList\",\n            autoBind: true,\n            delay: 100,\n            height: null,\n            listScreens: 4,\n            threshold: 0.5,\n            itemHeight: null,\n            oppositeBuffer: 1,\n            type: \"flat\",\n            selectable: false,\n            value: [],\n            dataValueField: null,\n            template: (data) => encode(data),\n            placeholderTemplate: () => \"loading...\",\n            groupTemplate: (data) => encode(data),\n            fixedGroupTemplate: (data) => encode(data),\n            mapValueTo: \"index\",\n            valueMapper: null,\n            ariaLabel: null,\n            ariaLabelledBy: null\n        },\n\n        events: [\n            CHANGE,\n            CLICK,\n            LISTBOUND,\n            ITEMCHANGE,\n            ACTIVATE,\n            DEACTIVATE\n        ],\n\n        setOptions: function(options) {\n            var itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n            Widget.fn.setOptions.call(this, options);\n\n            if (this._selectProxy && this.options.selectable === false) {\n                this.element.off(CLICK, \".\" + itemClass, this._selectProxy);\n            } else if (!this._selectProxy && this.options.selectable) {\n                this._selectable();\n            }\n\n            this._templates();\n            this.refresh();\n        },\n\n        items: function() {\n            return $(this._items);\n        },\n\n        destroy: function() {\n            this.wrapper.off(VIRTUAL_LIST_NS);\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            Widget.fn.destroy.call(this);\n        },\n\n        setDataSource: function(source) {\n            var that = this;\n            var dataSource = source || {};\n            var value;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n            dataSource = kendo.data.DataSource.create(dataSource);\n\n            if (that.dataSource) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n\n                that._clean();\n                that.bound(false);\n\n                that._deferValueSet = true;\n                value = that.value();\n\n                that.value([]);\n                that.mute(function() {\n                    that.value(value);\n                });\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n            }\n\n            that.dataSource = dataSource.bind(CHANGE, that._refreshHandler);\n\n            that.setDSFilter(dataSource.filter());\n\n            if (dataSource.view().length !== 0) {\n                that.refresh();\n            } else if (that.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        skip: function() {\n            return this.dataSource.currentRangeStart();\n        },\n\n        _triggerListBound: function() {\n            var that = this;\n            var skip = that.skip();\n\n            if (that.bound() && !that._selectingValue && that._skip !== skip) {\n                that._skip = skip;\n                that.trigger(LISTBOUND);\n            }\n        },\n\n        _getValues: function(dataItems) {\n            var getter = this._valueGetter;\n\n            return $.map(dataItems, function(dataItem) {\n                return getter(dataItem);\n            });\n        },\n\n        _highlightSelectedItems: function() {\n            for (var i = 0; i < this._selectedDataItems.length; i++) {\n                var item = this._getElementByDataItem(this._selectedDataItems[i]);\n                if (item.length) {\n                    item.addClass(SELECTED);\n                }\n            }\n        },\n\n        refresh: function(e) {\n            var that = this;\n            var action = e && e.action;\n            var isItemChange = action === \"itemchange\";\n            var filtered = this.isFiltered();\n            var result;\n\n            if (that._mute) { return; }\n\n            that._deferValueSet = false;\n\n            if (!that._fetching) {\n                if (filtered) {\n                    that.focus(0);\n                }\n\n                that._createList();\n                if (!action && that._values.length && !filtered &&\n                     !that.options.skipUpdateOnBind && !that._emptySearch) {\n                    that._selectingValue = true;\n\n                    that.bound(true);\n                    that.value(that._values, true).done(function() {\n                        that._selectingValue = false;\n                        that._triggerListBound();\n                    });\n                } else {\n                    that.bound(true);\n                    that._highlightSelectedItems();\n                    that._triggerListBound();\n                }\n            } else {\n                if (that._renderItems) {\n                    that._renderItems(true);\n                }\n\n                that._triggerListBound();\n            }\n\n            if (isItemChange || action === \"remove\") {\n                result = mapChangedItems(that._selectedDataItems, e.items);\n                if (result.changed.length) {\n                    if (isItemChange) {\n                        that.trigger(\"selectedItemChange\", {\n                            items: result.changed\n                        });\n                    } else {\n                        that.value(that._getValues(result.unchanged));\n                    }\n                }\n            }\n\n            that._fetching = false;\n        },\n\n        removeAt: function(position) {\n            var value = this._values.splice(position, 1)[0];\n\n            return {\n                position: position,\n                dataItem: this._removeSelectedDataItem(value)\n            };\n        },\n\n        _removeSelectedDataItem: function(value) {\n            var that = this,\n                valueGetter = that._valueGetter;\n\n            for (var idx in that._selectedDataItems) {\n                if (valueGetter(that._selectedDataItems[idx]) === value) {\n                    that._selectedIndexes.splice(idx, 1);\n                    return that._selectedDataItems.splice(idx, 1)[0];\n                }\n            }\n        },\n\n        setValue: function(value) {\n            this._values = toArray(value);\n        },\n\n        value: function(value, _forcePrefetch) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._values.slice();\n            }\n\n            if (value === null) {\n                value = [];\n            }\n\n            value = toArray(value);\n\n            if (!that._valueDeferred || that._valueDeferred.state() === \"resolved\") {\n                that._valueDeferred = $.Deferred();\n            }\n\n            var shouldClear = that.options.selectable === \"multiple\" && that.select().length && value.length;\n\n            if (shouldClear || !value.length) {\n                that.select(-1);\n            }\n\n            that._values = value;\n\n            if ((that.bound() && !that._mute && !that._deferValueSet) || _forcePrefetch) {\n                that._prefetchByValue(value);\n            }\n\n            return that._valueDeferred;\n        },\n\n        _checkValuesOrder: function(value) {\n            if (this._removedAddedIndexes &&\n                this._removedAddedIndexes.length === value.length) {\n                    var newValue = this._removedAddedIndexes.slice();\n                    this._removedAddedIndexes = null;\n                return newValue;\n            }\n\n            return value;\n        },\n\n        _prefetchByValue: function(value) {\n            var that = this,\n                dataView = that._dataView,\n                valueGetter = that._valueGetter,\n                mapValueTo = that.options.mapValueTo,\n                item, match = false,\n                forSelection = [];\n\n            //try to find the items in the loaded data\n            for (var i = 0; i < value.length; i++) {\n                for (var idx = 0; idx < dataView.length; idx++) {\n                    item = dataView[idx].item;\n                    if (item) {\n                        match = isPrimitive(item) ? value[i] === item : value[i] === valueGetter(item);\n\n                        if (match) {\n                            forSelection.push(dataView[idx].index);\n                        }\n                    }\n                }\n            }\n\n            if (forSelection.length === value.length) {\n                that._values = [];\n                that.select(forSelection);\n                return;\n            }\n\n            //prefetch the items\n            if (typeof that.options.valueMapper === \"function\") {\n                const callback = mapValueTo === 'index' ? that.mapValueToIndex : that.mapValueToDataItem;\n                that.options.valueMapper(valueMapperOptions(this.options, value, callback.bind(that)));\n            } else {\n                 if (!that.value()[0]) {\n                     that.select([-1]);\n                 } else {\n                    that._selectingValue = false;\n                    that._triggerListBound();\n                 }\n            }\n        },\n\n        mapValueToIndex: function(indexes) {\n            if (indexes === undefined$1 || indexes === -1 || indexes === null) {\n                indexes = [];\n            } else {\n                indexes = toArray(indexes);\n            }\n\n            if (!indexes.length) {\n                indexes = [-1];\n            } else {\n                var removed = this._deselect([]).removed;\n                if (removed.length) {\n                    this._triggerChange(removed, []);\n                }\n            }\n\n            this.select(indexes);\n        },\n\n        mapValueToDataItem: function(dataItems) {\n            var removed, added;\n\n            if (dataItems === undefined$1 || dataItems === null) {\n                dataItems = [];\n            } else {\n                dataItems = toArray(dataItems);\n            }\n\n            if (!dataItems.length) {\n                this.select([-1]);\n            } else {\n                removed = $.map(this._selectedDataItems, function(item, index) {\n                    return { index: index, dataItem: item };\n                });\n\n                added = $.map(dataItems, function(item, index) {\n                    return { index: index, dataItem: item };\n                });\n\n                this._selectedDataItems = dataItems;\n\n                this._selectedIndexes = [];\n\n                for (var i = 0; i < this._selectedDataItems.length; i++) {\n                    var item = this._getElementByDataItem(this._selectedDataItems[i]);\n                    this._selectedIndexes.push(this._getIndecies(item)[0]);\n                    item.addClass(SELECTED);\n                }\n\n                this._triggerChange(removed, added);\n\n                if (this._valueDeferred) {\n                    this._valueDeferred.resolve();\n                }\n            }\n        },\n\n        deferredRange: function(index) {\n            var dataSource = this.dataSource;\n            var take = this.itemCount;\n            var ranges = this._rangesList;\n            var result = $.Deferred();\n            var defs = [];\n\n            var low = Math.floor(index / take) * take;\n            var high = Math.ceil(index / take) * take;\n\n            var pages = high === low ? [ high ] : [ low, high ];\n\n            $.each(pages, function(_, skip) {\n                var end = skip + take;\n                var existingRange = ranges[skip];\n                var deferred;\n\n                if (!existingRange || (existingRange.end !== end)) {\n                    deferred = $.Deferred();\n                    ranges[skip] = { end: end, deferred: deferred };\n\n                    dataSource._multiplePrefetch(skip, take, function() {\n                        deferred.resolve();\n                    });\n                } else {\n                    deferred = existingRange.deferred;\n                }\n\n                defs.push(deferred);\n            });\n\n            $.when.apply($, defs).done(function() {\n                result.resolve();\n            });\n\n            return result;\n        },\n\n        prefetch: function(indexes) {\n            var that = this,\n                take = this.itemCount,\n                isEmptyList = !that._promisesList.length;\n\n            if (!isActivePromise(that._activeDeferred)) {\n                that._activeDeferred = $.Deferred();\n                that._promisesList = [];\n            }\n\n            $.each(indexes, function(_, index) {\n                that._promisesList.push(that.deferredRange(that._getSkip(index, take)));\n            });\n\n            if (isEmptyList) {\n                $.when.apply($, that._promisesList).done(function() {\n                    that._promisesList = [];\n                    that._activeDeferred.resolve();\n                });\n            }\n\n            return that._activeDeferred;\n        },\n\n        _findDataItem: function(view, index) {\n            var group;\n\n            //find in grouped view\n            if (this.options.type === \"group\") {\n                for (var i = 0; i < view.length; i++) {\n                    group = view[i].items;\n                    if (group.length <= index) {\n                        index = index - group.length;\n                    } else {\n                        return group[index];\n                    }\n                }\n            }\n\n            //find in flat view\n            return view[index];\n        },\n\n        _getRange: function(skip, take) {\n            return this.dataSource._findRange(skip, Math.min(skip + take, this.dataSource.total()));\n        },\n\n        dataItemByIndex: function(index) {\n            var that = this;\n            var take = that.itemCount;\n            var skip = that._getSkip(index, take);\n            var view = this._getRange(skip, take);\n\n            //should not return item if data is not loaded\n            if (!that._getRange(skip, take).length) {\n                return null;\n            }\n\n            if (that.options.type === \"group\") {\n                kendo.ui.progress($(that.wrapper), true);\n                that.mute(function() {\n                    that.dataSource.range(skip, take, function() {\n                        kendo.ui.progress($(that.wrapper), false);\n                    });\n                    view = that.dataSource.view();\n                });\n            }\n\n            return that._findDataItem(view, [index - skip]);\n        },\n\n        selectedDataItems: function() {\n            return this._selectedDataItems.slice();\n        },\n\n        scrollWith: function(value) {\n            this.content.scrollTop(this.content.scrollTop() + value);\n        },\n\n        scrollTo: function(y) {\n            this.content.scrollTop(y); //works only if the element is visible\n        },\n\n        scrollToIndex: function(index) {\n            this.scrollTo(index * this.options.itemHeight);\n        },\n\n        focus: function(candidate) {\n            var element,\n                index,\n                data,\n                current,\n                itemHeight = this.options.itemHeight,\n                id = this._optionID,\n                triggerEvent = true;\n\n            if (candidate === undefined$1) {\n                current = this.element.find(\".\" + FOCUSED);\n                return current.length ? current : null;\n            }\n\n            if (typeof candidate === \"function\") {\n                data = this.dataSource.flatView();\n                for (var idx = 0; idx < data.length; idx++) {\n                    if (candidate(data[idx])) {\n                        candidate = idx;\n                        break;\n                    }\n                }\n            }\n\n            if (candidate instanceof Array) {\n                candidate = lastFrom(candidate);\n            }\n\n            if (isNaN(candidate)) {\n                element = $(candidate);\n                index = parseInt($(element).attr(\"data-offset-index\"), 10);\n            } else {\n                index = candidate;\n                element = this._getElementByIndex(index);\n            }\n\n            if (index === -1) {\n                this.element.find(\".\" + FOCUSED).removeClass(FOCUSED);\n                this._focusedIndex = undefined$1;\n                return;\n            }\n\n            if (element.length) { /*focus rendered item*/\n                if (element.hasClass(FOCUSED)) {\n                    triggerEvent = false;\n                }\n                if (this._focusedIndex !== undefined$1) {\n                    current = this._getElementByIndex(this._focusedIndex);\n                    current\n                        .removeClass(FOCUSED)\n                        .removeAttr(\"id\");\n\n                    if (triggerEvent) {\n                        this.trigger(DEACTIVATE);\n                    }\n                }\n\n                this._focusedIndex = index;\n\n                element\n                    .addClass(FOCUSED)\n                    .attr(\"id\", id);\n\n                var position = this._getElementLocation(index);\n\n                if (position === \"top\") {\n                    this.scrollTo(index * itemHeight);\n                } else if (position === \"bottom\") {\n                    this.scrollTo((index * itemHeight + itemHeight) - this._screenHeight);\n                } else if (position === \"outScreen\") {\n                    this.scrollTo(index * itemHeight);\n                }\n\n                if (triggerEvent) {\n                    this.trigger(ACTIVATE);\n                }\n            } else { /*focus non rendered item*/\n                this._focusedIndex = index;\n                this.items().removeClass(FOCUSED);\n                this.scrollToIndex(index);\n            }\n        },\n\n        focusIndex: function() {\n            return this._focusedIndex;\n        },\n\n        focusFirst: function() {\n            this.scrollTo(0);\n            this.focus(0);\n        },\n\n        focusLast: function() {\n            var lastIndex = this.dataSource.total();\n            this.scrollTo(this.heightContainer.offsetHeight);\n            this.focus(lastIndex - 1);\n        },\n\n        focusPrev: function() {\n            var index = this._focusedIndex;\n            var current;\n\n            if (!isNaN(index) && index > 0) {\n                index -= 1;\n                this.focus(index);\n\n                current = this.focus();\n                if (current && current.hasClass(\"k-loading-item\")) {\n                    index += 1;\n                    this.focus(index);\n                }\n\n                return index;\n            } else {\n                index = this.dataSource.total() - 1;\n                this.focus(index);\n                return index;\n            }\n        },\n\n        focusNext: function() {\n            var index = this._focusedIndex;\n            var lastIndex = this.dataSource.total() - 1;\n            var current;\n\n            if (!isNaN(index) && index < lastIndex) {\n                index += 1;\n                this.focus(index);\n\n                current = this.focus();\n                if (current && current.hasClass(\"k-loading-item\")) {\n                    index -= 1;\n                    this.focus(index);\n                }\n\n                return index;\n            } else {\n                index = 0;\n                this.focus(index);\n                return index;\n            }\n        },\n\n        _triggerChange: function(removed, added) {\n            removed = removed || [];\n            added = added || [];\n\n            if (removed.length || added.length) {\n                 this.trigger(CHANGE, {\n                    removed: removed,\n                    added: added\n                });\n            }\n        },\n\n        select: function(candidate) {\n            var that = this,\n                indices,\n                initialIndices,\n                singleSelection = that.options.selectable !== \"multiple\",\n                prefetchStarted = isActivePromise(that._activeDeferred),\n                filtered = this.isFiltered(),\n                isAlreadySelected,\n                deferred,\n                result,\n                removed = [];\n\n            if (candidate === undefined$1) {\n                return that._selectedIndexes.slice();\n            }\n\n            if (!that._selectDeferred || that._selectDeferred.state() === \"resolved\") {\n                that._selectDeferred = $.Deferred();\n            }\n\n            indices = that._getIndecies(candidate);\n            isAlreadySelected = singleSelection && !filtered && lastFrom(indices) === lastFrom(this._selectedIndexes);\n            removed = that._deselectCurrentValues(indices);\n\n            if (removed.length || !indices.length || isAlreadySelected) {\n                that._triggerChange(removed);\n\n                if (that._valueDeferred) {\n                    that._valueDeferred.resolve().promise();\n                }\n\n                return that._selectDeferred.resolve().promise();\n            }\n\n            if (indices.length === 1 && indices[0] === -1) {\n                indices = [];\n            }\n\n            initialIndices = indices;\n            result = that._deselect(indices);\n            removed = result.removed;\n            indices = result.indices;\n\n            if (singleSelection) {\n                prefetchStarted = false;\n                if (indices.length) {\n                    indices = [lastFrom(indices)];\n                }\n            }\n\n            var done = function() {\n                var added = that._select(indices);\n\n                if (initialIndices.length === indices.length || singleSelection) {\n                    that.focus(indices);\n                }\n\n                that._triggerChange(removed, added);\n\n                if (that._valueDeferred) {\n                    that._valueDeferred.resolve();\n                }\n\n                that._selectDeferred.resolve();\n            };\n\n            deferred = that.prefetch(indices);\n\n            if (!prefetchStarted) {\n                if (deferred) {\n                    deferred.done(done);\n                } else {\n                    done();\n                }\n            }\n\n            return that._selectDeferred.promise();\n        },\n\n        bound: function(bound) {\n            if (bound === undefined$1) {\n                return this._listCreated;\n            }\n\n            this._listCreated = bound;\n        },\n\n        mute: function(callback) {\n            this._mute = true;\n            callback();\n            this._mute = false;\n        },\n\n        setDSFilter: function(filter) {\n            this._lastDSFilter = $.extend({}, filter);\n        },\n\n        isFiltered: function() {\n            if (!this._lastDSFilter) {\n                this.setDSFilter(this.dataSource.filter());\n            }\n\n            return !kendo.data.Query.compareFilters(this.dataSource.filter(), this._lastDSFilter);\n        },\n\n        skipUpdate: $.noop,\n\n        _getElementByIndex: function(index) {\n            return this.items().filter(function(idx, element) {\n                return index === parseInt($(element).attr(\"data-offset-index\"), 10);\n            });\n        },\n\n        _getElementByDataItem: function(dataItem) {\n            var dataView = this._dataView,\n            valueGetter = this._valueGetter,\n                element, match;\n\n            for (var i = 0; i < dataView.length; i++) {\n                match = dataView[i].item && isPrimitive(dataView[i].item) ? dataView[i].item === dataItem : dataView[i].item && dataItem && valueGetter(dataView[i].item) == valueGetter(dataItem);\n                if (match) {\n                    element = dataView[i];\n                    break;\n                }\n            }\n\n            return element ? this._getElementByIndex(element.index) : $();\n        },\n\n        _clean: function() {\n            this.result = undefined$1;\n            this._lastScrollTop = undefined$1;\n            this._skip = undefined$1;\n            $(this.heightContainer).remove();\n            this.heightContainer = undefined$1;\n            this.element.empty();\n        },\n\n        _height: function() {\n            var hasData = !!this.dataSource.view().length,\n                height = this.options.height,\n                itemHeight = this.options.itemHeight,\n                total = this.dataSource.total();\n\n            if (!hasData) {\n                height = 0;\n            } else if (height / itemHeight > total) {\n                height = total * itemHeight;\n            }\n\n            return height;\n        },\n\n        setScreenHeight: function() {\n            var height = this._height();\n\n            this.content.height(height);\n            this._screenHeight = height;\n        },\n\n        screenHeight: function() {\n            return this._screenHeight;\n        },\n\n        _getElementLocation: function(index) {\n            var scrollTop = this.content.scrollTop(),\n                screenHeight = this._screenHeight,\n                itemHeight = this.options.itemHeight,\n                yPosition = index * itemHeight,\n                yDownPostion = yPosition + itemHeight,\n                screenEnd = scrollTop + screenHeight,\n                position;\n\n            if (yPosition === (scrollTop - itemHeight) || (yDownPostion > scrollTop && yPosition < scrollTop)) {\n                position = \"top\";\n            } else if (yPosition === screenEnd || (yPosition < screenEnd && screenEnd < yDownPostion)) {\n                position = \"bottom\";\n            } else if ((yPosition >= scrollTop) && (yPosition <= scrollTop + (screenHeight - itemHeight))) {\n                position = \"inScreen\";\n            } else {\n                position = \"outScreen\";\n            }\n\n            return position;\n        },\n\n        _templates: function() {\n            var options = this.options;\n            var templates = {\n                template: options.template,\n                placeholderTemplate: options.placeholderTemplate,\n                groupTemplate: options.groupTemplate,\n                fixedGroupTemplate: options.fixedGroupTemplate\n            };\n\n            if (options.columns) {\n                options.columns.forEach((column, i) => {\n                    var templateText = column.field ? column.field.toString() : \"text\";\n                    var templateFunc = data => encode(kendo.getter(templateText)(data));\n\n                    templates[\"column\" + i] = column.template || templateFunc;\n                });\n            }\n\n            for (var key in templates) {\n                if (typeof templates[key] !== \"function\") {\n                    templates[key] = kendo.template(templates[key] || \"\");\n                }\n            }\n\n            this.templates = templates;\n        },\n\n        _generateItems: function(element, count) {\n            var items = [],\n                item, text,\n                itemHeight = this.options.itemHeight + \"px\",\n                itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n            while (count-- > 0) {\n                text = document.createElement(\"span\");\n                text.className = \"k-list-item-text\";\n\n                item = document.createElement(\"li\");\n                item.tabIndex = -1;\n                item.className = itemClass;\n                item.setAttribute(\"role\", \"option\");\n                item.style.height = itemHeight;\n                item.style.minHeight = itemHeight;\n                item.appendChild(text);\n\n                element.appendChild(item);\n\n                items.push(item);\n            }\n\n            return items;\n        },\n\n        _saveInitialRanges: function() {\n            var ranges = this.dataSource._ranges;\n            var deferred = $.Deferred();\n            deferred.resolve();\n\n            this._rangesList = {};\n            for (var i = 0; i < ranges.length; i++) {\n                this._rangesList[ranges[i].start] = { end: ranges[i].end, deferred: deferred };\n            }\n        },\n\n        _createList: function() {\n            var that = this,\n                content = that.content.get(0),\n                options = that.options,\n                dataSource = that.dataSource;\n\n            if (that.bound()) {\n                that._clean();\n            }\n\n            that._saveInitialRanges();\n            that._buildValueGetter();\n            that.setScreenHeight();\n            that.itemCount = getItemCount(that._screenHeight, options.listScreens, options.itemHeight);\n\n            if (that.itemCount > dataSource.total()) {\n                that.itemCount = dataSource.total();\n            }\n\n            that._items = that._generateItems(that.element[0], that.itemCount);\n\n            that._setHeight(options.itemHeight * dataSource.total());\n            that.options.type = (dataSource.group() || []).length ? \"group\" : \"flat\";\n\n            if (that.options.type === \"flat\") {\n                if (that.header.closest(GROUP_ROW_SEL).length) {\n                    that.header.closest(GROUP_ROW_SEL).hide();\n                } else {\n                    that.header.hide();\n                }\n            } else {\n                if (that.header.closest(GROUP_ROW_SEL).length) {\n                    that.header.closest(GROUP_ROW_SEL).show();\n                } else {\n                    that.header.show();\n                }\n            }\n\n            that.getter = that._getter(function() {\n                that._renderItems(true);\n            });\n\n            that._onScroll = function(scrollTop, force) {\n                var getList = that._listItems(that.getter);\n                return that._fixedHeader(scrollTop, getList(scrollTop, force));\n            };\n\n            that._renderItems = that._whenChanged(\n                scrollCallback(content, that._onScroll),\n                syncList(that._reorderList(that._items, render.bind(that)))\n            );\n\n            that._renderItems();\n            that._calculateGroupPadding(that._screenHeight);\n            that._calculateColumnsHeaderPadding();\n        },\n\n        _setHeight: function(height) {\n            var currentHeight,\n                heightContainer = this.heightContainer;\n\n            if (!heightContainer) {\n                heightContainer = this.heightContainer = appendChild(this.content[0], HEIGHTCONTAINER);\n            } else {\n                currentHeight = heightContainer.offsetHeight;\n            }\n\n            if (height !== currentHeight) {\n                heightContainer.innerHTML = \"\";\n\n                while (height > 0) {\n                    var padHeight = Math.min(height, 250000); //IE workaround, should not create elements with height larger than 250000px\n                    appendChild(heightContainer).style.height = padHeight + \"px\";\n                    height -= padHeight;\n                }\n            }\n        },\n\n        _getter: function() {\n            var lastRequestedRange = null,\n                dataSource = this.dataSource,\n                lastRangeStart = dataSource.skip(),\n                type = this.options.type,\n                pageSize = this.itemCount,\n                flatGroups = {};\n\n            if (dataSource.pageSize() < pageSize) {\n                this.mute(function() {\n                    dataSource.pageSize(pageSize);\n                });\n            }\n\n            return function(index, rangeStart) {\n                var that = this;\n                if (!dataSource.inRange(rangeStart, pageSize)) {\n                    if (lastRequestedRange !== rangeStart) {\n                        lastRequestedRange = rangeStart;\n                        lastRangeStart = rangeStart;\n\n                        if (that._getterDeferred) {\n                            that._getterDeferred.reject();\n                        }\n\n                        that._getterDeferred = that.deferredRange(rangeStart);\n                        that._getterDeferred.then(function() {\n                            var firstItemIndex = that._indexConstraint(that.content[0].scrollTop);\n\n                            that._getterDeferred = null;\n\n                            if (rangeStart <= firstItemIndex && firstItemIndex <= (rangeStart + pageSize)) {\n                                that._fetching = true;\n                                dataSource.range(rangeStart, pageSize);\n                            }\n                        });\n                    }\n\n                    return null;\n                } else {\n                    if (lastRangeStart !== rangeStart) {\n                        this.mute(function() {\n                            dataSource.range(rangeStart, pageSize);\n                            lastRangeStart = rangeStart;\n                        });\n                    }\n\n                    var result;\n                    if (type === \"group\") { //grouped list\n                        if (!flatGroups[rangeStart]) {\n                            var flatGroup = flatGroups[rangeStart] = [];\n                            var groups = dataSource.view();\n                            for (var i = 0, len = groups.length; i < len; i++) {\n                                var group = groups[i];\n                                for (var j = 0, groupLength = group.items.length; j < groupLength; j++) {\n                                    flatGroup.push({ item: group.items[j], group: group.value });\n                                }\n                            }\n                        }\n\n                        result = flatGroups[rangeStart][index - rangeStart];\n                    } else { //flat list\n                        result = dataSource.view()[index - rangeStart];\n                    }\n\n                    return result;\n                }\n            };\n        },\n\n        _fixedHeader: function(scrollTop, list) {\n            var group = this.currentVisibleGroup,\n                itemHeight = this.options.itemHeight,\n                firstVisibleDataItemIndex = Math.floor((scrollTop - list.top) / itemHeight),\n                firstVisibleDataItem = list.items[firstVisibleDataItemIndex];\n\n            if (firstVisibleDataItem && firstVisibleDataItem.item) {\n                var firstVisibleGroup = firstVisibleDataItem.group;\n\n                if (firstVisibleGroup !== group) {\n                    var fixedGroupText = firstVisibleGroup || \"\";\n                    this.header.html(this.templates.fixedGroupTemplate(fixedGroupText));\n                    this.currentVisibleGroup = firstVisibleGroup;\n                }\n            }\n\n            return list;\n        },\n\n        _itemMapper: function(item, index, value) {\n            var listType = this.options.type,\n                itemHeight = this.options.itemHeight,\n                currentIndex = this._focusedIndex,\n                selected = false,\n                current = false,\n                newGroup = false,\n                group = null,\n                match = false,\n                valueGetter = this._valueGetter;\n\n            if (listType === \"group\") {\n                if (item) {\n                    newGroup = index === 0 || (this._currentGroup !== false && this._currentGroup !== item.group);\n                    this._currentGroup = item.group;\n                }\n\n                group = item ? item.group : null;\n                item = item ? item.item : null;\n            }\n\n            if (this.options.mapValueTo === \"dataItem\" && this._selectedDataItems.length && item) {\n                for (var i = 0; i < this._selectedDataItems.length; i++) {\n                    match = valueGetter(this._selectedDataItems[i]) === valueGetter(item);\n                    if (match) {\n                        selected = true;\n                        break;\n                    }\n                }\n            } else if (!this.isFiltered() && value.length && item) {\n                for (var j = 0; j < value.length; j++) {\n                    match = isPrimitive(item) ? value[j] === item : value[j] === valueGetter(item);\n                    if (match) {\n                        value.splice(j , 1);\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n\n            if (currentIndex === index) {\n                current = true;\n            }\n\n            return {\n                item: item ? item : null,\n                group: group,\n                newGroup: newGroup,\n                selected: selected,\n                current: current,\n                index: index,\n                top: index * itemHeight\n            };\n        },\n\n        _range: function(index) {\n            var itemCount = this.itemCount,\n                value = this._values.slice(),\n                items = [],\n                item;\n\n            this._view = {};\n            this._currentGroup = false;\n\n            for (var i = index, length = index + itemCount; i < length; i++) {\n                item = this._itemMapper(this.getter(i, index), i, value);\n                if (items[items.length - 1]) {\n                    items[items.length - 1].isLastGroupedItem = item.newGroup;\n                }\n                items.push(item);\n                this._view[item.index] = item;\n            }\n\n            this._dataView = items;\n            return items;\n        },\n\n        _getDataItemsCollection: function(scrollTop, lastScrollTop) {\n            var items = this._range(this._listIndex(scrollTop, lastScrollTop));\n            return {\n                index: items.length ? items[0].index : 0,\n                top: items.length ? items[0].top : 0,\n                items: items\n            };\n        },\n\n        _listItems: function() {\n            var screenHeight = this._screenHeight,\n                options = this.options;\n\n            var theValidator = listValidator(options, screenHeight);\n\n            return (function(value, force) {\n                var result = this.result,\n                    lastScrollTop = this._lastScrollTop;\n\n                if (force || !result || !theValidator(result, value, lastScrollTop)) {\n                    result = this._getDataItemsCollection(value, lastScrollTop);\n                }\n\n                this._lastScrollTop = value;\n                this.result = result;\n\n                return result;\n            }).bind(this);\n        },\n\n        _whenChanged: function(getter, callback) {\n            var current;\n\n            return function(force) {\n                var theNew = getter(force);\n\n                if (theNew !== current) {\n                    current = theNew;\n                    callback(theNew, force);\n                }\n            };\n        },\n\n        _reorderList: function(list, reorder) {\n            var that = this;\n            var length = list.length;\n            var currentOffset = -Infinity;\n            reorder = map2(reorder, this.templates).bind(this);\n\n            return function(list2, offset, force) {\n                var diff = offset - currentOffset;\n                var range, range2;\n\n                if (force || Math.abs(diff) >= length) { // full reorder\n                    range = list;\n                    range2 = list2;\n                } else { // partial reorder\n                    range = reshift(list, diff);\n                    range2 = diff > 0 ? list2.slice(-diff) : list2.slice(0, -diff);\n                }\n\n                reorder(range, range2, that.bound());\n\n                currentOffset = offset;\n            };\n        },\n\n        _bufferSizes: function() {\n            var options = this.options;\n\n            return bufferSizes(this._screenHeight, options.listScreens, options.oppositeBuffer);\n        },\n\n        _indexConstraint: function(position) {\n            var itemCount = this.itemCount,\n                itemHeight = this.options.itemHeight,\n                total = this.dataSource.total();\n\n            return Math.min(Math.max(total - itemCount, 0), Math.max(0, Math.floor(position / itemHeight )));\n        },\n\n        _listIndex: function(scrollTop, lastScrollTop) {\n            var buffers = this._bufferSizes(),\n                position;\n\n            position = scrollTop - ((scrollTop > lastScrollTop) ? buffers.down : buffers.up);\n\n            return this._indexConstraint(position);\n        },\n\n        _selectable: function() {\n            var itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n            if (this.options.selectable) {\n                this._selectProxy = this._clickHandler.bind(this);\n                this.element.on(CLICK + VIRTUAL_LIST_NS, \".\" + itemClass, this._selectProxy);\n            }\n        },\n\n        getElementIndex: function(element) {\n            if (!(element instanceof jQuery)) {\n                return undefined$1;\n            }\n\n            return parseInt(element.attr(\"data-offset-index\"), 10);\n        },\n\n        _getIndecies: function(candidate) {\n            var result = [], data;\n\n            if (typeof candidate === \"function\") {\n                data = this.dataSource.flatView();\n                for (var idx = 0; idx < data.length; idx++) {\n                    if (candidate(data[idx])) {\n                        result.push(idx);\n                        break;\n                    }\n                }\n            }\n\n            if (typeof candidate === \"number\") {\n                result.push(candidate);\n            }\n\n            var elementIndex = this.getElementIndex(candidate);\n            if (!isNaN(elementIndex)) {\n                result.push(elementIndex);\n            }\n\n            if (candidate instanceof Array) {\n                result = candidate;\n            }\n\n            return result;\n        },\n\n        _deselect: function(indices) {\n            var removed = [],\n                selectedIndex,\n                dataItem,\n                selectedIndexes = this._selectedIndexes,\n                selectedDataItems = this._selectedDataItems,\n                position = 0,\n                selectable = this.options.selectable,\n                removedindexesCounter = 0,\n                valueGetter = this._valueGetter,\n                item, match,\n                result = null;\n\n            indices = indices.slice();\n\n            if (selectable === true || !indices.length) { //deselect everything\n                for (var idx = 0; idx < selectedIndexes.length; idx++) {\n                    if (selectedIndexes[idx] !== undefined$1) {\n                        this._getElementByIndex(selectedIndexes[idx]).removeClass(SELECTED);\n                    } else if (selectedDataItems[idx]) {\n                        this._getElementByDataItem(selectedDataItems[idx]).removeClass(SELECTED);\n                    }\n\n                    removed.push({\n                        index: selectedIndexes[idx],\n                        position: idx,\n                        dataItem: selectedDataItems[idx]\n                    });\n                }\n\n                this._values = [];\n                this._selectedDataItems = [];\n                this._selectedIndexes = [];\n            } else if (selectable === \"multiple\") {\n                for (var i = 0; i < indices.length; i++) {\n                    result = null;\n                    position = $.inArray(indices[i], selectedIndexes);\n                    dataItem = this.dataItemByIndex(indices[i]);\n\n                    if (position === -1 && dataItem) {\n                        for (var j = 0; j < selectedDataItems.length; j++) {\n                            match = isPrimitive(dataItem) ? selectedDataItems[j] === dataItem : valueGetter(selectedDataItems[j]) === valueGetter(dataItem);\n                            if (match) {\n                                item = this._getElementByIndex(indices[i]);\n                                result = this._deselectSingleItem(item, j, indices[i], removedindexesCounter);\n                            }\n                        }\n                    } else {\n                        selectedIndex = selectedIndexes[position];\n\n                        if (selectedIndex !== undefined$1) {\n                            item = this._getElementByIndex(selectedIndex);\n                            result = this._deselectSingleItem(item, position, selectedIndex, removedindexesCounter);\n                        }\n                    }\n\n                    if (result) {\n                        indices.splice(i, 1);\n                        removed.push(result);\n\n                        removedindexesCounter++;\n                        i--;\n                    }\n                }\n            }\n\n            return {\n                indices: indices,\n                removed: removed\n            };\n        },\n\n        _deselectSingleItem: function(item, position, selectedIndex, removedindexesCounter) {\n            var dataItem;\n\n            if (!item.hasClass(SELECTED)) {\n                return;\n            }\n\n            item.removeClass(SELECTED);\n            this._values.splice(position, 1);\n            this._selectedIndexes.splice(position, 1);\n            dataItem = this._selectedDataItems.splice(position, 1)[0];\n\n            return {\n                index: selectedIndex,\n                position: position + removedindexesCounter,\n                dataItem: dataItem\n            };\n        },\n\n        _deselectCurrentValues: function(indices) {\n            var children = this.element[0].children;\n            var value, index, position;\n            var values = this._values;\n            var removed = [];\n            var idx = 0;\n            var j;\n\n            if (this.options.selectable !== \"multiple\" || !this.isFiltered()) {\n                return [];\n            }\n\n            if (indices[0] === -1) {\n                $(children).removeClass(SELECTED);\n                removed = $.map(this._selectedDataItems.slice(0), function(dataItem, idx) {\n                   return {\n                      dataItem: dataItem,\n                      position: idx\n                   };\n                });\n                this._selectedIndexes = [];\n                this._selectedDataItems = [];\n                this._values = [];\n                return removed;\n            }\n\n            for (; idx < indices.length; idx++) {\n                position = -1;\n                index = indices[idx];\n                if (this.dataItemByIndex(index)) {\n                    value = this._valueGetter(this.dataItemByIndex(index));\n                }\n\n                for (j = 0; j < values.length; j++) {\n                    if (value == values[j]) {\n                        position = j;\n                        break;\n                    }\n                }\n\n                if (position > -1) {\n                    removed.push(this.removeAt(position));\n                    $(children[index]).removeClass(SELECTED);\n                }\n            }\n\n            return removed;\n        },\n\n        _getSkip: function(index, take) {\n            var page = index < take ? 1 : Math.floor(index / take) + 1;\n\n            return (page - 1) * take;\n        },\n\n        _select: function(indexes) {\n            var that = this,\n                singleSelection = this.options.selectable !== \"multiple\",\n                dataSource = this.dataSource,\n                dataItem, oldSkip,\n                take = this.itemCount,\n                valueGetter = this._valueGetter,\n                added = [];\n\n            if (singleSelection) {\n                that._selectedIndexes = [];\n                that._selectedDataItems = [];\n                that._values = [];\n            }\n\n            oldSkip = dataSource.skip();\n\n            $.each(indexes, function(_, index) {\n                var skip = that._getSkip(index, take);\n\n                that.mute(function() {\n                    dataSource.range(skip, take); //switch the range to get the dataItem\n\n                    dataItem = that._findDataItem(dataSource.view(), [index - skip]);\n                    that._selectedIndexes.push(index);\n                    that._selectedDataItems.push(dataItem);\n                    that._values.push(isPrimitive(dataItem) ? dataItem : valueGetter(dataItem));\n\n                    added.push({\n                        index: index,\n                        dataItem: dataItem\n                    });\n\n                    that._getElementByIndex(index).addClass(SELECTED);\n\n                    dataSource.range(oldSkip, take); //switch back the range\n                });\n            });\n\n            that._values = that._checkValuesOrder(that._values);\n\n            return added;\n        },\n\n        _clickHandler: function(e) {\n            var item = $(e.currentTarget);\n\n            if (!e.isDefaultPrevented() && item.attr(\"data-uid\")) {\n                this.trigger(CLICK, { item: item });\n            }\n        },\n\n        _buildValueGetter: function() {\n            this._valueGetter = kendo.getter(this.options.dataValueField);\n        },\n\n        _calculateGroupPadding: function(height) {\n            var firstItem = this.items().first(),\n                groupHeader = this.header,\n                padding = 0;\n\n            if (groupHeader[0] && groupHeader[0].style.display !== \"none\") {\n                if (height !== \"auto\") {\n                    padding = kendo.support.scrollbar();\n                }\n\n                padding += parseFloat(firstItem.css(\"border-right-width\"), 10) + parseFloat(firstItem.children(\".k-group\").css(\"right\"), 10);\n\n                groupHeader.css(\"padding-right\", padding);\n            }\n        },\n\n        _calculateColumnsHeaderPadding: function() {\n            if (this.options.columns && this.options.columns.length) {\n                var isRtl = kendo.support.isRtl(this.wrapper);\n                var scrollbar = kendo.support.scrollbar();\n                var columnsHeader = this.content.parent().parent().find(\".k-table-header\");\n                var total = this.dataSource.total();\n\n                columnsHeader.css((isRtl ? \"padding-left\" : \"padding-right\"), total ? scrollbar : 0);\n            }\n        }\n\n    });\n\n    kendo.ui.VirtualList = VirtualList;\n    kendo.ui.plugin(VirtualList);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}