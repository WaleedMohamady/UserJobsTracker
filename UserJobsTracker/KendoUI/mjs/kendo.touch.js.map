{"version":3,"sources":["raw-mjs/kendo.touch.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","abs","Math","Touch","extend","init","element","options","that","this","eventProxy","e","_triggerTouch","gestureEventProxy","trigger","touches","distance","center","event","fn","call","wrapper","events","UserEvents","filter","surface","minHold","multiTouch","allowSelection","fastTap","press","hold","tap","_tap","bind","gesturestart","gesturechange","gestureend","enableSwipe","_swipestart","_swipemove","_dragstart","notify","global","minXDelta","maxYDelta","maxDuration","doubleTapTimeout","cancel","destroy","type","touch","preventDefault","lastTap","endTime","touchDelta","x","velocity","y","sender","capture","duration","timeStamp","startTime","direction","initialDelta","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.touch.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.userevents.js';\n\nvar __meta__ = {\n    id: \"touch\",\n    name: \"Touch\",\n    category: \"mobile\",\n    description: \"The kendo Touch widget provides a cross-platform compatible API for handling user-initiated touch events, multi-touch gestures and event sequences (drag, swipe, etc.). \",\n    depends: [ \"core\", \"userevents\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        abs = Math.abs,\n        MAX_DOUBLE_TAP_DISTANCE = 20;\n\n    var Touch = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n            options = that.options;\n\n            element = that.element;\n            that.wrapper = element;\n\n            function eventProxy(name) {\n                return function(e) {\n                    that._triggerTouch(name, e);\n                };\n            }\n\n            function gestureEventProxy(name) {\n                return function(e) {\n                    that.trigger(name, { touches: e.touches, distance: e.distance, center: e.center, event: e.event });\n                };\n            }\n\n            that.events = new kendo.UserEvents(element, {\n                filter: options.filter,\n                surface: options.surface,\n                minHold: options.minHold,\n                multiTouch: options.multiTouch,\n                allowSelection: true,\n                fastTap: options.fastTap,\n                press: eventProxy(\"touchstart\"),\n                hold: eventProxy(\"hold\"),\n                tap: that._tap.bind(that),\n                gesturestart: gestureEventProxy(\"gesturestart\"),\n                gesturechange: gestureEventProxy(\"gesturechange\"),\n                gestureend: gestureEventProxy(\"gestureend\")\n            });\n\n            if (options.enableSwipe) {\n                that.events.bind(\"start\", that._swipestart.bind(that));\n                that.events.bind(\"move\", that._swipemove.bind(that));\n            } else {\n                that.events.bind(\"start\", that._dragstart.bind(that));\n                that.events.bind(\"move\", eventProxy(\"drag\"));\n                that.events.bind(\"end\", eventProxy(\"dragend\"));\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            \"touchstart\",\n            \"dragstart\",\n            \"drag\",\n            \"dragend\",\n            \"tap\",\n            \"doubletap\",\n            \"hold\",\n            \"swipe\",\n            \"gesturestart\",\n            \"gesturechange\",\n            \"gestureend\"\n        ],\n\n        options: {\n            name: \"Touch\",\n            surface: null,\n            global: false,\n            fastTap: false,\n            filter: null,\n            multiTouch: false,\n            enableSwipe: false,\n            minXDelta: 30,\n            maxYDelta: 20,\n            maxDuration: 1000,\n            minHold: 800,\n            doubleTapTimeout: 800\n        },\n\n        cancel: function() {\n            this.events.cancel();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.events.destroy();\n        },\n\n        _triggerTouch: function(type, e) {\n            if (this.trigger(type, { touch: e.touch, event: e.event })) {\n                e.preventDefault();\n            }\n        },\n\n        _tap: function(e) {\n            var that = this,\n                lastTap = that.lastTap,\n                touch = e.touch;\n\n            if (lastTap &&\n                (touch.endTime - lastTap.endTime < that.options.doubleTapTimeout) &&\n                kendo.touchDelta(touch, lastTap).distance < MAX_DOUBLE_TAP_DISTANCE\n                ) {\n\n               that._triggerTouch(\"doubletap\", e);\n               that.lastTap = null;\n            } else {\n                that._triggerTouch(\"tap\", e);\n                that.lastTap = touch;\n            }\n        },\n\n        _dragstart: function(e) {\n            this._triggerTouch(\"dragstart\", e);\n        },\n\n        _swipestart: function(e) {\n            if (abs(e.x.velocity) * 2 >= abs(e.y.velocity)) {\n                e.sender.capture();\n            }\n        },\n\n        _swipemove: function(e) {\n            var that = this,\n                options = that.options,\n                touch = e.touch,\n                duration = e.event.timeStamp - touch.startTime,\n                direction = touch.x.initialDelta > 0 ? \"right\" : \"left\";\n\n            if (\n                abs(touch.x.initialDelta) >= options.minXDelta &&\n                abs(touch.y.initialDelta) < options.maxYDelta &&\n                duration < options.maxDuration\n                )\n            {\n                that.trigger(\"swipe\", {\n                    direction: direction,\n                    touch: e.touch\n                });\n\n                touch.cancel();\n            }\n        }\n    });\n\n    kendo.ui.plugin(Touch);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}