{"version":3,"sources":["raw-mjs/kendo.scrollview.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","ui","Transition","effects","Pane","keys","PaneDimensions","Widget","DataBoundWidget","DataSource","data","math","Math","abs","ceil","round","max","min","floor","CHANGE","CLICK","REFRESH","CURRENT_PAGE_CLASS","VIRTUAL_PAGE_CLASS","FUNCTION","ITEM_CHANGE","NS","KEYDOWN","FOCUS","FOCUSOUT","FOCUSED","TABINDEX","className","ScrollViewDataReader","Observable","extend","init","dataSource","that","this","pendingRequestArray","initialFetch","useRanges","options","serverPaging","fn","call","bind","_change","trigger","offset","page","callback","view","range","pageSize","scrollTo","pageCount","total","prevPage","prevPrefetch","currentPage","nextPage","nextPrefetch","push","getViewData","index","length","destroy","unbind","Pager","Class","scrollView","element","navigationWrapElement","append","_navigationContainer","_changeProxy","_refreshProxy","_refresh","on","_click","_navigatable","items","children","_focus","_focused","_setCurrent","find","_blur","_current","removeClass","removeAttr","_keyDown","e","handled","next","current","key","keyCode","LEFT","prev","RIGHT","SPACEBAR","ENTER","preventDefault","stopPropagation","guid","attr","addClass","pageable","tabindex","messages","pagerLabel","role","itemsWrapper","_ariaTemplate","template","ARIATemplate","navigatable","pageHTML","idx","html","eq","_toggleNavigation","isDefaultPrevented","innerNavigationContainer","scrollViewWidth","width","containerOffset","pageWidth","outerWidth","itemOffset","position","left","scrollLeft","translate","animate","newPage","currentTarget","off","remove","ScrollViewPager","TRANSITION_END","DRAG_START","DRAG_END","ElasticPane","movable","transition","userEvents","dimensions","dimension","pane","container","parent","Movable","axis","onEnd","UserEvents","fastTap","start","x","velocity","y","capture","cancel","allowSelection","end","elastic","duration","size","getSize","height","getTotal","updateDimension","update","refresh","enabled","moveTo","moveAxis","transitionTo","ease","instant","location","tansition","ScrollViewElasticPane","ScrollViewContent","_getPages","contentHeight","enablePager","pagerOverlay","forceEnabled","easeOutExpo","paneMoved","swipeType","bounce","snap","approx","easeOutBack","minSnap","maxSnap","updatePage","forcePageUpdate","resizeTo","pageElements","containerHeight","css","_paged","roleSelector","VirtualScrollViewContent","_templates","pages","_initPages","setDataSource","create","_dataReader","_pendingPageRefresh","_pendingWidgetRefresh","_viewShow","setTimeout","_resetPages","dataReader","_pageProxy","_onPage","_resetProxy","_onReset","reset","emptyTemplate","templateProxy","emptyTemplateProxy","i","Page","setWidth","_repositionPages","silent","pagerScroll","thresholdPassed","isEndReached","delta","Array","_cancelMove","_moveBackward","_moveForward","shift","setPageContent","unshift","pop","_resetMovable","threshold","item","content","top","theContent","VirtualPage","ScrollView","stripWhitespace","scrollViewWrap","wrapInner","_initNavigation","pager","inner","first","transitionEnd","_transitionEnd","dragStart","_dragStart","dragEnd","_dragEnd","change","_defaultPrevented","_content","viewInit","viewShow","velocityThreshold","bounceVelocityThreshold","enableNavigationButtons","autoBind","previousButtonLabel","nextButtonLabel","events","ariaLiveEl","eventData","emptyDataSource","fetch","_updateAria","prevArrow","nextArrow","navigationContainer","itemsWrapperId","icon","hide","target","click","show","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.scrollview.js","sourcesContent":["import './kendo.fx.js';\nimport './kendo.data.js';\nimport './kendo.draganddrop.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"scrollview\",\n    name: \"ScrollView\",\n    category: \"web\",\n    description: \"The Kendo ScrollView widget is used to scroll content wider than the device screen.\",\n    depends: [ \"fx\", \"data\", \"draganddrop\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Transition = kendo.effects.Transition,\n        Pane = kendo.ui.Pane,\n        keys = kendo.keys,\n        PaneDimensions = kendo.ui.PaneDimensions,\n        Widget = ui.DataBoundWidget,\n        DataSource = kendo.data.DataSource,\n\n        // Math\n        math = Math,\n        abs = math.abs,\n        ceil = math.ceil,\n        round = math.round,\n        max = math.max,\n        min = math.min,\n        floor = math.floor,\n\n        CHANGE = \"change\",\n        CLICK = \"click\",\n        CHANGING = \"changing\",\n        REFRESH = \"refresh\",\n        CURRENT_PAGE_CLASS = \"primary\",\n        VIRTUAL_PAGE_CLASS = \"scrollview-page\",\n        FUNCTION = \"function\",\n        ITEM_CHANGE = \"itemChange\",\n        CLEANUP = \"cleanup\",\n        NS = \".ScrollView\",\n        DOT = \".\",\n        KEYDOWN = \"keydown\",\n        FOCUS = \"focus\",\n        FOCUSOUT = \"focusout\",\n        FOCUSED = \"k-focus\",\n        TABINDEX = \"tabindex\",\n\n        VIRTUAL_PAGE_COUNT = 3,\n        LEFT_PAGE = -1,\n        CETER_PAGE = 0,\n        RIGHT_PAGE = 1,\n\n        LEFT_SWIPE = -1,\n        NUDGE = 0,\n        RIGHT_SWIPE = 1;\n\n    function className(name) {\n        return \"k-\" + name;\n    }\n\n    var ScrollViewDataReader = kendo.Observable.extend({\n        init: function(dataSource) {\n            var that = this;\n            this.dataSource = dataSource;\n            this.pendingRequestArray = [];\n            this.initialFetch = false;\n            this.useRanges = dataSource.options.serverPaging;\n\n            kendo.Observable.fn.init.call(this);\n\n            dataSource.bind(\"change\", function() {\n                that._change();\n            });\n        },\n\n        _change: function() {\n            this.trigger(\"reset\", { offset: this.offset });\n        },\n\n        page: function(page, callback) {\n            var that = this;\n\n            if (!this.useRanges) {\n                this.dataSource.page(page + 1);\n                if (callback) {\n                    callback(that.dataSource.view());\n                } else {\n                    that.trigger(\"page\", { page: page });\n                }\n             }\n             if (this.useRanges) {\n                this.dataSource.range(page * this.dataSource.pageSize(), this.dataSource.pageSize(), function() {\n                    if (callback) {\n                        callback(that.dataSource.view());\n                    } else {\n                        that.trigger(\"page\", { page: page });\n                    }\n                });\n            }\n        },\n\n        scrollTo: function(page) {\n            var pageCount = Math.ceil(this.dataSource.total() / this.dataSource.pageSize() || 1);\n            var prevPage = page - 1;\n            var prevPrefetch = prevPage - 1;\n            var currentPage = page;\n            var nextPage = pageCount > 0 && page + 1 >= pageCount ? - 1 : page + 1;\n            var nextPrefetch = pageCount > 0 && nextPage + 1 >= pageCount ? - 1 : nextPage + 1;\n\n            if (nextPage >= 0) {\n                this.pendingRequestArray.push(nextPage);\n            }\n\n            if (prevPage >= 0) {\n                this.pendingRequestArray.push(prevPage);\n            }\n\n            if (prevPrefetch >= 0) {\n                this.pendingRequestArray.push(prevPrefetch);\n            }\n\n            if (nextPrefetch >= 0) {\n                this.pendingRequestArray.push(nextPrefetch);\n            }\n\n            this.page(currentPage);\n        },\n\n        getViewData: function() {\n            var view = this.dataSource.view();\n            var data;\n            if (this.dataSource.options.pageSize > 1) {\n                data = [];\n                for (var index = 0; index < view.length; index++) {\n                    data.push(view[index]);\n                }\n            }\n            else {\n                data = view[0];\n            }\n            return data;\n        },\n        destroy: function() {\n            var that = this;\n\n            that.dataSource.unbind();\n            that.dataSource = null;\n        }\n    });\n\n    kendo.ui.ScrollViewDataReader = ScrollViewDataReader;\n\n    var Pager = kendo.Class.extend({\n        init: function(scrollView) {\n            var that = this,\n                element = $(\"<div class='\" + className(\"scrollview-nav\") + \"'/>\"),\n                navigationWrapElement = $(\"<div class='\" + className(\"scrollview-nav-wrap\") + \"'></div>\");\n\n            navigationWrapElement.append(element);\n            scrollView._navigationContainer.append(navigationWrapElement);\n\n            this._changeProxy = that._change.bind(that);\n            this._refreshProxy = that._refresh.bind(that);\n            scrollView.bind(CHANGE, this._changeProxy);\n            scrollView.bind(REFRESH, this._refreshProxy);\n            element.on(CLICK + NS, \".k-link\", this._click.bind(scrollView));\n\n            $.extend(that, { element: element, scrollView: scrollView });\n\n            that._navigatable();\n        },\n\n        items: function() {\n            return this.element.children();\n        },\n\n        _focus: function() {\n            var that = this;\n            that._focused = true;\n            that._setCurrent(that.element.find(DOT + className(CURRENT_PAGE_CLASS)));\n        },\n\n        _blur: function() {\n            var that = this;\n\n            that._focused = false;\n\n            if (that._current) {\n                that._current.removeClass(FOCUSED);\n                that._current.removeAttr(\"id\");\n                that.element.removeAttr(\"aria-activedescendant\");\n            }\n        },\n\n        _keyDown: function(e) {\n            var that = this;\n            var handled;\n            var next;\n            var current = that._current;\n\n            var key = e.keyCode;\n\n            if (key == keys.LEFT) {\n                handled = true;\n                next = current.prev(\".k-link\");\n\n                if (next.length) {\n                    that._setCurrent(next);\n                }\n            }\n\n            if (key == keys.RIGHT) {\n                handled = true;\n                next = current.next(\".k-link\");\n\n                if (next.length) {\n                    that._setCurrent(next);\n                }\n            }\n\n            if (e.keyCode == keys.SPACEBAR || e.keyCode == keys.ENTER) {\n                handled = true;\n                that._current.trigger(\"click\");\n            }\n\n            if (handled) {\n                e.preventDefault();\n                // prevent changing of items in scrollview\n                e.stopPropagation();\n            }\n        },\n\n        _setCurrent: function(current) {\n            if (!this._focused) {\n                return;\n            }\n            var that = this;\n            var id = kendo.guid();\n            var next = $(current);\n\n            if (that._current) {\n                $(that._current)\n                    .removeClass(FOCUSED)\n                    .removeAttr(\"id\");\n\n                that.element.removeAttr(\"aria-activedescendant\");\n            }\n\n            next\n                .attr(\"id\", id)\n                .addClass(FOCUSED);\n\n            that.element.attr(\"aria-activedescendant\", id);\n\n            that._current = next;\n        },\n\n        _navigatable: function() {\n            var that = this;\n            var pageable = that.scrollView.options.pageable || {};\n            var defaultAriaTemplate = ({ index }) => `Item ${index + 1}`;\n\n            that.element.attr({\n                tabindex: 0,\n                \"aria-label\": that.scrollView.options.messages.pagerLabel,\n                role: \"group\"\n            });\n\n            if (that.scrollView.itemsWrapper) {\n                that.element.attr(\"aria-controls\", that.scrollView.itemsWrapper.attr(\"id\"));\n            }\n\n            that._ariaTemplate = kendo.template(pageable.ARIATemplate || defaultAriaTemplate);\n\n            if (!that.scrollView.options.navigatable) {\n                return;\n            }\n\n            that.element.on(KEYDOWN + NS, that, that._keyDown.bind(that));\n            that.element.on(FOCUS + NS, that._focus.bind(that));\n            that.element.on(FOCUSOUT + NS, that._blur.bind(that));\n        },\n\n        _refresh: function(e) {\n            var pageHTML = \"\";\n            var current;\n\n            for (var idx = 0; idx < e.pageCount; idx ++) {\n                pageHTML += '<span class=\"k-link\" role=\"button\" aria-label=\"' + this._ariaTemplate({ index: idx }) + '\" aria-pressed=\"false\"></span>';\n            }\n\n            this.element.html(pageHTML);\n            current = this.items().eq(e.page);\n            current.addClass(className(CURRENT_PAGE_CLASS));\n\n            current.attr(\"aria-pressed\", true);\n\n            this.scrollView._toggleNavigation({ currentPage: e.page });\n        },\n\n        _change: function(e) {\n            if (e.isDefaultPrevented()) {\n                return;\n            }\n\n            var innerNavigationContainer = this.scrollView._navigationContainer.find(\".k-scrollview-nav\");\n            var scrollViewWidth = this.scrollView.element.width();\n            var containerOffset = (scrollViewWidth - innerNavigationContainer.width()) / 2;\n            var pageWidth = innerNavigationContainer.find(\".k-link\").eq(0).outerWidth(true) / 2;\n            var items = this.items();\n            var current;\n\n            items.removeClass(className(CURRENT_PAGE_CLASS));\n\n            current = items.eq(e.nextPage).addClass(className(CURRENT_PAGE_CLASS));\n            items.attr(\"aria-pressed\", false);\n            this._setCurrent(current);\n            current.attr(\"aria-pressed\", true);\n\n            var itemOffset = this.items().eq(e.nextPage).length > 0 ? this.items().eq(e.nextPage).position().left : 0;\n\n            if (itemOffset > scrollViewWidth / 2 || itemOffset < kendo.scrollLeft(innerNavigationContainer) + scrollViewWidth / 2) {\n                var translate = 0;\n\n                if (itemOffset > scrollViewWidth / 2) {\n                    translate = kendo.scrollLeft(innerNavigationContainer) + itemOffset - scrollViewWidth / 2;\n                }\n                else {\n                    translate = kendo.scrollLeft(innerNavigationContainer) - (scrollViewWidth / 2 - itemOffset);\n                }\n\n                translate += (containerOffset + pageWidth);\n\n                innerNavigationContainer.animate({ \"scrollLeft\": translate }, 300);\n            }\n\n            this.scrollView._toggleNavigation({ currentPage: e.currentPage, nextPage: e.nextPage });\n        },\n\n        _click: function(e) {\n            var newPage = $(e.currentTarget).index();\n\n            this.scrollTo(newPage);\n        },\n\n        destroy: function() {\n            this.scrollView.unbind(CHANGE, this._changeProxy);\n            this.scrollView.unbind(REFRESH, this._refreshProxy);\n            this.element.off(NS);\n            this.element.remove();\n        }\n    });\n\n    kendo.ui.ScrollViewPager = Pager;\n\n    var TRANSITION_END = \"transitionEnd\",\n        DRAG_START = \"dragStart\",\n        DRAG_END = \"dragEnd\";\n\n    var ElasticPane = kendo.Observable.extend({\n        init: function(element, options) {\n            var that = this;\n\n            kendo.Observable.fn.init.call(this);\n\n            this.element = element;\n            this.container = element.parent();\n\n            var movable,\n                transition,\n                userEvents,\n                dimensions,\n                dimension,\n                pane;\n\n            movable = new kendo.ui.Movable(that.element);\n\n            transition = new Transition({\n                axis: \"x\",\n                movable: movable,\n                onEnd: function() {\n                    that.trigger(TRANSITION_END);\n                }\n            });\n\n            userEvents = new kendo.UserEvents(element, {\n                fastTap: true,\n                start: function(e) {\n                    if (abs(e.x.velocity) * 2 >= abs(e.y.velocity)) {\n                        userEvents.capture();\n                    } else {\n                        userEvents.cancel();\n                    }\n\n                    that.trigger(DRAG_START, e);\n                    transition.cancel();\n                },\n                allowSelection: true,\n                end: function(e) {\n                    that.trigger(DRAG_END, e);\n                }\n            });\n\n            dimensions = new PaneDimensions({\n                element: that.element,\n                container: that.container\n            });\n\n            dimension = dimensions.x;\n\n            dimension.bind(CHANGE, function() {\n                that.trigger(CHANGE);\n            });\n\n            pane = new Pane({\n                dimensions: dimensions,\n                userEvents: userEvents,\n                movable: movable,\n                elastic: true\n            });\n\n            $.extend(that, {\n                duration: options && options.duration || 1,\n                movable: movable,\n                transition: transition,\n                userEvents: userEvents,\n                dimensions: dimensions,\n                dimension: dimension,\n                pane: pane\n            });\n\n            this.bind([TRANSITION_END, DRAG_START, DRAG_END, CHANGE], options);\n        },\n\n        size: function() {\n            return { width: this.dimensions.x.getSize(), height: this.dimensions.y.getSize() };\n        },\n\n        total: function() {\n            return this.dimension.getTotal();\n        },\n\n        offset: function() {\n            return -this.movable.x;\n        },\n\n        updateDimension: function() {\n            this.dimension.update(true);\n        },\n\n        refresh: function() {\n            this.dimensions.refresh();\n            this.dimensions.y.enabled = false;\n        },\n\n        moveTo: function(offset) {\n            this.movable.moveAxis(\"x\", -offset);\n        },\n\n        transitionTo: function(offset, ease, instant) {\n            if (instant) {\n                this.moveTo(-offset);\n            } else {\n                this.transition.moveTo({ location: offset, duration: this.duration, ease: ease });\n            }\n        },\n        destroy: function() {\n            var that = this;\n\n            that.userEvents.destroy();\n            that.unbind();\n            that.movable = that.tansition = that.dimensions = that.dimension = that.pane = null;\n            that.element.remove();\n        }\n    });\n\n    kendo.ui.ScrollViewElasticPane = ElasticPane;\n\n    var ScrollViewContent = kendo.Observable.extend({\n        init: function(element, pane, options) {\n            var that = this;\n\n            kendo.Observable.fn.init.call(this);\n            that.element = element;\n            that.pane = pane;\n            that._getPages();\n            this.page = 0;\n            this.pageSize = options.pageSize || 1;\n            this.contentHeight = options.contentHeight;\n            this.enablePager = options.enablePager;\n            this.pagerOverlay = options.pagerOverlay;\n\n            that.pane.dimension.forceEnabled();\n        },\n\n        scrollTo: function(page, instant) {\n            var that = this;\n\n            if (page == that.page && !instant) {\n                return;\n            }\n\n            if (!that.trigger(\"resize\", { currentPage: this.page, nextPage: page, data: undefined$1 })) {\n                that.page = page;\n                that.pane.transitionTo(- page * that.pane.size().width, Transition.easeOutExpo, instant);\n            }\n        },\n\n        paneMoved: function(swipeType, bounce, callback, /*internal*/ instant) {\n            var that = this,\n                pane = that.pane,\n                width = pane.size().width * that.pageSize,\n                approx = round,\n                ease = bounce ? Transition.easeOutBack : Transition.easeOutExpo,\n                snap,\n                nextPage;\n\n            if (swipeType === LEFT_SWIPE) {\n                approx = ceil;\n            } else if (swipeType === RIGHT_SWIPE) {\n                approx = floor;\n            }\n\n            nextPage = approx(pane.offset() / width);\n\n            if (nextPage < 0 || nextPage >= that.pageCount) {\n                var tansition = nextPage < 0 ? 0 : (- this.page * this.pane.size().width);\n                return this.pane.transitionTo(tansition, ease, instant);\n            }\n\n            snap = max(that.minSnap, min(-nextPage * width, that.maxSnap));\n\n            if (nextPage != that.page) {\n                if (callback && callback({ currentPage: that.page, nextPage: nextPage })) {\n                    snap = -that.page * pane.size().width;\n                }\n            }\n\n            pane.transitionTo(snap, ease, instant);\n        },\n\n        updatePage: function() {\n            var pane = this.pane,\n                page = round(pane.offset() / pane.size().width);\n\n            if (page != this.page) {\n                this.page = page;\n                return true;\n            }\n\n            return false;\n        },\n\n        forcePageUpdate: function() {\n            return this.updatePage();\n        },\n\n        resizeTo: function(size) {\n            var pane = this.pane,\n                width = size.width;\n\n            this.pageElements.width(width);\n\n            if (this.contentHeight === \"100%\") {\n                var containerHeight = this.element.parent().height();\n\n                this.element.css(\"height\", containerHeight);\n                this.pageElements.css(\"height\", containerHeight);\n            }\n\n            // re-read pane dimension after the pageElements have been resized.\n            pane.updateDimension();\n\n            if (!this._paged) {\n                this.page = floor(pane.offset() / width);\n            }\n\n            this.scrollTo(this.page, true, true);\n\n            this.pageCount = this.pageElements.length;\n            this.minSnap = - (this.pageCount - 1) * width;\n            this.maxSnap = 0;\n        },\n\n        _getPages: function() {\n            this.pageElements = this.element.find(kendo.roleSelector(\"page\"));\n            this._paged = this.pageElements.length > 0;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.pane = null;\n            that.element.remove();\n        }\n    });\n\n    kendo.ui.ScrollViewContent = ScrollViewContent;\n\n    var VirtualScrollViewContent = kendo.Observable.extend({\n        init: function(element, pane, options) {\n            var that = this;\n\n            kendo.Observable.fn.init.call(this);\n\n            that.element = element;\n            that.pane = pane;\n            that.options = options;\n            that._templates();\n            that.page = options.page || 0;\n            that.pages = [];\n            that._initPages();\n            that.resizeTo(that.pane.size());\n\n            that.pane.dimension.forceEnabled();\n        },\n\n        setDataSource: function(dataSource) {\n            this.dataSource = DataSource.create(dataSource);\n            this._dataReader();\n            this._pendingPageRefresh = false;\n            this._pendingWidgetRefresh = false;\n        },\n\n        _viewShow: function() {\n            var that = this;\n            if (that._pendingWidgetRefresh) {\n                setTimeout(function() {\n                    that._resetPages();\n                }, 0);\n                that._pendingWidgetRefresh = false;\n            }\n        },\n\n        _dataReader: function() {\n            this.dataReader = new ScrollViewDataReader(this.dataSource);\n\n            this._pageProxy = this._onPage.bind(this);\n            this._resetProxy = this._onReset.bind(this);\n\n            this.dataReader.bind({\n                \"page\": this._pageProxy,\n                \"reset\": this._resetProxy\n            });\n        },\n\n        _templates: function() {\n            var template = this.options.template,\n                emptyTemplate = this.options.emptyTemplate,\n                templateProxy = {},\n                emptyTemplateProxy = {};\n\n            if (typeof template === FUNCTION) {\n                templateProxy.template = template;\n                template = (data) => templateProxy.template(data);\n            }\n\n            this.template = kendo.template(template).bind(templateProxy);\n\n            if (typeof emptyTemplate === FUNCTION) {\n                emptyTemplateProxy.emptyTemplate = emptyTemplate;\n                emptyTemplate = (data) => emptyTemplateProxy.emptyTemplate(data);\n            }\n\n            this.emptyTemplate = kendo.template(emptyTemplate).bind(emptyTemplateProxy);\n        },\n\n        _initPages: function() {\n            var pages = this.pages,\n                element = this.element,\n                page;\n\n            for (var i = 0; i < VIRTUAL_PAGE_COUNT; i++) {\n                page = new Page(element);\n                pages.push(page);\n            }\n\n            this.pane.updateDimension();\n        },\n\n        resizeTo: function(size) {\n            var pages = this.pages,\n                pane = this.pane;\n\n            for (var i = 0; i < pages.length; i++) {\n                pages[i].setWidth(size.width);\n            }\n\n            if (this.options.contentHeight === \"auto\") {\n                this.element.css(\"height\", this.pages[1].element.height());\n            }\n\n            else if (this.options.contentHeight === \"100%\") {\n                var containerHeight = this.element.parent().height();\n\n                this.element.css(\"height\", containerHeight);\n                pages[0].element.css(\"height\", containerHeight);\n                pages[1].element.css(\"height\", containerHeight);\n                pages[2].element.css(\"height\", containerHeight);\n            }\n            else if (this.options.contentHeight) {\n                pages[0].element.css(\"height\", this.options.contentHeight);\n                pages[1].element.css(\"height\", this.options.contentHeight);\n                pages[2].element.css(\"height\", this.options.contentHeight);\n            }\n\n            pane.updateDimension();\n\n            this._repositionPages();\n\n            this.width = size.width;\n        },\n\n        scrollTo: function(page, instant, silent) {\n            var that = this;\n            var dataReader = that.dataReader;\n\n            if (page == that.page && !instant) {\n                return;\n            }\n\n            dataReader.page(page, function(data) {\n                if (silent) {\n                    dataReader.scrollTo(page);\n                    return;\n                }\n                if (!that.trigger(\"resize\", { currentPage: that.page, nextPage: page, data: data })) {\n                    if (!instant) {\n                        dataReader.pagerScroll = page > that.page ? - 1 : 1;\n                        that.page = page + dataReader.pagerScroll;\n                    } else {\n                        that.page = page;\n                    }\n                    dataReader.scrollTo(page);\n                }\n            });\n        },\n        paneMoved: function(swipeType, bounce, callback, /*internal*/ instant) {\n            var that = this,\n                pane = that.pane,\n                width = pane.size().width,\n                offset = pane.offset(),\n                thresholdPassed = Math.abs(offset) >= width / 3,\n                ease = bounce ? kendo.effects.Transition.easeOutBack : kendo.effects.Transition. easeOutExpo,\n                isEndReached = that.page + 2 > that.pageCount,\n                nextPage,\n                delta = 0,\n                data,\n                element;\n\n            if (swipeType === RIGHT_SWIPE) {\n                if (that.page !== 0) {\n                    delta = -1; //backward\n                }\n            } else if (swipeType === LEFT_SWIPE && !isEndReached) {\n                delta = 1; //forward\n            } else if (offset > 0 && (thresholdPassed && !isEndReached)) {\n                delta = 1; //forward\n            } else if (offset < 0 && thresholdPassed) {\n                if (that.page !== 0) {\n                    delta = -1; //backward\n                }\n            }\n\n            nextPage = that.page;\n            if (delta) {\n                nextPage = (delta > 0) ? nextPage + 1 : nextPage - 1;\n\n                if (that instanceof kendo.ui.VirtualScrollViewContent) {\n                    that.dataReader.page(nextPage);\n                    data = that.dataReader.getViewData();\n                }\n                else {\n                    data = undefined$1;\n                }\n\n                if (!(data instanceof Array)) {\n                    data = [data];\n                }\n                element = that.pages ? that.pages[1].element : undefined$1;\n\n            }\n\n            if (callback && that.page != nextPage && callback({ currentPage: that.page, nextPage: nextPage, element: element, data: data })) {\n                delta = 0;\n            }\n\n            if (delta === 0) {\n                that._cancelMove(ease, instant);\n            } else if (delta === -1) {\n                that._moveBackward(instant);\n            } else if (delta === 1) {\n                that._moveForward(instant);\n            }\n        },\n\n        updatePage: function() {\n            var pages = this.pages;\n\n            if (this.pane.offset() === 0) {\n                return false;\n            }\n\n            if (this.pane.offset() > 0) {\n                pages.push(this.pages.shift());//forward\n                this.page++;\n                if (this.page + 2 < this.pageCount) {\n                    this.dataReader.pendingRequestArray.push(this.page + 2);\n                }\n                if (this.page + 1 < this.pageCount) {\n                    this.dataReader.page(this.page + 1);\n                }\n\n                if (this.page + 1 == this.pageCount) {\n                    this.setPageContent(this.pages[2], null);\n                }\n\n            } else {\n                pages.unshift(this.pages.pop()); //back\n                this.page--;\n                if (this.page - 2 >= 0) {\n                    this.dataReader.pendingRequestArray.push(this.page - 2);\n                }\n                if (this.page - 1 >= 0) {\n                    this.dataReader.page(this.page - 1);\n                }\n            }\n\n            this._repositionPages();\n\n            this._resetMovable();\n\n            return true;\n        },\n\n        forcePageUpdate: function() {\n            var offset = this.pane.offset(),\n                threshold = this.pane.size().width * 3 / 4;\n\n            if (abs(offset) > threshold) {\n                return this.updatePage();\n            }\n\n            return false;\n        },\n\n        _resetMovable: function() {\n            this.pane.moveTo(0);\n        },\n\n        _moveForward: function(instant) {\n            this.pane.transitionTo(-this.width, kendo.effects.Transition.easeOutExpo, instant);\n        },\n\n        _moveBackward: function(instant) {\n            this.pane.transitionTo(this.width, kendo.effects.Transition.easeOutExpo, instant);\n        },\n\n        _cancelMove: function(ease, /*internal*/ instant) {\n            this.pane.transitionTo(0, ease, instant);\n        },\n\n        _resetPages: function() {\n            this.page = this.options.page || 0;\n            this._repositionPages();\n\n            this.trigger(\"reset\");\n        },\n\n        _onPage: function(e) {\n            if (e.page >= this.pageCount) {\n                this.setPageContent(this.pages[2], null);\n            }\n            if (this.page == e.page) {\n                if (!this.dataReader.pagerScroll || this.dataReader.pagerScroll === 0 && this.dataReader.initialFetch) {\n                    this.setPageContent(this.pages[1], this.dataReader.getViewData());\n                }\n                else {\n                    if (this.dataReader.pagerScroll < 0) {\n                        this._moveForward();\n                    }\n                    else {\n                        this._moveBackward();\n                    }\n\n                    this.dataReader.pagerScroll = 0;\n                    this.setPageContent(this.pages[1], this.dataReader.getViewData());\n                }\n            }\n            else if (this.page + 1 == e.page) {\n                this.setPageContent(this.pages[2], this.dataReader.getViewData());\n            }\n            else if (this.page - 1 == e.page) {\n                this.setPageContent(this.pages[0], this.dataReader.getViewData());\n            }\n\n            if (this.dataReader.pendingRequestArray.length > 0 && this.dataReader.initialFetch) {\n                var item = this.dataReader.pendingRequestArray.shift();\n                this.dataReader.page(item);\n            }\n        },\n\n        _onReset: function() {\n            this.pageCount = ceil(this.dataSource.total() / this.dataSource.pageSize());\n        },\n\n        _repositionPages: function() {\n            var pages = this.pages;\n\n            pages[0].position(LEFT_PAGE);\n            pages[1].position(CETER_PAGE);\n            pages[2].position(RIGHT_PAGE);\n        },\n\n        setPageContent: function(page, data) {\n            var template = this.template,\n                emptyTemplate = this.emptyTemplate;\n\n            if (data !== null && data !== undefined$1) {\n                page.content(template(data));\n            } else {\n                page.content(emptyTemplate({}));\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            var pages = that.pages;\n\n            that.dataReader.unbind();\n            that.dataSource.unbind();\n            that.dataReader = that.dataSource = that.pane = null;\n\n            for (var index = 0; index < pages.length; index++) {\n                pages[index].destroy();\n            }\n\n            that.element.remove();\n        }\n    });\n\n    kendo.ui.VirtualScrollViewContent = VirtualScrollViewContent;\n\n    var Page = kendo.Class.extend({\n        init: function(container) {\n            this.element = $(\"<li class='\" + className(VIRTUAL_PAGE_CLASS) + \"'></li>\");\n            this.element.css({\n                position: \"absolute\",\n                top: \"0\",\n                left: \"0\"\n            });\n\n            this.width = container.width();\n            this.element.width(this.width);\n            container.append(this.element);\n        },\n\n        content: function(theContent) {\n            this.element.html(theContent);\n        },\n\n        position: function(position) { //position can be -1, 0, 1\n            this.element.css(\"transform\", \"translate3d(\" + this.width * position + \"px, 0, 0)\");\n        },\n\n        setWidth: function(width) {\n            this.width = width;\n            this.element.width(width);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.remove();\n            that.element = null;\n        }\n    });\n\n    kendo.ui.VirtualPage = Page;\n\n    var ScrollView = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            options = that.options;\n            element = that.element;\n\n            kendo.stripWhitespace(element[0]);\n            var scrollViewWrap = $(`<${element.children().length === 0 ? 'ul' : 'div'} class=\"k-scrollview-wrap\" />`);\n\n            element.wrapInner(scrollViewWrap);\n\n            that.itemsWrapper = element.find(\".k-scrollview-wrap\");\n\n            element.addClass(className(\"scrollview\"));\n\n            that._initNavigation();\n\n            if (this.options.pageable || this.options.enablePager) {\n                this.pager = new Pager(this);\n\n                if (this.options.pagerOverlay === \"dark\") {\n                    element.addClass(className(\"scrollview-dark\"));\n                } else if (this.options.pagerOverlay === \"light\") {\n                    element.addClass(className(\"scrollview-light\"));\n                }\n            } else {\n                this._changeProxy = that._toggleNavigation.bind(that);\n                this.bind(CHANGE, this._changeProxy);\n            }\n\n            that.inner = element.children().first();\n            that.page = 0;\n\n            that.inner.css(\"height\", options.contentHeight);\n\n            that.pane = new ElasticPane(that.inner, {\n                duration: this.options.duration,\n                transitionEnd: this._transitionEnd.bind(this),\n                dragStart: this._dragStart.bind(this),\n                dragEnd: this._dragEnd.bind(this),\n                change: this[REFRESH].bind(this)\n            });\n\n            that.bind(\"resize\", function() {\n                that.pane.refresh();\n            });\n\n            that.page = options.page;\n\n            var empty = this.inner.children().length === 0;\n\n            var content = empty ? new VirtualScrollViewContent(that.inner, that.pane, options) : new ScrollViewContent(that.inner, that.pane, options);\n\n            content.page = that.page;\n\n            content.bind(\"reset\", function() {\n                this._pendingPageRefresh = false;\n                that.trigger(REFRESH, { pageCount: content.pageCount, page: content.page });\n                that._toggleNavigation({ currentPage: content.page, nextPage: content.page });\n            });\n\n            content.bind(\"resize\", function(e) {\n                var currentPage = content.page;\n                var nextPage = e.nextPage;\n\n                if (currentPage != nextPage) {\n                    e._defaultPrevented = that.trigger(CHANGE, { currentPage: content.page, nextPage: e.nextPage, data: e.data });\n                }\n                that._toggleNavigation({ currentPage: content.page, nextPage: e.nextPage });\n            });\n\n            content.bind(ITEM_CHANGE, function(e) {\n                that.trigger(ITEM_CHANGE, e);\n            });\n\n            that._content = content;\n            that.setDataSource(options.dataSource);\n            that.viewInit();\n            that.viewShow();\n\n            that._navigatable();\n\n        },\n\n        options: {\n            name: \"ScrollView\",\n            ARIATemplate: ({ index, total }) => `Item ${index} of ${total}`,\n            page: 0,\n            duration: 400,\n            velocityThreshold: 0.8,\n            contentHeight: \"auto\",\n            pageSize: 1,\n            bounceVelocityThreshold: 1.6,\n            enablePager: true,\n            enableNavigationButtons: true,\n            pagerOverlay: \"none\",\n            navigatable: false,\n            autoBind: true,\n            pageable: false,\n            template: () => \"\",\n            emptyTemplate: () => \"\",\n            messages: {\n                previousButtonLabel: \"Previous\",\n                nextButtonLabel: \"Next\",\n                pagerLabel: \"ScrollView pager\"\n            }\n        },\n\n        events: [\n            CHANGING,\n            CHANGE,\n            REFRESH\n        ],\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            this._content.destroy();\n            this.pane.destroy();\n\n            if (this.pager) {\n                this.pager.destroy();\n            }\n\n            this._navigationContainer.off(NS);\n            this._navigationContainer = null;\n            this.itemsWrapper.off(NS);\n            this.itemsWrapper = null;\n\n            this.ariaLiveEl = this._current = null;\n\n            this.inner = null;\n            kendo.destroy(this.element);\n        },\n\n        viewInit: function() {\n            if (this.options.autoBind) {\n                this._content.scrollTo(this._content.page, true, true);\n            }\n        },\n\n        viewShow: function() {\n            this.pane.refresh();\n        },\n\n        refresh: function() {\n            var content = this._content;\n            var options = this.options;\n\n            content.resizeTo(this.pane.size());\n            this.page = content.page;\n\n            if (content instanceof ScrollViewContent || content.dataReader.initialFetch) {\n                if (options.enablePager) {\n                    this.trigger(REFRESH, { pageCount: content.pageCount, page: content.page });\n                }\n                else {\n                    this.trigger(CHANGE, { pageCount: content.pageCount, currentPage: content.page });\n                }\n            }\n        },\n\n        content: function(html) {\n           this.element.children().first().html(html);\n           this._content._getPages();\n           this.pane.refresh();\n        },\n\n        scrollTo: function(page, instant, silent) {\n            this._content.scrollTo(page, instant, silent);\n        },\n\n        prev: function() {\n            var that = this,\n                prevPage = that._content.page - 1;\n\n            if (that._content instanceof VirtualScrollViewContent) {\n                that._content.paneMoved(RIGHT_SWIPE, undefined$1, function(eventData) {\n                    return that.trigger(CHANGE, eventData);\n                });\n            } else if (prevPage > -1) {\n                that.scrollTo(prevPage);\n            }\n        },\n\n        next: function() {\n            var that = this,\n                nextPage = that._content.page + 1;\n\n            if (that._content instanceof VirtualScrollViewContent) {\n                that._content.paneMoved(LEFT_SWIPE, undefined$1, function(eventData) {\n                    return that.trigger(CHANGE, eventData);\n                });\n            } else if (nextPage < that._content.pageCount) {\n                that.scrollTo(nextPage);\n            }\n        },\n\n        setDataSource: function(dataSource) {\n            var that = this;\n            if (!(this._content instanceof VirtualScrollViewContent)) {\n                return;\n            }\n            // the scrollview should have a ready datasource for MVVM to function properly. But an empty datasource should not empty the element\n            var emptyDataSource = !dataSource;\n            if (dataSource instanceof DataSource) {\n                dataSource.options.pageSize = dataSource.options.pageSize || 1;\n                this.dataSource = dataSource = new DataSource(dataSource.options);\n            }\n            else {\n                this.dataSource = DataSource.create(dataSource);\n            }\n\n            this._content.setDataSource(this.dataSource);\n\n            if (this.options.autoBind && !emptyDataSource) {\n                this.dataSource.fetch(function() {\n                    that._content.dataReader.initialFetch = true;\n                    that.scrollTo(that._content.page, true, true);\n                    that._content.trigger(\"reset\");\n                });\n            }\n        },\n\n        items: function() {\n            return this.element.find(\".k-\" + VIRTUAL_PAGE_CLASS);\n        },\n\n        _updateAria: function() {\n            var content = this._content;\n\n            this.ariaLiveEl.html(this._ariaTemplate({ index: (content.page + 1), total: content.pageCount }));\n        },\n\n        _setCurrent: function(current) {\n            if (!this._focused) {\n                return;\n            }\n            var that = this;\n            var page = that._content.page;\n            var id = kendo.guid();\n            var children = that.itemsWrapper.children();\n            var next = $(current || children.eq(page));\n\n            if (that._content.pages) {\n                children.attr(\"aria-hidden\", true);\n                that._content.pages[1].element.removeAttr(\"aria-hidden\");\n                return;\n            }\n\n            if (that._current) {\n                $(that._current)\n                    .removeClass(FOCUSED)\n                    .removeAttr(\"id\");\n\n                children.attr(\"aria-hidden\", true);\n            }\n\n            next.addClass(FOCUSED);\n            that._updateAria();\n            that._current = next;\n        },\n\n        _dragStart: function() {\n            this._content.forcePageUpdate();\n        },\n\n        _dragEnd: function(e) {\n            var that = this,\n                velocity = e.x.velocity,\n                velocityThreshold = this.options.velocityThreshold,\n                swipeType = NUDGE,\n                bounce = abs(velocity) > this.options.bounceVelocityThreshold;\n\n            if (velocity > velocityThreshold) {\n                swipeType = RIGHT_SWIPE;\n            } else if (velocity < -velocityThreshold) {\n                swipeType = LEFT_SWIPE;\n            }\n\n            this._content.paneMoved(swipeType, bounce, function(eventData) {\n                return that.trigger(CHANGE, eventData);\n            });\n        },\n\n        _transitionEnd: function() {\n            this._content.updatePage();\n            this._setCurrent();\n        },\n\n        _initNavigation: function() {\n            var that = this;\n            var prevArrow;\n            var nextArrow;\n            var messages = that.options.messages;\n            var navigationContainer = that._navigationContainer = $(\"<div class='k-scrollview-elements'></div>\");\n            var itemsWrapper = that.itemsWrapper;\n            var itemsWrapperId = itemsWrapper.attr(\"id\") || kendo.guid();\n\n            itemsWrapper.attr(\"id\", itemsWrapperId);\n\n            prevArrow = $(`<span class=\"k-scrollview-prev\" role=\"button\" aria-label=\"${messages.previousButtonLabel}\" aria-controls=\"${itemsWrapperId}\">${kendo.ui.icon({ icon: \"chevron-left\", size: \"xxxlarge\" })}</span>`);\n            nextArrow = $(`<span class=\"k-scrollview-next\" role=\"button\" aria-label=\"${messages.nextButtonLabel}\" aria-controls=\"${itemsWrapperId}\">${kendo.ui.icon({ icon: \"chevron-right\", size: \"xxxlarge\" })}</span>`);\n\n            prevArrow.hide();\n            nextArrow.hide();\n\n            navigationContainer.append(prevArrow);\n            navigationContainer.append(nextArrow);\n            that.element.append(navigationContainer);\n\n            that.ariaLiveEl = $(\"<div aria-live='polite' aria-atomic='true' class='k-sr-only'></div>\");\n            that.element.append(that.ariaLiveEl);\n\n            navigationContainer.on(CLICK + NS, \"span.k-scrollview-prev\", that.prev.bind(that));\n            navigationContainer.on(CLICK + NS, \"span.k-scrollview-next\", that.next.bind(that));\n        },\n\n        _navigatable: function() {\n            var that = this;\n            var navigationContainer = that._navigationContainer;\n\n            that._ariaTemplate = kendo.template(that.options.ARIATemplate);\n\n            navigationContainer.on(KEYDOWN + NS, that, function(e) {\n                var target = $(e.target);\n                if (e.keyCode == keys.SPACEBAR || e.keyCode == keys.ENTER) {\n                    e.preventDefault();\n                    target.click();\n                }\n            });\n\n            that.element.attr({\n                tabindex: 0,\n                role: \"application\",\n                \"aria-roledescription\": \"carousel\"\n            });\n\n            that.itemsWrapper\n                .attr(\"role\", \"list\")\n                .children()\n                    .addClass(\"k-scrollview-view\")\n                    .attr({\n                        \"role\": \"listitem\",\n                        \"aria-roledescription\": \"slide\"\n                    });\n\n            if (!that.options.navigatable) {\n                return;\n            }\n\n            navigationContainer.find(\">span.k-scrollview-prev\").attr(TABINDEX, 0);\n            navigationContainer.find(\">span.k-scrollview-next\").attr(TABINDEX, 0);\n\n            that.element.on(KEYDOWN + NS, that, that._keyDown.bind(that));\n            that.element.on(FOCUS + NS, that._focus.bind(that));\n            that.element.on(FOCUSOUT + NS, that._blur.bind(that));\n        },\n\n        _focus: function() {\n            var that = this;\n            that._focused = true;\n            that._setCurrent();\n        },\n\n        _blur: function() {\n            if (this._current) {\n                this._current.removeClass(FOCUSED);\n            }\n        },\n\n        _keyDown: function(e) {\n            var that = this;\n            var handled;\n            var key = e.keyCode;\n\n            if (key == keys.LEFT) {\n                handled = true;\n                that.prev();\n            }\n\n            if (key == keys.RIGHT) {\n                handled = true;\n                that.next();\n            }\n\n            if (handled) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        },\n\n        _toggleNavigation: function(e) {\n            var page = e.nextPage || e.nextPage === 0 ? e.nextPage : e.currentPage;\n            var navigationContainer = this._navigationContainer;\n            var prevArrow = navigationContainer.find(\">span.k-scrollview-prev\");\n            var nextArrow = navigationContainer.find(\">span.k-scrollview-next\");\n\n            prevArrow.hide();\n            nextArrow.hide();\n\n            if (page || page === 0) {\n                if (page !== 0) {\n                    prevArrow.show();\n                }\n                if (page != this._content.pageCount - 1) {\n                    nextArrow.show();\n                }\n            }\n        }\n    });\n\n    ui.plugin(ScrollView);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}