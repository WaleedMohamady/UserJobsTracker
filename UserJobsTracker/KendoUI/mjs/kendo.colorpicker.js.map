{"version":3,"sources":["raw-mjs/kendo.colorpicker.js"],"names":["$","undefined$1","kendo","window","ui","Widget","parseColor","TabKeyTrap","Popup","extend","NS","KEYDOWN_NS","ColorSelector","init","element","options","that","this","fn","call","is","_initialValue","_preventDefaultLabelClick","_value","value","_tabIndex","attr","_standalone","_triggerSelect","_triggerChange","name","ARIATemplate","data","events","color","_updateInput","_updateUI","opacity","toCssRgba","toCss","enable","arguments","length","wrapper","toggleClass","_onEnable","_attachFocusEvents","on","_navKeydown","bind","_navFocusout","val","_innerTabindex","find","_isInputTypeColor","el","test","tagName","type","setTimeout","contains","document","activeElement","_releaseInnerFocus","e","keyCode","keys","ENTER","preventDefault","_trapInnerFocus","ESC","trigger","_tabKeyTrap","removeTrap","_select","nohooks","prev","equals","_navigation","indexOf","replace","_otOfPicker","_ariaTemplate","template","tabindex","removeAttr","trap","triggerEvent","destroy","off","label","closest","id","add","ev","noop","valueForLabel","formattedValue","a","_selectOnHide","_cancel","self","colorpicker","jQuery","Color","getContrastFromTwoRGBAs","b","luminance1","getLuminance","getRGBFromRGBA","luminance2","r","g","Math","max","min","rgb","map","v","pow","foregroundColor","backgroundColor","r1","fitIntoBounds","g1","b1","a1","r2","g2","b2","round","contender","isNaN","svgPath","points","command","d","reduce","acc","point","i","format","line","pointA","pointB","lengthX","lengthY","sqrt","angle","atan2","contrastToolUtils","renderSvgCurveLine","gradientRectMetrics","hsva","controlPointCalc","lineCalc","findValue","contrast","saturation","low","high","comparer","mid","currentHsva","s","width","height","currentContrast","hue","h","alpha","fromHSV","getColorFromHSV","toBytes","reversedComparer","getPaths","stepCount","reversed","push","bezierCommandCalc","current","previous","next","reverse","smooth","l","PI","cos","sin","cps","cpe","paths","__meta__$1","category","description","depends","Observable","encode","htmlEncode","KEYS","WHITE","BLACK","ColorInput","_viewModel","observable","switchMode","keydown","isHEXMode","get","isRGBMode","formats","hex","_changeHandler","change","_render","_template","ns","optionsSize","size","optionsTabIndex","vStackElement","messages","toggleFormat","hexInputElement","rgbaInputElement","red","green","blue","unbind","field","_color","_tryParseColor","set","sender","_preventChangeEvent","textbox","target","_change","reset","model","currentFormat","index","append","guid","parent","error","ColorGradient","deepExtend","previewInput","_wrapper","_sliders","_hsvArea","_gradientInputs","hsvDragARIATemplate","input","contrastTool","contrastRatio","fail","pass","focus","_hsvHandle","setBackgroundColor","isPlainObject","_updateColorContrast","_getHSV","rect","_hsvRect","handlePosition","position","_hueSlider","left","top","_opacitySlider","toHSV","_colorgradientInputs","_colorInput","callback","obj","hsvRect","hsvHandle","_hsvKeydown","apply","update","x","y","resultX","resultY","offset","dx","dy","rw","rh","_svChange","_hsvDragAriaTemplate","_hsvEvents","UserEvents","global","press","getOffset","location","start","addClass","move","end","removeClass","prop","c","shiftKey","LEFT","ctrlKey","RIGHT","UP","DOWN","F2","select","_reset","_resetHsv","_resetColorContrast","contrastOptions","_contrastTool","_updateHsv","hueSlider","opacitySlider","hueChange","opacityChange","kendoSlider","tickPlacement","showButtons","orientation","slide","contrastRatioTemplate","ratio","toString","icon","labelTemplate","limit","level","output","remove","_updateContrastSvg","newSvg","svgClassName","metrics","applyStylesFromKendoAttributes","css","_hueElements","_updateHsvAria","dontChangeInput","wrap","role","_selectedColor","_colorAsText","plugin","DOT","BACKGROUNDCOLOR","ITEMSELECTEDCLASS","ITEMSFOCUSEDCLASS","TILE_CLASS","FOCUS_NS","CLICK_NS","BLUR_NS","ColorPalette","_selectedID","ariaId","_attachEvents","columns","tileSize","palette","currentTarget","_keydown","_focus","_colors","colors","split","Array","isArray","_current","item","first","newCurrent","items","filter","prototype","parentNode","children","previousSibling","nextSibling","nodeType","cellElements","selected","_tileSize","parseFloat","Error","each","templateElement","html","NO_COLOR","SELECTED","PREVIEW_MASK","ARIA_PRESSED","ARIA_DISABLED","VIEWS","gradient","FlatColorPicker","autoupdate","_changeView","view","_setViewSize","_previousColor","toDisplay","_view","_viewsContainer","empty","buttons","preview","clearButton","views","cancel","noColor","clearColor","_clearColor","viewButton","_updatePreviousColor","mode","selectedColor","hsvColor","selector","_cachedHue","appendTo","dontChangeView","previewWidth","parseInt","previewHeight","previewColumns","style","setProperty","buttonOptions","fillMode","themeColor","rounded","renderButton","__meta__","ColorPicker","_buttonHtml","content","_inputWrapper","_applyCssClasses","hide","after","accesskey","isDefaultPrevented","toggle","_popup","_selector","arrow","close","toolIcon","iconClass","closeOnSelect","open","_getPopup","selOptions","_closing","handler","visible","_noColorIcon","dontChangeSelector","key","popup","selectorType","selectorWrapper","body","kendoPopup","anchor","adjustSize","event","MouseEvent","parents","activate","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","kendo$1"],"mappings":"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","file":"kendo.colorpicker.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.color.js';\nimport './kendo.popup.js';\nimport './kendo.slider.js';\nimport './kendo.userevents.js';\nimport './kendo.button.js';\nimport './kendo.binder.js';\nimport './kendo.textbox.js';\nimport './kendo.numerictextbox.js';\nimport './kendo.html.button.js';\nimport './kendo.icons.js';\n\n(function($, undefined$1) {\n    // WARNING: removing the following jshint declaration and turning\n    // == into === to make JSHint happy will break functionality.\n\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        parseColor = kendo.parseColor,\n        TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n\n        extend = $.extend,\n\n        NS = \".kendoColorTools\",\n        KEYDOWN_NS = \"keydown\" + NS,\n        DISABLED = \"k-disabled\";\n\n    var ColorSelector = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n            element = that.element;\n            options = that.options;\n\n            if (element.is(\"input\")) {\n                that._initialValue();\n                that._preventDefaultLabelClick();\n            } else {\n                that._value = parseColor(options.value);\n            }\n\n            that._tabIndex = element.attr(\"tabIndex\") || 0;\n\n            if (options._standalone) {\n                that._triggerSelect = that._triggerChange;\n            }\n        },\n        options: {\n            name: \"ColorSelector\",\n            ARIATemplate: (data) => `Current selected color is ${data || \"none\"}`,\n            value: null,\n            _standalone: true\n        },\n        events: [\n            \"change\",\n            \"select\",\n            \"forceSelect\",\n            \"cancel\"\n        ],\n        color: function(value) {\n            if (value !== undefined$1) {\n                this._value = parseColor(value);\n\n                if (this.element.is(\"input\")) {\n                    this._updateInput(this._value);\n                }\n\n                this._updateUI(this._value);\n            }\n\n            return this._value;\n        },\n        value: function(color) {\n            color = this.color(color);\n\n            if (color) {\n                if (this.options.opacity) {\n                    color = color.toCssRgba();\n                } else {\n                    color = color.toCss();\n                }\n            }\n\n            return color || null;\n        },\n        enable: function(enable) {\n            if (arguments.length === 0) {\n                enable = true;\n            }\n\n            if (this.element.is(\"input\")) {\n                this.element.attr(\"disabled\", !enable);\n            }\n\n            this.wrapper.toggleClass(DISABLED, !enable);\n\n            this._onEnable(enable);\n        },\n        _attachFocusEvents: function () {\n            this.wrapper.on(KEYDOWN_NS, this._navKeydown.bind(this))\n                .on(\"focusout\" + NS, this._navFocusout.bind(this));\n        },\n        _initialValue: function() {\n            var element = this.element,\n                options = this.options,\n                value = options.value || element.attr(\"value\");\n\n            if (value) {\n                this._value = parseColor(value, true);\n            }\n\n            this.element.val(value);\n        },\n        _innerTabindex: function(value) {\n            var wrapper = this.wrapper;\n\n            wrapper.find(\".k-draghandle, .k-button, .k-input-inner\").attr(\"tabindex\", value);\n        },\n        _isInputTypeColor: function() {\n            var el = this.element[0];\n            return (/^input$/i).test(el.tagName) && (/^color$/i).test(el.type);\n        },\n        _navFocusout: function() {\n            var that = this,\n                wrapper = that.wrapper[0];\n\n            setTimeout(function() {\n                if (!wrapper.contains(document.activeElement)) {\n                    that._releaseInnerFocus();\n                }\n            });\n        },\n        _navKeydown: function(e) {\n            var wrapper = this.wrapper;\n\n            if (e.keyCode === kendo.keys.ENTER && wrapper.attr(\"tabindex\")) {\n                e.preventDefault();\n\n                this._trapInnerFocus();\n            } else if (e.keyCode === kendo.keys.ESC && wrapper.attr(\"tabindex\") === undefined$1) {\n                this._releaseInnerFocus();\n                this.wrapper.trigger(\"focus\");\n            }\n        },\n        _releaseInnerFocus: function() {\n            this._tabKeyTrap.removeTrap();\n            this.wrapper.attr(\"tabindex\", this._tabIndex);\n            this._innerTabindex(-1);\n        },\n        _select: function(color, nohooks) {\n            var prev = this._value;\n\n            color = this.color(color);\n\n            if (!nohooks) {\n                if ((color && (!prev || !color.equals(prev))) || (color === null && color !== prev)) {\n                    if (color === null && this.element.val) {\n                        this.element.val(color);\n                    }\n\n                    this.element.trigger(\"change\");\n                    this.trigger(\"change\", { value: this.value() });\n                } else if (!this._standalone) {\n                    this.trigger(\"cancel\");\n                }\n            }\n        },\n        _navigation: function() {\n            var value = this.value();\n\n            if (value && value.indexOf(\"rgba\") > -1) {\n                value = value.replace(\"rgba\", \"RGBA\");\n            };\n\n            if (this.options._otOfPicker) {\n                this._innerTabindex(-1);\n                this._attachFocusEvents();\n                this._tabKeyTrap = new TabKeyTrap(this.wrapper);\n\n                this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n                this.wrapper.attr({\n                    \"aria-label\": this._ariaTemplate(value || \"\"),\n                    tabindex: this._tabIndex\n                });\n            } else {\n                this.wrapper.removeAttr(\"tabindex\");\n                this.wrapper.removeAttr(\"aria-label\");\n                this.wrapper.removeAttr(\"role\");\n                this.wrapper.removeAttr(\"aria-keyshortcuts\");\n            }\n        },\n        _trapInnerFocus: function() {\n            this._innerTabindex(0);\n            this.wrapper.removeAttr(\"tabindex\");\n            this.wrapper.find(\".k-hsv-draghandle\").trigger(\"focus\");\n            this._tabKeyTrap.trap();\n        },\n        _triggerSelect: function(color) {\n            triggerEvent(this, \"select\", color);\n        },\n        _triggerChange: function(color) {\n            triggerEvent(this, \"change\", color);\n        },\n        destroy: function() {\n            if (this.element) {\n                this.element.off(NS);\n            }\n\n            if (this.wrapper) {\n                this.wrapper.off(KEYDOWN_NS);\n                this.wrapper.off(NS).find(\"*\").off(NS);\n                this.wrapper = null;\n            }\n\n            Widget.fn.destroy.call(this);\n        },\n        _preventDefaultLabelClick: function() {\n            // if there exists a <label> associated with this\n            // input field, we must catch clicks on it to prevent\n            // the built-in color picker from showing up.\n            // https://github.com/telerik/kendo-ui-core/issues/292\n            var element = this.element,\n                label = element.closest(\"label\"),\n                id = element.attr(\"id\");\n\n            if (id) {\n                label = label.add('label[for=\"' + id + '\"]');\n            }\n            label.on(\"click\", function(ev) {\n                ev.preventDefault();\n            });\n        },\n        _updateUI: $.noop,\n        _updateInput: function(value) {\n            var formattedValue = \"\",\n                valueForLabel;\n\n            if (value) {\n                if (this._isInputTypeColor() || value.a == 1) {\n                    // seems that input type=\"color\" doesn't support opacity\n                    // in colors; the only accepted format is hex #RRGGBB\n                    formattedValue = value.toCss();\n                } else {\n                    formattedValue = value.toCssRgba();\n                }\n\n                this.element.val(formattedValue);\n            }\n\n            if (this.options._otOfPicker) {\n                if (!this._ariaTemplate) {\n                    this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n                }\n\n                valueForLabel = this.value();\n\n                if (valueForLabel && valueForLabel.indexOf(\"rgba\") > -1) {\n                    valueForLabel = valueForLabel.replace(\"rgba\", \"RGBA\");\n                };\n\n                this.wrapper.attr(\"aria-label\", this._ariaTemplate(valueForLabel || \"\"));\n            }\n        },\n        _selectOnHide: function() {\n            return null;\n        },\n        _cancel: function() {\n            this.trigger(\"cancel\");\n        }\n    });\n\n    function triggerEvent(self, type, color) {\n        color = parseColor(color);\n\n        if ((color && !color.equals(self.color())) || color !== self.color()) {\n            if (type == \"change\") {\n                // UI is already updated.  setting _value directly\n                // rather than calling self.color(color) to avoid an\n                // endless loop.\n                self._value = color;\n                self._updateInput(self._value);\n            }\n            if (color && color.a != 1) {\n                color = color.toCssRgba();\n            } else if (color) {\n                color = color.toCss();\n            }\n\n            self.trigger(type, { value: color });\n        }\n    }\n\n    extend(ui, {\n        colorpicker: {\n            ColorSelector: ColorSelector\n        }\n    });\n\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1){\n    var colorpicker = kendo.ui.colorpicker,\n        extend = $.extend,\n        Color = kendo.Color,\n        parseColor = kendo.parseColor,\n\n        AA_CONTRAST = 4.5,\n        AAA_CONTRAST = 7,\n        STEP_COUNT = 16;\n\n    // Color utils - calc contrast\n\n    function getContrast(luminance1, luminance2) {\n        var brightest = Math.max(luminance1, luminance2);\n        var darkest = Math.min(luminance1, luminance2);\n        return (brightest + 0.05) / (darkest + 0.05);\n    }\n\n    function getContrastFromTwoRGBAs(a, b) {\n        return getContrast(\n            getLuminance(getRGBFromRGBA(a, b)),\n            getLuminance(getRGBFromRGBA(b, { r: 0, g: 0, b: 0, a: 1 })));\n    }\n\n    function getLuminance (rgb) {\n        var a = [rgb.r, rgb.g, rgb.b].map(function (v) {\n            v /= 255;\n            return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n        });\n        return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n    }\n\n    function getRGBFromRGBA(foregroundColor, backgroundColor) {\n        var r1 = fitIntoBounds(foregroundColor.r, 0, 255);\n        var g1 = fitIntoBounds(foregroundColor.g, 0, 255);\n        var b1 = fitIntoBounds(foregroundColor.b, 0, 255);\n        var a1 = fitIntoBounds(foregroundColor.a, 0, 1);\n\n        var r2 = fitIntoBounds(backgroundColor.r, 0, 255);\n        var g2 = fitIntoBounds(backgroundColor.g, 0, 255);\n        var b2 = fitIntoBounds(backgroundColor.b, 0, 255);\n\n        return {\n            r: Math.round(((1 - a1) * r2) + (a1 * r1)),\n            g: Math.round(((1 - a1) * g2) + (a1 * g1)),\n            b: Math.round(((1 - a1) * b2) + (a1 * b1))\n        };\n    }\n\n    function fitIntoBounds(contender, min, max) {\n        if (!isPresent(contender) || isNaN(contender)) {\n            return min;\n        }\n\n        return contender <= min ? min : contender >= max ? max : contender;\n    }\n\n    function isPresent(value) { return value !== null && value !== undefined$1; }\n\n\n    // Color utils - Contrast tool SVG path\n\n    function renderSvgCurveLine(gradientRectMetrics, hsva, backgroundColor) {\n        var findValue = function (contrast, saturation, low, high, comparer) {\n            var mid = (low + high) / 2;\n            var currentHsva = extend({}, hsva, { s: saturation / gradientRectMetrics.width, v: 1 - mid / gradientRectMetrics.height });\n            var currentContrast = getContrastFromTwoRGBAs(parseColor(getColorFromHSV(currentHsva)).toBytes(), parseColor(backgroundColor).toBytes());\n\n            if (low + 0.5 > high) {\n                if (currentContrast < contrast + 1 && currentContrast > contrast - 1) {\n                    return mid;\n                } else {\n                    return null;\n                }\n            }\n\n            if (comparer(currentContrast, contrast)) {\n                return findValue(contrast, saturation, low, high - (high - low) / 2, comparer);\n            }\n            return findValue(contrast, saturation, low + (high - low) / 2, high, comparer);\n        };\n\n        var comparer = function (a, b) {\n            return a > b;\n        };\n\n        var reversedComparer = function (a, b) {\n            return a < b;\n        };\n\n        var getPaths = function (contrast, stepCount, reversed) {\n            var points = [];\n            for (var i = 0; i <= gradientRectMetrics.width; i += gradientRectMetrics.width/stepCount) {\n               var value = findValue(contrast, i, 0, gradientRectMetrics.height, reversed ? reversedComparer : comparer);\n                if (value !== null){\n                    points.push([i, value]);\n                }\n            }\n            return points;\n        };\n\n        var bezierCommandCalc = bezierCommand(controlPoint(line));\n        var paths = svgPath(getPaths(AA_CONTRAST, STEP_COUNT, false), bezierCommandCalc) +\n                svgPath(getPaths(AA_CONTRAST, STEP_COUNT, true), bezierCommandCalc) +\n                svgPath(getPaths(AAA_CONTRAST, STEP_COUNT, false), bezierCommandCalc) +\n                svgPath(getPaths(AAA_CONTRAST, STEP_COUNT, true), bezierCommandCalc);\n\n        return `<svg xmlns=\"http://www.w3.org/2000/svg\" ${kendo.attr(\"style-position\")}=\"absolute\" ${kendo.attr(\"style-overflow\")}=\"visible\" ${kendo.attr(\"style-pointer-events\")}=\"none\" ` +\n                `${kendo.attr(\"style-left\")}=\"0px\" ${kendo.attr(\"style-top\")}=\"0px\" ${kendo.attr(\"style-z-index\")}=\"3\" >` +\n                    paths  + '</svg>';\n    }\n\n    function svgPath(points, command) {\n        if (points.length === 0){\n            return '';\n        }\n\n        var reducer = function (acc, point, i, a) {\n            return i === 0 ?\n                // if first point\n                kendo.format(\"M {0},{1}\", point[0], point[1]) :\n                // else\n                kendo.format(\"{0} {1}\", acc, command(point, i, a));\n        };\n\n        // build the d attributes by looping over the points\n        var d = points.reduce(reducer, \"\");\n\n        return kendo.format('<path d=\"{0}\" fill=\"none\" stroke=\"white\" stroke-width=\"1\"/>', d);\n    }\n\n    function bezierCommand(controlPointCalc) {\n        return function(point, i, a) {\n            // start control point\n            var cps = controlPointCalc(a[i - 1], a[i - 2], point); // [cpsX, cpsY]\n\n            // end control point\n            var cpe = controlPointCalc(point, a[i - 1], a[i + 1], true); //  [cpeX, cpeY]\n\n            return kendo.format(\"C {0},{1} {2},{3} {4},{5}\", cps[0], cps[1], cpe[0], cpe[1], point[0], point[1]);\n        };\n    }\n\n    function controlPoint(lineCalc) {\n        return function (current, previous, next, reverse) {\n            // when 'current' is the first or last point of the array\n            // 'previous' and 'next' are undefined\n            // replace with 'current'\n                var p = previous || current;\n                var n = next || current;\n                var smooth = 0.1;\n\n                // properties of the line between previous and next\n                var l = lineCalc(p, n);\n\n                // If is end-control-point, add PI to the angle to go backward\n                var angle = l.angle + (reverse ? Math.PI : 0);\n                var length = l.length * smooth;\n\n                // The control point position is relative to the current point\n                var x = current[0] + Math.cos(angle) * length;\n                var y = current[1] + Math.sin(angle) * length;\n\n                return [x, y];\n        };\n    }\n\n    function line (pointA, pointB) {\n        var lengthX = pointB[0] - pointA[0];\n        var lengthY = pointB[1] - pointA[1];\n\n        return {\n            length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n            angle: Math.atan2(lengthY, lengthX)\n        };\n    }\n\n    function getColorFromHSV (hsva) {\n        var hue = fitIntoBounds(hsva.h, 0, 359.9);\n        var saturation = fitIntoBounds(hsva.s, 0, 1);\n        var value = fitIntoBounds(hsva.v, 0, 1);\n        var alpha = fitIntoBounds(hsva.a, 0, 1);\n\n        return Color.fromHSV(hue, saturation, value, alpha).toCssRgba();\n    }\n\n    extend(colorpicker, {\n        contrastToolUtils: {\n            getContrastFromTwoRGBAs: getContrastFromTwoRGBAs,\n            renderSvgCurveLine: renderSvgCurveLine\n        }\n    });\n\n})(window.kendo.jQuery);\n\nvar __meta__$1 = {\n        id: \"colorgradient\",\n        name: \"ColorGradient\",\n        category: \"web\", // suite\n        description: \"ColorGradient allows selection of a color from an HSV canvas.\",\n        depends: [\"core\", \"popup\", \"textbox\", \"icons\"] // dependencies\n    };\n(function($, undefined$1) {\n    // WARNING: removing the following jshint declaration and turning\n    // == into === to make JSHint happy will break functionality.\n\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Observable = kendo.Observable,\n        parseColor = kendo.parseColor,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        Color = kendo.Color,\n        KEYS = kendo.keys,\n        BACKGROUNDCOLOR = \"background-color\",\n        WHITE = \"#ffffff\",\n        BLACK = \"#000000\",\n        NS = \".kendoColorTools\",\n        KEYDOWN_NS = \"keydown\" + NS,\n        ColorSelector = ui.colorpicker.ColorSelector,\n\n        contrastToolUtils = ui.colorpicker.contrastToolUtils;\n\n    function preventDefault(ev) { ev.preventDefault(); }\n\n    function bind(callback, obj) {\n        return function() {\n            return callback.apply(obj, arguments);\n        };\n    }\n\n    var ColorInput = Observable.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that.element = element;\n            that.options = options;\n\n            that._viewModel = kendo.observable({\n                switchMode: that.switchMode.bind(that),\n                keydown: that.keydown.bind(that),\n                isHEXMode: function () { return this.get(\"format\") === 'hex' },\n                isRGBMode: function () { return this.get(\"format\") === 'rgb' },\n                format: options.format,\n                formats: options.formats,\n                rgb: null,\n                hex: function () {\n                    return this.get(\"rgb\") !== null && this.get(\"rgb\").toCss({alpha: options.opacity});\n                }\n            });\n\n            that._changeHandler = that.change.bind(that);\n\n            that._viewModel.bind(\"change\", that._changeHandler);\n\n            that._render();\n\n            that.element.on(KEYDOWN_NS, that.keydown.bind(that));\n\n            Observable.fn.init.call(that);\n        },\n        _template: kendo.template(({ options, ns }) => {\n            let optionsSize = encode(options.size);\n            let optionsTabIndex = encode(options.tabindex);\n\n            let vStackElement = \"\";\n            if (options.formats && options.formats.length > 1) {\n                let optionsMessagesToggleFormat = encode(options.messages.toggleFormat);\n\n                vStackElement =\n                '<div class=\"k-vstack\">' +\n                    `<button class=\"k-colorgradient-toggle-mode\" data-${ns}role=\"button\" data-${ns}icon=\"caret-alt-expand\" data data-${ns}bind=\"click: switchMode\" data-${ns}fill-mode=\"flat\" data-${ns}size=\"${optionsSize}\" title=\"${optionsMessagesToggleFormat}\">` +\n                    '</button>' +\n                '</div>';\n            }\n\n            // HEX input\n            let hexInputElement = \"\";\n            if (options.formats && options.formats.indexOf(\"hex\") >= 0) {\n                let optionsMessagesHex = encode(options.messages.hex);\n\n                hexInputElement =\n                `<div class=\"k-vstack\" data-${ns}bind=\"visible: isHEXMode\">` +\n                    `<input type=\"text\" data-${ns}bind=\"value: hex\" data-${ns}role=\"textbox\" data-${ns}size=\"${optionsSize}\" tabindex=\"${optionsTabIndex}\"  aria-label=\"${optionsMessagesHex}\"/>` +\n                    '<label class=\"k-colorgradient-input-label\">HEX</label>' +\n                '</div>';\n            }\n\n            // RGBA input\n            let rgbaInputElement = \"\";\n            if (options.formats && options.formats.indexOf(\"rgb\") >= 0) {\n                let optionsMessagesRed = encode(options.messages.red);\n                let optionsMessagesGreen = encode(options.messages.green);\n                let optionsMessagesBlue = encode(options.messages.blue);\n\n                rgbaInputElement =\n                `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                    `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.r\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesRed}\" />` +\n                    '<label class=\"k-colorgradient-input-label\">R</label>' +\n                '</div>' +\n                `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                    `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.g\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesGreen}\" />` +\n                    '<label class=\"k-colorgradient-input-label\">G</label>' +\n                '</div>' +\n                `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                    `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.b\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesBlue}\"/>` +\n                    '<label class=\"k-colorgradient-input-label\">B</label>' +\n                '</div>';\n\n                if(options.opacity) {\n                    let optionsMessagesAlpha = options.messages.alpha;\n                    rgbaInputElement +=\n                    `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                        `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.a\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}step=\"0.1\" data-${ns}max=\"1\" data-${ns}min=\"0\" data-${ns}decimals=\"1\" data-${ns}spinners=\"false\" data-${ns}format=\"n1\" aria-label=\"${optionsMessagesAlpha}\" />` +\n                        '<label class=\"k-colorgradient-input-label\">A</label>' +\n                    '</div>';\n                }\n            }\n\n            return vStackElement + hexInputElement + rgbaInputElement;\n        }),\n        destroy: function(){\n            var that = this;\n\n            that._viewModel.unbind(\"change\", that._changeHandler);\n            kendo.unbind(that.element);\n            kendo.destroy(that.element);\n            that.element.off(KEYDOWN_NS);\n            delete that._viewModel;\n            delete that._changeHandler;\n        },\n        change: function (ev) {\n            var that = this;\n\n            if (ev.field.indexOf(\"rgb\") >= 0) {\n                that._color = that._tryParseColor(that._viewModel.rgb.toCssRgba());\n                that._viewModel.set(\"hex\", that._color.toCss({ alpha: that.options.opacity }));\n            } else if (ev.field === \"hex\") {\n                that._color = that._tryParseColor(ev.sender[ev.field]);\n                that._viewModel.set(\"rgb\", that._color);\n            }\n\n            if (!that._preventChangeEvent) {\n                that.trigger(\"change\", {value: that._color});\n            }\n        },\n        keydown: function (ev) {\n            var that = this,\n                textbox = $(ev.target).data(\"kendoTextBox\");\n\n            if (ev.keyCode === KEYS.ENTER && $(ev.target).is(\"input\")) {\n                if(textbox && textbox._change) {\n                    textbox._change();\n                }\n\n                that.trigger(\"change\", {value: that._color});\n                that.trigger(\"select\", {value: that._color});\n            }\n        },\n        reset: function () {\n            var that = this;\n\n            that._preventChangeEvent = true;\n            that._viewModel.set(\"rgb\", parseColor(BLACK));\n            delete that._preventChangeEvent;\n        },\n        switchMode: function() {\n            var that = this,\n                model = that._viewModel,\n                currentFormat = model.format,\n                index = model.formats.indexOf(currentFormat) + 1;\n\n            index = index >= model.formats.length ? 0 : index;\n\n            that._preventChangeEvent = true;\n            that._viewModel.set(\"format\", model.formats[index]);\n            delete that._preventChangeEvent;\n        },\n        value: function (color) {\n            var that = this;\n\n            that._color = (color && color.toBytes()) || parseColor(BLACK);\n            that._preventChangeEvent = true;\n            that._viewModel.set(\"rgb\", that._color);\n            delete that._preventChangeEvent;\n        },\n        _render: function() {\n            var that = this;\n\n            that.element\n                .append(that._template({ ns: kendo.ns, guid: kendo.guid(), options: that.options }))\n                .parent();\n\n            kendo.bind(that.element, that._viewModel);\n            that.element.attr(\"data-\" + kendo.ns + \"stop\", \"stop\");\n        },\n        _tryParseColor: function (color) {\n            var that = this;\n\n            try {\n                color = parseColor(color) || that._color;\n            } catch (error) {\n                color = that._color;\n            }\n\n            return color;\n        }\n    });\n\n    var ColorGradient = ColorSelector.extend({\n        init: function (element, options) {\n            var that = this,\n                value;\n\n            ColorSelector.fn.init.call(that, element, options);\n\n            options = that.options = kendo.deepExtend({}, that.options, options);\n\n            if(options.messages.previewInput) {\n                options.messages.hex = options.messages.previewInput;\n            }\n\n            options.messages = options.messages ? $.extend(that.options.messages, options.messages) : that.options.messages;\n            element = that.element;\n\n            that._wrapper();\n            that._sliders();\n            that._hsvArea();\n\n            value = that._value;\n\n            that._gradientInputs();\n            that._updateUI(value);\n            that._navigation();\n        },\n        options: {\n            name : \"ColorGradient\",\n            opacity : false,\n            hsvDragARIATemplate: (data) => `Color well with two-dimensional slider for selecting saturation and value. Selected color is ${data || \"none\"}`,\n            input : true,\n            format: \"hex\",\n            formats: [\"rgb\", \"hex\"],\n            contrastTool: false,\n            size: \"medium\",\n            messages: {\n                contrastRatio: \"Contrast ratio:\",\n                fail: \"Fail\",\n                pass: \"Pass\",\n                hex: \"HEX\",\n                toggleFormat: \"Toggle format\",\n                red: \"Red channel\",\n                green: \"Green channel\",\n                blue: \"Blue channel\",\n                alpha: \"Alpha channel\"\n            },\n            _otOfPicker: true\n        },\n        _template: kendo.template((options) =>\n                '<div class=\"k-colorgradient-canvas k-hstack\">' +\n                    '<div class=\"k-hsv-rectangle\"><div class=\"k-hsv-gradient\"><div role=\"slider\" aria-orientation=\"undefined\" class=\"k-hsv-draghandle k-draghandle\"></div></div></div>' +\n                    '<div class=\"k-hsv-controls k-hstack\">' +\n                        '<input class=\"k-hue-slider k-colorgradient-slider\" />' +\n                        (options.opacity ? '<input class=\"k-alpha-slider k-colorgradient-slider\" />' : '') +\n                    '</div>' +\n                '</div>' +\n                (options.input ? '<div class=\"k-colorgradient-inputs k-hstack\"></div>' : '') +\n                (options.contrastTool ? '<div class=\"k-colorgradient-color-contrast k-vbox\"></div>' : '')\n        ),\n        focus: function() {\n            this._hsvHandle.focus();\n        },\n        setBackgroundColor: function(color) {\n            var that = this;\n\n            if (that.options.contrastTool) {\n                that.options.contrastTool = $.isPlainObject(that.options.contrastTool) ? extend({}, that.options.contrastTool, {\n                    backgroundColor: color\n                }) : {\n                    backgroundColor: color\n                };\n\n                that._updateColorContrast(that.color() || parseColor(WHITE));\n            }\n        },\n        _getHSV: function(h, s, v, a) {\n            var that = this,\n                rect = that._hsvRect,\n                width = rect.width(),\n                height = rect.height(),\n                handlePosition = this._hsvHandle.position();\n\n            if(!width || !height) {\n                return that.color() ? that.color().toHSV() : parseColor(BLACK);\n            }\n\n            if (h == null) {\n                h = that._hueSlider.value();\n            }\n            if (s == null) {\n                s = handlePosition.left / width;\n            }\n            if (v == null) {\n                v = 1 - handlePosition.top / height;\n            }\n            if (a == null) {\n                a = that._opacitySlider ? that._opacitySlider.value() / 100 : 1;\n            }\n            return Color.fromHSV(h, s, v, a);\n        },\n        _gradientInputs: function() {\n            var that = this,\n                options = that.options;\n\n            if(that._colorgradientInputs.length) {\n                that._colorInput = new ColorInput(that._colorgradientInputs, extend({}, options, {\n                    tabindex: 0\n                }));\n\n                that._colorInput.bind(\"change\", function(ev){\n                    that._updateUI(ev.value, true);\n                });\n\n                that._colorInput.bind(\"select\", function(ev){\n                    var color = parseColor(ev.value);\n                    that._select(color);\n                    that.trigger(\"forceSelect\", { value: that.value() });\n                });\n            }\n        },\n        _hsvArea: function() {\n            var that = this,\n                wrapper = that.wrapper,\n                hsvRect = wrapper.find(\".k-hsv-rectangle\"),\n                hsvHandle = hsvRect.find(\".k-draghandle\").attr(\"tabIndex\", 0).on(KEYDOWN_NS, bind(that._hsvKeydown, that)),\n                value = this.value();\n\n            if (value && value.indexOf(\"rgba\") > -1) {\n                value = value.replace(\"rgba\", \"RGBA\");\n            };\n\n            if (!this._hsvDragAriaTemplate) {\n                this._hsvDragAriaTemplate = kendo.template(this.options.hsvDragARIATemplate);\n            }\n\n            hsvHandle.attr(\"aria-label\", this._hsvDragAriaTemplate(value || ''));\n\n            function update(x, y) {\n                var offset = this.offset,\n                    dx = x - offset.left, dy = y - offset.top,\n                    rw = this.width, rh = this.height,\n                    resultX, resultY;\n\n                dx = dx < 0 ? 0 : dx > rw ? rw : dx;\n                dy = dy < 0 ? 0 : dy > rh ? rh : dy;\n                resultX = dx / rw;\n                resultY = 1 - dy / rh;\n\n                that._svChange(resultX, resultY);\n            }\n\n            that._hsvEvents = new kendo.UserEvents(hsvRect, {\n                global: true,\n                press: function(e) {\n                    this.offset = kendo.getOffset(hsvRect);\n                    this.width = hsvRect.width();\n                    this.height = hsvRect.height();\n                    hsvHandle.focus();\n                    update.call(this, e.x.location, e.y.location);\n                },\n                start: function() {\n                    hsvRect.addClass(\"k-dragging\");\n                    hsvHandle.focus();\n                },\n                move: function(e) {\n                    e.preventDefault();\n                    update.call(this, e.x.location, e.y.location);\n                },\n                end: function() {\n                    hsvRect.removeClass(\"k-dragging\");\n                }\n            });\n\n            that._hsvRect = hsvRect;\n            that._hsvHandle = hsvHandle;\n        },\n        _hsvKeydown: function(ev) {\n            var that = this;\n            function move(prop, d) {\n                var c = that._getHSV();\n                c[prop] += d * (ev.shiftKey ? 0.01 : 0.05);\n                if (c[prop] < 0) { c[prop] = 0; }\n                if (c[prop] > 1) { c[prop] = 1; }\n                that._updateUI(c);\n                preventDefault(ev);\n            }\n            function hue(d) {\n                var c = that._getHSV();\n                c.h += d * (ev.shiftKey ? 1 : 5);\n                if (c.h < 0) { c.h = 0; }\n                if (c.h > 359) { c.h = 359; }\n                that._updateUI(c);\n                preventDefault(ev);\n            }\n            switch (ev.keyCode) {\n            case KEYS.LEFT:\n                if (ev.ctrlKey) {\n                    hue(-1);\n                } else {\n                    move(\"s\", -1);\n                }\n                break;\n            case KEYS.RIGHT:\n                if (ev.ctrlKey) {\n                    hue(1);\n                } else {\n                    move(\"s\", 1);\n                }\n                break;\n            case KEYS.UP:\n                move(ev.ctrlKey && that._opacitySlider ? \"a\" : \"v\", 1);\n                break;\n            case KEYS.DOWN:\n                move(ev.ctrlKey && that._opacitySlider ? \"a\" : \"v\", -1);\n                break;\n            case KEYS.ENTER:\n                that._select(that._getHSV());\n                break;\n            case KEYS.F2:\n                that._colorInput.element.find(\"input\").trigger(\"focus\").select();\n                break;\n            case KEYS.ESC:\n                that._cancel();\n                break;\n            }\n        },\n        _onEnable: function(enable) {\n            var wrapper = this.wrapper;\n\n            this._hueSlider.enable(enable);\n\n            if (this._opacitySlider) {\n                this._opacitySlider.enable(enable);\n            }\n\n            wrapper.find(\"input\").attr(\"disabled\", !enable);\n\n            if (this.options._standalone) {\n                if (enable) {\n                    wrapper.removeAttr(\"aria-disabled\");\n                } else {\n                    wrapper.attr(\"aria-disabled\", true);\n                }\n            }\n        },\n        _reset: function () {\n            var that = this;\n\n            if (that._colorInput) {\n                that._colorInput.reset();\n            }\n\n            that._resetHsv();\n            that._resetColorContrast();\n        },\n        _resetColorContrast: function () {\n            var that = this,\n                contrastOptions = that.options.contrastTool;\n\n            if(that._contrastTool.length) {\n                that._updateColorContrast(contrastOptions.backgroundColor ? parseColor(contrastOptions.backgroundColor) : parseColor(WHITE));\n            }\n        },\n        _resetHsv: function () {\n            var that = this,\n                color = parseColor(BLACK);\n\n            that._updateHsv(color);\n        },\n        _sliders: function() {\n            var that = this,\n                wrapper = that.wrapper,\n                hueSlider = wrapper.find(\".k-hue-slider\"),\n                opacitySlider = wrapper.find(\".k-alpha-slider\");\n\n            function hueChange(e) {\n                that._updateUI(that._getHSV(e.value, null, null, null));\n            }\n\n            hueSlider.attr(\"aria-label\", \"hue\");\n            that._hueSlider = hueSlider.kendoSlider({\n                min: 0,\n                max: 360,\n                tickPlacement: \"none\",\n                showButtons: false,\n                orientation: \"vertical\",\n                slide: hueChange,\n                change: hueChange\n            }).data(\"kendoSlider\");\n\n            function opacityChange(e) {\n                that._updateUI(that._getHSV(null, null, null, e.value / 100));\n            }\n\n            opacitySlider.attr(\"aria-label\", \"opacity\");\n            that._opacitySlider = opacitySlider.kendoSlider({\n                min: 0,\n                max: 100,\n                tickPlacement: \"none\",\n                showButtons: false,\n                orientation: \"vertical\",\n                slide: opacityChange,\n                change: opacityChange\n            }).data(\"kendoSlider\");\n        },\n        _svChange: function(s, v) {\n            var color = this._getHSV(null, s, v, null);\n            this._updateUI(color);\n        },\n        _updateColorContrast: function (color) {\n            var that = this,\n                contrastOptions = that.options.contrastTool,\n                backgroundColor = contrastOptions.backgroundColor ? parseColor(contrastOptions.backgroundColor) : parseColor(WHITE),\n                contrastRatio = contrastToolUtils.getContrastFromTwoRGBAs(parseColor(color.toCssRgba()), backgroundColor),\n                contrastRatioTemplate = kendo.template(({ messages, ratio }) =>\n                                            '<div class=\"k-contrast-ratio\">' +\n                                                `<span class=\"k-contrast-ratio-text\">${encode(messages.contrastRatio)} ${encode(kendo.toString(ratio, \"n2\"))}</span>` +\n                                                '<span class=\"k-contrast-validation !k-text-success\">' +\n                                                    (ratio > 4.5 ?  kendo.ui.icon(\"check\") : '') +\n                                                    (ratio > 7 ?  kendo.ui.icon(\"check\") : '') +\n                                            '</span></div>'),\n                labelTemplate = kendo.template(({ messages, ratio, limit, level }) =>\n                                            '<div>' +\n                                                `<span>${encode(level)}: ${encode(limit)} </span>` +\n                                                (ratio > limit ?\n                                                `<span class=\"k-contrast-validation !k-text-success\">${encode(messages.pass)} ${kendo.ui.icon(\"check\")}</span>`\n                                                :\n                                                `<span class=\"k-contrast-validation !k-text-error\">${encode(messages.fail)} ${kendo.ui.icon(\"x\")}</span>`) +\n                                            '</div>'),\n                output = \"\";\n\n            output += contrastRatioTemplate({\n                messages: that.options.messages,\n                ratio: contrastRatio,\n            });\n\n            output += labelTemplate({\n                messages: that.options.messages,\n                ratio: contrastRatio,\n                limit: 4.5,\n                level: \"AA\"\n            });\n\n            output += labelTemplate({\n                messages: that.options.messages,\n                ratio: contrastRatio,\n                limit: 7,\n                level: \"AAA\"\n            });\n\n            that._contrastTool.find(\".k-contrast-ratio, div\").remove();\n            that._contrastTool.append(output);\n\n            that._updateContrastSvg(backgroundColor);\n        },\n        _updateContrastSvg: function (backgroundColor) {\n            var that = this,\n                hsvRect = that._hsvRect,\n                svgClassName = \"k-color-contrast-svg\",\n                metrics = { width: hsvRect.width(), height: hsvRect.height() },\n                newSvg;\n\n            if(!metrics.width || !metrics.height) {\n                return;\n            }\n\n            newSvg = $(contrastToolUtils.renderSvgCurveLine(metrics, that._getHSV(), backgroundColor)).addClass(svgClassName);\n            kendo.applyStylesFromKendoAttributes(newSvg, [\"position\", \"overflow\", \"pointer-events\", \"left\", \"top\", \"z-index\"]);\n\n            hsvRect.find(\".\" + svgClassName).remove();\n            hsvRect.append(newSvg);\n        },\n        _updateHsv: function (color) {\n            var that = this,\n                rect = that._hsvRect;\n\n            color = color.toHSV();\n\n            that._hsvHandle.css({\n                // saturation is 0 on the left side, full (1) on the right\n                left: color.s * rect.width() + \"px\",\n                // value is 0 on the bottom, full on the top.\n                top: (1 - color.v) * rect.height() + \"px\"\n            });\n\n            that._hueElements.css(BACKGROUNDCOLOR, Color.fromHSV(color.h, 1, 1, 1).toCss());\n            that._hueSlider.value(color.h);\n\n            if (that._opacitySlider) {\n                that._opacitySlider.wrapper.find(\".k-slider-track\").css(\"background\", \"linear-gradient(to top, transparent, \" + Color.fromHSV(color.h, 1, 1, 1).toCss());\n                that._opacitySlider.value(100 * color.a);\n            }\n\n            that._updateHsvAria(color.s, color.v);\n        },\n        _updateHsvAria: function(x,y) {\n            var value = this.value();\n\n            if (value && value.indexOf(\"rgba\") > -1) {\n                value = value.replace(\"rgba\", \"RGBA\");\n            }\n\n            this._hsvHandle.attr({\n                \"aria-label\": this._hsvDragAriaTemplate(value || ''),\n                \"aria-valuenow\": Math.round(x * 100),\n                \"aria-valuetext\": \"saturation: \" + Math.round(x * 100) + \"%, value: \" + Math.round(y * 100) + \"%\"\n            });\n        },\n        _updateUI: function(color, dontChangeInput) {\n            var that = this;\n\n            if (!color) {\n                that._reset();\n                return;\n            }\n\n            if (!dontChangeInput && that._colorInput) {\n                that._colorInput.value(color);\n            }\n\n            that._triggerSelect(color);\n            that._updateHsv(color);\n\n            if(that._contrastTool.length) {\n                that._updateColorContrast(color);\n            }\n        },\n        _wrapper: function() {\n            var options = this.options,\n                wrapper;\n\n            if (this.element.is(\"input\")) {\n                wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n            } else {\n                wrapper = this.element;\n            }\n\n            wrapper.addClass(\"k-colorgradient\")\n                .attr({\n                    \"role\": \"textbox\",\n                    \"aria-keyshortcuts\": \"Enter\"\n                })\n                .append(this._template(options));\n\n            this._hueElements = $(\".k-hsv-rectangle, .k-alpha-slider .k-slider-track\", wrapper);\n            this._colorgradientInputs = $(\".k-colorgradient-inputs\", wrapper);\n            this._contrastTool = $(\".k-colorgradient-color-contrast\", wrapper);\n\n            this.wrapper = wrapper;\n        },\n        destroy: function (){\n            this._hsvEvents.destroy();\n\n            this._hueSlider.destroy();\n            if (this._opacitySlider) {\n                this._opacitySlider.destroy();\n            }\n\n            if(this._colorInput) {\n                this._colorInput.destroy();\n            }\n\n            this._hueSlider = this._opacitySlider = this._hsvRect = this._hsvHandle =\n                this._hueElements = this._selectedColor = this._colorAsText =\n                this._contrastTool = null;\n\n            ColorSelector.fn.destroy.call(this);\n        }\n    });\n\n    ui.plugin(ColorGradient);\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1){\n    // WARNING: removing the following jshint declaration and turning\n    // == into === to make JSHint happy will break functionality.\n\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        parseColor = kendo.parseColor,\n        KEYS = kendo.keys,\n        DOT = \".\",\n        BACKGROUNDCOLOR = \"background-color\",\n        ITEMSELECTEDCLASS = \"k-selected\",\n        ITEMSFOCUSEDCLASS = \"k-focus\",\n        TILE_CLASS = \"k-colorpalette-tile\",\n        SIMPLEPALETTE = \"000000,7f7f7f,880015,ed1c24,ff7f27,fff200,22b14c,00a2e8,3f48cc,a349a4,ffffff,c3c3c3,b97a57,ffaec9,ffc90e,efe4b0,b5e61d,99d9ea,7092be,c8bfe7\",\n        WEBPALETTE = \"FFFFFF,FFCCFF,FF99FF,FF66FF,FF33FF,FF00FF,CCFFFF,CCCCFF,CC99FF,CC66FF,CC33FF,CC00FF,99FFFF,99CCFF,9999FF,9966FF,9933FF,9900FF,FFFFCC,FFCCCC,FF99CC,FF66CC,FF33CC,FF00CC,CCFFCC,CCCCCC,CC99CC,CC66CC,CC33CC,CC00CC,99FFCC,99CCCC,9999CC,9966CC,9933CC,9900CC,FFFF99,FFCC99,FF9999,FF6699,FF3399,FF0099,CCFF99,CCCC99,CC9999,CC6699,CC3399,CC0099,99FF99,99CC99,999999,996699,993399,990099,FFFF66,FFCC66,FF9966,FF6666,FF3366,FF0066,CCFF66,CCCC66,CC9966,CC6666,CC3366,CC0066,99FF66,99CC66,999966,996666,993366,990066,FFFF33,FFCC33,FF9933,FF6633,FF3333,FF0033,CCFF33,CCCC33,CC9933,CC6633,CC3333,CC0033,99FF33,99CC33,999933,996633,993333,990033,FFFF00,FFCC00,FF9900,FF6600,FF3300,FF0000,CCFF00,CCCC00,CC9900,CC6600,CC3300,CC0000,99FF00,99CC00,999900,996600,993300,990000,66FFFF,66CCFF,6699FF,6666FF,6633FF,6600FF,33FFFF,33CCFF,3399FF,3366FF,3333FF,3300FF,00FFFF,00CCFF,0099FF,0066FF,0033FF,0000FF,66FFCC,66CCCC,6699CC,6666CC,6633CC,6600CC,33FFCC,33CCCC,3399CC,3366CC,3333CC,3300CC,00FFCC,00CCCC,0099CC,0066CC,0033CC,0000CC,66FF99,66CC99,669999,666699,663399,660099,33FF99,33CC99,339999,336699,333399,330099,00FF99,00CC99,009999,006699,003399,000099,66FF66,66CC66,669966,666666,663366,660066,33FF66,33CC66,339966,336666,333366,330066,00FF66,00CC66,009966,006666,003366,000066,66FF33,66CC33,669933,666633,663333,660033,33FF33,33CC33,339933,336633,333333,330033,00FF33,00CC33,009933,006633,003333,000033,66FF00,66CC00,669900,666600,663300,660000,33FF00,33CC00,339900,336600,333300,330000,00FF00,00CC00,009900,006600,003300,000000\",\n        NS = \".kendoColorTools\",\n        FOCUS_NS = \"focus\" + NS,\n        CLICK_NS = \"click\" + NS,\n        KEYDOWN_NS = \"keydown\" + NS,\n        BLUR_NS = \"blur\" + NS,\n        ColorSelector = ui.colorpicker.ColorSelector;\n\n    function preventDefault(ev) { ev.preventDefault(); }\n\n    function bind(callback, obj) {\n        return function() {\n            return callback.apply(obj, arguments);\n        };\n    }\n\n    function relative(array, element, delta) {\n        array = Array.prototype.slice.call(array);\n        var n = array.length;\n        var pos = array.indexOf(element);\n        if (pos < 0) {\n            return delta < 0 ? array[n - 1] : array[0];\n        }\n        pos += delta;\n        if (pos < 0) {\n            pos += n;\n        } else {\n            pos %= n;\n        }\n        return array[pos];\n    }\n\n    var ColorPalette = ColorSelector.extend({\n        init: function(element, options) {\n            var that = this;\n\n            ColorSelector.fn.init.call(that, element, options);\n\n            that._tabIndex = this.element.attr(\"tabindex\") || 0;\n\n            that._wrapper();\n\n            options = that.options;\n\n            that._selectedID = (options.ariaId || kendo.guid()) + \"_selected\";\n            that._ariaTemplate = kendo.template(that.options.ARIATemplate);\n\n            if (that._value) {\n                that._updateUI(that._value);\n                that.wrapper.find(DOT + ITEMSFOCUSEDCLASS).removeClass(ITEMSFOCUSEDCLASS);\n            }\n\n            that.wrapper.attr(\"aria-label\", that._ariaTemplate(that.value() || \"\"));\n\n            that._attachEvents();\n        },\n        focus: function(){\n            if (this.wrapper && !this.wrapper.is(\"[unselectable='on']\")) {\n                this.wrapper.trigger(\"focus\");\n            }\n        },\n        options: {\n            name: \"ColorPalette\",\n            columns: 10,\n            tileSize: null,\n            palette: \"basic\"\n        },\n        _attachEvents: function() {\n            var that = this;\n\n            that.wrapper.on(CLICK_NS, DOT + TILE_CLASS, function(ev){\n                that._select(ev.currentTarget);\n            })\n            .on(KEYDOWN_NS, bind(that._keydown, that))\n            .on(BLUR_NS, function(){\n                that.wrapper.find(DOT + TILE_CLASS).removeClass(ITEMSFOCUSEDCLASS);\n            })\n            .on(FOCUS_NS, bind(that._focus, that));\n        },\n        _colors: function() {\n            var options = this.options,\n                colors = options.palette || \"basic\";\n\n            if (colors == \"websafe\") {\n                colors = WEBPALETTE;\n                options.columns = 18;\n            } else if (colors == \"basic\") {\n                colors = SIMPLEPALETTE;\n            }\n\n            if (typeof colors == \"string\") {\n                colors = colors.split(\",\");\n            }\n\n            if (Array.isArray(colors)) {\n                colors = $.map(colors, function(x) { return parseColor(x); });\n            }\n\n            return colors;\n        },\n        _current: function(item) {\n            this.wrapper.find(DOT + TILE_CLASS)\n                .removeClass(ITEMSFOCUSEDCLASS)\n                .removeAttr(\"id\");\n\n            $(item)\n                .addClass(ITEMSFOCUSEDCLASS)\n                .attr(\"id\", this._selectedID);\n\n            this.wrapper\n                .removeAttr(\"aria-activedescendant\")\n                .attr(\"aria-activedescendant\", this._selectedID);\n        },\n        _focus: function() {\n            var wrapper = this.wrapper,\n                selected = wrapper.find(\"#\" + this._selectedID);\n\n            if (selected.length === 0) {\n                this._current(wrapper.find(DOT + TILE_CLASS).first());\n            }\n        },\n        _keydown: function(e) {\n            var newCurrent,\n                wrapper = this.wrapper,\n                items = wrapper.find(DOT + TILE_CLASS),\n                current = items.filter(DOT + ITEMSFOCUSEDCLASS).get(0) || items.filter(DOT + ITEMSELECTEDCLASS).get(0),\n                keyCode = e.keyCode,\n                index;\n\n            if (current) {\n                index = Array.prototype.indexOf.call(current.parentNode.children, current);\n            }\n\n            if (keyCode == KEYS.LEFT) {\n                newCurrent = current ? current.previousSibling : items[items.length - 1];\n            } else if (keyCode == KEYS.RIGHT) {\n                newCurrent = current ? current.nextSibling : items[0];\n            } else if (keyCode == KEYS.DOWN) {\n                newCurrent = current ? (current.parentNode.nextSibling ? current.parentNode.nextSibling.children[index] : null) : items[0];\n            } else if (keyCode == KEYS.UP) {\n                newCurrent = current ? (current.parentNode.previousSibling ? current.parentNode.previousSibling.children[index] : null) : items.get[items.length - 1];\n            } else if (keyCode == KEYS.ENTER) {\n                preventDefault(e);\n                if (current) {\n                    this._select(current);\n                    this.trigger(\"forceSelect\", { value: this.value() });\n                    return;\n                }\n            } else if (keyCode == KEYS.ESC) {\n                this._cancel();\n            }\n\n            if (newCurrent && newCurrent.nodeType !== 1) {\n                newCurrent = null;\n            }\n\n            if (newCurrent) {\n                preventDefault(e);\n\n                this._current(newCurrent);\n            }\n        },\n        _onEnable: function(enable) {\n            if (this.options._standalone) {\n                if (enable) {\n                    this.wrapper.attr(\"tabindex\", this._tabIndex);\n                    this.wrapper.removeAttr(\"aria-disabled\");\n                } else {\n                    this.wrapper.removeAttr(\"tabindex\");\n                    this.wrapper.attr(\"aria-disabled\", true);\n                }\n            }\n        },\n        _select: function(item) {\n            var that = this,\n                items = that.wrapper.find(DOT + TILE_CLASS);\n\n            item = $(item);\n\n            ColorSelector.fn._select.call(that, item.css(BACKGROUNDCOLOR));\n\n            items.removeClass(ITEMSELECTEDCLASS).removeAttr(\"aria-selected\");\n            item.addClass(ITEMSELECTEDCLASS).attr(\"aria-selected\", true);\n        },\n        _template: kendo.template(({colors, columns, tileSize, value, id}) => {\n            let startPart = '<table class=\"k-colorpalette-table\" role=\"presentation\"><tr role=\"row\">';\n\n            let cellElements = \"\";\n            for (var i = 0; i < colors.length; ++i) {\n                let selected = colors[i].equals(value);\n                if (i && i % columns == 0) {\n                    cellElements += '</tr><tr role=\"row\">';\n                }\n\n                cellElements +=\n                `<td role=\"gridcell\" unselectable=\"on\" ${kendo.attr(\"style-background-color\")}=\"${colors[i].toCss()}\"` +\n                    `${selected ? \" aria-selected=true\" : \"\"} ` +\n                    `${(id && i === 0) ? 'id=\\\\\"' + id + '\\\\\" ' : '' } ` +\n\n                    `class=\"k-colorpalette-tile${selected ? \" \" + ITEMSELECTEDCLASS : \"\"}\" ` +\n                    `aria-label=\"${colors[i].toCss()}\"></td>`;\n            }\n\n            let endPart = '</tr></table>';\n            return startPart + cellElements + endPart;\n        }),\n        _tileSize: function() {\n            var tileSize = this.options.tileSize,\n                width, height;\n\n            if (tileSize) {\n                if (/number|string/.test(typeof tileSize)) {\n                    width = height = parseFloat(tileSize);\n                } else if (typeof tileSize == \"object\") {\n                    width = parseFloat(tileSize.width);\n                    height = parseFloat(tileSize.height);\n                } else {\n                    throw new Error(\"Unsupported value for the 'tileSize' argument\");\n                }\n                this.wrapper.find(DOT + TILE_CLASS).css({ width: width, height: height });\n            }\n        },\n        _updateUI: function(color) {\n            var item = null,\n                items = this.wrapper.find(DOT + TILE_CLASS);\n\n            this.wrapper.find(DOT + TILE_CLASS).each(function(){\n                var c = parseColor($(this).css(BACKGROUNDCOLOR));\n\n                if (c && c.equals(color)) {\n                    item = this;\n\n                    return false;\n                }\n            });\n\n            this._current(item);\n\n            items.removeClass(ITEMSELECTEDCLASS);\n\n            if (item) {\n                $(item).addClass(ITEMSELECTEDCLASS);\n                this.wrapper.attr(\"aria-label\", this._ariaTemplate(this.value() || \"\"));\n            }\n        },\n        _wrapper: function() {\n            var options = this.options,\n                colors = this._colors(),\n                wrapper,\n                templateElement;\n\n            if (this.element.is(\"input\")) {\n                wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n            } else {\n                wrapper = this.element;\n            }\n\n            templateElement = $(this._template({\n                colors: colors,\n                columns: options.columns,\n                tileSize: options.tileSize,\n                value: this._value,\n                id: options.ariaId\n            }));\n\n            kendo.applyStylesFromKendoAttributes(templateElement, [\"background-color\"]);\n            wrapper.addClass(\"k-colorpalette\")\n                .attr(\"role\", \"grid\")\n                .append(templateElement)\n                .attr(\"tabindex\", this._tabIndex);\n\n            this.wrapper = wrapper;\n            this._tileSize();\n        }\n    });\n\n\n    ui.plugin(ColorPalette);\n\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1){\n    // WARNING: removing the following jshint declaration and turning\n    // == into === to make JSHint happy will break functionality.\n\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        html = kendo.html,\n        Color = kendo.Color,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        BACKGROUNDCOLOR = \"background-color\",\n        MESSAGES = {\n            apply  : \"Apply\",\n            cancel : \"Cancel\",\n            noColor: \"no color\",\n            clearColor: \"Clear color\",\n            previewInput: null,\n            contrastRatio: \"Contrast ratio:\",\n            fail: \"Fail\",\n            pass: \"Pass\",\n            hex: \"HEX\",\n            toggleFormat: \"Toggle format\",\n            red: \"Red\",\n            green: \"Green\",\n            blue: \"Blue\",\n            alpha: \"Alpha\",\n            gradient: \"Gradient view\",\n            palette: \"Palette view\"\n        },\n        NS = \".kendoColorTools\",\n        CLICK_NS = \"click\" + NS,\n        KEYDOWN_NS = \"keydown\" + NS,\n        ColorSelector = ui.colorpicker.ColorSelector,\n        KEYS = kendo.keys,\n\n        NO_COLOR = \"k-no-color\",\n        SELECTED = \"k-selected\",\n        PREVIEW_MASK = \".k-color-preview-mask\",\n\n        ARIA_PRESSED = \"aria-pressed\",\n        ARIA_DISABLED = \"aria-disabled\",\n\n        VIEWS = {\n            \"gradient\": ui.ColorGradient,\n            \"palette\": ui.ColorPalette\n        };\n\n    function bind(callback, obj) {\n        return function() {\n            return callback.apply(obj, arguments);\n        };\n    }\n\n    var FlatColorPicker = ColorSelector.extend({\n        init: function(element, options) {\n            var that = this;\n\n            if (options && options.autoupdate === false) {\n                options._standalone = false;\n            }\n\n            ColorSelector.fn.init.call(that, element, options);\n            options = that.options = kendo.deepExtend({}, that.options, options);\n            element = that.element;\n\n            that._wrapper();\n\n            var value = that.color();\n\n            that._changeView(options.view);\n\n            that._setViewSize();\n\n            if (value) {\n                that._updateUI(value);\n                that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n                that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n            } else {\n                that._selectedColor.addClass(NO_COLOR);\n                that._previousColor.addClass(NO_COLOR);\n            }\n\n            that._attachEvents();\n            that._navigation();\n        },\n        destroy: function() {\n            var that = this;\n\n            ColorSelector.fn.destroy.call(this);\n\n            if (that._view) {\n                that._view.destroy();\n                that._viewsContainer.empty();\n            }\n\n            that.element.off(NS);\n\n            that._selectedColor = that._previousColor = that._viewsContainer = that._view = null;\n        },\n        options: {\n            name: \"FlatColorPicker\",\n            opacity: false,\n            buttons: false,\n            input: true,\n            preview: true,\n            clearButton: false,\n            format: \"hex\",\n            formats: [\"rgb\", \"hex\"],\n            view: \"gradient\",\n            views: [\"gradient\", \"palette\"],\n            palette: null,\n            autoupdate : true,\n            backgroundColor: null,\n            columns: 10,\n            tileSize: 24,\n            messages   : MESSAGES,\n            size: \"medium\", // Fake styling option to accomplish colorpicker's size for textbox and button\n            _otOfPicker: true\n        },\n        setBackgroundColor: function (color) {\n            var that = this;\n\n            if(that._view && that._view.setBackgroundColor) {\n                that._view.setBackgroundColor(color);\n            }\n        },\n        _attachEvents: function() {\n            var that = this;\n\n            that.wrapper\n                .on(KEYDOWN_NS, bind(that._keydown, that))\n                .on(CLICK_NS, \".k-button[data-command]\", function () {\n                    that._clearColor = true;\n                    that._updateUI(null);\n                    that._view.value(null);\n                })\n                .on(CLICK_NS, \".k-coloreditor-apply\", function(){\n                    if(that._clearColor) {\n                        that._select(null);\n                    } else {\n                        that._select(that._view.color());\n                    }\n                })\n                .on(CLICK_NS, \".k-coloreditor-cancel\", function(){\n                    delete that._clearColor;\n                    that._updateUI(that.color());\n                    that._cancel();\n                })\n                .on(CLICK_NS, \".k-button[data-view]\", function(ev){\n                    var viewButton =  $(ev.target).closest(\"[data-view]\");\n\n                    if(viewButton.is(\".\" + SELECTED)) {\n                        return;\n                    }\n\n                    that.wrapper.find(\".k-button[data-view]\").removeClass(SELECTED).attr(ARIA_PRESSED, false);\n                    viewButton.addClass(SELECTED).attr(ARIA_PRESSED, true);\n                    that._changeView(viewButton.data(\"view\"));\n                });\n        },\n        _select: function(value) {\n            var that = this;\n\n            ColorSelector.fn._select.call(that, value);\n\n            that._updatePreviousColor(value);\n        },\n        _updatePreviousColor: function (value) {\n            var that = this;\n\n            if (value) {\n                that._previousColor.removeClass(NO_COLOR);\n                that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n            } else {\n                that._previousColor.addClass(NO_COLOR);\n                that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, \"\");\n            }\n        },\n        _changeView: function (mode) {\n            var that = this,\n                options = $.extend({}, that.options),\n                selector =  VIEWS[mode],\n                selectedColor, hsvColor;\n\n            if(that._view && that._view._colorInput) {\n                that.options.format = that._view._colorInput._viewModel.format;\n            }\n\n            that.options.view = mode;\n\n            delete options.name;\n            delete options.change;\n            delete options.select;\n            delete options.cancel;\n            delete options._standalone;\n\n            if (that._view) {\n                selectedColor = that._view.color();\n                that._view.destroy();\n                that._viewsContainer.empty();\n            }\n\n            if (selectedColor) {\n                selectedColor = selectedColor.toHSV();\n                hsvColor = Color.fromHSV(that._cachedHue || 0, selectedColor.s, selectedColor.v, selectedColor.a);\n                that._cachedHue = selectedColor.toHSV().h;\n                selectedColor = selectedColor.equals(hsvColor) ? hsvColor : selectedColor;\n            }\n\n            options._otOfPicker = false;\n\n            if (selector) {\n                that._view = new VIEWS[mode]($(\"<div></div>\").appendTo(that._viewsContainer), options);\n                that._view.value(selectedColor);\n\n                that._view.bind(\"change\", function (ev) {\n                    delete that._clearColor;\n                    that._updateUI(ev.sender.color(), true);\n                });\n\n                that._view.bind(\"forceSelect\", function (ev) {\n                    delete that._clearColor;\n                    that._select(ev.sender.color());\n                });\n            }\n        },\n        _onEnable: function(enable) {\n            var that = this;\n\n            if (that._view) {\n                that._view._onEnable(enable);\n            }\n\n            if (that.options._standalone) {\n                if (enable) {\n                    that.wrapper.removeAttr(ARIA_DISABLED);\n                } else {\n                    that.wrapper.attr(ARIA_DISABLED, true);\n                }\n            }\n        },\n        focus: function() {\n            var that = this;\n\n            if (that._view) {\n                that._view.focus();\n            }\n        },\n        _updateUI: function(color, dontChangeView) {\n            var that = this;\n\n            if (color && color.toDisplay) {\n                that._selectedColor.removeClass(NO_COLOR);\n                that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, color.toDisplay());\n            } else {\n                that._selectedColor.addClass(NO_COLOR);\n                that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, \"\");\n            }\n\n            that._triggerSelect(color);\n\n            if (that.options.autoupdate) {\n                that._updatePreviousColor(color);\n            }\n\n            if(!dontChangeView) {\n                that._view.value(color);\n            }\n        },\n        _setViewSize: function() {\n            var that = this,\n                wrapper = that.wrapper[0],\n                previewWidth = parseInt((that.options.tileSize.width || that.options.tileSize), 10),\n                previewHeight = parseInt((that.options.tileSize.width || that.options.tileSize), 10),\n                previewColumns = that.options.columns;\n\n            wrapper.style.setProperty(\"--kendo-color-preview-columns\", previewColumns);\n            wrapper.style.setProperty(\"--kendo-color-preview-width\", previewWidth + \"px\");\n            wrapper.style.setProperty(\"--kendo-color-preview-height\", previewHeight + \"px\");\n        },\n        _keydown: function(e) {\n            if (e.keyCode == KEYS.ESC) {\n                this._cancel();\n            }\n        },\n        _template: function () {\n            var that = this,\n                options = that.options,\n                buttonOptions = extend({}, options, {\n                    fillMode: \"flat\",\n                    themeColor: \"base\",\n                    rounded: \"medium\"\n                });\n\n            return kendo.template((options, buttonOptions) =>\n                    '<div class=\"k-coloreditor-header k-hstack\">' +\n                        ((options.views && options.views.length > 1) ?\n                        '<div class=\"k-coloreditor-header-actions k-hstack\">' +\n                            '<div role=\"group\" class=\"k-button-group k-button-group-flat\">' +\n                                html.renderButton(`<button aria-pressed=\"false\" data-view=\"gradient\" title=\"${encode(options.messages.gradient)}\"></button>`, extend({ icon: \"droplet-slider\" }, buttonOptions)) +\n                                html.renderButton(`<button aria-pressed=\"false\" data-view=\"palette\" title=\"${encode(options.messages.palette)}\"></button>`, extend({ icon: \"palette\" }, buttonOptions)) +\n                            '</div>' +\n                        '</div>'\n                        : '') +\n                        '<div class=\"k-spacer\"></div>' +\n                        '<div class=\"k-coloreditor-header-actions k-hstack\">' +\n                            (options.clearButton ?\n                            html.renderButton(`<button data-command=\"reset\" title=\"${encode(options.messages.clearColor)}\"></button>`, extend({ icon: \"droplet-slash\" }, buttonOptions))\n                            : '') +\n                            (options.preview ?\n                            '<div class=\"k-coloreditor-preview k-vstack\">' +\n                                '<span class=\"k-coloreditor-preview-color k-color-preview\">' +\n                                    '<span class=\"k-color-preview-mask\"></span>' +\n                                '</span>' +\n                                '<span class=\"k-coloreditor-current-color k-color-preview\">' +\n                                    '<span class=\"k-color-preview-mask\"></span>' +\n                                '</span>' +\n                            '</div>'\n                            : '') +\n                        '</div>' +\n                    '</div>' +\n                    '<div class=\"k-coloreditor-views k-vstack\"></div>' +\n                    (options.buttons ?\n                    '<div class=\"k-coloreditor-footer k-actions k-actions-end k-actions-horizontal\">' +\n                        html.renderButton(`<button class=\"k-coloreditor-cancel\" title=\"${encode(options.messages.cancel)}\">${encode(options.messages.cancel)}</button>`, extend({}, buttonOptions, { fillMode: \"solid\" })) +\n                        html.renderButton(`<button class=\"k-coloreditor-apply\" title=\"${encode(options.messages.apply)}\">${encode(options.messages.apply)}</button>`, extend({}, buttonOptions, { fillMode: \"solid\", themeColor: \"primary\" })) +\n                    '</div>'\n                    : '')\n                )(options, buttonOptions);\n        },\n        _wrapper: function() {\n            var options = this.options,\n                wrapper;\n\n            if (this.element.is(\"input\")) {\n                wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n            } else {\n                wrapper = this.element;\n            }\n\n            wrapper.addClass(\"k-flatcolorpicker k-coloreditor\")\n                .attr({\n                    \"role\": \"textbox\",\n                    \"aria-keyshortcuts\": \"Enter\"\n                })\n                .append(this._template());\n\n            this._selectedColor = $(\".k-coloreditor-preview-color\", wrapper);\n            this._previousColor = $(\".k-coloreditor-current-color\", wrapper);\n            this._viewsContainer = $(\".k-coloreditor-views\", wrapper);\n\n            wrapper.find(\".k-button[data-view=\" + options.view + \"]\").addClass(SELECTED).attr(ARIA_PRESSED, true);\n\n            this.wrapper = wrapper;\n        }\n    });\n\n    ui.plugin(FlatColorPicker);\n})(window.kendo.jQuery);\n\nvar __meta__ = {\n    id: \"colorpicker\",\n    name: \"Color tools\",\n    category: \"web\",\n    description: \"Color selection widgets\",\n    depends: [ \"core\", \"color\", \"popup\", \"slider\", \"userevents\", \"button\", \"binder\", \"textbox\", \"numerictextbox\", \"html.button\" ]\n};\n\n(function($, undefined$1) {\n    // WARNING: removing the following jshint declaration and turning\n    // == into === to make JSHint happy will break functionality.\n\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        Color = kendo.Color,\n        parseColor = kendo.parseColor,\n        KEYS = kendo.keys,\n        BACKGROUNDCOLOR = \"background-color\",\n        MESSAGES = {\n            apply: \"Apply\",\n            cancel: \"Cancel\",\n            noColor: \"no color\",\n            clearColor: \"Clear color\",\n            previewInput: null,\n            contrastRatio: \"Contrast ratio:\",\n            fail: \"Fail\",\n            pass: \"Pass\",\n            hex: \"HEX\",\n            toggleFormat: \"Toggle format\",\n            red: \"Red\",\n            green: \"Green\",\n            blue: \"Blue\",\n            alpha: \"Alpha\",\n            gradient: \"Gradient view\",\n            palette: \"Palette view\"\n        },\n        NS = \".kendoColorTools\",\n        CLICK_NS = \"click\" + NS,\n        KEYDOWN_NS = \"keydown\" + NS,\n        ColorSelector = ui.colorpicker.ColorSelector,\n        FlatColorPicker = ui.FlatColorPicker;\n\n    /* -----[ The ColorPicker widget ]----- */\n\n    var ColorPicker = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            // Legacy support for the cases where only palette is defined\n            if (options && options.palette && !options.view) {\n                options.view = \"palette\";\n            }\n\n            Widget.fn.init.call(that, element, options);\n            options = that.options = kendo.deepExtend({}, that.options, options);\n            element = that.element;\n\n            let value = parseColor(options.value || element.attr(\"value\") || element.val(), true);\n            that._value = options.value = value;\n\n            var _buttonHtml = kendo.html.renderButton('<button class=\"k-input-button\" unselectable=\"on\" aria-label=\"select\" tabindex=\"-1\"></button>', $.extend({}, that.options, {\n                icon: \"caret-alt-down\"\n            }));\n\n            var content = that._inputWrapper = that.wrapper = $(that._template($.extend({}, that.options, {\n                _buttonHtml: _buttonHtml\n            })));\n\n            that._applyCssClasses();\n            element.hide().after(content);\n\n            if (element.is(\"input\")) {\n                element.appendTo(content);\n                that._preventDefaultLabelClick();\n            }\n\n            that._tabIndex = element.attr(\"tabIndex\") || 0;\n\n            that.enable(!element.attr(\"disabled\"));\n\n            var accesskey = element.attr(\"accesskey\");\n            if (accesskey) {\n                element.attr(\"accesskey\", null);\n                content.attr(\"accesskey\", accesskey);\n            }\n\n            that.bind(\"activate\", function(ev) {\n                if (!ev.isDefaultPrevented()) {\n                    that.toggle();\n                }\n            });\n\n            that._updateUI(value);\n        },\n        destroy: function() {\n            this.wrapper.off(NS).find(\"*\").off(NS);\n            if (this._popup) {\n                this._selector.destroy();\n                this._popup.destroy();\n            }\n            this._selector = this._popup = this.wrapper = null;\n            Widget.fn.destroy.call(this);\n        },\n        enable: function(enable) {\n            var that = this,\n                wrapper = that.wrapper,\n                arrow = wrapper.find(\".k-input-button\");\n\n            if (arguments.length === 0) {\n                enable = true;\n            }\n\n            that.element.attr(\"disabled\", !enable);\n            wrapper.attr(\"aria-disabled\", !enable);\n\n            arrow.off(NS).on(\"mousedown\" + NS, preventDefault);\n\n            wrapper.addClass(\"k-disabled\")\n                .removeAttr(\"tabIndex\")\n                .add(\"*\", wrapper).off(NS);\n\n            if (enable) {\n                wrapper.removeClass(\"k-disabled\")\n                    .attr(\"tabIndex\", that._tabIndex)\n                    .on(\"mouseenter\" + NS, function() { wrapper.addClass(\"k-hover\"); })\n                    .on(\"mouseleave\" + NS, function() { wrapper.removeClass(\"k-hover\"); })\n                    .on(\"focus\" + NS, function() { wrapper.addClass(\"k-focus\"); })\n                    .on(\"blur\" + NS, function() { wrapper.removeClass(\"k-focus\"); })\n                    .on(KEYDOWN_NS, bind(that._keydown, that))\n                    .on(CLICK_NS, \".k-input-button\", bind(that.toggle, that))\n                    .on(CLICK_NS, \".k-input-inner\", function() {\n                        that.trigger(\"activate\");\n                    });\n            } else {\n                that.close();\n            }\n        },\n\n        _template: kendo.template(({ toolIcon, _buttonHtml }) =>\n           '<span role=\"combobox\" aria-haspopup=\"dialog\" aria-expanded=\"false\" class=\"k-colorpicker k-picker k-icon-picker\">' +\n                '<span class=\"k-input-inner\">' +\n                    `<span class=\"k-value-icon k-color-preview ${toolIcon ? 'k-icon-color-preview' : ''}\">` +\n                        (toolIcon ? kendo.ui.icon({ icon: toolIcon, iconClass: \"k-color-preview-icon\" }) : '') +\n                        '<span class=\"k-color-preview-mask\"></span>' +\n                    '</span>' +\n                '</span >' +\n                _buttonHtml +\n            '</span>'\n        ),\n\n        options: {\n            name: \"ColorPicker\",\n            closeOnSelect: false,\n            contrastTool: false,\n            palette: null,\n            columns: 10,\n            toolIcon: null,\n            value: null,\n            messages: MESSAGES,\n            opacity: false,\n            buttons: true,\n            preview: true,\n            clearButton: false,\n            input: true,\n            format: \"hex\",\n            formats: [\"rgb\", \"hex\"],\n            view: \"gradient\",\n            views: [\"gradient\", \"palette\"],\n            backgroundColor: null,\n            ARIATemplate: (data) => `Current selected color is ${data || \"none\"}`,\n            size: \"medium\",\n            rounded: \"medium\",\n            fillMode: \"solid\"\n        },\n\n        events: [ \"activate\", \"change\", \"select\", \"open\", \"close\" ],\n\n        open: function() {\n            if (!this.element.prop(\"disabled\")) {\n                this._getPopup().open();\n            }\n        },\n        close: function() {\n            var selOptions = (this._selector && this._selector.options) || {};\n            selOptions._closing = true;\n            this._getPopup().close();\n\n            delete selOptions._closing;\n        },\n        toggle: function() {\n            if (!this.element.prop(\"disabled\")) {\n                this._getPopup().toggle();\n            }\n        },\n        setBackgroundColor: function(color) {\n            var that = this,\n                handler = function() { that._selector.setBackgroundColor(color); };\n\n            that.options.contrastTool.backgroundColor = color;\n\n            if (that._selector && (that._popup && that._popup.visible())) {\n                that._selector.setBackgroundColor(color);\n            } else if (that._popup) {\n                that._popup.unbind(\"activate\", handler);\n                that._popup.bind(\"activate\", handler);\n            }\n        },\n        _noColorIcon: function() {\n            return this.wrapper.find(\".k-color-preview\");\n        },\n        color: ColorSelector.fn.color,\n        value: ColorSelector.fn.value,\n        _select: ColorSelector.fn._select,\n        _triggerSelect: ColorSelector.fn._triggerSelect,\n        _isInputTypeColor: ColorSelector.fn._isInputTypeColor,\n\n        _preventDefaultLabelClick: function() {\n            // if there exists a <label> associated with this\n            // input field, we must catch clicks on it to prevent\n            // the built-in color picker from showing up.\n            // https://github.com/telerik/kendo-ui-core/issues/292\n            var that = this,\n                element = that.element,\n                label = element.closest(\"label\"),\n                id = element.attr(\"id\");\n\n            if (id) {\n                label = label.add('label[for=\"' + id + '\"]');\n            }\n            label.on(\"click\", function(ev) {\n                that.open();\n                ev.preventDefault();\n            });\n        },\n\n        _updateUI: function(value, dontChangeSelector) {\n            this._updateInput(value);\n            this._triggerSelect(value);\n\n            this.wrapper.find(\".k-color-preview-mask\").css(\n                BACKGROUNDCOLOR,\n                value ? value.toDisplay() : \"\"\n            );\n\n            this._noColorIcon().toggleClass(\"k-no-color\", !value);\n\n            if (this._selector && !dontChangeSelector) {\n                this._selector.value(value);\n            }\n        },\n        _updateInput: function(value) {\n            var formattedValue = \"\";\n\n            if (value) {\n                if (this._isInputTypeColor() || value.a == 1) {\n                    // seems that input type=\"color\" doesn't support opacity\n                    // in colors; the only accepted format is hex #RRGGBB\n                    formattedValue = value.toCss();\n                } else {\n                    formattedValue = value.toCssRgba();\n                }\n\n                this.element.val(formattedValue);\n            }\n\n            if (!this._ariaTemplate) {\n                this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n            }\n\n            this.wrapper.attr(\"aria-label\", this._ariaTemplate(formattedValue));\n        },\n        _keydown: function(ev) {\n            var key = ev.keyCode;\n            if (this._getPopup().visible()) {\n                if (key == KEYS.ESC) {\n                    this._selector._cancel();\n                } else {\n                    this._selector._keydown(ev);\n                }\n                preventDefault(ev);\n            }\n            else if (key == KEYS.ENTER || key == KEYS.DOWN) {\n                this.open();\n                preventDefault(ev);\n            }\n        },\n        _getPopup: function() {\n            var that = this, popup = that._popup;\n\n            if (!popup) {\n                var options = that.options;\n                var selectorType;\n\n                selectorType = FlatColorPicker;\n\n                options.autoupdate = options.buttons !== true;\n                delete options.select;\n                delete options.change;\n                delete options.cancel;\n\n                options._otOfPicker = false;\n\n                var id = kendo.guid();\n\n                var selectorWrapper = $('<div id=\"' + id + '\" class=\"k-colorpicker-popup\"></div>').appendTo(document.body);\n                var selector = that._selector = new selectorType($('<div></div>').appendTo(selectorWrapper), options);\n\n                that.wrapper.attr(\"aria-controls\", id);\n\n                that._popup = popup = selectorWrapper.kendoPopup({\n                    anchor: that.wrapper,\n                    adjustSize: { width: 5, height: 0 }\n                }).data(\"kendoPopup\");\n\n                selector.bind({\n                    select: function(ev) {\n                        that._updateUI(parseColor(ev.value), true);\n                    },\n                    change: function(ev) {\n                        if (that.options.buttons) {\n                            that._select(selector.color());\n                        } else {\n                            that._updateUI(parseColor(ev.value), true);\n                        }\n\n                        if (that.options.buttons || (that._selector.options.view === \"palette\" && that.options.closeOnSelect)) {\n                            that.close();\n                        }\n                    },\n                    cancel: function() {\n                        that.close();\n                    }\n                });\n                popup.bind({\n                    close: function(ev) {\n                        if (that.trigger(\"close\")) {\n                            ev.preventDefault();\n                            return;\n                        }\n                        that.wrapper.removeClass(\"k-focus\");\n\n                        var color = selector.color();\n\n                        if (!that.options.buttons) {\n                            that._select(color);\n                        } else {\n                            that._select(that.color());\n                        }\n\n                        color = that.color();\n\n                        if (color && color.h) {\n                            that._cachedHue = color.h;\n                        }\n\n                        var clickedOutside = event &&\n                            event instanceof MouseEvent &&\n                            $(event.target).parents(\".k-colorpicker-popup\").length === 0;\n\n                        if (!clickedOutside) {\n                            setTimeout(function() {\n                                if (that.wrapper && !that.wrapper.is(\"[unselectable='on']\")) {\n                                    that.wrapper.trigger(\"focus\");\n                                }\n                            }, 0);\n                        }\n\n                        that.wrapper.attr(\"aria-expanded\", false);\n                    },\n                    open: function(ev) {\n                        if (that.trigger(\"open\")) {\n                            ev.preventDefault();\n                        } else {\n                            that.wrapper.addClass(\"k-focus\");\n                            that.wrapper.attr(\"aria-expanded\", true);\n                        }\n                    },\n                    activate: function() {\n                        var hsvColor,\n                            selectedColor = that.color();\n\n                        if (selectedColor) {\n                            selectedColor = selectedColor.toHSV();\n                            hsvColor = Color.fromHSV(that._cachedHue || 0, selectedColor.s, selectedColor.v, selectedColor.a);\n                            selectedColor = selectedColor.equals(hsvColor) ? hsvColor : selectedColor;\n                        }\n\n                        selector.value(selectedColor);\n                        selector.focus();\n                        that.wrapper.addClass(\"k-focus\");\n                    }\n                });\n            }\n            return popup;\n        }\n    });\n\n    function preventDefault(ev) { ev.preventDefault(); }\n\n    function bind(callback, obj) {\n        return function() {\n            return callback.apply(obj, arguments);\n        };\n    }\n\n    ui.plugin(ColorPicker);\n\n    kendo.cssProperties.registerPrefix(\"ColorPicker\", \"k-picker-\");\n\n    kendo.cssProperties.registerValues(\"ColorPicker\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}