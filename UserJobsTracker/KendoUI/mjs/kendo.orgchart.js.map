{"version":3,"sources":["raw-mjs/kendo.orgchart.js"],"names":["$","undefined$1","extend","data","kendo","Query","DataSource","TreeListDataSource","Model","ObservableArray","OrgChartModel","define","id","parentId","fields","type","editable","nullable","name","validation","required","title","avatar","init","value","fn","call","this","_loaded","parentIdField","nameField","titleField","avatarField","get","accept","set","field","initiator","loaded","shouldSerialize","base","options","model","OrgChartDataSource","schema","modelBase","groupedItemsTree","map","_childrenMap","view","currentChildren","_defaultParentId","grouped","group","toArray","_innerGroupedItemsTree","itemChildren","item","fromView","itemId","filter","operator","order","_sort","length","sort","itemsTree","current","children","i","items","push","prospectParents","skippedItem","concat","read","then","_loadExpanded","bind","toggleChildren","expand","defaultPromise","Deferred","resolve","promise","_error","expanded","load","j","innerGrouped","hasChildren","_byParentId","create","Array","isArray","toJSON","Error","window","jQuery","keys","encode","htmlEncode","NS","CLICK","COLLAPSE","EXPAND","MENU","SELECT","DOT","SPACE","HASH","TABINDEX","UID","PX","PLUS","MINUS","ARIA_OWNS","ARIA_SELECTED","ORGCHART_STYLES","ROOT_TEMPLATE","label","GROUP_TEMPLATE","guid","level","NODE_GROUP_CONTAINER","result","BUTTON_TEMPLATE","buttonSign","html","renderButton","icon","CARD_TEMPLATE","color","menuLabel","attr","fillMode","CARD_WRAPPER","uid","cssClass","GROUPED_CARD_WRAPPER","View","Observable","element","_attachEvents","events","destroy","ui","Widget","off","collapse","jqueryGroupElement","jQueryElement","_processItem","hasClass","closest","jqueryItemElement","refresh","_cacheFocused","_clearContent","_generateItemsTree","_calculateLevels","_render","select","$item","_getToSelect","previousSelection","find","removeAttr","removeClass","addClass","trigger","itemsSelector","on","_onKeyDown","_onSelect","_onButtonClick","_onFocus","_onBlur","focusableItem","focusableDataItem","_dataItems","_idTabIndex","_shouldRestoreSelection","_calculateDimensions","itemElement","_selector","first","_buttonHeight","outerHeight","_spacing","_itemWidth","_calculateItemWidth","_itemHeight","_calculateLevel","empty","_dataItem","dataSource","getByUid","_groupIsVertical","_keyCollapse","_keyExpand","_keyNext","_keyPrev","_keyEnter","_keyEscape","_keyEnd","target","last","dataItems","_keyHome","e","key","keyCode","focused","isRtl","support","nextKey","LEFT","RIGHT","prevKey","expandKey","DOWN","collapseKey","UP","HOME","END","indexOf","preventDefault","stopPropagation","ENTER","ESC","that","currentTarget","shouldExpand","el","siblings","_orientation","isElement","totalWidth","_itemsTree","root","template","messages","wrapperContainer","total","_total","widgetPadding","css","append","_renderGroup","width","Number","split","_setHeight","_restoreSelection","_renderNode","cardWrapperTemplate","contentTemplate","content","cardWrapper","borderColors","cardsColors","getSeriesColors","node","attributes","JSON","parse","stringify","applyStylesFromKendoAttributes","toFocusItem","toFocus","_getToFocus","_preventTriggerSelect","buttonHeight","selector","elements","min","MAX_VALUE","max","height","each","top","offset","bottom","SingleView","outerWidth","previousMax","itemsLength","maxColumnsPerLevel","_maxColumnsPerLevel","nestedChildren","shouldReset","container","parentUid","parentItem","dataItem","childItem","ownedGroup","next","parent","prev","vertical","vLine","before","clone","parentColumns","parentLeft","nodeContainer","_renderInner","button","innerGroup","itemWidth","spacing","buttonTemplate","numberOfColumns","hLine","_renderInnerGroup","after","left","groupTemplate","offsetDirection","GroupedView","$group","ds","_groupFocused","getAttribute","groups","currentLength","groupsLength","maxColumns","_maxGroups","currentTotal","maxGroups","groupField","some","toSelect","ownedGroupId","_renderChildren","index","nodesGroup","nodesGroupWidth","currentVertical","_renderNodesContainer","_renderItems","groupHeaderTemplate","nodeGroupContainerTemplate","nodeGroup","nodeGroupContainer","orgChart","__meta__","category","description","depends","DataBoundWidget","ContextMenu","CANCEL","CHANGE","CREATE","DATABINDING","DATABOUND","DELETE","EDIT","ERROR","PROGRESS","SAVE","REQUEST_START","MENU_ITEMS","edit","AVATAR_PREVIEW_TEMPLATE","fileName","EDITOR_BUTTONS_TEMPLATE","cancel","save","themeColor","OrgChart","_events","_wrapper","_view","_dataSource","_contextMenu","autoBind","fetch","notify","form","buttonsTemplate","orientation","destroyContent","destroyTitle","uploadAvatar","none","_menu","_editWindow","_confirmDestroy","wrapper","setDataSource","setOptions","$parent","add","sync","cancelChanges","hasChanges","delete","remove","_edit","getCollapsedNodes","saveChanges","_avatarPreview","formWrapper","_form","pop","prepend","menuElement","menuOptions","_onMenuItemClick","activate","_onMenuOpen","deactivate","_onMenuClose","showOn","animation","MENU_TEMPLATE","dsOptions","unbind","_dataSourceChangeHandler","_errorHandler","_progressHandler","_requestStartHandler","_onDataSourceChange","_onDataSourceError","_progress","_onDataSourceRequestStart","_destroyItem","confirm","Confirm","okText","show","setTimeout","open","done","fail","formElement","windowElement","formOptions","_formOptions","Form","Window","modal","close","center","validate","parentsDs","optionsItems","optionsForm","editor","editorOptions","dataValueField","dataTextField","valuePrimitive","_uploadEditor","formData","action","document","activeElement","newItem","targetItem","_openMenu","toggle","progress","_triggerCollapse","_triggerExpand","_triggerSelect","appendTo","kendoUpload","async","multiple","fileInfo","files","raw","rawFile","reader","FileReader","validationErrors","onloadend","readAsDataURL","allowedExtensions","maxFileSize","plugin","kendo$1"],"mappings":"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","file":"kendo.orgchart.js","sourcesContent":["import './kendo.data.js';\nimport './kendo.treelist.js';\nimport './kendo.core.js';\nimport './kendo.html.button.js';\nimport './kendo.menu.js';\nimport './kendo.dialog.js';\nimport './kendo.form.js';\nimport './kendo.upload.js';\nimport './kendo.window.js';\n\n(function($, undefined$1) {\n    var extend = $.extend,\n\n        data = kendo.data,\n        Query = data.Query,\n        DataSource = data.DataSource,\n        TreeListDataSource = data.TreeListDataSource,\n        Model = data.Model,\n        ObservableArray = data.ObservableArray;\n\n    var OrgChartModel = Model.define({\n        id: \"id\",\n        parentId: \"parentId\",\n\n        fields: {\n            id: { type: \"number\", editable: false },\n            parentId: { type: \"number\", nullable: true },\n            name: { type: \"string\", validation: { required: true } },\n            title: { type: \"string\" },\n            avatar: { type: \"string\" }\n        },\n\n        init: function(value) {\n            Model.fn.init.call(this, value);\n\n            this._loaded = false;\n\n            if (!this.parentIdField) {\n                this.parentIdField = \"parentId\";\n            }\n            if (!this.nameField) {\n                this.nameField = \"name\";\n            }\n            if (!this.titleField) {\n                this.titleField = \"title\";\n            }\n            if (!this.avatarField) {\n                this.avatarField = \"avatar\";\n            }\n\n            this.parentId = this.get(this.parentIdField);\n            this.name = this.get(this.nameField);\n            this.title = this.get(this.titleField);\n            this.avatar = this.get(this.avatarField);\n        },\n\n        accept: function(data) {\n            Model.fn.accept.call(this, data);\n\n            this.parentId = this.get(this.parentIdField);\n            this.name = this.get(this.nameField);\n            this.title = this.get(this.titleField);\n            this.avatar = this.get(this.avatarField);\n        },\n\n        set: function(field, value, initiator) {\n            if (field == \"parentId\" && this.nameField != \"parentId\") {\n                this[this.parentIdField] = value;\n            }\n            if (field == \"name\" && this.nameField != \"name\") {\n                this[this.nameField] = value;\n            }\n            if (field == \"title\" && this.titleField != \"title\") {\n                this[this.titleField] = value;\n            }\n            if (field == \"avatar\" && this.avatarField != \"avatar\") {\n                this[this.avatarField] = value;\n            }\n\n            Model.fn.set.call(this, field, value, initiator);\n\n            if (field == this.parentIdField) {\n                this.parentId = this.get(this.parentIdField);\n            }\n            if (field == this.nameField) {\n                this.name = this.get(this.nameField);\n            }\n            if (field == this.titleField) {\n                this.title = this.get(this.titleField);\n            }\n            if (field == this.avatarField) {\n                this.avatar = this.get(this.avatarField);\n            }\n        },\n\n        loaded: function(value) {\n            if (value !== undefined$1) {\n                this._loaded = value;\n            } else {\n                return this._loaded;\n            }\n        },\n\n        shouldSerialize: function(field) {\n            return Model.fn.shouldSerialize.call(this, field) && field !== \"_loaded\" && field != \"_error\" && field != \"_edit\" && !(this.parentIdField !== \"parentId\" && field === \"parentId\");\n        }\n    });\n\n    OrgChartModel.parentIdField = \"parentId\";\n    OrgChartModel.nameField = \"name\";\n    OrgChartModel.titleField = \"title\";\n    OrgChartModel.avatarField = \"avatar\";\n\n    OrgChartModel.define = function(base, options) {\n        if (options === undefined$1) {\n            options = base;\n            base = OrgChartModel;\n        }\n\n        var parentId = options.parentId || \"parentId\";\n        var name = options.name || \"name\";\n        var title = options.title || \"title\";\n        var avatar = options.avatar || \"avatar\";\n\n        options.parentIdField = parentId;\n        options.nameField = name;\n        options.titleField = title;\n        options.avatarField = avatar;\n\n        var model = Model.define(base, options);\n\n        if (parentId) {\n            model.parentIdField = parentId;\n        }\n        if (name) {\n            model.nameField = name;\n        }\n        if (title) {\n            model.titleField = title;\n        }\n        if (avatar) {\n            model.avatarField = avatar;\n        }\n\n        return model;\n    };\n\n    var OrgChartDataSource = TreeListDataSource.extend({\n        init: function(options) {\n            TreeListDataSource.fn.init.call(this, extend(true, {}, {\n                schema: {\n                    modelBase: OrgChartModel,\n                    model: OrgChartModel\n                }\n            }, options));\n        },\n\n        groupedItemsTree: function(field) {\n            var map = this._childrenMap(this.view()),\n                defaultParentId = this._defaultParentId(),\n                currentChildren = map[defaultParentId] || [],\n                grouped = new Query(currentChildren).group({ field: field }).toArray();\n\n            return this._innerGroupedItemsTree(field, grouped, map);\n        },\n\n        itemChildren: function(item, fromView) {\n            var filter = {\n                field: \"parentId\",\n                operator: \"eq\",\n                value: null\n            };\n\n            var order = (this._sort && this._sort.length) ? this._sort : {};\n            var itemId, data;\n\n            if (fromView) {\n                data = this.view();\n            } else {\n                data = this.data();\n            }\n\n            if (!!item) {\n                itemId = item.get(\"id\");\n\n                if (itemId === undefined$1 || itemId === null || itemId === \"\") {\n                    return [];\n                }\n\n                filter.value = itemId;\n            }\n\n            data = new Query(data).filter(filter).sort(order).toArray();\n\n            return data;\n        },\n\n        itemsTree: function(item, field) {\n            var data = [],\n                current,\n                items = this.itemChildren(item, true),\n                children, i;\n\n            for (i = 0; i < items.length; i++) {\n                current = items[i];\n\n                if (current.get(\"expanded\")) {\n                    children = this.itemsTree(current, field);\n\n                    current = extend(true, {}, current);\n                    current.children = children;\n                }\n\n                current = extend(true, {}, current);\n                data.push(current);\n            }\n\n            if (field !== null && field !== undefined$1) {\n                data = new Query(data).group({ field: field }).toArray();\n            }\n\n            return data;\n        },\n\n        prospectParents: function(skippedItem, item) {\n            var data = [],\n                current,\n                items = this.itemChildren(item, false),\n                children, i;\n\n            for (i = 0; i < items.length; i++) {\n                current = items[i];\n\n                if (current.get(\"id\") === skippedItem.get(\"id\")) {\n                    continue;\n                }\n\n                data.push(current);\n\n                if (current.get(\"hasChildren\")) {\n                    children = this.prospectParents(skippedItem, current);\n\n                    data = data.concat(children);\n                }\n            }\n\n            return data;\n        },\n\n        read: function(data) {\n            return DataSource.fn.read.call(this, data).then(this._loadExpanded.bind(this, data));\n        },\n\n        toggleChildren: function(item, expand) {\n            var defaultPromise = $.Deferred().resolve().promise(),\n                loaded = item.loaded();\n\n            // reset error state\n            if (item._error) {\n                item.expanded = false;\n                item._error = undefined$1;\n            }\n\n            // toggle expanded state\n            if (typeof expand == \"undefined\") {\n                expand = !item.expanded;\n            }\n\n            item.expanded = expand;\n\n            if (!loaded) {\n                defaultPromise = this.load(item);\n            }\n\n            return defaultPromise;\n        },\n\n        _innerGroupedItemsTree: function(field, grouped, map) {\n            var group, i, j, itemId, innerGrouped, children, current, hasChildren;\n\n\n            for (i = 0; i < grouped.length; i++) {\n                group = grouped[i];\n                children = [];\n                hasChildren = false;\n\n                for (j = 0; j < group.items.length; j++) {\n                    current = group.items[j];\n\n                    if (!group.hasChildren && current.hasChildren) {\n                        group.hasChildren = true;\n                    }\n\n                    if (current.expanded) {\n                        group.expanded = true;\n                    }\n\n                    itemId = group.items[j].get(\"id\");\n                    children = children.concat(map[itemId]);\n                }\n\n                if (group.expanded) {\n                    innerGrouped = new Query(children).group({ field: field }).toArray();\n                    group.children = this._innerGroupedItemsTree(field, innerGrouped, map);\n                }\n\n                if (!group.hasChildren && children.length > 0) {\n                    group.hasChildren = true;\n                }\n            }\n\n            return grouped;\n        },\n\n        _loadExpanded: function(data) {\n            var items, i, current;\n\n            if (!data) {\n                return;\n            }\n\n            if (data.id !== null && data.id !== undefined$1) {\n                items = this._byParentId(data.id);\n            } else {\n                items = this._byParentId(this._defaultParentId());\n            }\n\n            for (i = 0; i < items.length; i++) {\n                current = items[i];\n\n                if (current.expanded && !current.loaded()) {\n                    this.toggleChildren(current, true);\n                }\n            }\n        }\n    });\n\n    OrgChartDataSource.create = function(options) {\n        if (Array.isArray(options)) {\n            options = { data: options };\n        } else if (options instanceof ObservableArray) {\n            options = { data: options.toJSON() };\n        }\n\n        if (!(options instanceof OrgChartDataSource) && options instanceof DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only OrgChartDataSource instances are supported\");\n        }\n\n        return options instanceof OrgChartDataSource ? options : new OrgChartDataSource(options);\n    };\n\n    extend(true, kendo.data, {\n        OrgChartModel: OrgChartModel,\n        OrgChartDataSource: OrgChartDataSource\n    });\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        keys = kendo.keys,\n        encode = kendo.htmlEncode,\n        extend = $.extend,\n\n        NS = \".kendoOrgChartView\",\n\n        BLUR = \"blur\",\n        CLICK = \"click\",\n        COLLAPSE = \"collapse\",\n        EXPAND = \"expand\",\n        FOCUS = \"focus\",\n        KEYDOWN = \"keydown\",\n        MENU = \"menu\",\n        SELECT = \"select\",\n\n        DOT = \".\",\n        SPACE = \" \",\n        COMMA = \",\",\n        HASH = \"#\",\n        STRING = \"string\",\n        TABINDEX = \"tabindex\",\n        ID = \"id\",\n        UID = \"uid\",\n        PX = \"px\",\n        PLUS = \"plus\",\n        MINUS = \"minus\",\n\n        ARIA_OWNS = \"aria-owns\",\n        ARIA_SELECTED = \"aria-selected\";\n\n    var ORGCHART_STYLES = {\n        wrapper: \"k-orgchart\",\n        container: \"k-orgchart-container\",\n        line: \"k-orgchart-line\",\n        lineVertical: \"k-orgchart-line-v\",\n        lineHorizontal: \"k-orgchart-line-h\",\n        lineVerticalTop: \"k-orgchart-line-v-top\",\n        group: \"k-orgchart-group\",\n        groupVertical: \"k-orgchart-group-v\",\n        groupHorizontal: \"k-orgchart-group-h\",\n        nodesGroup: \"k-orgchart-node-group\",\n        nodesGroupContainer: \"k-orgchart-node-group-container\",\n        nodeContainer: \"k-orgchart-node-container\",\n        node: \"k-orgchart-node\",\n        card: \"k-orgchart-card\",\n        cardMenu: \"k-orgchart-card-menu\",\n        button: \"k-orgchart-button\",\n        focused: \"k-focus\",\n        plusIconSelector: \".k-i-plus,.k-svg-i-plus\",\n        menuItem: \"k-item\",\n        avatarPreview: \"k-orgchart-avatar-preview\",\n        update: \"k-orgchart-update\",\n        cancel: \"k-orgchart-cancel\",\n        vstack: \"k-vstack\",\n        hstack: \"k-hstack\"\n    };\n\n    var ROOT_TEMPLATE = ({ label }) => `<div role=\"tree\" aria-orientation=\"horizontal\" aria-label=\"${encode(label)}\" class=\"k-orgchart-group k-orgchart-level-1 k-pos-absolute k-hstack k-justify-content-center\"></div>`;\n\n    var GROUP_TEMPLATE = ({ guid, level }) => `<div role=\"group\" id=\"${encode(guid)}\" class=\"k-orgchart-level-${encode(level)} k-orgchart-group k-pos-absolute k-justify-content-around\"></div>`;\n\n    var NODE_GROUP_CONTAINER = ({ hasChildren, guid, expanded, level }) => {\n        var result = '<div role=\"treeitem\" ';\n\n        if (hasChildren && guid) {\n            result += `aria-owns=${encode(guid)} `;\n\n            if (!!expanded) {\n                result += 'aria-expanded=\"true\" ';\n            } else {\n                result += 'aria-expanded=\"false\" ';\n            }\n        }\n\n        result += `aria-keyshortcuts=\"Enter\" aria-level=\"${encode(level)}\" aria-selected=\"false\" class=\"k-orgchart-node-group-container\">`;\n\n        return result;\n    };\n\n    var NODE_CONTAINER = '<div class=\"k-orgchart-node-container k-justify-content-around\"></div>';\n\n    var NODE_CONTAINER_GROUPED = '<div role=\"group\" class=\"k-orgchart-node-container k-justify-content-around k-hstack\"></div>';\n\n    var ITEM_TEMPLATE = '<div class=\"k-orgchart-node k-vstack k-align-items-center\"></div>';\n\n    var BUTTON_TEMPLATE = ({ label, buttonSign }) => kendo.html.renderButton(`<button aria-label=\"${encode(label)}\" tabindex=\"-1\" class=\"k-orgchart-button\"></button>`, {\n        icon: encode(buttonSign)\n    });\n\n    var CARD_TEMPLATE = ({ color, avatar, name, title, editable, menuLabel }) => {\n        var result = `<div class=\"k-card-body k-hstack\" ${kendo.attr(\"style-border-color\")}=\"${encode(color)}\">`;\n\n        if (!!avatar) {\n            result += '<div class=\"k-avatar k-avatar-solid-primary k-avatar-solid k-avatar-lg k-rounded-full\">' +\n                '<span class=\"k-avatar-image\">' +\n                    `<img alt=\"${encode(name)}\" src=\"${encode(avatar)}\">` +\n                '</span>' +\n            '</div>';\n        }\n\n        result += '<div class=\"k-vstack k-card-title-wrap\">' +\n        `<div class=\"k-card-title k-text-ellipsis\">${encode(name)}</div>`;\n\n        if (title) {\n            result += '<span class=\"k-spacer\"></span>' +\n            `<div class=\"k-card-subtitle k-text-ellipsis\">${encode(title)}</div>`;\n        }\n\n        result += '</div>';\n\n        if (editable) {\n            result += '<span class=\"k-spacer\"></span>' +\n            '<div class=\"k-card-body-actions\">' +\n                kendo.html.renderButton(`<button class=\"k-orgchart-card-menu\" role=\"button\" aria-label=\"${encode(menuLabel)}\" tabindex=\"-1\"></button>`, {\n                    icon: 'more-vertical',\n                    fillMode: \"flat\"\n                }) +\n            '</div>';\n        }\n\n        result += '</div>';\n\n        return result;\n    };\n\n    var CARD_WRAPPER = ({ uid, guid, hasChildren, expanded, cssClass, level }) => {\n        var result = `<div role=\"treeitem\" data-uid=\"${encode(uid)}\" `;\n\n        if (hasChildren && guid) {\n            result += `aria-owns=${encode(guid)} `;\n\n            if (!!expanded) {\n                result += 'aria-expanded=\"true\" ';\n            } else {\n                result += 'aria-expanded=\"false\" ';\n            }\n        }\n\n        result += 'class=\"k-orgchart-card k-card ';\n\n        if (!!cssClass) {\n            result += `${encode(cssClass)}`;\n        }\n\n        result += `\" aria-keyshortcuts=\"Enter\" aria-level=\"${encode(level)}\" aria-selected=\"false\"></div>`;\n\n        return result;\n    };\n\n    var GROUPED_CARD_WRAPPER = ({ uid, level, cssClass }) => `<div role=\"treeitem\" data-uid=\"${encode(uid)}\" aria-level=\"${encode(level)}\" aria-selected=\"false\" aria-keyshortcuts=\"Enter\" ` +\n    'class=\"k-orgchart-card k-card ' +\n    `${cssClass ? encode(cssClass) : ''}` +\n    '\"></div>';\n\n    var View = kendo.Observable.extend({\n        init: function(element, options) {\n            this.element = element;\n            this.options = options || {};\n\n            kendo.Observable.fn.init.call(this);\n\n            this._attachEvents();\n        },\n\n        events: [\n            COLLAPSE,\n            EXPAND,\n            SELECT,\n            MENU\n        ],\n\n        destroy: function() {\n            kendo.ui.Widget.fn.destroy.call(this);\n            this.element.off(NS);\n        },\n\n        collapse: function() {\n            return false;\n        },\n\n        expand: function() {\n            return false;\n        },\n\n        jqueryGroupElement: function(group) {\n            if (!group) {\n                return;\n            }\n\n            var jQueryElement = this._processItem(group);\n\n            if (!jQueryElement.hasClass(ORGCHART_STYLES.nodesGroupContainer)) {\n                jQueryElement = jQueryElement.closest(DOT + ORGCHART_STYLES.nodesGroupContainer);\n            }\n\n            return jQueryElement && jQueryElement.length ? jQueryElement : null;\n        },\n\n        jqueryItemElement: function(item) {\n            if (!item) {\n                return;\n            }\n\n            var jQueryElement = this._processItem(item);\n\n            if (!jQueryElement.hasClass(ORGCHART_STYLES.card)) {\n                jQueryElement = jQueryElement.closest(DOT + ORGCHART_STYLES.card);\n            }\n\n            return jQueryElement && jQueryElement.length ? jQueryElement : null;\n        },\n\n        refresh: function() {\n            this._cacheFocused();\n            this._clearContent();\n            this._generateItemsTree();\n            this._calculateLevels();\n            this._render();\n        },\n\n        select: function(item) {\n            var $item = this._getToSelect(item),\n                previousSelection = this.element.find(\"[tabindex=0]\");\n\n            if (!$item) {\n                return;\n            }\n\n            previousSelection.removeAttr(TABINDEX)\n                .removeClass(ORGCHART_STYLES.focused)\n                .attr(ARIA_SELECTED, false);\n\n            $item.attr(TABINDEX, \"0\")\n                .addClass(ORGCHART_STYLES.focused)\n                .trigger(\"focus\")\n                .attr(ARIA_SELECTED, true);\n        },\n\n        _attachEvents: function() {\n            var itemsSelector = DOT + ORGCHART_STYLES.card + COMMA + DOT + ORGCHART_STYLES.nodesGroupContainer;\n\n            this.element.on(KEYDOWN + NS, itemsSelector, this._onKeyDown.bind(this))\n                .on(CLICK + NS, itemsSelector, this._onSelect.bind(this))\n                .on(CLICK + NS, DOT + ORGCHART_STYLES.button, this._onButtonClick.bind(this))\n                .on(FOCUS + NS, itemsSelector, this._onFocus.bind(this))\n                .on(BLUR + NS, DOT + ORGCHART_STYLES.focused, this._onBlur.bind(this));\n        },\n\n        _cacheFocused: function() {\n            var focusableItem = this.element.find(\"[tabindex='0']\"),\n                focusableDataItem = this._dataItems(focusableItem);\n\n            if (!focusableItem.length || !focusableDataItem || !focusableDataItem.length || !!this._idTabIndex) {\n                return;\n            }\n\n            this._idTabIndex = focusableDataItem[0].get(ID);\n\n            if (focusableItem.hasClass(ORGCHART_STYLES.focused)) {\n                this._shouldRestoreSelection = true;\n            } else {\n                this._shouldRestoreSelection = false;\n            }\n        },\n\n        _calculateDimensions: function() {\n            var itemElement = this.element.find(DOT + this._selector).first();\n\n            if (!this._buttonHeight) {\n                this._buttonHeight = this.element.find(DOT + ORGCHART_STYLES.button).first().outerHeight();\n            }\n\n            if (!this._spacing) {\n                this._spacing = this.element.find(DOT + ORGCHART_STYLES.lineVertical).first().outerHeight();\n            }\n\n            if (!this._itemWidth) {\n                this._itemWidth = this._calculateItemWidth();\n            }\n\n            if (!this._itemHeight) {\n                this._itemHeight = itemElement.outerHeight(true);\n            }\n        },\n\n        _calculateItemWidth: function() {\n            return false;\n        },\n\n        _calculateLevel: function() {\n            return false;\n        },\n\n        _calculateLevels: function() {\n            return false;\n        },\n\n        _clearContent: function() {\n            this.element.empty();\n        },\n\n        _dataItem: function(item) {\n            var $item = this.jqueryItemElement(item);\n\n            if (!$item || !$item.data(UID)) {\n                return;\n            }\n\n            return this.dataSource.getByUid($item.data(UID));\n        },\n\n        _dataItems: function() {\n            return false;\n        },\n\n        _generateItemsTree: function() {\n            return false;\n        },\n\n        _getToSelect: function() {\n            return false;\n        },\n\n        _groupIsVertical: function() {\n            return false;\n        },\n\n        _keyCollapse: function() {\n            return false;\n        },\n\n        _keyExpand: function() {\n            return false;\n        },\n\n        _keyNext: function() {\n            return false;\n        },\n\n        _keyPrev: function() {\n            return false;\n        },\n\n        _keyEnter: function() {\n            return false;\n        },\n\n        _keyEscape: function() {\n            return false;\n        },\n\n        _keyEnd: function() {\n            var target = this.element.find(DOT + ORGCHART_STYLES.card).last(),\n                previous = this.element.find(\"[tabindex=0]\");\n\n\n            if (previous[0] === target[0]) {\n                return;\n            }\n\n            this.trigger(SELECT, {\n                item: target,\n                dataItems: [this._dataItem(target)]\n            });\n        },\n\n        _keyHome: function() {\n            var target = this.element.find(DOT + ORGCHART_STYLES.card).first(),\n                previous = this.element.find(\"[tabindex=0]\");\n\n\n            if (previous[0] === target[0]) {\n                return;\n            }\n\n            this.trigger(SELECT, {\n                item: target,\n                dataItems: [this._dataItem(target)]\n            });\n        },\n\n        _onBlur: function() {\n            this.element.find(DOT + ORGCHART_STYLES.focused).removeClass(ORGCHART_STYLES.focused);\n        },\n\n        _onKeyDown: function(e) {\n            var key = e.keyCode,\n                focused = this.element.find(\"[tabindex=0]\"),\n                isRtl = kendo.support.isRtl(this.element),\n                nextKey = isRtl ? [ keys.LEFT ] : [ keys.RIGHT ],\n                prevKey = isRtl ? [ keys.RIGHT ] : [ keys.LEFT ],\n                expandKey = keys.DOWN,\n                collapseKey = keys.UP,\n                groupIsVertical;\n\n            if (!focused) {\n                return;\n            }\n\n            groupIsVertical = this._groupIsVertical(focused);\n\n            if (groupIsVertical) {\n                nextKey.push(keys.DOWN);\n                prevKey.push(keys.UP);\n            }\n\n            if (key === keys.HOME) {\n                this._keyHome();\n            } else if (key === keys.END) {\n                this._keyEnd();\n            } else if (nextKey.indexOf(key) > -1) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this._keyNext(focused);\n            } else if (prevKey.indexOf(key) > -1) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this._keyPrev(focused);\n            } else if (key === expandKey) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this._keyExpand(focused);\n            } else if (key === collapseKey) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this._keyCollapse(focused);\n            } else if (key === keys.ENTER) {\n                this._keyEnter(focused);\n            } else if (key === keys.ESC) {\n                this._keyEscape(focused);\n            }\n        },\n\n        _onButtonClick: function(e) {\n            var that = this,\n                target = $(e.currentTarget),\n                shouldExpand = target.find(ORGCHART_STYLES.plusIconSelector).length > 0 ? true : false,\n                el = target.siblings(DOT + this._selector),\n                items = this._dataItems(el),\n                i;\n\n            if (shouldExpand) {\n                if (that.trigger(EXPAND, { item: el, dataItems: items })) {\n                    return;\n                }\n            } else {\n                if (that.trigger(COLLAPSE, { item: el, dataItems: items })) {\n                    return;\n                }\n            }\n\n            for (i = 0; i < items.length; i++) {\n                that.dataSource.toggleChildren(items[i], shouldExpand).then(this.refresh.bind(this));\n            }\n        },\n\n        _onFocus: function() {\n            return false;\n        },\n\n        _onSelect: function() {\n            return false;\n        },\n\n        _orientation: function() {\n            return false;\n        },\n\n        _processItem: function(el) {\n            var jQueryElement;\n\n            // Substitute with kendo.type() when merged and taken from master\n            if ($.type(el) === STRING) {\n                jQueryElement = this.element.find(el);\n            } else if (kendo.isElement(el)) {\n                jQueryElement = $(el);\n            } else if (el instanceof jQuery) {\n                jQueryElement = el;\n            }\n\n            return jQueryElement;\n        },\n\n        _render: function() {\n            var items = this._itemsTree,\n                root = $(kendo.template(ROOT_TEMPLATE)({ label: this.options.messages.label })),\n                wrapperContainer = this.element,\n                total = this._total,\n                widgetPadding = wrapperContainer.closest(DOT + ORGCHART_STYLES.wrapper).css(\"padding-left\"),\n                totalWidth;\n\n            wrapperContainer.append(root);\n\n            this._renderGroup(root, items, 1, this._total, 0);\n            totalWidth = total * this._itemWidth + (total - 1) * this._spacing;\n            root.width(totalWidth);\n            wrapperContainer.width(totalWidth + Number(widgetPadding.split(PX)[0]));\n\n            this._setHeight();\n            this._restoreSelection();\n        },\n\n        _renderNode: function(cardWrapperTemplate, contentTemplate, item, level, guid) {\n            var messages = this.options.messages,\n                borderColors = this.options.cardsColors || kendo.getSeriesColors(),\n                node = $(ITEM_TEMPLATE),\n                content, cardWrapper;\n\n            cardWrapper = $(cardWrapperTemplate(extend(true, {}, item, {\n                menuLabel: messages.menuLabel,\n                level: level,\n                guid: guid,\n                editable: !!this.options.editable,\n                color: borderColors[level - 1] || borderColors[0]\n            })));\n\n            if (item.attributes) {\n                cardWrapper.attr(JSON.parse(JSON.stringify(item.attributes)));\n            }\n\n            content = $(contentTemplate(extend(true, {}, item, {\n                menuLabel: messages.menuLabel,\n                level: level,\n                guid: guid,\n                editable: !!this.options.editable,\n                color: borderColors[level - 1] || borderColors[0]\n            })));\n\n            cardWrapper.append(content);\n            node.append(cardWrapper);\n\n            kendo.applyStylesFromKendoAttributes(node, [\"border-color\"]);\n\n            return node;\n        },\n\n        _renderGroup: function() {\n            return false;\n        },\n\n        _restoreSelection: function() {\n            var toFocusItem, toFocus;\n\n            if (!this._idTabIndex) {\n                toFocus = this.element.find(DOT + this._selector).first();\n\n                toFocus.attr(TABINDEX, \"0\");\n            } else {\n                toFocusItem = this.dataSource.get(this._idTabIndex);\n                toFocus = toFocusItem ? this._getToFocus(toFocusItem) : this.element.find(DOT + this._selector).first();\n                toFocus.attr(TABINDEX, \"0\");\n\n                this._idTabIndex = null;\n            }\n\n            if (this._shouldRestoreSelection) {\n                this._shouldRestoreSelection = false;\n                this._preventTriggerSelect = true;\n                toFocus.trigger(\"focus\");\n                toFocus.addClass(ORGCHART_STYLES.focused);\n            }\n        },\n\n        _setHeight: function() {\n            var selector = this._selector,\n                elements = this.element.find(DOT + ORGCHART_STYLES.button + COMMA + DOT + selector),\n                min = Number.MAX_VALUE, max = 0,\n                buttonHeight;\n\n            this._calculateDimensions();\n\n            buttonHeight = this._buttonHeight;\n            this.element.find(DOT + ORGCHART_STYLES.lineVerticalTop).height(this._spacing + buttonHeight / 2);\n\n            elements.each(function(i, el) {\n                var top = $(el).offset().top,\n                    bottom = top + $(el).outerHeight(true);\n\n                if (top < min) {\n                    min = top;\n                }\n\n                if (bottom > max) {\n                    max = bottom;\n                }\n            });\n\n            this.element.height(max - min);\n        }\n    });\n\n    var SingleView = View.extend({\n        init: function(element, options) {\n            View.fn.init.call(this, element, options);\n\n            this._selector = ORGCHART_STYLES.card;\n        },\n\n        collapse: function(item) {\n            var $item = this.jqueryItemElement(item);\n\n            if (!$item) {\n                return;\n            }\n\n            this.dataSource.toggleChildren(this._dataItem($item), false).then(this.refresh.bind(this));\n        },\n\n        expand: function(item) {\n            var $item = this.jqueryItemElement(item);\n\n            if (!$item) {\n                return;\n            }\n\n            this.dataSource.toggleChildren(this._dataItem($item), true).then(this.refresh.bind(this));\n        },\n\n        _calculateItemWidth: function() {\n            return this.element.find(DOT + this._selector).first().outerWidth(true);\n        },\n\n        _calculateLevel: function(items, level) {\n            var itemsLength = items.length,\n                maxColumnsPerLevel = this._maxColumnsPerLevel,\n                nestedChildren = false,\n                shouldReset = false,\n                previousMax, i, item;\n\n            if (!maxColumnsPerLevel[level] || maxColumnsPerLevel[level] < itemsLength) {\n                previousMax = maxColumnsPerLevel[level];\n                shouldReset = true;\n                maxColumnsPerLevel[level] = itemsLength;\n            }\n\n            for (i = 0; i < itemsLength; i++) {\n                item = items[i];\n\n                if (item.hasChildren) {\n                    nestedChildren = true;\n\n                    if (item.expanded) {\n                        this._calculateLevel(item.children, level + 1);\n                    }\n                }\n            }\n\n            if (!nestedChildren && shouldReset && level > 0) {\n                shouldReset = false;\n                maxColumnsPerLevel[level] = previousMax || 1;\n            }\n        },\n\n        _calculateLevels: function() {\n            var items = this._itemsTree,\n                maxColumnsPerLevel = this._maxColumnsPerLevel = [],\n                total = 1,\n                i;\n\n            this._calculateLevel(items, 0);\n\n            for (i = 0; i < maxColumnsPerLevel.length; i++) {\n                total = total * maxColumnsPerLevel[i];\n            }\n\n            this._total = total;\n        },\n\n        _dataItems: function(container) {\n            var item = this.dataSource.getByUid(container.data(UID));\n\n            if (item) {\n                return [item];\n            } else {\n                return null;\n            }\n        },\n\n        _generateItemsTree: function() {\n            this._itemsTree = this.dataSource.itemsTree();\n        },\n\n        _getToFocus: function(item) {\n            return this.element.find(\"[data-uid='\" + item.get(UID) + \"']\");\n        },\n\n        _getToSelect: function(el) {\n            return this.jqueryItemElement(el);\n        },\n\n        _groupIsVertical: function(focused) {\n            var itemGroup = focused.closest(DOT + ORGCHART_STYLES.group);\n\n            return itemGroup.hasClass(ORGCHART_STYLES.groupVertical);\n        },\n\n        _keyCollapse: function(focused) {\n            var dataItem = this._dataItem(focused),\n                parentUid, parentItem;\n\n            if (dataItem.expanded) {\n                if (!this.trigger(COLLAPSE, { item: focused, dataItems: [dataItem] })) {\n                    this.collapse(focused);\n                }\n            } else if (dataItem.parentId) {\n                parentUid = this.dataSource.get(dataItem.parentId).get(UID);\n                parentItem = this.element.find(\"[data-uid='\" + parentUid + \"']\");\n\n                this.trigger(SELECT, {\n                    item: parentItem,\n                    dataItems: [this._dataItem(parentItem)]\n                });\n            }\n        },\n\n        _keyEnter: function(focused) {\n            if (focused.find(DOT + ORGCHART_STYLES.cardMenu).length > 0) {\n                this.trigger(MENU, focused);\n            }\n        },\n\n        _keyExpand: function(focused) {\n            var dataItem = this._dataItem(focused),\n                ownedGroup = this.element.find(HASH + focused.attr(ARIA_OWNS)),\n                childItem;\n\n            if (!dataItem.hasChildren) {\n                return;\n            }\n\n            if (!dataItem.expanded) {\n                if (!this.trigger(EXPAND, { item: focused, dataItems: [dataItem] })) {\n                    this.expand(focused);\n                }\n            } else {\n                childItem = ownedGroup.find(DOT + this._selector).first();\n\n                this.trigger(SELECT, {\n                    item: childItem,\n                    dataItems: [this._dataItem(childItem)]\n                });\n            }\n        },\n\n        _keyNext: function(focused) {\n            var dataItem = this._dataItem(focused),\n                next = focused.parent().next(DOT + ORGCHART_STYLES.node).find(DOT + ORGCHART_STYLES.card),\n                ownedGroup = this.element.find(HASH + focused.attr(ARIA_OWNS));\n\n            if (!next.length && dataItem.hasChildren && dataItem.expanded) {\n                next = ownedGroup.find(DOT + ORGCHART_STYLES.card).first();\n            }\n\n            if (next.length === 0 || next.hasClass(ORGCHART_STYLES.focused)) {\n                return;\n            }\n\n            this.trigger(SELECT, {\n                item: next,\n                dataItems: [this._dataItem(next)]\n            });\n        },\n\n        _keyPrev: function(focused) {\n            var dataItem = this._dataItem(focused),\n                prev = focused.parent().prev(DOT + ORGCHART_STYLES.node).find(DOT + ORGCHART_STYLES.card),\n                parentUid;\n\n            if (!prev.length && dataItem.parentId) {\n                parentUid = this.dataSource.get(dataItem.parentId).get(UID);\n                prev = this.element.find(\"[data-uid='\" + parentUid + \"']\");\n            }\n\n            if (prev.length === 0 || prev.hasClass(ORGCHART_STYLES.focused)) {\n                return;\n            }\n\n            this.trigger(SELECT, {\n                item: prev,\n                dataItems: [this._dataItem(prev)]\n            });\n        },\n\n        _onFocus: function(e) {\n            var currentTarget = $(e.currentTarget),\n                target = $(e.target);\n\n            if (this._preventTriggerSelect) {\n                e.stopPropagation();\n                this._preventTriggerSelect = false;\n                return;\n            }\n\n            if (target.hasClass(ORGCHART_STYLES.cardMenu)) {\n                if (target.closest(\"[tabindex='0']\").length > 0) {\n                    e.stopPropagation();\n                    return;\n                } else {\n                    this._preventTriggerSelect = true;\n                }\n            }\n\n            if (!currentTarget.hasClass(ORGCHART_STYLES.card)) {\n                currentTarget = currentTarget.closest(DOT + ORGCHART_STYLES.card);\n            }\n\n            if (!currentTarget.hasClass(ORGCHART_STYLES.focused)) {\n                this.trigger(SELECT, {\n                    item: currentTarget,\n                    dataItems: [this._dataItem(currentTarget)]\n                });\n            }\n        },\n\n        _onSelect: function(e) {\n            var target = $(e.currentTarget),\n                item = target.hasClass(ORGCHART_STYLES.card) ? target : target.closest(DOT + ORGCHART_STYLES.card),\n                menuButtonTarget = $(e.target).hasClass(ORGCHART_STYLES.cardMenu) ? $(e.target) : $(e.target).closest(DOT + ORGCHART_STYLES.cardMenu);\n\n            if (menuButtonTarget.length > 0) {\n                return;\n            }\n\n            if (!target.hasClass(ORGCHART_STYLES.focused)) {\n                this.trigger(SELECT, {\n                    item: item,\n                    dataItems: [this._dataItem(item)]\n                });\n            }\n        },\n\n        _orientation: function(group, level, vertical) {\n            var vLine = $(\"<div>\").addClass(ORGCHART_STYLES.line + SPACE + ORGCHART_STYLES.lineVertical);\n\n            if (vertical && level > 1) {\n                group.addClass(ORGCHART_STYLES.groupVertical + SPACE + ORGCHART_STYLES.vstack);\n                group.find(DOT + ORGCHART_STYLES.nodeContainer).addClass(ORGCHART_STYLES.vstack);\n\n                if (group.find(DOT + ORGCHART_STYLES.button).length === 0 || group.find(DOT + ORGCHART_STYLES.card).length === 1) {\n                    group.find(DOT + ORGCHART_STYLES.card).before(vLine.clone());\n                    group.find(DOT + ORGCHART_STYLES.node).first().find(DOT + ORGCHART_STYLES.lineVertical).addClass(ORGCHART_STYLES.lineVerticalTop);\n                } else if (level > 1) {\n                    group.find(DOT + ORGCHART_STYLES.card).first().before(vLine.clone());\n                }\n            } else {\n                group.addClass(ORGCHART_STYLES.groupHorizontal + SPACE + ORGCHART_STYLES.hstack);\n                group.find(DOT + ORGCHART_STYLES.nodeContainer).addClass(ORGCHART_STYLES.hstack);\n\n                if (level > 1) {\n                    group.find(DOT + ORGCHART_STYLES.card).before(vLine.clone().addClass(ORGCHART_STYLES.lineVerticalTop));\n                }\n            }\n        },\n\n        _renderGroup: function(group, items, level, parentColumns, parentLeft) {\n            var vertical = true,\n                nodeContainer;\n\n                nodeContainer = $(NODE_CONTAINER).css(\"width\", \"100%\");\n                group.append(nodeContainer);\n                vertical = this._renderInner(nodeContainer, items, level, parentColumns, parentLeft);\n\n                this._orientation(group, level, vertical);\n        },\n\n        _renderInner: function(nodeContainer, items, level, parentColumns, parentLeft) {\n            var buttonTemplate = kendo.template(BUTTON_TEMPLATE),\n                cardWrapperTemplate = kendo.template(CARD_WRAPPER),\n                numberOfColumns = parentColumns / items.length,\n                vertical = true,\n                vLine = $(\"<div>\").addClass(ORGCHART_STYLES.line + SPACE + ORGCHART_STYLES.lineVertical),\n                hLine = $(\"<div>\").addClass(ORGCHART_STYLES.line + SPACE + ORGCHART_STYLES.lineHorizontal),\n                messages = this.options.messages,\n                i, item, guid, node, button, innerGroup, itemWidth, spacing, contentTemplate;\n\n            if (!this.options.template) {\n                contentTemplate = kendo.template(CARD_TEMPLATE);\n            } else if (typeof this.options.template === \"function\") {\n                contentTemplate = this.options.template;\n            } else {\n                contentTemplate = kendo.template(this.options.template);\n            }\n\n            for (i = 0; i < items.length; i++) {\n                item = items[i];\n                guid = kendo.guid();\n\n                node = this._renderNode(cardWrapperTemplate, contentTemplate, item, level, guid);\n\n                if (item.hasChildren) {\n                    node.append(vLine.clone());\n                    button = $(buttonTemplate({ buttonSign: item.expanded ? MINUS : PLUS, label: item.expanded ? messages.collapse : messages.expand }));\n                    node.append(button);\n                }\n\n                nodeContainer.append(node);\n\n                this._calculateDimensions();\n\n                itemWidth = this._itemWidth;\n                spacing = this._spacing;\n\n                if (item.hasChildren) {\n                    vertical = false;\n\n                    if (item.expanded) {\n                        innerGroup = this._renderInnerGroup(item, numberOfColumns, parentLeft, i, level, guid);\n                    }\n                }\n\n                if (!!innerGroup && innerGroup.hasClass(ORGCHART_STYLES.groupHorizontal) && item.expanded && !!item.children && item.children.length > 1) {\n                    button.after(hLine.clone().css({\n                        width: (numberOfColumns - numberOfColumns / item.children.length) * (itemWidth + spacing) + PX,\n                        \"margin-top\": this._buttonHeight / -2 + PX\n                    }));\n                }\n            }\n\n            if (numberOfColumns > 1 && !vertical) {\n                nodeContainer.find(DOT + ORGCHART_STYLES.node).width((numberOfColumns - 1) * (spacing + itemWidth));\n            }\n\n            return vertical;\n        },\n\n        _renderInnerGroup: function(item, numberOfColumns, parentLeft, i, level, guid) {\n            var itemWidth = this._itemWidth,\n                spacing = this._spacing,\n                width = numberOfColumns * itemWidth + (numberOfColumns - 1) * spacing,\n                left = (i * numberOfColumns * itemWidth) + parentLeft,\n                groupTemplate = kendo.template(GROUP_TEMPLATE),\n                offsetDirection = kendo.support.isRtl(this.element) ? \"right\" : \"left\",\n                top = level * (this._itemHeight + this._buttonHeight + spacing) + spacing * (level - 1) - this._buttonHeight / 2,\n                innerGroup;\n\n            if (i > 0) {\n                left += (i * numberOfColumns * spacing);\n            }\n\n            innerGroup = $(groupTemplate({\n                guid: guid,\n                level: level + 1\n            }));\n\n            innerGroup.css({\n                width: width + PX,\n                top: top + PX\n            });\n\n            innerGroup.css(offsetDirection, left + PX);\n\n            this.element.append(innerGroup);\n            this._renderGroup(innerGroup, item.children, level + 1, numberOfColumns, left);\n\n            return innerGroup;\n        }\n    });\n\n    var GroupedView = View.extend({\n        init: function(element, options) {\n            View.fn.init.call(this, element, options);\n\n            this._selector = ORGCHART_STYLES.nodesGroupContainer;\n        },\n\n        collapse: function(group) {\n            var $group = this.jqueryGroupElement(group),\n                dataItems, i;\n\n            if (!$group) {\n                return;\n            }\n\n            dataItems = this._dataItems($group);\n\n            for (i = 0; i < dataItems.length; i++) {\n                this.dataSource.toggleChildren(dataItems[i], false).then(this.refresh.bind(this));\n            }\n        },\n\n        expand: function(group) {\n            var $group = this.jqueryGroupElement(group),\n                dataItems, i;\n\n            if (!$group) {\n                return;\n            }\n\n            dataItems = this._dataItems($group);\n\n            for (i = 0; i < dataItems.length; i++) {\n                this.dataSource.toggleChildren(dataItems[i], true).then(this.refresh.bind(this));\n            }\n        },\n\n        _dataItems: function(container) {\n            var ds = this.dataSource,\n                dataItems = [],\n                items, item, current;\n\n            if (container.hasClass(ORGCHART_STYLES.card)) {\n                item = ds.getByUid(container.data(UID));\n\n                if (item) {\n                    dataItems.push(item);\n                }\n            } else if (container.hasClass(ORGCHART_STYLES.nodesGroupContainer)) {\n                this._groupFocused = true;\n\n                items = container.find(DOT + ORGCHART_STYLES.card);\n\n                items.each(function(i, item) {\n                    current = ds.getByUid(item.getAttribute(\"data-uid\"));\n\n                    if (current) {\n                        dataItems.push(current);\n                    }\n                });\n            }\n\n            return dataItems;\n        },\n\n        _calculateItemWidth: function() {\n            var itemElement = this.element.find(DOT + this._selector).first(),\n                cardWidth = this.element.find(DOT + ORGCHART_STYLES.card).first().outerWidth(true),\n                padding = Number(itemElement.css(\"padding-left\").split(PX)[0]),\n                border = Number(itemElement.css(\"border-left\").split(PX)[0]);\n\n            return cardWidth + 2 * padding + 2 * border;\n        },\n\n        _calculateLevel: function(groups, level) {\n            var groupsLength = groups.length,\n                nestedChildren = false,\n                maxColumns = 0,\n                currentLength, i, group;\n\n            this._maxColumnsPerLevel[level] = this._maxColumnsPerLevel[level] || 0;\n            this._maxGroups[level] = this._maxGroups[level] || 0;\n\n            for (i = 0; i < groupsLength; i++) {\n                group = groups[i];\n                currentLength = group.items.length;\n\n                if (currentLength > maxColumns) {\n                    maxColumns = currentLength;\n                }\n\n                group = groups[i];\n\n                if (group.hasChildren) {\n                    nestedChildren = true;\n\n                    if (group.expanded) {\n                        this._calculateLevel(group.children, level + 1);\n                    }\n                }\n            }\n\n            if (groupsLength > this._maxGroups[level]) {\n                this._maxGroups[level] = groupsLength;\n            }\n\n            if (!nestedChildren) {\n                maxColumns = 1;\n            }\n\n            if (maxColumns > this._maxColumnsPerLevel[level]) {\n                this._maxColumnsPerLevel[level] = maxColumns;\n            }\n        },\n\n        _calculateLevels: function() {\n            var items = this._itemsTree,\n                maxColumnsPerLevel = this._maxColumnsPerLevel = [],\n                maxGroups = this._maxGroups = [],\n                total = 1,\n                i, currentTotal;\n\n            this._calculateLevel(items, 0);\n\n            for (i = maxColumnsPerLevel.length - 1; i >= 0; i--) {\n                currentTotal = maxColumnsPerLevel[i] * maxGroups[i];\n\n                if (total > maxColumnsPerLevel[i]) {\n                    total = total * maxGroups[i];\n                } else if (total < currentTotal) {\n                    total = currentTotal;\n                }\n            }\n\n            this._total = total;\n        },\n\n        _generateItemsTree: function() {\n            this._itemsTree = this.dataSource.groupedItemsTree(this.options.groupField);\n        },\n\n        _getToFocus: function(item) {\n            if (!this._groupFocused) {\n                return this.element.find(\"[data-uid='\" + item.get(UID) + \"']\");\n            } else {\n                this._groupFocused = false;\n                return this.element.find(\"[data-uid='\" + item.get(UID) + \"']\").closest(DOT + ORGCHART_STYLES.nodesGroupContainer);\n            }\n        },\n\n        _getToSelect: function(el) {\n            var item = this.jqueryItemElement(el);\n\n            return item || this.jqueryGroupElement(el);\n        },\n\n        _groupIsVertical: function(focused) {\n            var itemGroup = focused.closest(DOT + ORGCHART_STYLES.nodeContainer);\n\n            return itemGroup.hasClass(ORGCHART_STYLES.vstack);\n        },\n\n        _keyCollapse: function(focused) {\n            var dataItems = [],\n                parentUid, expanded;\n\n            dataItems = this._dataItems(focused);\n\n            expanded = dataItems.some(function(item) {\n                return item.expanded;\n            });\n\n            if (expanded) {\n                if (focused.hasClass(ORGCHART_STYLES.card)) {\n                    focused = focused.closest(DOT + ORGCHART_STYLES.nodesGroupContainer);\n                    dataItems = this._dataItems(focused);\n                }\n\n                if (!this.trigger(COLLAPSE, { item: focused, dataItems: dataItems })) {\n                    this.collapse(focused);\n                }\n            } else if (dataItems[0].parentId) {\n                parentUid = this.dataSource.get(dataItems[0].parentId).get(UID);\n\n                this.trigger(SELECT, {\n                    item: this.element.find(\"[data-uid='\" + parentUid + \"']\").closest(DOT + this._selector),\n                    dataItems: dataItems\n                });\n            }\n        },\n\n        _keyEnter: function(focused) {\n            var toSelect,\n                dataItems = [];\n\n            if (focused.hasClass(ORGCHART_STYLES.card) && focused.find(DOT + ORGCHART_STYLES.cardMenu).length > 0) {\n                this.trigger(MENU, focused);\n            } else {\n                toSelect = focused.find(DOT + ORGCHART_STYLES.card).first();\n                dataItems = this._dataItems(toSelect);\n\n                this.trigger(SELECT, {\n                    item: toSelect,\n                    dataItems: dataItems\n                });\n            }\n        },\n\n        _keyEscape: function(focused) {\n            if (!focused.hasClass(ORGCHART_STYLES.card)) {\n                return;\n            }\n\n            var group = focused.closest(DOT + ORGCHART_STYLES.nodesGroupContainer),\n                dataItems = this._dataItems(group);\n\n            this.trigger(SELECT, {\n                item: group,\n                dataItems: dataItems\n            });\n        },\n\n        _keyExpand: function(focused) {\n            var ownedGroupId = focused.attr(ARIA_OWNS) || focused.closest(DOT + this._selector).attr(ARIA_OWNS),\n                ownedGroup = this.element.find(HASH + ownedGroupId),\n                dataItems = this._dataItems(focused),\n                hasChildren, expanded, item;\n\n            hasChildren = dataItems.some(function(item) {\n                return item.hasChildren;\n            });\n\n            if (!hasChildren) {\n                return;\n            }\n\n            expanded = dataItems.some(function(item) {\n                return item.expanded;\n            });\n\n            if (!expanded) {\n                if (focused.hasClass(ORGCHART_STYLES.card)) {\n                    focused = focused.closest(DOT + ORGCHART_STYLES.nodesGroupContainer);\n                    dataItems = this._dataItems(focused);\n                }\n\n                if (!this.trigger(EXPAND, { item: focused, dataItems: dataItems })) {\n                    this.expand(focused);\n                }\n            } else {\n                item = ownedGroup.find(DOT + this._selector).first();\n\n                this.trigger(SELECT, {\n                    item: item,\n                    dataItems: this._dataItems(item)\n                });\n            }\n        },\n\n        _keyNext: function(focused) {\n            var ownedGroup = this.element.find(HASH + focused.attr(ARIA_OWNS)),\n                dataItems = this._dataItems(focused),\n                hasChildren = dataItems.some(function(item) {\n                    return item.hasChildren;\n                }),\n                expanded = dataItems.some(function(item) {\n                    return item.expanded;\n                }),\n                next;\n\n                if (focused.hasClass(ORGCHART_STYLES.card)) {\n                    next = focused.parent().next(DOT + ORGCHART_STYLES.node).find(DOT + ORGCHART_STYLES.card);\n                } else {\n                    next = focused.parent().next(DOT + ORGCHART_STYLES.nodesGroup).find(DOT + ORGCHART_STYLES.nodesGroupContainer);\n                }\n\n            if (!next.length && hasChildren && expanded) {\n                next = ownedGroup.find(DOT + this._selector).first();\n            }\n\n            if (next.length === 0) {\n                return;\n            }\n\n            this.trigger(SELECT, {\n                item: next,\n                dataItems: this._dataItems(next)\n            });\n        },\n\n        _keyPrev: function(focused) {\n            var dataItems = this._dataItems(focused),\n                parentUid, prev;\n\n            if (focused.hasClass(ORGCHART_STYLES.card)) {\n                prev = focused.parent().prev(DOT + ORGCHART_STYLES.node).find(DOT + ORGCHART_STYLES.card);\n            } else {\n                prev = focused.parent().prev(DOT + ORGCHART_STYLES.nodesGroup).find(DOT + ORGCHART_STYLES.nodesGroupContainer);\n            }\n\n            if (!prev.length && dataItems[0].parentId) {\n                parentUid = this.dataSource.get(dataItems[0].parentId).get(UID);\n                prev = this.element.find(\"[data-uid='\" + parentUid + \"']\").closest(DOT + this._selector);\n            }\n\n            if (prev.length === 0) {\n                return;\n            }\n\n            this.trigger(SELECT, {\n                item: prev,\n                dataItems: this._dataItems(prev)\n            });\n        },\n\n        _onFocus: function(e) {\n            var target = $(e.target),\n                items, current;\n\n            if (this._preventTriggerSelect) {\n                e.stopPropagation();\n                this._preventTriggerSelect = false;\n                return;\n            }\n\n            if (target.hasClass(ORGCHART_STYLES.cardMenu)) {\n                if (target.closest(\"[tabindex='0']\").length > 0) {\n                    e.stopPropagation();\n                    return;\n                } else {\n                    this._preventTriggerSelect = true;\n                }\n            }\n\n            if (!target.hasClass(ORGCHART_STYLES.card) && !target.hasClass(ORGCHART_STYLES.nodesGroupContainer)) {\n                current = target.closest(DOT + ORGCHART_STYLES.card);\n\n                if (!current.length) {\n                    current = target.closest(DOT + ORGCHART_STYLES.nodesGroupContainer);\n                }\n\n                target = current;\n            }\n\n            if (target.length === 0) {\n                return;\n            }\n\n            items = this._dataItems(target);\n\n            if (!target.hasClass(ORGCHART_STYLES.focused)) {\n                e.stopPropagation();\n                this.trigger(SELECT, {\n                    item: target,\n                    dataItems: items\n                });\n            }\n        },\n\n        _onSelect: function(e) {\n            var target = $(e.target),\n                previousSelection = this.element.find(\"[tabindex=0]\"),\n                items, current;\n\n            if (!target.hasClass(ORGCHART_STYLES.card) && !target.hasClass(ORGCHART_STYLES.nodesGroupContainer)) {\n                current = target.closest(DOT + ORGCHART_STYLES.card);\n\n                if (!current.length) {\n                    current = target.closest(DOT + ORGCHART_STYLES.nodesGroupContainer);\n                }\n\n                target = current;\n            }\n\n            if (target.length === 0 || previousSelection[0] === target[0]) {\n                return;\n            }\n\n            items = this._dataItems(target);\n\n            this.trigger(SELECT, {\n                item: target,\n                dataItems: items\n            });\n        },\n\n        _orientation: function(group, level, vertical) {\n            var vLine = $(\"<div>\").addClass(ORGCHART_STYLES.line + SPACE + ORGCHART_STYLES.lineVertical + SPACE + ORGCHART_STYLES.lineVerticalTop);\n\n            group.addClass(ORGCHART_STYLES.hstack);\n\n            if (level > 1) {\n                group.find(DOT + ORGCHART_STYLES.nodesGroupContainer).before(vLine.clone());\n            }\n\n            if (vertical && level > 1) {\n                group.find(DOT + ORGCHART_STYLES.nodeContainer).removeClass(ORGCHART_STYLES.hstack);\n                group.find(DOT + ORGCHART_STYLES.nodeContainer).addClass(ORGCHART_STYLES.vstack);\n            } else {\n                group.addClass(ORGCHART_STYLES.groupHorizontal);\n            }\n        },\n\n        _renderChildren: function(item, index, numberOfColumns, level, nodesGroup, parentLeft, guid) {\n            var buttonTemplate = kendo.template(BUTTON_TEMPLATE),\n                groupTemplate = kendo.template(GROUP_TEMPLATE),\n                vLine = $(\"<div>\").addClass(ORGCHART_STYLES.line + SPACE + ORGCHART_STYLES.lineVertical),\n                hLine = $(\"<div>\").addClass(ORGCHART_STYLES.line + SPACE + ORGCHART_STYLES.lineHorizontal),\n                messages = this.options.messages,\n                vertical = true,\n                offsetDirection = kendo.support.isRtl(this.element) ? \"right\" : \"left\",\n                innerGroup, button, left, top, width, nodesGroupWidth, spacing;\n\n            if (item.hasChildren) {\n                vertical = false;\n                nodesGroup.append(vLine.clone());\n                button = $(buttonTemplate({ buttonSign: item.expanded ? MINUS : PLUS, label: item.expanded ? messages.collapse : messages.expand }));\n\n                nodesGroup.append(button);\n\n                this._calculateDimensions();\n\n                nodesGroupWidth = this._itemWidth;\n                spacing = this._spacing;\n\n                if (item.expanded) {\n                    width = nodesGroupWidth * numberOfColumns + (numberOfColumns - 1) * spacing;\n                    left = (index * numberOfColumns * nodesGroupWidth) + parentLeft;\n                    top = level * (this._itemHeight + this._buttonHeight + spacing) + spacing * (level - 1) - this._buttonHeight / 2;\n\n                    if (index > 0) {\n                        left += (index * numberOfColumns * spacing);\n                    }\n\n                    innerGroup = $(groupTemplate({\n                        guid: guid,\n                        level: level + 1\n                    }));\n\n                    innerGroup.css({\n                        width: width + PX,\n                        top: top + PX\n                    });\n\n                    innerGroup.css(offsetDirection, left + PX);\n\n                    this.element.append(innerGroup);\n                    this._renderGroup(innerGroup, item.children, level + 1, numberOfColumns, left);\n                }\n            }\n\n            if (!!innerGroup && item.expanded && !!item.children && item.children.length > 1) {\n                button.after(hLine.clone().css({\n                    width: (numberOfColumns - numberOfColumns / item.children.length) * (nodesGroupWidth + spacing) + PX,\n                    \"margin-top\": this._buttonHeight / -2 + PX\n                }));\n            }\n\n            return vertical;\n        },\n\n        _renderGroup: function(group, items, level, parentColumns, parentLeft) {\n            var vertical = true,\n                numberOfColumns = parentColumns / items.length,\n                nodeContainer, nodesGroup, i, guid, currentVertical, item;\n\n            for (i = 0; i < items.length; i++) {\n                guid = kendo.guid();\n                item = items[i];\n                nodeContainer = this._renderNodesContainer(group, extend(true, {}, item, {\n                    guid: guid,\n                    level: level\n                }));\n                nodesGroup = nodeContainer.closest(DOT + ORGCHART_STYLES.nodesGroup);\n\n                this._renderItems(nodeContainer, item.items, level, guid);\n                currentVertical = this._renderChildren(item, i, numberOfColumns, level, nodesGroup, parentLeft, guid);\n\n                if (vertical) {\n                    vertical = currentVertical;\n                }\n            }\n\n            var width = this._itemWidth * numberOfColumns + (numberOfColumns - 1) * this._spacing;\n            group.find(DOT + ORGCHART_STYLES.nodesGroup).width(width);\n\n            this._orientation(group, level, vertical);\n        },\n\n        _renderItems: function(nodeContainer, items, level, guid) {\n            var cardWrapperTemplate = kendo.template(GROUPED_CARD_WRAPPER),\n                i, item, node, contentTemplate;\n\n            if (!this.options.template) {\n                contentTemplate = kendo.template(CARD_TEMPLATE);\n            } else if (typeof this.options.template === \"function\") {\n                contentTemplate = this.options.template;\n            } else {\n                contentTemplate = kendo.template(this.options.template);\n            }\n\n            for (i = 0; i < items.length; i++) {\n                item = items[i];\n                node = this._renderNode(cardWrapperTemplate, contentTemplate, item, level, guid);\n                nodeContainer.append(node);\n            }\n        },\n\n        _renderNodesContainer: function(group, data) {\n            var nodeGroupContainerTemplate = kendo.template(NODE_GROUP_CONTAINER),\n                nodeGroup = $('<div class=\"k-orgchart-node-group k-align-items-center k-vstack\">'),\n                nodeContainer = $(NODE_CONTAINER_GROUPED).css(\"width\", \"100%\"),\n                nodeGroupContainer = $(nodeGroupContainerTemplate(data)),\n                groupHeaderTemplate;\n\n                if (typeof this.options.groupHeaderTemplate === \"function\") {\n                    groupHeaderTemplate = this.options.groupHeaderTemplate;\n                } else {\n                    groupHeaderTemplate = kendo.template(this.options.groupHeaderTemplate);\n                }\n\n            nodeGroupContainer.append(groupHeaderTemplate({\n                value: data.value,\n                field: data.field\n            }));\n            nodeGroupContainer.append(nodeContainer);\n\n            nodeGroup.append(nodeGroupContainer);\n            group.append(nodeGroup);\n\n            return nodeContainer;\n        }\n    });\n\n    kendo.orgChart = {\n        View: View,\n        SingleView: SingleView,\n        GroupedView: GroupedView\n    };\n})(window.kendo.jQuery);\n\nvar __meta__ = {\n    id: \"orgchart\",\n    name: \"OrgChart\",\n    category: \"web\",\n    description: \"The OrgChart widget displays hierarchical organizational structure.\",\n    depends: [ \"core\", \"menu\", \"dialog\", \"form\", \"upload\", \"window\", \"data\", \"treelist\", \"html.button\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        encode = kendo.htmlEncode,\n        DataBoundWidget = kendo.ui.DataBoundWidget,\n        OrgChartDataSource = kendo.data.OrgChartDataSource,\n        ContextMenu = kendo.ui.ContextMenu,\n\n        extend = $.extend,\n        isArray = Array.isArray,\n\n        NS = \".kendoOrgChart\",\n\n        CANCEL = \"cancel\",\n        CHANGE = \"change\",\n        CLICK = \"click\",\n        COLLAPSE = \"collapse\",\n        CREATE = \"create\",\n        DATABINDING = \"dataBinding\",\n        DATABOUND = \"dataBound\",\n        DELETE = \"delete\",\n        DESTROY = \"destroy\",\n        EDIT = \"edit\",\n        ERROR = \"error\",\n        EXPAND = \"expand\",\n        FOCUS = \"focus\",\n        KENDOKEYDOWN = \"kendoKeydown\",\n        MENU = \"menu\",\n        PROGRESS = \"progress\",\n        SAVE = \"save\",\n        SELECT = \"select\",\n        REQUEST_START = \"requestStart\",\n\n        DOT = \".\",\n        SPACE = \" \",\n        COMMA = \",\",\n        ID = \"id\",\n        UID = \"uid\",\n        ACTION = \"action\";\n\n    var ORGCHART_STYLES = {\n        wrapper: \"k-orgchart\",\n        container: \"k-orgchart-container\",\n        line: \"k-orgchart-line\",\n        lineVertical: \"k-orgchart-line-v\",\n        lineHorizontal: \"k-orgchart-line-h\",\n        lineVerticalTop: \"k-orgchart-line-v-top\",\n        group: \"k-orgchart-group\",\n        groupVertical: \"k-orgchart-group-v\",\n        groupHorizontal: \"k-orgchart-group-h\",\n        nodesGroup: \"k-orgchart-node-group\",\n        nodesGroupContainer: \"k-orgchart-node-group-container\",\n        nodeContainer: \"k-orgchart-node-container\",\n        node: \"k-orgchart-node\",\n        card: \"k-orgchart-card\",\n        cardMenu: \"k-orgchart-card-menu\",\n        button: \"k-orgchart-button\",\n        focused: \"k-focus\",\n        plusIcon: \"plus\",\n        menuItem: \"k-item\",\n        avatarPreview: \"k-orgchart-avatar-preview\",\n        update: \"k-orgchart-update\",\n        cancel: \"k-orgchart-cancel\",\n        vstack: \"k-vstack\",\n        hstack: \"k-hstack\",\n        closeButton: \"x\"\n    };\n\n    var MENU_ITEMS = {\n        edit: ({ edit }) => `<li data-action='edit'>${encode(edit)}</li>`,\n        create: ({ create }) => `<li data-action='create'>${encode(create)}</li>`,\n        destroy: ({ destroy }) => `<li data-action='destroy'>${encode(destroy)}</li>`\n    };\n\n    var MENU_TEMPLATE = (messages, editable) => {\n        var result = \"<ul>\";\n\n        if (editable === true) {\n            result += MENU_ITEMS.edit(messages);\n            result += MENU_ITEMS.create(messages);\n            result += MENU_ITEMS.destroy(messages);\n        } else {\n            if (editable.fields || editable.parent) {\n                result += MENU_ITEMS.edit(messages);\n            }\n            if (editable.create) {\n                result += MENU_ITEMS.create(messages);\n            }\n            if (editable.destroy) {\n                result += MENU_ITEMS.destroy(messages);\n            }\n        }\n\n        return result;\n    };\n\n    var GROUP_HEADER_TEMPLATE = ({ value, field }) => '<div>' +\n        `<div class=\"k-orgchart-node-group-title\">${encode(value)}</div>` +\n        `<div class=\"k-orgchart-node-group-subtitle\">${encode(field)}</div>` +\n    '</div>';\n\n    var AVATAR_PREVIEW_TEMPLATE = ({ avatar, name, destroy, fileName }) => '<div class=\"k-orgchart-avatar-preview k-hstack k-align-items-center k-pb-lg\">' +\n        '<div class=\"k-avatar k-avatar-solid-primary k-avatar-solid k-avatar-lg k-rounded-full\">' +\n            '<span class=\"k-avatar-image\">' +\n                `<img src=\"${encode(avatar)}\" alt=\"${encode(name)}\">` +\n            '</span>' +\n        '</div>' +\n        `<div class=\"k-px-md\">${encode(fileName)}</div>` +\n        kendo.html.renderButton(`<button aria-label=\"${encode(destroy)}\"></button>`, {\n            icon: 'trash',\n            fillMode: \"flat\"\n        }) +\n    '</div>';\n\n    var EDITOR_BUTTONS_TEMPLATE = ({ cancel, save }) => '<div class=\"k-edit-buttons\">' +\n        kendo.html.renderButton(`<button class=\"k-orgchart-update\">${encode(save)}</button>`, {\n                icon: \"save\",\n                themeColor: \"primary\"\n            }) +\n        kendo.html.renderButton(`<button class=\"k-orgchart-cancel\">${encode(cancel)}</button>`, {\n            icon: \"cancel-outline\"\n        }) +\n    '</div>';\n\n    var OrgChart = DataBoundWidget.extend({\n        init: function(element, options, events) {\n            if (isArray(options)) {\n                options = { dataSource: options };\n            }\n\n            options = options || {};\n\n            DataBoundWidget.fn.init.call(this, element, options);\n\n            if (events) {\n                this._events = events;\n            }\n\n            this._wrapper();\n            this._view();\n            this._dataSource();\n            this._contextMenu();\n\n            if (this.options.autoBind) {\n                this.dataSource.fetch();\n            }\n\n            kendo.notify(this);\n        },\n\n        options: {\n            name: \"OrgChart\",\n            autoBind: true,\n            cardsColors: null,\n            dataSource: {},\n            editable: {\n                create: true,\n                destroy: true,\n                fields: true,\n                form: {\n                    buttonsTemplate: () => \"\",\n                    orientation: \"vertical\"\n                },\n                parent: true\n            },\n            groupField: null,\n            groupHeaderTemplate: GROUP_HEADER_TEMPLATE,\n            template: null,\n            messages: {\n                label: \"Org Chart\",\n                edit: \"Edit\",\n                create: \"Create\",\n                destroy: \"Delete\",\n                destroyContent: \"Are you sure you want to delete this item and all its children?\",\n                destroyTitle: \"Delete item\",\n                cancel: \"Cancel\",\n                save: \"Save\",\n                menuLabel: \"Edit menu\",\n                uploadAvatar: \"Upload new avatar\",\n                parent: \"Parent\",\n                name: \"Name\",\n                title: \"Title\",\n                none: \"--None--\",\n                expand: \"expand\",\n                collapse: \"collapse\"\n            }\n        },\n\n        events: [\n            CANCEL,\n            CHANGE,\n            COLLAPSE,\n            CREATE,\n            DATABINDING,\n            DATABOUND,\n            DELETE,\n            EDIT,\n            EXPAND,\n            KENDOKEYDOWN,\n            SAVE,\n            SELECT\n         ],\n\n        destroy: function() {\n            if (this._menu) {\n                this._menu.destroy();\n            }\n            if (this._editWindow) {\n                this._editWindow.destroy();\n            }\n            if (this._confirmDestroy) {\n                this._confirmDestroy.destroy();\n            }\n\n            this.view.destroy();\n\n            DataBoundWidget.fn.destroy.call(this);\n            this.wrapper.off(NS);\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n            this._dataSource();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            DataBoundWidget.fn.setOptions.call(that, options);\n        },\n\n        append: function(item, parent) {\n            var that = this,\n                $parent = that.view.jqueryItemElement(parent),\n                parentItem = that.dataItem($parent);\n\n            if (!$parent || !parentItem) {\n                return;\n            }\n\n            if (!parentItem.loaded()) {\n                that.dataSource.read({ id: parentItem.id })\n                    .then(function() {\n                        that.dataSource.add(extend({}, item, { parentId: parentItem.id }));\n                        that.dataSource.sync();\n                    });\n            } else {\n                that.dataSource.add(extend({}, item, { parentId: parentItem.id }));\n                that.dataSource.sync();\n            }\n        },\n\n        cancelChanges: function() {\n            if (this.dataSource.hasChanges()) {\n                this.dataSource.cancelChanges();\n            }\n        },\n\n        collapse: function(item) {\n            return this.view.collapse(item);\n        },\n\n        dataItem: function(item) {\n            var $item = this.view.jqueryItemElement(item);\n\n            if (!$item || !$item.data(UID)) {\n                return;\n            }\n\n            return this.dataSource.getByUid($item.data(UID));\n        },\n\n        delete: function(item) {\n            var $item = this.view.jqueryItemElement(item);\n\n            if (!$item) {\n                return;\n            }\n\n            this.dataSource.remove(this.dataItem($item));\n            this.dataSource.sync();\n        },\n\n        edit: function(item) {\n            var $item = this.view.jqueryItemElement(item),\n                dataItem = this.dataItem($item);\n\n            if (!$item || !dataItem) {\n                return;\n            }\n\n            this._edit(dataItem);\n        },\n\n        expand: function(item) {\n            return this.view.expand(item);\n        },\n\n        getCollapsedNodes: function() {\n            return this.wrapper.find(\"[aria-expanded='false']\");\n        },\n\n        items: function() {\n            return this.wrapper.find(DOT + ORGCHART_STYLES.card);\n        },\n\n        parent: function(item) {\n            var $item = this.view.jqueryItemElement(item),\n                id;\n\n            if (!$item) {\n                return;\n            }\n\n            id = $item.closest(DOT + ORGCHART_STYLES.group).attr(ID);\n\n            return this.wrapper.find(\"[aria-owns='\" + id + \"']\");\n        },\n\n        saveChanges: function() {\n            this.dataSource.sync();\n        },\n\n        select: function(item) {\n            var $item = this.view._getToSelect(item);\n\n            if (!$item) {\n                return;\n            } else {\n                return this.view.select($item);\n            }\n        },\n\n        _avatarPreview: function(item, fileName) {\n            var form = this._form,\n                avatar = item.avatar,\n                avatarRemove = function() {\n                    formWrapper.find(DOT + ORGCHART_STYLES.avatarPreview).remove();\n                    item.set(\"avatar\", null);\n                },\n                formWrapper, data;\n\n            if (!form) {\n                return;\n            }\n\n            if (!fileName) {\n                fileName = avatar.split('\\\\').pop().split('/').pop();\n\n                if (!fileName || fileName.indexOf('.') == -1) {\n                    fileName = item.name;\n                }\n            }\n\n            data = {\n                name: item.name,\n                avatar: avatar,\n                fileName: fileName,\n                destroy: this.options.messages.destroy\n            };\n\n            formWrapper = form.wrapper;\n            formWrapper.find(DOT + ORGCHART_STYLES.avatarPreview).remove();\n\n            formWrapper.find('[type=\"file\"]').closest(DOT + \"k-form-field\").prepend(kendo.template(AVATAR_PREVIEW_TEMPLATE)(data));\n            formWrapper.find(DOT + ORGCHART_STYLES.avatarPreview + SPACE + DOT + \"k-button\").on(CLICK, avatarRemove);\n        },\n\n        _contextMenu: function() {\n            var options = this.options,\n                editable = options.editable,\n                messages = options.messages,\n                menuOptions = {\n                    target: this.wrapper,\n                    filter: DOT + ORGCHART_STYLES.cardMenu,\n                    select: this._onMenuItemClick.bind(this),\n                    activate: this._onMenuOpen.bind(this),\n                    deactivate: this._onMenuClose.bind(this),\n                    showOn: \"click\",\n                    animation: false\n                },\n                menuElement;\n\n            if (editable === true ||\n                (editable !== false &&\n                    (editable.create || editable.destroy || editable.fields || editable.parent))) {\n                        menuElement = MENU_TEMPLATE(messages, editable);\n\n                        this._menu = new ContextMenu(menuElement, menuOptions);\n                    }\n        },\n\n        _dataSource: function() {\n            var ds = this.dataSource,\n                dsOptions = this.options.dataSource;\n\n            if (ds) {\n                ds.unbind(CHANGE, this._dataSourceChangeHandler);\n                ds.unbind(ERROR, this._errorHandler);\n                ds.unbind(PROGRESS, this._progressHandler);\n                ds.unbind(REQUEST_START, this._requestStartHandler);\n            }\n\n            this._dataSourceChangeHandler = this._onDataSourceChange.bind(this);\n            this._errorHandler = this._onDataSourceError.bind(this);\n            this._progressHandler = this._progress.bind(this);\n            this._requestStartHandler = this._onDataSourceRequestStart.bind(this);\n\n            ds = this.dataSource = OrgChartDataSource.create(dsOptions);\n\n            ds.bind(CHANGE, this._dataSourceChangeHandler);\n            ds.bind(ERROR, this._errorHandler);\n            ds.bind(PROGRESS, this._progressHandler);\n            ds.bind(REQUEST_START, this._requestStartHandler);\n\n            this.view.dataSource = ds;\n        },\n\n        _destroyItem: function(item) {\n            var that = this,\n                el = $(\"<div></div>\"),\n                messages = that.options.messages,\n                restoreFocus = function() {\n                    that.wrapper\n                        .find(DOT + ORGCHART_STYLES.card + \"[tabindex=0]\" + COMMA + DOT + ORGCHART_STYLES.nodesGroup + \"[tabindex=0]\")\n                        .addClass(ORGCHART_STYLES.focused)\n                        .trigger(\"focus\");\n                },\n                confirm = this._confirmDestroy = new kendo.ui.Confirm(el, {\n                    title: messages.destroyTitle,\n                    content: messages.destroyContent,\n                    messages: {\n                      okText: messages.destroy,\n                      cancel: messages.cancel\n                    },\n                    show: function() {\n                        setTimeout(function() {\n                            confirm.element.trigger(\"focus\");\n                        });\n                    }\n                });\n\n            confirm.open();\n\n            confirm.result.done(function() {\n                if (!that.trigger(DELETE, { dataItem: item })) {\n                    that.dataSource.remove(item);\n                    that.dataSource.sync();\n                }\n\n                that.view._shouldRestoreSelection = true;\n                that.view._restoreSelection();\n            });\n\n            confirm.result.fail(restoreFocus);\n        },\n\n        _edit: function(dataItem) {\n            var that = this,\n                formElement = $(\"<div>\"),\n                windowElement = $(\"<div>\"),\n                messages = this.options.messages,\n                formOptions = this._formOptions(dataItem),\n                save;\n\n            if (!formOptions) {\n                return;\n            }\n\n            that._form = new kendo.ui.Form(formElement, formOptions);\n\n            if (!!dataItem.avatar) {\n                that._avatarPreview(dataItem);\n            }\n\n            windowElement.append(formElement);\n\n            that._editWindow = new kendo.ui.Window(windowElement, {\n                title: messages.edit,\n                width: \"380 px\",\n                modal: true,\n                close: function(e) {\n                    if (!save) {\n                        if (!that.trigger(CANCEL, { dataItem: dataItem })) {\n                            that.cancelChanges();\n                        } else {\n                            e.preventDefault();\n                        }\n                    } else {\n                        save = false;\n                    }\n                },\n                deactivate: function() {\n                    that._editWindow.wrapper.off(CLICK);\n                    that._editWindow.destroy();\n                    that._editWindow = null;\n                    that.view._restoreSelection();\n                }\n            });\n\n            windowElement.after(kendo.template(EDITOR_BUTTONS_TEMPLATE)({\n                save: messages.save,\n                cancel: messages.cancel\n            }));\n\n            that._editWindow.center().open();\n\n            that._editWindow.wrapper.on(CLICK, DOT + ORGCHART_STYLES.update, function() {\n                if (that._form.validate()) {\n                    save = true;\n\n                    if (!that.trigger(SAVE, { dataItem: dataItem })) {\n                        that._editWindow.close();\n                        that.saveChanges();\n                    }\n                }\n            });\n\n            that._editWindow.wrapper.on(CLICK, DOT + ORGCHART_STYLES.cancel, function() {\n                that._editWindow.close();\n            });\n        },\n\n        _formOptions: function(item) {\n            var options = this.options,\n                messages = options.messages,\n                optionsForm = options.editable.form,\n                items = [],\n                parentsDs, optionsItems;\n\n            if (optionsForm) {\n                optionsItems = optionsForm.items;\n            }\n\n            if ((!optionsItems || optionsItems.length === 0) &&\n                (options.editable === true || (options.editable && options.editable.parent))) {\n\n                parentsDs = [{\n                    id: null,\n                    name: messages.none\n                }].concat(this.dataSource.prospectParents(item));\n\n                items.push({\n                    field: \"parentId\",\n                    editor: \"DropDownList\",\n                    label: messages.parent,\n                    editorOptions: {\n                        dataSource: parentsDs,\n                        dataValueField: \"id\",\n                        dataTextField: \"name\",\n                        valuePrimitive: true\n                    }\n                });\n            }\n\n            if ((!optionsItems || optionsItems.length === 0) &&\n                (options.editable === true || (options.editable && options.editable.fields))) {\n\n                items = items.concat([{\n                    field: \"name\",\n                    label: messages.name,\n                    validation: { required: true }\n                }, {\n                    field: \"title\",\n                    label: messages.title\n                }, {\n                    field: \"avatar\",\n                    label: messages.uploadAvatar,\n                    editor: this._uploadEditor.bind(this, item)\n                }]);\n            }\n\n            if (optionsForm) {\n                delete optionsForm.formData;\n            }\n\n            if (items.length > 0 || (optionsItems && optionsItems.length > 0)) {\n                return extend(true, {}, {\n                    formData: item,\n                    items: items\n                }, optionsForm);\n            } else {\n                return false;\n            }\n        },\n\n        _onDataSourceChange: function(e) {\n            if (e.action === \"add\" || e.action === \"itemchange\" && this._editWindow) {\n                return;\n            }\n\n            if (!e.action || e.action === \"sync\") {\n                if (this.trigger(DATABINDING, e)) {\n                    this._progress(false);\n                    return;\n                }\n            }\n\n            this._progress(true);\n            this.view.refresh();\n\n            if (!e.action || e.action === \"sync\") {\n                this.trigger(DATABOUND);\n            }\n\n            this._progress(false);\n        },\n\n        _onDataSourceError: function() {\n            this._progress(false);\n        },\n\n        _onDataSourceRequestStart: function() {\n            this.view._cacheFocused();\n        },\n\n        _onMenuClose: function() {\n            if ($(document.activeElement).closest(\"[role='alertdialog']\").length === 0) {\n                this.wrapper.find(\"[tabindex='0']\")\n                    .addClass(ORGCHART_STYLES.focused)\n                    .trigger(\"focus\");\n            }\n        },\n\n        _onMenuItemClick: function(e) {\n            var that = this,\n                targetItem = $(e.target).closest(DOT + ORGCHART_STYLES.node).find(DOT + ORGCHART_STYLES.card),\n                dataItem = that.dataItem(targetItem),\n                action = $(e.item).data(ACTION),\n                newItem;\n\n            if (!dataItem) {\n                return;\n            }\n\n            if (action === EDIT) {\n                if (!that.trigger(EDIT, { dataItem: dataItem })) {\n                    that._edit(dataItem);\n                }\n            } else if (action === CREATE) {\n                if (!that.trigger(CREATE, { dataItem: dataItem })) {\n                    if (!dataItem.loaded()) {\n                        that.dataSource.read({ id: dataItem.id })\n                            .then(function() {\n                                newItem = that.dataSource.add({\n                                    parentId: dataItem.id\n                                });\n\n                                that._edit(newItem);\n                            });\n                    } else {\n                        newItem = that.dataSource.add({\n                            parentId: dataItem.id\n                        });\n\n                        that._edit(newItem);\n                    }\n                }\n            } else if (action === DESTROY) {\n                that._destroyItem(dataItem);\n            }\n        },\n\n        _onMenuOpen: function() {\n            this.view._cacheFocused();\n            this.wrapper.find(DOT + ORGCHART_STYLES.focused).removeClass(ORGCHART_STYLES.focused);\n            this._menu.element.find(DOT + ORGCHART_STYLES.menuItem).first().trigger(FOCUS);\n        },\n\n        _openMenu: function(focused) {\n            if (this._menu) {\n                this._menu.open(focused.find(DOT + ORGCHART_STYLES.cardMenu));\n            }\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.container, toggle);\n        },\n\n        _triggerCollapse: function(e) {\n            if (this.trigger(COLLAPSE, { item: e.item, dataItems: e.dataItems })) {\n                e.preventDefault();\n            }\n        },\n\n        _triggerExpand: function(e) {\n            if (this.trigger(EXPAND, { item: e.item, dataItems: e.dataItems })) {\n                e.preventDefault();\n            }\n        },\n\n        _triggerSelect: function(e) {\n            if (!this.trigger(SELECT, { item: e.item, dataItems: e.dataItems })) {\n                this.view.select(e.item);\n                this.trigger(CHANGE, { item: e.item, dataItems: e.dataItems });\n            }\n        },\n\n        _uploadEditor: function(item, container) {\n            var that = this;\n\n            $('<input type=\"file\">')\n                .appendTo(container)\n                .kendoUpload({\n                    async: false,\n                    multiple: false,\n                    select: function(e) {\n                        var fileInfo = e.files[0];\n                        var raw = fileInfo.rawFile;\n                        var reader = new FileReader();\n\n                        if (fileInfo.validationErrors && fileInfo.validationErrors.length > 0) {\n                            return;\n                        }\n\n                        if (raw) {\n                            reader.onloadend = function() {\n                                item.set(\"avatar\", this.result);\n                                that._avatarPreview(item, raw.name);\n                            };\n\n                          reader.readAsDataURL(raw);\n                        }\n                    },\n                    validation: {\n                        allowedExtensions: [\".gif\", \".jpg\", \".png\"],\n                        maxFileSize: 1048576\n                    }\n                });\n        },\n\n        _view: function() {\n            if (this.options.groupField !== null && this.options.groupField !== undefined$1) {\n                this.view = new kendo.orgChart.GroupedView(this.container, this.options);\n            } else {\n                this.view = new kendo.orgChart.SingleView(this.container, this.options);\n            }\n\n            this.view.bind(SELECT, this._triggerSelect.bind(this));\n            this.view.bind(EXPAND, this._triggerExpand.bind(this));\n            this.view.bind(COLLAPSE, this._triggerCollapse.bind(this));\n            this.view.bind(MENU, this._openMenu.bind(this));\n\n        },\n\n        _wrapper: function() {\n            var container = $(\"<div class='k-orgchart-container'>\");\n\n            this.wrapper = this.element;\n            this.container = container;\n\n            this.wrapper.addClass(ORGCHART_STYLES.wrapper);\n            this.wrapper.append(container);\n        }\n    });\n\n    kendo.ui.plugin(OrgChart);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}