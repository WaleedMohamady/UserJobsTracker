{"version":3,"sources":["raw-mjs/kendo.autocomplete.js"],"names":["$","kendo","jQuery","addInputPrefixSuffixContainers","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefixContainer","suffixContainer","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","__meta__","id","name","category","description","depends","features","undefined$1","window","encode","htmlEncode","support","caret","activeElement","_activeElement","placeholderSupported","placeholder","ui","List","keys","DataSource","data","ARIA_DISABLED","ARIA_READONLY","CHANGE","DISABLED","READONLY","FOCUSED","HIDDENCLASS","STATEDISABLED","ns","HOVEREVENTS","indexOfWordAtCaret","caretIdx","text","substring","split","length","AutoComplete","extend","init","element","that","this","Array","isArray","dataSource","fn","call","attr","_wrapper","_loader","_clearButton","_dataSource","_ignoreCase","type","_popup","addClass","on","_keydown","bind","_keypress","_search","_prev","_accessor","_oldText","_placeholder","ev","filterInput","relatedTarget","_change","close","removeClass","autocomplete","role","_clear","_clearValue","_clearValueMouseDownHandler","_enable","_old","_initList","parents","is","enable","listView","e","preventDefault","_resetFocusItemHandler","_resetFocusItem","_inputValuesContainer","_loading","notify","_toggleCloseVisibility","_applyCssClasses","label","_label","_aria","enabled","suggest","groupTemplate","fixedGroupTemplate","dataTextField","minLength","enforceMinLength","delay","height","filter","ignoreCase","highlightFirst","animation","virtual","value","clearButton","autoWidth","popup","size","fillMode","rounded","currentTarget","classList","contains","_clearValueTrigger","_onActionSheetCreate","val","trigger","_onCloseButtonPressed","_refreshHandler","_unbindDataSource","_progressHandler","_showBusy","_errorHandler","_hideBusy","create","setDataSource","events","setOptions","listOptions","_listOptions","_accessors","skipUpdateOnBind","dataValueField","selectedItemChange","_editable","off","readonly","disable","_toggleHover","prop","current","focus","_deactivateItem","destroy","refresh","select","li","_select","search","word","_separator","accentFoldingFiltering","clearTimeout","_typingTimeout","wordAtCaret","_open","_mute","_filterSource","toLocaleLowerCase","toLowerCase","operator","field","one","_unifySeparators","idx","key","_last","words","wordIndex","selectionEnd","BACKSPACE","DELETE","view","inArray","ul","_text","indexOf","lastIndexOf","toString","push","join","_refreshFloatingLabel","_click","item","dataItem","dataItemByIndex","getElementIndex","_active","done","_blur","_clearText","noop","_highlightFirst","index","scrollTo","_listBound","action","flatView","groupsLength","_group","isActive","_renderFooter","_renderNoData","_toggleNoData","_toggleHeader","_resizePopup","position","_inputValue","_allowOpening","unbind","_touchScroller","reset","callback","_muted","_listChange","_selectValue","selectedDataItems","defaultSeparator","splice","replaceWordAtCaret","_defaultSeparator","_preselect","oldText","setValue","unifyType","valueUpdated","_typing","itemSelected","clearValueTrigger","typing","className","keyCode","visible","DOWN","_move","open","ESC","altKey","UP","HOME","END","ENTER","TAB","PAGEDOWN","PAGEUP","_hovered","direction","scrollWith","screenHeight","_busy","setTimeout","_hideClear","show","toggleClass","document","RegExp","candidate","preventShow","_showClear","DOMelement","parent","wrap","style","cssText","css","width","_focused","plugin","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","kendo$1"],"mappings":";;;;;;;;MAAA,wBACA,mCACA,yBAEA,IAAAA,EAAAC,MAAAC,OAEA,SAAAC,gCAAAC,OAAAA,EAAAC,QAAAA,EAAAC,QAAAA,EAAAC,mBAAAA,EAAAC,kBAAAA,IACA,IASAC,EACAC,EAVAC,EAAAL,EAAAM,cACAC,EAAAP,EAAAQ,cACAC,EAAAJ,EAAAK,UAAAL,EAAAM,KACAC,EAAAL,EAAAG,UAAAH,EAAAI,KAEAE,GADAX,EAAAA,GAAAD,EACAD,EAAAa,YACAC,EAAAD,EAAA,YAAAA,EAAA,aAAA,WAAA,aAEAE,EAAA,oDADA,YAAAF,EAAA,aAAA,sBAKAR,GAAAI,KACAN,EAAAJ,EAAAiB,SAAA,oBAEA,KACAb,EAAAT,EAAA,8CAAAoB,SACAb,EACAE,EAAAc,aAAAhB,GAEAE,EAAAe,UAAAnB,IAIAM,EAAAM,MACAR,EAAAgB,KAAAxB,MAAAwB,KAAAC,WAAA,CAAAT,KAAAN,EAAAM,QAGAN,EAAAK,UACAP,EAAAgB,KAAAxB,MAAAe,SAAAL,EAAAK,SAAAf,CAAA,CAAA,IAGAU,EAAAgB,WACA3B,EAAAqB,GAAAO,YAAAnB,IAIAI,GAAAK,KACAR,EAAAL,EAAAiB,SAAA,oBAEA,KACAZ,EAAAV,EAAA,8CAAAoB,SAAAS,SAAAxB,GACAG,EACAE,EAAAkB,YAAApB,GAEAE,EAAAmB,SAAAxB,IAIAQ,EAAAI,MACAP,EAAAe,KAAAxB,MAAAwB,KAAAC,WAAA,CAAAT,KAAAJ,EAAAI,QAGAJ,EAAAG,UACAN,EAAAe,KAAAxB,MAAAe,SAAAH,EAAAG,SAAAf,CAAA,CAAA,IAGAY,EAAAc,WACA3B,EAAAqB,GAAAE,aAAAb,IAIAN,EAAA0B,iBAAArB,EACAL,EAAA2B,iBAAArB,CACA,CAEA,IAAAsB,SAAA,CACAC,GAAA,eACAC,KAAA,eACAC,SAAA,MACAC,YAAA,kHACAC,QAAA,CAAA,QACAC,SAAA,CAAA,CACAL,GAAA,kBACAC,KAAA,kBACAE,YAAA,iDACAC,QAAA,CAAA,oBACA,CACAJ,GAAA,iBACAC,KAAA,cACAE,YAAA,6BACAC,QAAA,CAAA,mBAIA,SAAArC,EAAAuC,GACA,IAAAtC,EAAAuC,OAAAvC,MACAwC,EAAAxC,EAAAyC,WACAC,EAAA1C,EAAA0C,QACAC,EAAA3C,EAAA2C,MACAC,EAAA5C,EAAA6C,eACAC,EAAAJ,EAAAK,YACAC,EAAAhD,EAAAgD,GACAC,EAAAD,EAAAC,KACAC,EAAAlD,EAAAkD,KACAC,EAAAnD,EAAAoD,KAAAD,WACAE,EAAA,gBACAC,EAAA,gBACAC,EAAA,SACAC,EAAA,WACAC,EAAA,WACAC,EAAA,UAEAC,EAAA,WACAC,EAAA,aAGAC,EAAA,qBACAC,EAAA,aAAAD,EAAA,cAAAA,EAEA,SAAAE,EAAAC,EAAAC,EAAAvC,GACA,OAAAA,EAAAuC,EAAAC,UAAA,EAAAF,GAAAG,MAAAzC,GAAA0C,OAAA,EAAA,CACA,CAkBA,IAAAC,EAAApB,EAAAqB,OAAA,CACAC,KAAA,SAAAC,EAAAnE,GACA,IAAAD,EAAAqE,EAAAC,KAEAD,EAAAZ,GAAAA,EACAxD,EAAAsE,MAAAC,QAAAvE,GAAA,CAAAwE,WAAAxE,GAAAA,EAEA4C,EAAA6B,GAAAP,KAAAQ,KAAAN,EAAAD,EAAAnE,GAEAmE,EAAAC,EAAAD,SACAnE,EAAAoE,EAAApE,SAEA0C,YAAA1C,EAAA0C,aAAAyB,EAAAQ,KAAA,eACAlC,GACA0B,EAAAQ,KAAA,cAAA3E,EAAA0C,aAGA0B,EAAAQ,WACAR,EAAAS,UACAT,EAAAU,eAEAV,EAAAW,cACAX,EAAAY,cAEAb,EAAA,GAAAc,KAAA,OACAlF,EAAAqE,EAAArE,QAEAqE,EAAAc,SAEAf,EACAgB,SAAA,iBACAC,GAAA,UAAA5B,EAAAY,EAAAiB,SAAAC,KAAAlB,IACAgB,GAAA,WAAA5B,EAAAY,EAAAmB,UAAAD,KAAAlB,IACAgB,GAAA,QAAA5B,EAAAY,EAAAoB,QAAAF,KAAAlB,IACAgB,GAAA,QAAA5B,EAAAY,EAAAoB,QAAAF,KAAAlB,IACAgB,GAAA,QAAA5B,GAAA,WACAY,EAAAqB,MAAArB,EAAAsB,YACAtB,EAAAuB,SAAAvB,EAAAqB,MACArB,EAAAwB,cAAA,GACA7F,EAAAoF,SAAA9B,EACA,IACA+B,GAAA,WAAA5B,GAAA,SAAAqC,GACAzB,EAAA0B,aAAAD,EAAAE,gBAAA3B,EAAA0B,YAAA,KAIA1B,EAAA4B,UACA5B,EAAAwB,eACAxB,EAAA6B,QACAlG,EAAAmG,YAAA7C,GACA,IACAsB,KAAA,CACAwB,aA7EA,MA8EAC,KAAA,WACA,iBAAA,IAGAhC,EAAAiC,OAAAjB,GAAA,QAAA5B,EAAA,YAAAA,EAAAY,EAAAkC,YAAAhB,KAAAlB,IACAA,EAAAiC,OAAAjB,GAAA,YAAA5B,EAAAY,EAAAmC,4BAAAjB,KAAAlB,IACAA,EAAAoC,UAEApC,EAAAqC,KAAArC,EAAAsB,YAEAtB,EAAAwB,eAEAxB,EAAAsC,YAEAhH,EAAA0E,EAAAD,SAAAwC,QAAA,YAAAC,GAAA,cAGAxC,EAAAyC,QAAA,GAGAzC,EAAA0C,SAAAxB,KAAA,SAAA,SAAAyB,GAAAA,EAAAC,gBAAA,IAEA5C,EAAA6C,uBAAA7C,EAAA8C,gBAAA5B,KAAAlB,GAEAvE,+BAAA,CAAAC,OAAAsE,EAAArE,QAAAqE,EAAArE,QAAAC,QAAAoE,EAAApE,QAAAC,mBAAAmE,EAAA+C,sBAAAjH,kBAAAkE,EAAAgD,WAEAzH,EAAA0H,OAAAjD,GACAA,EAAAkD,yBACAlD,EAAAmD,mBAEAvH,EAAAwH,OACApD,EAAAqD,SAGArD,EAAAsD,OACA,EAEA1H,QAAA,CACA4B,KAAA,eACA+F,SAAA,EACAC,SAAA,EACAlH,SAAA,GACAmH,cAAA9E,GAAAZ,EAAAY,GACA+E,mBAAA/E,GAAAZ,EAAAY,GACAzC,cAAA,CACAe,WAAA,GAEAb,cAAA,CACAa,WAAA,GAEA0G,cAAA,GACAC,UAAA,EACAC,kBAAA,EACAC,MAAA,IACAC,OAAA,IACAC,OAAA,aACAC,YAAA,EACAC,gBAAA,EACAjH,UAAA,KACAqB,YAAA,GACA6F,UAAA,CAAA,EACAC,SAAA,EACAC,MAAA,KACAC,aAAA,EACAC,WAAA,EACAC,MAAA,KACAC,KAAA,SACAC,SAAA,QACAC,QAAA,SACAvB,MAAA,MAGAjB,4BAAA,SAAAV,GAGAA,GAAAA,EAAAmD,eAAAnD,EAAAmD,cAAAC,UAAAC,SAAA,iBAFA7E,KAGA8E,oBAAA,EAHA9E,KAKA8E,oBAAA,CAEA,EAEAC,qBAAA,WACA,IAAAhF,EAAAC,KAEAD,EAAA0B,cACA1B,EAAA0B,YACAV,GAAA,UAAA5B,EAAAY,EAAAiB,SAAAC,KAAAlB,IACAgB,GAAA,WAAA5B,EAAAY,EAAAmB,UAAAD,KAAAlB,IACAgB,GAAA,QAAA5B,EAAAY,EAAAoB,QAAAF,KAAAlB,IACAgB,GAAA,QAAA5B,EAAAY,EAAAoB,QAAAF,KAAAlB,IACAO,KAAA,CACAwB,aA1KA,MA2KAC,KAAA,WACA,iBAAA,IAGAhC,EAAAwE,MAAAtD,KAAA,YAAA,KACAlB,EAAA0B,YAAAuD,IAAAjF,EAAAD,QAAAkF,OACAjF,EAAA0B,YAAAwD,QAAA,QAAA,IAGAlF,EAAAwE,MAAAtD,KAAA,cAAA,KACAlB,EAAAD,QAAAmF,QAAA,QAAA,IAGA,EAEAC,sBAAA,WACA,IAAAnF,EAAAC,KAEAD,EAAA0B,aAAAvD,MAAA6B,EAAA0B,YAAA,IACA1B,EAAAD,QAAAkF,IAAAjF,EAAA0B,YAAAuD,MAEA,EAEAnE,OAAA,WACAtC,EAAA6B,GAAAS,OAAAR,KAAAL,MACAA,KAAAuE,MAAAzE,QAAAgB,SAAA,uBACA,EAEAJ,YAAA,WACA,IAAAX,EAAAC,KAEAD,EAAAI,YAAAJ,EAAAoF,gBACApF,EAAAqF,qBAEArF,EAAAsF,iBAAAtF,EAAAuF,UAAArE,KAAAlB,GACAA,EAAAwF,cAAAxF,EAAAyF,UAAAvE,KAAAlB,IAGAA,EAAAI,WAAA1B,EAAAgH,OAAA1F,EAAApE,QAAAwE,YACAc,KAAA,WAAAlB,EAAAsF,kBACApE,KAAA,QAAAlB,EAAAwF,cACA,EAEAG,cAAA,SAAAvF,GACAH,KAAArE,QAAAwE,WAAAA,EACAH,KAAAU,cAEAV,KAAAyC,SAAAiD,cAAA1F,KAAAG,WACA,EAEAwF,OAAA,CACA,OACA,QACA9G,EACA,SACA,YACA,cACA,aAGA+G,WAAA,SAAAjK,GACA,IAAAkK,EAAA7F,KAAA8F,aAAAnK,GAEA4C,EAAA6B,GAAAwF,WAAAvF,KAAAL,KAAArE,GAEAqE,KAAAyC,SAAAmD,WAAAC,GACA7F,KAAA+F,aACA/F,KAAAqD,QACArD,KAAAS,cACA,EAEAqF,aAAA,SAAAnK,GACA,IAAAkK,EAAAtH,EAAA6B,GAAA0F,aAAAzF,KAAAL,KAAA3E,EAAAuE,OAAAjE,EAAA,CACAqK,kBAAA,KAMA,OAHAH,EAAAI,eAAAJ,EAAAnC,cACAmC,EAAAK,mBAAA,KAEAL,CACA,EAEAM,UAAA,SAAAxK,GACA,IAAAoE,EAAAC,KACAF,EAAAC,EAAAD,QACApE,EAAAqE,EAAArE,QAAA0K,IAAAjH,GACAkH,EAAA1K,EAAA0K,SACAC,EAAA3K,EAAA2K,QAEAD,GAAAC,GAUA5K,EACAoF,SAAAwF,EAAApH,EAAA,IACA2C,YAAAyE,EAAA,GAAApH,GAEAY,EAAAQ,KAAAxB,EAAAwH,GACAhG,KAAAvB,EAAAsH,GACA/F,KAAA3B,EAAA2H,GACAhG,KAAA1B,EAAAyH,KAhBA3K,EACAmG,YAAA3C,GACA6B,GAAA3B,EAAAW,EAAAwG,cAEAzG,EAAA0G,KAAA1H,GAAA,GACA0H,KAAAzH,GAAA,GACAuB,KAAA3B,GAAA,GACA2B,KAAA1B,GAAA,IAYAmB,EAAAkD,wBACA,EAEArB,MAAA,WACA,IAAA7B,EAAAC,KACAyG,EAAA1G,EAAA0C,SAAAiE,QAEAD,GACAA,EAAA5E,YAnSA,cAsSA9B,EAAAwE,MAAA3C,QACA7B,EAAA4G,iBACA,EAEAC,QAAA,WACA,IAAA7G,EAAAC,KAEAD,EAAAD,QAAAsG,IAAAjH,GACAY,EAAAiC,OAAAoE,IAAAjH,GACAY,EAAArE,QAAA0K,IAAAjH,GAEAY,EAAA0B,aACA1B,EAAA0B,YAAA2E,IAAAjH,GAGAZ,EAAA6B,GAAAwG,QAAAvG,KAAAN,EACA,EAEA8G,QAAA,WACA7G,KAAAyC,SAAAoE,SACA,EAEAC,OAAA,SAAAC,GACA/G,KAAAgH,QAAAD,EACA,EAEAE,OAAA,SAAAC,GACA,IAIAxH,EAJAK,EAAAC,KACArE,EAAAoE,EAAApE,QACAqI,EAAArI,EAAAqI,WACAhH,EAAA+C,EAAAoH,aAEAC,EAAArH,EAAAI,WAAAxE,QAAAyL,uBACAtH,EAAAC,EAAA0B,aAAAvD,MAAA6B,EAAA0B,YAAA,GAAA1B,EAAA0B,YAAA1B,EAAAD,QAEAoH,EAAAA,GAAAnH,EAAAsB,YAEAgG,aAAAtH,EAAAuH,gBAEAtK,IACAkK,EAlUA,SAAA5H,EAAAC,EAAAvC,GACA,OAAAuC,EAAAE,MAAAzC,GAAAqC,EAAAC,EAAAC,EAAAvC,GACA,CAgUAuK,CAAAtJ,EAAA6B,GAAA,GAAAoH,EAAAlK,IAGA0C,EAAAwH,EAAAxH,SAEA/D,EAAAiI,mBAAAlE,GAAAA,GAAA/D,EAAAgI,aACA5D,EAAAyH,OAAA,EAEAzH,EAAA0H,OAAA,WACAzH,KAAAyC,SAAA2B,MAAA,GACA,IAEArE,EAAA2H,cAAA,CACAtD,MAAAJ,EAAAoD,EAAAF,EAAAS,kBAAAP,GAAAF,EAAAU,cAAAV,EACAW,SAAAlM,EAAAoI,OACA+D,MAAAnM,EAAA+H,cACAM,WAAAA,IAGAjE,EAAAgI,IAAA,QAAAhI,EAAAiI,iBAAA/G,KAAAlB,KAEAA,EAAAkD,wBACA,EAEAM,QAAA,SAAA2D,GACA,IASAe,EATAlI,EAAAC,KACAkI,EAAAnI,EAAAoI,MACA/D,EAAArE,EAAAsB,YACAvB,EAAAC,EAAAD,QAAA,GACAR,EAAArB,EAAA6B,GAAA,GACA9C,EAAA+C,EAAAoH,aACAiB,EAAAhE,EAAA3E,MAAAzC,GACAqL,EAAAhJ,EAAAC,EAAA8E,EAAApH,GACAsL,EAAAhJ,EAEA8H,EAAArH,EAAAI,WAAAxE,QAAAyL,uBAEAc,GAAA1J,EAAA+J,WAAAL,GAAA1J,EAAAgK,QAOA,iBAFAtB,EAAAA,GAAA,MAGAA,EAAA,KACAA,EAAAnH,EAAAI,WAAAsI,OAAAlK,EAAAmK,QAAAxB,EAAA,GAAAnH,EAAA4I,GAAA,MAGAzB,EAAAA,EAAAnH,EAAA6I,MAAA1B,GAAA,IAGA5H,GAAA,IACAA,GAAA8H,EAAAhD,EAAAuD,kBAAAP,GAAAhD,EAAAwD,eAAAiB,QAAAzB,EAAAF,EAAAS,kBAAAP,GAAAF,EAAAU,eAAA,GAIAK,GADAA,EAAA7D,EAAA5E,UAAA,EAAAF,GAAAwJ,YAAA9L,KACA,EAAAsC,GAAA2I,EAAAjL,EAAA0C,QAAAJ,EACA8E,EAAAgE,EAAAC,GAAA7I,UAAA,EAAAyI,GAEAf,IACAA,EAAAA,EAAA6B,YACAd,GAAAb,EAAAF,EAAAS,kBAAAP,GAAAF,EAAAU,eAAAiB,QAAAzB,EAAAhD,EAAAuD,kBAAAP,GAAAhD,EAAAwD,iBACA,IAGAU,EAAAhJ,GAFA4H,EAAAA,EAAA1H,UAAAyI,EAAA7D,EAAA1E,SAEAA,OAEA0E,GAAA8C,GAGAlK,GAAA,KAAAoL,EAAAA,EAAA1I,OAAA,IACA0I,EAAAY,KAAA,KAKAZ,EAAAC,GAAAjE,EAEArE,EAAAsB,UAAA+G,EAAAa,KAAAjM,GAAA,KAEA8C,IAAA5B,KACAD,EAAA6B,EAAAR,EAAAgJ,IA5CAvI,EAAAoI,MAAAvK,CA8CA,EAEAwG,MAAA,SAAAA,GACA,GAAAA,IAAAxG,EAOA,OAAAoC,KAAAqB,YANArB,KAAAyC,SAAA2B,MAAAA,GAEApE,KAAAqB,UAAA+C,GACApE,KAAAoC,KAAApC,KAAAqB,YACArB,KAAAsB,SAAAtB,KAAAqB,YAIArB,KAAAiD,yBACAjD,KAAAkJ,uBACA,EAEAC,OAAA,SAAAzG,GACA,IAAA0G,EAAA1G,EAAA0G,KACArJ,EAAAC,KACAF,EAAAC,EAAAD,QACAuJ,EAAAtJ,EAAA0C,SAAA6G,gBAAAvJ,EAAA0C,SAAA8G,gBAAAH,IAEA1G,EAAAC,iBAEA5C,EAAAyJ,SAAA,EAEAzJ,EAAAkF,QAAA,SAAA,CAAAoE,SAAAA,EAAAD,KAAAA,IACArJ,EAAA6B,SAGA7B,EAAAuB,SAAAxB,EAAAkF,MACAjF,EAAAiH,QAAAoC,GAAAK,MAAA,WACA1J,EAAA2J,QAEAzL,EAAA6B,EAAAA,EAAAkF,MAAAtF,OACA,IACA,EAEAiK,WAAAtO,EAAAuO,KAEAC,gBAAA,WACA,IAAAC,EAAA9J,KAAArE,QAAAsI,eAAA,GAAA,EAEAjE,KAAAyC,SAAAiE,MAAAoD,EACA,EAEAjH,gBAAA,WACA7C,KAAArE,QAAAwI,SACAnE,KAAAyC,SAAAsH,SAAA,GAGA/J,KAAA6J,iBACA,EAEAG,WAAA,WACA,IAOAC,EAPAlK,EAAAC,KACAuE,EAAAxE,EAAAwE,MACA5I,EAAAoE,EAAApE,QACA+C,EAAAqB,EAAAI,WAAA+J,WACAxK,EAAAhB,EAAAgB,OACAyK,EAAApK,EAAAI,WAAAiK,OAAArK,EAAAI,WAAAiK,OAAA1K,OAAA,EACA2K,EAAAtK,EAAAD,QAAA,KAAA5B,KAAA6B,EAAA0B,aAAA1B,EAAA0B,YAAA,KAAAvD,IAGA6B,EAAAuK,gBACAvK,EAAAwK,gBACAxK,EAAAyK,eAAA9K,GACAK,EAAA0K,gBAAAN,KAAAzK,GAEAK,EAAA2K,eAEAnG,EAAAoG,WAEAjL,IACA/D,EAAA4H,SAAA8G,GAAAtK,EAAA6K,eACA7K,EAAAwD,QAAA7E,EAAA,IAGAqB,EAAA8J,mBAGA9J,EAAAyH,QACAzH,EAAAyH,OAAA,EACAyC,EAAAlK,EAAA8K,gBAAA,OAAA,QAEA9K,EAAAuH,iBAAA+C,IACAJ,EAAA,SAGAvK,IACAK,EAAA8C,kBAEAlH,EAAAwI,SACApE,EAAAwE,MACAuG,OAAA,WAAA/K,EAAA6C,wBACAmF,IAAA,WAAAhI,EAAA6C,yBAIA2B,EAAA0F,KACAlK,EAAAuH,eAAA1J,GAGAmC,EAAAgL,gBACAhL,EAAAgL,eAAAC,QAGAjL,EAAAyF,YAEAzF,EAAAkF,QAAA,YACA,EAEAwC,MAAA,SAAAwD,GACAjL,KAAAkL,QAAA,EACAD,EAAA5K,KAAAL,MACAA,KAAAkL,QAAA,CACA,EAEAC,YAAA,YACAnL,KAAAwJ,SAAAxJ,KAAAF,QAAA,KAAA5B,OAEA8B,KAAAkL,QACAlL,KAAAoL,aAAApL,KAAAyC,SAAA4I,oBAAA,GAEA,EAEAD,aAAA,SAAA/B,GACA,IAAArM,EAAAgD,KAAAmH,aACA5H,EAAA,GAEA8J,IACA9J,EAAAS,KAAA4I,MAAAS,IAGA,OAAA9J,IACAA,EAAA,IAGAvC,IACAuC,EA7hBA,SAAAD,EAAAC,EAAA2H,EAAAlK,EAAAsO,GACA,IAAAlD,EAAA7I,EAAAE,MAAAzC,GAQA,OANAoL,EAAAmD,OAAAlM,EAAAC,EAAAC,EAAAvC,GAAA,EAAAkK,GAEAlK,GAAA,KAAAoL,EAAAA,EAAA1I,OAAA,IACA0I,EAAAY,KAAA,IAGAZ,EAAAa,KAAAqC,EACA,CAmhBAE,CAAAvN,EAAA+B,KAAAF,SAAA,GAAAE,KAAAqB,YAAA9B,EAAAvC,EAAAgD,KAAAyL,sBAGAzL,KAAAoB,MAAA7B,EACAS,KAAAqB,UAAA9B,GACAS,KAAAuB,cACA,EAEAyG,iBAAA,WAEA,OADAhI,KAAAqB,UAAArB,KAAAoE,QAAA3E,MAAAO,KAAAmH,cAAA8B,KAAAjJ,KAAAyL,sBACAzL,IACA,EAEA0L,WAAA,SAAAtH,EAAA7E,GACAS,KAAA4K,YAAArL,GACAS,KAAAqB,UAAA+C,GAEApE,KAAAoC,KAAApC,KAAA2L,QAAA3L,KAAAqB,YAEArB,KAAAyC,SAAAmJ,SAAAxH,GACApE,KAAAuB,cACA,EAEAI,QAAA,WACA,IAAA5B,EAAAC,KACAoE,EAAArE,EAAAiI,mBAAA5D,QACAa,EAAAb,IAAA7F,EAAAsN,UAAA9L,EAAAqC,YAAAgC,GAEA0H,EAAA7G,IAAAlF,EAAAgM,QACAC,EAAAjM,EAAAuB,WAAA8C,EACA6H,EAAAlM,EAAA+E,mBAEA/E,EAAAqC,KAAAgC,EACArE,EAAAuB,SAAA8C,EAEArE,EAAA0B,aAAAvD,MAAA6B,EAAA0B,YAAA,IACA1B,EAAAD,QAAAkF,IAAAjF,EAAA0B,YAAAuD,QAGA8G,IAAAE,GAAAC,GAEAlM,EAAAD,QAAAmF,QAAApG,GAGAoG,IAAAgH,GACAlM,EAAAkF,QAAApG,GAGAkB,EAAAmM,QAAA,EACAnM,EAAAkD,wBACA,EAEA5B,UAAA,SAAA+C,GACA,IAAArE,EAAAC,KACAF,EAAAC,EAAA0B,aAAAvD,MAAA6B,EAAA0B,YAAA,GAAA1B,EAAA0B,YAAA,GAAA1B,EAAAD,QAAA,GAEA,GAAAsE,IAAAxG,EAMA,OAFAwG,EAAAtE,EAAAsE,MAEAtE,EAAAqM,UAAAtD,QAAA,eAAA,GACAzE,IAAArE,EAAApE,QAAA0C,YACA,GAMA+F,EAbAtE,EAAAsE,MAAA,OAAAA,EAAA,GAAAA,EACArE,EAAAwB,cAcA,EAEAP,SAAA,SAAA0B,GACA,IAAA3C,EAAAC,KACAkI,EAAAxF,EAAA0J,QACA3J,EAAA1C,EAAA0C,SACA4J,EAAAtM,EAAAwE,MAAA8H,UACA5F,EAAAhE,EAAAiE,QAIA,GAFA3G,EAAAoI,MAAAD,EAEAA,IAAA1J,EAAA8N,KACAD,EACArM,KAAAuM,MAAA9F,EAAA,YAAA,cACA1G,EAAAqE,SACArE,EAAA2H,cAAA,CACAtD,MAAArE,EAAAiE,WAAAjE,EAAAqE,QAAAwD,cAAA7H,EAAAqE,QACAyD,SAAA9H,EAAApE,QAAAoI,OACA+D,MAAA/H,EAAApE,QAAA+H,cACAM,WAAAjE,EAAAiE,aACAyF,MAAA,WACA1J,EAAA8K,kBACA9K,EAAA8C,kBACA9C,EAAAwE,MAAAiI,OAEA,IAEA9J,EAAAC,sBACA,GAAAuF,IAAA1J,EAAAiO,IACAJ,GACA3J,EAAAC,iBACA5C,EAAA6B,SAEA7B,EAAAkC,mBAEA,GAAAS,EAAAgK,QAAAxE,IAAA1J,EAAAmO,IAAAN,EACA3J,EAAAC,iBACA5C,EAAA6B,aACA,GAAAsG,IAAA1J,EAAAmO,GACAN,GACArM,KAAAuM,MAAA9F,EAAA,YAAA,aAEA/D,EAAAC,sBACA,GAAAuF,IAAA1J,EAAAoO,KACA5M,KAAAuM,MAAA,mBACA,GAAArE,IAAA1J,EAAAqO,IACA7M,KAAAuM,MAAA,kBACA,GAAArE,IAAA1J,EAAAsO,OAAA5E,IAAA1J,EAAAuO,IAAA,CAMA,GAJA7E,IAAA1J,EAAAsO,OAAAT,GACA3J,EAAAC,iBAGA0J,GAAA5F,EAAA,CACA,IAAA4C,EAAA5G,EAAA6G,gBAAA7G,EAAA8G,gBAAA9C,IACA,GAAA1G,EAAAkF,QAAA,SAAA,CAAAoE,SAAAA,EAAAD,KAAA3C,IACA,OAGAzG,KAAAgH,QAAAP,EACA,CAEAzG,KAAA0J,OACA,MAAA,IAAA3J,EAAAwE,MAAA8H,WAAAnE,IAAA1J,EAAAwO,UAAA9E,IAAA1J,EAAAyO,OAQAlN,EAAAwE,MAAA2I,UAAA,EACAnN,EAAAoB,cATA,CACAuB,EAAAC,iBAEA,IAAAwK,EAAAjF,IAAA1J,EAAAwO,SAAA,GAAA,EACAvK,EAAA2K,WAAAD,EAAA1K,EAAA4K,eACA,CAMA,EAEAnM,UAAA,WACAlB,KAAAsB,SAAAtB,KAAAF,QAAAkF,MACAhF,KAAA+L,SAAA,CACA,EAEAQ,MAAA,SAAAtC,GACAjK,KAAAyC,SAAAwH,KAEAjK,KAAArE,QAAA4H,SACAvD,KAAAuD,QAAAvD,KAAAyC,SAAAiE,QAEA,EAEAlB,UAAA,WACA,IAAAzF,EAAAC,KACAqH,aAAAtH,EAAAuN,OACAvN,EAAAgD,SAAAjC,SAAA7B,GACAc,EAAAD,QAAAQ,KAAA,aAAA,GACAP,EAAAuN,MAAA,KACAvN,EAAAkD,wBACA,EAEAqC,UAAA,WACA,IAAAvF,EAAAC,KAEAD,EAAAuN,QAIAvN,EAAAuN,MAAAC,YAAA,WACAxN,EAAAD,QAAAQ,KAAA,aAAA,GACAP,EAAAgD,SAAAlB,YAAA5C,GACAc,EAAAyN,YACA,GAAA,KACA,EAEAjM,aAAA,SAAAkM,GACA,IAAArP,EAAA,CAIA,IAGAgG,EAHArE,EAAAC,KACAF,EAAAC,EAAAD,QACAzB,EAAA0B,EAAApE,QAAA0C,YAGA,GAAAA,EAAA,CAeA,GAdA+F,EAAAtE,EAAAkF,MAEAyI,IAAA7P,IACA6P,GAAArJ,GAGAqJ,IAEApP,EADA+F,IAAA/F,EACA+F,EAEA,IAIAA,IAAArE,EAAAqC,OAAAqL,EACA,OAGA3N,EAAA4N,YAAA,aAAAD,GACAzI,IAAA3G,GAEAA,GAAAyB,EAAA,KAAA6N,SAAAzP,eACAD,EAAA6B,EAAA,GAAA,EAAA,EAEA,CAhCA,CAiCA,EAEAqH,WAAA,WACA,IAAAnK,EAAAgD,KAAArE,QAAAqB,UACA,OAAAA,aAAAiD,MACA,IAAA2N,OAAA5Q,EAAAiM,KAAA,KAAA,MAEAjM,CACA,EAEAyO,kBAAA,WACA,IAAAzO,EAAAgD,KAAArE,QAAAqB,UACA,OAAAA,aAAAiD,MACAjD,EAAA,GAEAA,CACA,EAEA4N,YAAA,WACA,OAAA5K,KAAAF,QAAAkF,KACA,EAEA7D,QAAA,WACA,IAAApB,EAAAC,KACAqH,aAAAtH,EAAAuH,gBAEAvH,EAAAuH,eAAAiG,YAAA,WACAxN,EAAAqB,QAAArB,EAAAsB,cACAtB,EAAAqB,MAAArB,EAAAsB,YACAtB,EAAAkH,SAEA,GAAAlH,EAAApE,QAAAkI,MACA,EAEAmD,QAAA,SAAA6G,GACA,IAAA9N,EAAAC,KAGA,OAFAD,EAAAyJ,SAAA,EAEAzJ,EAAA0C,SAAAqE,OAAA+G,GAAApE,MAAA,WACA1J,EAAAyJ,SAAA,CACA,GACA,EAEAhJ,QAAA,WACAR,KAAA+C,SAAA1H,EAAA,wDAAA4D,EAAA,aAAAhC,YAAA+C,KAAAF,QACA,EAEAW,aAAA,WACAlC,EAAA6B,GAAAK,aAAAJ,KAAAL,MAEAA,KAAArE,QAAA0I,aACArE,KAAAgC,OAAA/E,YAAA+C,KAAAF,QAEA,EAEAyG,aAAA,SAAA7D,GACArH,EAAAqH,EAAAiC,eAAA+I,YA7zBA,UA6zBA,eAAAhL,EAAA9B,KACA,EAEAqC,uBAAA,WACA,IAAA6K,EAAA9N,KAAAF,QAAAyC,GAAA,cAAAvC,KAAAF,QAAAyC,GAAA,cAEAvC,KAAAoE,UAAA0J,EACA9N,KAAA+N,aAEA/N,KAAAwN,YAEA,EAEAjN,SAAA,WACA,IAGA7E,EAHAqE,EAAAC,KACAF,EAAAC,EAAAD,QACAkO,EAAAlO,EAAA,IAGApE,EAAAoE,EAAAmO,UAEA1L,GAAA,yBACA7G,EAAAoE,EAAAoO,KAAA,YAAAD,UAGAvS,EAAA4E,KAAA,YAAA,GAEA5E,EAAA,GAAAyS,MAAAC,QAAAJ,EAAAG,MAAAC,QACAtO,EAAAuO,IAAA,CACAC,MAAA,GACAxK,OAAAkK,EAAAG,MAAArK,SAGA/D,EAAAwO,SAAAxO,EAAAD,QACAC,EAAArE,QAAAA,EACAoF,SAAA,0BACAA,SAAAkN,EAAA7B,WACAtK,YAAA,yBACA,EAEAI,YAAA,WACAjC,KAAA8E,oBAAA,EACAvG,EAAA6B,GAAA6B,YAAA5B,KAAAL,MACAA,KAAAF,QAAA4G,OACA,IAGApI,EAAAkQ,OAAA7O,GAEArE,EAAAmT,cAAAC,eAAA,eAAA,YAEApT,EAAAmT,cAAAE,eAAA,eAAA,CAAA,CACAnI,KAAA,UACAoI,OAAAtT,EAAAmT,cAAAI,cAAAC,OAAA,CAAA,CAAA,OAAA,YAEA,CAz4BA,CAy4BAjR,OAAAvC,MAAAC,QACA,IAAAwT,QAAAzT,aAEAyT","file":"kendo.autocomplete.js","sourcesContent":["import './kendo.list.js';\nimport './kendo.mobile.scroller.js';\nimport './kendo.virtuallist.js';\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"autocomplete\",\n    name: \"AutoComplete\",\n    category: \"web\",\n    description: \"The AutoComplete widget provides suggestions depending on the typed text.It also allows multiple value entries.\",\n    depends: [ \"list\" ],\n    features: [ {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }, {\n        id: \"virtualization\",\n        name: \"VirtualList\",\n        description: \"Support for virtualization\",\n        depends: [ \"virtuallist\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        encode = kendo.htmlEncode,\n        support = kendo.support,\n        caret = kendo.caret,\n        activeElement = kendo._activeElement,\n        placeholderSupported = support.placeholder,\n        ui = kendo.ui,\n        List = ui.List,\n        keys = kendo.keys,\n        DataSource = kendo.data.DataSource,\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        FOCUSED = \"k-focus\",\n        SELECTED = \"k-selected\",\n        HIDDENCLASS = \"k-hidden\",\n        STATEDISABLED = \"k-disabled\",\n        AUTOCOMPLETEVALUE = \"off\",\n        HOVER = \"k-hover\",\n        ns = \".kendoAutoComplete\",\n        HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns;\n\n    function indexOfWordAtCaret(caretIdx, text, separator) {\n        return separator ? text.substring(0, caretIdx).split(separator).length - 1 : 0;\n    }\n\n    function wordAtCaret(caretIdx, text, separator) {\n        return text.split(separator)[indexOfWordAtCaret(caretIdx, text, separator)];\n    }\n\n    function replaceWordAtCaret(caretIdx, text, word, separator, defaultSeparator) {\n        var words = text.split(separator);\n\n        words.splice(indexOfWordAtCaret(caretIdx, text, separator), 1, word);\n\n        if (separator && words[words.length - 1] !== \"\") {\n            words.push(\"\");\n        }\n\n        return words.join(defaultSeparator);\n    }\n\n    var AutoComplete = List.extend({\n        init: function(element, options) {\n            var that = this, wrapper, disabled;\n\n            that.ns = ns;\n            options = Array.isArray(options) ? { dataSource: options } : options;\n\n            List.fn.init.call(that, element, options);\n\n            element = that.element;\n            options = that.options;\n\n            options.placeholder = options.placeholder || element.attr(\"placeholder\");\n            if (placeholderSupported) {\n                element.attr(\"placeholder\", options.placeholder);\n            }\n\n            that._wrapper();\n            that._loader();\n            that._clearButton();\n\n            that._dataSource();\n            that._ignoreCase();\n\n            element[0].type = \"text\";\n            wrapper = that.wrapper;\n\n            that._popup();\n\n            element\n                .addClass(\"k-input-inner\")\n                .on(\"keydown\" + ns, that._keydown.bind(that))\n                .on(\"keypress\" + ns, that._keypress.bind(that))\n                .on(\"input\" + ns, that._search.bind(that))\n                .on(\"paste\" + ns, that._search.bind(that))\n                .on(\"focus\" + ns, function() {\n                    that._prev = that._accessor();\n                    that._oldText = that._prev;\n                    that._placeholder(false);\n                    wrapper.addClass(FOCUSED);\n                })\n                .on(\"focusout\" + ns, function(ev) {\n                    if (that.filterInput && ev.relatedTarget === that.filterInput[0]) {\n                        return;\n                    }\n\n                    that._change();\n                    that._placeholder();\n                    that.close();\n                    wrapper.removeClass(FOCUSED);\n                })\n                .attr({\n                    autocomplete: AUTOCOMPLETEVALUE,\n                    role: \"combobox\",\n                    \"aria-expanded\": false\n                });\n\n            that._clear.on(\"click\" + ns + \" touchend\" + ns, that._clearValue.bind(that));\n            that._clear.on(\"mousedown\" + ns, that._clearValueMouseDownHandler.bind(that));\n            that._enable();\n\n            that._old = that._accessor();\n\n            that._placeholder();\n\n            that._initList();\n\n            disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            }\n\n            that.listView.bind(\"click\", function(e) { e.preventDefault(); });\n\n            that._resetFocusItemHandler = that._resetFocusItem.bind(that);\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._inputValuesContainer, suffixInsertAfter: that._loading });\n\n            kendo.notify(that);\n            that._toggleCloseVisibility();\n            that._applyCssClasses();\n\n            if (options.label) {\n                that._label();\n            }\n\n            that._aria();\n        },\n\n        options: {\n            name: \"AutoComplete\",\n            enabled: true,\n            suggest: false,\n            template: \"\",\n            groupTemplate: (data) => encode(data),\n            fixedGroupTemplate: (data) => encode(data),\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            },\n            dataTextField: \"\",\n            minLength: 1,\n            enforceMinLength: false,\n            delay: 200,\n            height: 200,\n            filter: \"startswith\",\n            ignoreCase: true,\n            highlightFirst: false,\n            separator: null,\n            placeholder: \"\",\n            animation: {},\n            virtual: false,\n            value: null,\n            clearButton: true,\n            autoWidth: false,\n            popup: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null,\n        },\n\n        _clearValueMouseDownHandler: function(ev) {\n            var that = this;\n\n            if (ev && ev.currentTarget && ev.currentTarget.classList.contains('k-clear-value')) {\n                that._clearValueTrigger = true;\n            } else {\n                that._clearValueTrigger = false;\n            }\n        },\n\n        _onActionSheetCreate: function() {\n            var that = this;\n\n            if (that.filterInput) {\n                that.filterInput\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"keypress\" + ns, that._keypress.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"paste\" + ns, that._search.bind(that))\n                    .attr({\n                        autocomplete: AUTOCOMPLETEVALUE,\n                        role: \"combobox\",\n                        \"aria-expanded\": false\n                    });\n\n                that.popup.bind(\"activate\", () => {\n                    that.filterInput.val(that.element.val());\n                    that.filterInput.trigger(\"focus\");\n                });\n\n                that.popup.bind(\"deactivate\", () => {\n                    that.element.trigger(\"focus\");\n                });\n            }\n        },\n\n        _onCloseButtonPressed: function() {\n            var that = this;\n\n            if (that.filterInput && activeElement() === that.filterInput[0]) {\n                that.element.val(that.filterInput.val());\n            }\n        },\n\n        _popup: function() {\n            List.fn._popup.call(this);\n            this.popup.element.addClass(\"k-autocomplete-popup\");\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that._unbindDataSource();\n            } else {\n                that._progressHandler = that._showBusy.bind(that);\n                that._errorHandler = that._hideBusy.bind(that);\n            }\n\n            that.dataSource = DataSource.create(that.options.dataSource)\n                .bind(\"progress\", that._progressHandler)\n                .bind(\"error\", that._errorHandler);\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n            this._dataSource();\n\n            this.listView.setDataSource(this.dataSource);\n        },\n\n        events: [\n            \"open\",\n            \"close\",\n            CHANGE,\n            \"select\",\n            \"filtering\",\n            \"dataBinding\",\n            \"dataBound\"\n        ],\n\n        setOptions: function(options) {\n            var listOptions = this._listOptions(options);\n\n            List.fn.setOptions.call(this, options);\n\n            this.listView.setOptions(listOptions);\n            this._accessors();\n            this._aria();\n            this._clearButton();\n        },\n\n        _listOptions: function(options) {\n            var listOptions = List.fn._listOptions.call(this, $.extend(options, {\n                skipUpdateOnBind: true\n            }));\n\n            listOptions.dataValueField = listOptions.dataTextField;\n            listOptions.selectedItemChange = null;\n\n            return listOptions;\n        },\n\n        _editable: function(options) {\n            var that = this,\n                element = that.element,\n                wrapper = that.wrapper.off(ns),\n                readonly = options.readonly,\n                disable = options.disable;\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                element.prop(DISABLED, false)\n                       .prop(READONLY, false)\n                       .attr(ARIA_DISABLED, false)\n                       .attr(ARIA_READONLY, false);\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable)\n                       .attr(ARIA_READONLY, readonly);\n            }\n\n            that._toggleCloseVisibility();\n        },\n\n        close: function() {\n            var that = this;\n            var current = that.listView.focus();\n\n            if (current) {\n                current.removeClass(SELECTED);\n            }\n\n            that.popup.close();\n            that._deactivateItem();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(ns);\n            that._clear.off(ns);\n            that.wrapper.off(ns);\n\n            if (that.filterInput) {\n                that.filterInput.off(ns);\n            }\n\n            List.fn.destroy.call(that);\n        },\n\n        refresh: function() {\n            this.listView.refresh();\n        },\n\n        select: function(li) {\n            this._select(li);\n        },\n\n        search: function(word) {\n            var that = this,\n            options = that.options,\n            ignoreCase = options.ignoreCase,\n            separator = that._separator(),\n            length,\n            accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering,\n            element = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput : that.element;\n\n            word = word || that._accessor();\n\n            clearTimeout(that._typingTimeout);\n\n            if (separator) {\n                word = wordAtCaret(caret(element)[0], word, separator);\n            }\n\n            length = word.length;\n\n            if ((!options.enforceMinLength && !length) || length >= options.minLength) {\n                that._open = true;\n\n                that._mute(function() {\n                    this.listView.value([]);\n                });\n\n                that._filterSource({\n                    value: ignoreCase ? (accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()) : word,\n                    operator: options.filter,\n                    field: options.dataTextField,\n                    ignoreCase: ignoreCase\n                });\n\n                that.one(\"close\", that._unifySeparators.bind(that));\n            }\n            that._toggleCloseVisibility();\n        },\n\n        suggest: function(word) {\n            var that = this,\n                key = that._last,\n                value = that._accessor(),\n                element = that.element[0],\n                caretIdx = caret(element)[0],\n                separator = that._separator(),\n                words = value.split(separator),\n                wordIndex = indexOfWordAtCaret(caretIdx, value, separator),\n                selectionEnd = caretIdx,\n                idx,\n                accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering;\n\n            if (key == keys.BACKSPACE || key == keys.DELETE) {\n                that._last = undefined$1;\n                return;\n            }\n\n            word = word || \"\";\n\n            if (typeof word !== \"string\") {\n                if (word[0]) {\n                    word = that.dataSource.view()[List.inArray(word[0], that.ul[0])];\n                }\n\n                word = word ? that._text(word) : \"\";\n            }\n\n            if (caretIdx <= 0) {\n                caretIdx = (accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase()).indexOf(accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()) + 1;\n            }\n\n            idx = value.substring(0, caretIdx).lastIndexOf(separator);\n            idx = idx > -1 ? caretIdx - (idx + separator.length) : caretIdx;\n            value = words[wordIndex].substring(0, idx);\n\n            if (word) {\n                word = word.toString();\n                idx = (accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()).indexOf(accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase());\n                if (idx > -1) {\n                    word = word.substring(idx + value.length);\n\n                    selectionEnd = caretIdx + word.length;\n\n                    value += word;\n                }\n\n                if (separator && words[words.length - 1] !== \"\") {\n                    words.push(\"\");\n                }\n\n            }\n\n            words[wordIndex] = value;\n\n            that._accessor(words.join(separator || \"\"));\n\n            if (element === activeElement()) {\n                caret(element, caretIdx, selectionEnd);\n            }\n        },\n\n        value: function(value) {\n            if (value !== undefined$1) {\n                this.listView.value(value);\n\n                this._accessor(value);\n                this._old = this._accessor();\n                this._oldText = this._accessor();\n            } else {\n                return this._accessor();\n            }\n            this._toggleCloseVisibility();\n            this._refreshFloatingLabel();\n        },\n\n        _click: function(e) {\n            var item = e.item;\n            var that = this;\n            var element = that.element;\n            var dataItem = that.listView.dataItemByIndex(that.listView.getElementIndex(item));\n\n            e.preventDefault();\n\n            that._active = true;\n\n            if (that.trigger(\"select\", { dataItem: dataItem, item: item })) {\n                that.close();\n                return;\n            }\n            that._oldText = element.val();\n            that._select(item).done(function() {\n                that._blur();\n\n                caret(element, element.val().length);\n            });\n        },\n\n        _clearText: $.noop,\n\n        _highlightFirst: function() {\n            var index = this.options.highlightFirst ? 0 : -1;\n\n            this.listView.focus(index);\n        },\n\n        _resetFocusItem: function() {\n            if (this.options.virtual) {\n                this.listView.scrollTo(0);\n            }\n\n            this._highlightFirst();\n        },\n\n        _listBound: function() {\n            var that = this;\n            var popup = that.popup;\n            var options = that.options;\n            var data = that.dataSource.flatView();\n            var length = data.length;\n            var groupsLength = that.dataSource._group ? that.dataSource._group.length : 0;\n            var isActive = that.element[0] === activeElement() || that.filterInput && that.filterInput[0] === activeElement();\n            var action;\n\n            that._renderFooter();\n            that._renderNoData();\n            that._toggleNoData(!length);\n            that._toggleHeader(!!groupsLength && !!length);\n\n            that._resizePopup();\n\n            popup.position();\n\n            if (length) {\n                if (options.suggest && isActive && that._inputValue()) {\n                    that.suggest(data[0]);\n                }\n\n                that._highlightFirst();\n            }\n\n            if (that._open) {\n                that._open = false;\n                action = that._allowOpening() ? \"open\" : \"close\";\n\n                if (that._typingTimeout && !isActive) {\n                    action = \"close\";\n                }\n\n                if (length) {\n                    that._resetFocusItem();\n\n                    if (options.virtual) {\n                        that.popup\n                            .unbind(\"activate\", that._resetFocusItemHandler)\n                            .one(\"activate\", that._resetFocusItemHandler);\n                    }\n                }\n\n                popup[action]();\n                that._typingTimeout = undefined$1;\n            }\n\n            if (that._touchScroller) {\n                that._touchScroller.reset();\n            }\n\n            that._hideBusy();\n\n            that.trigger(\"dataBound\");\n        },\n\n        _mute: function(callback) {\n            this._muted = true;\n            callback.call(this);\n            this._muted = false;\n        },\n\n        _listChange: function() {\n            var isActive = this._active || this.element[0] === activeElement();\n\n            if (isActive && !this._muted) {\n                this._selectValue(this.listView.selectedDataItems()[0]);\n            }\n        },\n\n        _selectValue: function(dataItem) {\n            var separator = this._separator();\n            var text = \"\";\n\n            if (dataItem) {\n                text = this._text(dataItem);\n            }\n\n            if (text === null) {\n                text = \"\";\n            }\n\n            if (separator) {\n                text = replaceWordAtCaret(caret(this.element)[0], this._accessor(), text, separator, this._defaultSeparator());\n            }\n\n            this._prev = text;\n            this._accessor(text);\n            this._placeholder();\n        },\n\n        _unifySeparators: function() {\n            this._accessor(this.value().split(this._separator()).join(this._defaultSeparator()));\n            return this;\n        },\n\n        _preselect: function(value, text) {\n            this._inputValue(text);\n            this._accessor(value);\n\n            this._old = this.oldText = this._accessor();\n\n            this.listView.setValue(value);\n            this._placeholder();\n        },\n\n        _change: function() {\n            var that = this;\n            var value = that._unifySeparators().value();\n            var trigger = value !== List.unifyType(that._old, typeof value);\n\n            var valueUpdated = trigger && !that._typing;\n            var itemSelected = that._oldText !== value;\n            var clearValueTrigger = that._clearValueTrigger;\n\n            that._old = value;\n            that._oldText = value;\n\n            if (that.filterInput && activeElement() === that.filterInput[0]) {\n                that.element.val(that.filterInput.val());\n            }\n\n            if ((valueUpdated || itemSelected) && !clearValueTrigger) {\n                // trigger the DOM change event so any subscriber gets notified\n                that.element.trigger(CHANGE);\n            }\n\n            if (trigger && !clearValueTrigger) {\n                that.trigger(CHANGE);\n            }\n\n            that.typing = false;\n            that._toggleCloseVisibility();\n        },\n\n        _accessor: function(value) {\n            var that = this,\n                element = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput[0] : that.element[0];\n\n            if (value !== undefined$1) {\n                element.value = value === null ? \"\" : value;\n                that._placeholder();\n            } else {\n                value = element.value;\n\n                if (element.className.indexOf(\"k-readonly\") > -1) {\n                    if (value === that.options.placeholder) {\n                        return \"\";\n                    } else {\n                        return value;\n                    }\n                }\n\n                return value;\n            }\n        },\n\n        _keydown: function(e) {\n            var that = this;\n            var key = e.keyCode;\n            var listView = that.listView;\n            var visible = that.popup.visible();\n            var current = listView.focus();\n\n            that._last = key;\n\n            if (key === keys.DOWN) {\n                if (visible) {\n                    this._move(current ? \"focusNext\" : \"focusFirst\");\n                } else if (that.value()) {\n                    that._filterSource({\n                        value: that.ignoreCase ? that.value().toLowerCase() : that.value(),\n                        operator: that.options.filter,\n                        field: that.options.dataTextField,\n                        ignoreCase: that.ignoreCase\n                    }).done(function() {\n                        if (that._allowOpening()) {\n                            that._resetFocusItem();\n                            that.popup.open();\n                        }\n                    });\n                }\n                e.preventDefault();\n            } else if (key === keys.ESC ) {\n                if (visible) {\n                    e.preventDefault();\n                    that.close();\n                } else {\n                    that._clearValue();\n                }\n            } else if (e.altKey && key === keys.UP && visible) {\n                e.preventDefault();\n                that.close();\n            } else if (key === keys.UP) {\n                if (visible) {\n                    this._move(current ? \"focusPrev\" : \"focusLast\");\n                }\n                e.preventDefault();\n            } else if (key === keys.HOME) {\n                this._move(\"focusFirst\");\n            } else if (key === keys.END) {\n                this._move(\"focusLast\");\n            } else if (key === keys.ENTER || key === keys.TAB) {\n\n                if (key === keys.ENTER && visible) {\n                    e.preventDefault();\n                }\n\n                if (visible && current) {\n                    var dataItem = listView.dataItemByIndex(listView.getElementIndex(current));\n                    if (that.trigger(\"select\", { dataItem: dataItem, item: current })) {\n                        return;\n                    }\n\n                    this._select(current);\n                }\n\n                this._blur();\n            } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                e.preventDefault();\n\n                var direction = key === keys.PAGEDOWN ? 1 : -1;\n                listView.scrollWith(direction * listView.screenHeight());\n            } else {\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                that.popup._hovered = true;\n                that._search();\n            }\n        },\n\n        _keypress: function() {\n            this._oldText = this.element.val();\n            this._typing = true;\n        },\n\n        _move: function(action) {\n            this.listView[action]();\n\n            if (this.options.suggest) {\n                this.suggest(this.listView.focus());\n            }\n        },\n\n        _hideBusy: function() {\n            var that = this;\n            clearTimeout(that._busy);\n            that._loading.addClass(HIDDENCLASS);\n            that.element.attr(\"aria-busy\", false);\n            that._busy = null;\n            that._toggleCloseVisibility();\n        },\n\n        _showBusy: function() {\n            var that = this;\n\n            if (that._busy) {\n                return;\n            }\n\n            that._busy = setTimeout(function() {\n                that.element.attr(\"aria-busy\", true);\n                that._loading.removeClass(HIDDENCLASS);\n                that._hideClear();\n            }, 100);\n        },\n\n        _placeholder: function(show) {\n            if (placeholderSupported) {\n                return;\n            }\n\n            var that = this,\n                element = that.element,\n                placeholder = that.options.placeholder,\n                value;\n\n            if (placeholder) {\n                value = element.val();\n\n                if (show === undefined$1) {\n                    show = !value;\n                }\n\n                if (!show) {\n                    if (value !== placeholder) {\n                        placeholder = value;\n                    } else {\n                        placeholder = \"\";\n                    }\n                }\n\n                if (value === that._old && !show) {\n                    return;\n                }\n\n                element.toggleClass(\"k-readonly\", show)\n                       .val(placeholder);\n\n                if (!placeholder && element[0] === document.activeElement) {\n                    caret(element[0], 0, 0);\n                }\n            }\n        },\n\n        _separator: function() {\n            var separator = this.options.separator;\n            if (separator instanceof Array) {\n               return new RegExp(separator.join(\"|\"), 'gi');\n            }\n            return separator;\n        },\n\n        _defaultSeparator: function() {\n            var separator = this.options.separator;\n            if (separator instanceof Array) {\n                return separator[0];\n            }\n            return separator;\n        },\n\n        _inputValue: function() {\n            return this.element.val();\n        },\n\n        _search: function() {\n            var that = this;\n            clearTimeout(that._typingTimeout);\n\n            that._typingTimeout = setTimeout(function() {\n                if (that._prev !== that._accessor()) {\n                    that._prev = that._accessor();\n                    that.search();\n                }\n            }, that.options.delay);\n        },\n\n        _select: function(candidate) {\n            var that = this;\n            that._active = true;\n\n            return that.listView.select(candidate).done(function() {\n                that._active = false;\n            });\n        },\n\n        _loader: function() {\n            this._loading = $('<span class=\"k-icon k-i-loading k-input-loading-icon ' + HIDDENCLASS + '\"></span>').insertAfter(this.element);\n        },\n\n        _clearButton: function() {\n            List.fn._clearButton.call(this);\n\n            if (this.options.clearButton) {\n                this._clear.insertAfter(this.element);\n            }\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _toggleCloseVisibility: function() {\n            var preventShow = this.element.is(\":disabled\") || this.element.is(\"[readonly]\");\n\n            if (this.value() && !preventShow) {\n                this._showClear();\n            } else {\n                this._hideClear();\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                DOMelement = element[0],\n                wrapper;\n\n            wrapper = element.parent();\n\n            if (!wrapper.is(\"span.k-autocomplete\")) {\n                wrapper = element.wrap(\"<span />\").parent();\n            }\n\n            wrapper.attr(\"tabindex\", -1);\n\n            wrapper[0].style.cssText = DOMelement.style.cssText;\n            element.css({\n                width: \"\",\n                height: DOMelement.style.height\n            });\n\n            that._focused = that.element;\n            that.wrapper = wrapper\n                .addClass(\"k-autocomplete k-input\")\n                .addClass(DOMelement.className)\n                .removeClass('input-validation-error');\n        },\n\n        _clearValue: function() {\n            this._clearValueTrigger = false;\n            List.fn._clearValue.call(this);\n            this.element.focus();\n        }\n    });\n\n    ui.plugin(AutoComplete);\n\n    kendo.cssProperties.registerPrefix(\"AutoComplete\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"AutoComplete\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}