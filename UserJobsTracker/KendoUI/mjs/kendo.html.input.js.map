{"version":3,"sources":["raw-mjs/kendo.html.input.js"],"names":["__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","HTMLBase","html","HTMLInput","extend","init","element","options","that","this","fn","call","_wrapper","_addClasses","label","labelPosition","labelId","encoded","elementId","wrapper","addClass","inputClass","prop","type","guid","labelEl","labelClass","text","attr","optional","append","optionalClass","optionalText","after","wrapperHtml","outerHTML","HTMLCheckBox","rounded","size","stylingOptions","HTMLRadioButton","renderCheckBox","arguments","isPlainObject","renderRadioButton","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","jQuery","kendo$1"],"mappings":"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","file":"kendo.html.input.js","sourcesContent":["import './kendo.html.base.js';\n\nvar __meta__ = {\n    id: \"html.input\",\n    name: \"Html.Input\",\n    category: \"web\",\n    description: \"HTML rendering utility for Kendo UI for jQuery.\",\n    depends: [ \"html.base\" ],\n    features: []\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        HTMLBase = kendo.html.HTMLBase;\n\n    var renderCheckBox = function(element, options) {\n        if (arguments[0] === undefined$1 || $.isPlainObject(arguments[0])) {\n            options = element;\n            element = $(\"<input />\");\n        }\n\n        return (new HTMLCheckBox(element, options)).html();\n    };\n\n    var renderRadioButton = function(element, options) {\n        if (arguments[0] === undefined$1 || $.isPlainObject(arguments[0])) {\n            options = element;\n            element = $(\"<input />\");\n        }\n\n        return (new HTMLRadioButton(element, options)).html();\n    };\n\n    var HTMLInput = HTMLBase.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLBase.fn.init.call(that, element, options);\n            that._wrapper();\n            that._addClasses();\n        },\n        options: {\n            label: null,\n            labelPosition: \"after\",\n            labelId: null,\n            encoded: true\n        },\n        _wrapper: function() {\n            var that = this,\n                element = that.element[0],\n                options = that.options,\n                elementId = element.id;\n\n            that.wrapper = that.element\n                .addClass(options.inputClass)\n                .prop(\"type\", options.type);\n\n            if (!elementId && !!options.label) {\n                element.id = elementId = kendo.guid();\n            }\n\n            if (!!options.label) {\n                that.labelEl = $(\"<label for='\" + elementId + \"' class='\" + options.labelClass + \"'>\");\n\n                if (options.encoded) {\n                    that.labelEl.text(options.label);\n                } else {\n                    that.labelEl.html(options.label);\n                }\n\n                if (options.labelId) {\n                    that.labelEl.attr(\"id\", options.labelId);\n                }\n\n                if (options.optional) {\n                    that.labelEl.append(\"<span class='\" + options.optionalClass + \"'>\" + options.optionalText + \"</span>\");\n                }\n\n                that.element[options.labelPosition](that.labelEl);\n            }\n        },\n        html: function() {\n            var that = this,\n                after = that.options.labelPosition === \"after\",\n                wrapperHtml = HTMLBase.fn.html.call(that);\n\n            if (!that.labelEl) {\n                return wrapperHtml;\n            }\n\n            if (after) {\n                return wrapperHtml + that.labelEl[0].outerHTML;\n            }\n\n            return that.labelEl[0].outerHTML + wrapperHtml;\n        }\n    });\n\n    var HTMLCheckBox = HTMLInput.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLInput.fn.init.call(that, element, options);\n            that._addClasses();\n        },\n        options: {\n            name: \"HTMLCheckBox\",\n            inputClass: \"k-checkbox\",\n            labelClass: \"k-checkbox-label\",\n            optionalClass: \"k-label-optional\",\n            optionalText: \"(Optional)\",\n            type: \"checkbox\",\n            rounded: \"medium\",\n            size: \"medium\",\n            stylingOptions: [ \"size\", \"rounded\" ]\n        }\n    });\n\n    var HTMLRadioButton = HTMLInput.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLInput.fn.init.call(that, element, options);\n            that._addClasses();\n        },\n        options: {\n            name: \"HTMLRadioButton\",\n            inputClass: \"k-radio\",\n            labelClass: \"k-radio-label\",\n            optionalClass: \"k-label-optional\",\n            optionalText: \"(Optional)\",\n            type: \"radio\",\n            size: \"medium\",\n            stylingOptions: [ \"size\"]\n        }\n    });\n\n    $.extend(kendo.html, {\n        renderCheckBox: renderCheckBox,\n        renderRadioButton: renderRadioButton,\n        HTMLInput: HTMLInput,\n        HTMLCheckBox: HTMLCheckBox,\n        HTMLRadioButton: HTMLRadioButton\n    });\n\n    kendo.cssProperties.registerPrefix(\"HTMLCheckBox\", \"k-checkbox-\");\n\n    kendo.cssProperties.registerValues(\"HTMLCheckBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    kendo.cssProperties.registerPrefix(\"HTMLRadioButton\", \"k-radio-\");\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}