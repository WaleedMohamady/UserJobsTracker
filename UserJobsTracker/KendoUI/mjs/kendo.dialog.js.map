{"version":3,"sources":["raw-mjs/kendo.dialog.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","templates","kendo","window","Widget","ui","TabKeyTrap","Popup","template","keys","isFunction","encode","htmlEncode","NS","KDIALOGWRAP","KWINDOW","KCLOSE","KCONTENTSELECTOR","KSCROLL","KDIALOGTITLE","KDIALOGTITLEBAR","KBUTTONGROUP","KBUTTON","VISIBLE","ZINDEX","BODY","INITOPEN","TOUCHSTART","TOUCHMOVE","OPEN","CLOSE","SHOW","HIDE","SIZE","small","medium","large","HIDDEN","OVERFLOW","DATADOCOVERFLOWRULE","DATAHTMLTAPYRULE","ceil","Math","defined","x","constrain","value","low","high","max","min","parseInt","Infinity","buttonKeyTrigger","e","keyCode","ENTER","SPACEBAR","DialogBase","extend","init","element","options","that","this","fn","call","_init","notify","_showWatermarkOverlay","wrapper","_centerCallback","_center","bind","appendTo","visible","is","wrapperTemplate","_createDialog","closest","dialogWrapper","_defaultFocus","_tabindex","_dimensions","modal","_isDialog","width","height","_tabKeyTrap","_triggerOpen","hide","setOptions","sizeClass","size","removeClass","getValidCssClass","themeColor","title","content","destroy","children","html","actions","remove","_createActionbar","show","_closable","addClass","_enableDocumentScrolling","dimensions","i","length","css","_setElementMaxHeight","toString","indexOf","outerWidth","minWidth","maxWidth","outerHeight","minHeight","maxHeight","_setElementHeight","elementMaxHeight","parseFloat","_uiHeight","elementHeight","_applyScrollClassName","get","scrollHeight","actionbar","actionbarHeight","offsetHeight","titlebar","_closeClick","preventDefault","close","_closeKeyHandler","ESC","_keydown","_closing","closable","isRtl","support","titleId","guid","append","find","toggleClass","attr","titlebarActions","prepend","autoApplyNS","on","buttonLayout","_addButtons","action","text","actionClick","_actionClick","actionKeyHandler","_actionKeyHandler","_mergeTextWithOptions","cssClass","data","target","closeBtn","actionButtons","tabIndex","_runActionBtn","currentTarget","sender","toFront","_triggerInitOpen","trigger","preventScroll","_stopDocumentScrolling","_focusDialog","open","overlay","showOptions","_animationOptions","kendoStop","duration","effects","Fade","overlayFx","fx","fadeIn","endValue","play","kendoAnimate","complete","_openAnimationEnd","animation","_initOpenTriggered","zIndex","originalZIndex","center","each","zIndexNew","isNaN","style","systemTriggered","arguments","_close","_stopCenterOnResize","hideOptions","userTriggered","_handleDocumentScrolling","reverse","_closeAnimationEnd","_centerOnResize","documentWindow","newLeft","newTop","left","top","_trackResize","onResize","unbindResize","modals","_modals","$body","_storeOverflowRule","$html","mobileOS","ios","addEventListener","_touchStart","passive","_touchMove","changedTouches","pageY","$target","upScroll","preventYScroll","scrollTop","clientHeight","document","body","_restoreOverflowRule","removeData","removeEventListener","$element","_isOverflowStored","overflowRule","overflow","previousFocus","_previousFocus","lastModal","_object","last","setTimeout","focus","zStack","filter","containment","sort","a","b","widget","widgetInstance","_destroy","ns","off","encodedHtml","prependTo","firstModal","first","activeElement","_focus","trap","node","events","Dialog","messages","plugin","PopupBox","alertWrapper","_ensureContentId","_ariaDescribedBy","_initFocus","o","_chooseEntryFocus","location","host","okText","cancel","promptInput","Alert","Confirm","result","Deferred","primary","resolve","reject","Prompt","_createPrompt","promptContainer","promptInputContainer","insertAfter","input","TextBox","icon","iconClass","alert","confirm","prompt","kendoAlert","kendoConfirm","kendoPrompt","jQuery","kendo$1"],"mappings":"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","file":"kendo.dialog.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.popup.js';\nimport './kendo.textbox.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n        id: \"dialog\",\n        name: \"Dialog\",\n        category: \"web\", // suite\n        description: \"The dialog widget is a modal popup that brings information to the user.\",\n        depends: [\"core\", \"popup\", \"textbox\", \"icons\"] // dependencies\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n            template = kendo.template,\n            keys = kendo.keys,\n            isFunction = kendo.isFunction,\n            encode = kendo.htmlEncode,\n            NS = \"kendoWindow\",\n            KDIALOG = \".k-dialog\",\n            KDIALOGWRAP = \".k-dialog-wrapper\",\n            KWINDOW = \".k-window\",\n            KCLOSE = \"[data-role='close']\",\n            KCONTENTCLASS = \"k-window-content k-dialog-content\",\n            KCONTENTSELECTOR = \".k-window-content\",\n            KSCROLL = \"k-scroll\",\n            KDIALOGTITLE = \".k-dialog-title\",\n            KDIALOGTITLEBAR = \".k-dialog-titlebar\",\n            KBUTTONGROUP = \".k-dialog-actions\",\n            // KACTIONS = \".k-actions\",\n            KBUTTON = \".k-button\",\n            KTEXTBOX = \".k-input-inner\",\n            KOVERLAY = \".k-overlay\",\n            VISIBLE = \":visible\",\n            ZINDEX = \"zIndex\",\n            BODY = \"body\",\n            INITOPEN = \"initOpen\",\n            TOUCHSTART = \"touchstart\",\n            TOUCHMOVE = \"touchmove\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            SHOW = \"show\",\n            HIDE = \"hide\",\n            SIZE = {\n                small: \"k-window-sm\",\n                medium: \"k-window-md\",\n                large: \"k-window-lg\"\n            },\n            HIDDEN = \"hidden\",\n            OVERFLOW = \"overflow\",\n            DATADOCOVERFLOWRULE = \"original-overflow-rule\",\n            DATAHTMLTAPYRULE = \"tap-y\",\n            messages = {\n                okText: \"OK\",\n                cancel: \"Cancel\",\n                promptInput: \"Input\"\n            },\n            ceil = Math.ceil,\n            templates;\n\n        function defined(x) {\n            return (typeof x != \"undefined\");\n        }\n\n        function constrain(value, low, high) {\n            return Math.max(Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)), parseInt(low, 10));\n        }\n\n        function buttonKeyTrigger(e) {\n            return e.keyCode == keys.ENTER || e.keyCode == keys.SPACEBAR;\n        }\n\n        var DialogBase = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that._init(that.element, that.options);\n                kendo.notify(that);\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.wrapper[0]);\n                }\n            },\n\n            _init: function(element, options) {\n                var that = this,\n                    wrapper;\n\n                that._centerCallback = that._center.bind(that);\n\n                that.appendTo = $(BODY);\n                if (!defined(options.visible) || options.visible === null) {\n                    options.visible = element.is(VISIBLE);\n                }\n\n                if (that.wrapperTemplate === undefined$1) {\n                    that.wrapperTemplate = templates.wrapper;\n                }\n\n                that._createDialog();\n                wrapper = that.wrapper = element.closest(KDIALOG);\n                that.dialogWrapper = wrapper.closest(KDIALOGWRAP);\n\n                if (options._defaultFocus === undefined$1) {\n                    that._defaultFocus = element[0];\n                }\n\n                that._tabindex(element);\n                that._dimensions();\n\n                if (!options.modal && that._isDialog()) {\n                    that.dialogWrapper.width(that.wrapper.width());\n                    that.dialogWrapper.height(that.wrapper.height());\n                }\n\n                this._tabKeyTrap = new TabKeyTrap(wrapper);\n\n                if (!that.options.visible) {\n                    that.dialogWrapper.hide();\n                } else {\n                    that._triggerOpen();\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                var sizeClass = that.options.size;\n                that.wrapper.removeClass(kendo.getValidCssClass(\"k-dialog-\", \"themeColor\", that.options.themeColor));\n\n                options = $.extend(that.options, options);\n\n                Widget.fn.setOptions.call(that, options);\n\n                if (options.title !== undefined$1) {\n                    that.title(options.title);\n                }\n\n                if (options.content) {\n                    kendo.destroy(that.element.children());\n                    that.element.html(options.content);\n                }\n\n                if (options.actions) {\n                    that.wrapper.children(KBUTTONGROUP).remove();\n                    that._createActionbar(that.wrapper);\n                }\n\n                that.dialogWrapper.show();\n                that._closable(that.wrapper);\n\n                that.wrapper.removeClass(SIZE[sizeClass]);\n                that._dimensions();\n\n                if (!options.visible) {\n                    that.dialogWrapper.hide();\n                } else {\n                    that._triggerOpen();\n                }\n\n                if (options.themeColor && options.themeColor !== \"none\") {\n                    that.wrapper.addClass(kendo.getValidCssClass(\"k-dialog-\", \"themeColor\", that.options.themeColor));\n                }\n\n                if (typeof options.modal !== \"undefined\") {\n                    that._enableDocumentScrolling();\n                }\n            },\n\n            _isDialog: function() {\n                return this.options.name === \"Dialog\";\n            },\n\n            _dimensions: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    width = options.width,\n                    height = options.height,\n                    sizeClass = options.size,\n                    dimensions = [\"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\n\n                for (var i = 0; i < dimensions.length; i++) {\n                    var value = options[dimensions[i]];\n                    if (value && value != Infinity) {\n                        wrapper.css(dimensions[i], value);\n                    }\n                }\n\n                this._setElementMaxHeight();\n\n                if (width) {\n                    if (width.toString().indexOf(\"%\") > 0) {\n                        wrapper.width(width);\n                    } else {\n                        wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n                    }\n                }\n\n                if (height) {\n                    if (height.toString().indexOf(\"%\") > 0) {\n                        wrapper.height(height);\n                    } else {\n                        wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n                    }\n\n                    this._setElementHeight();\n                }\n\n                if (sizeClass && SIZE[sizeClass]) {\n                    wrapper.addClass(SIZE[sizeClass]);\n                }\n            },\n\n            _setElementMaxHeight: function() {\n                var that = this,\n                    element = that.element,\n                    maxHeight = that.options.maxHeight,\n                    elementMaxHeight;\n\n                if (maxHeight != Infinity) {\n                    elementMaxHeight = parseFloat(maxHeight, 10) - that._uiHeight();\n                    if (elementMaxHeight > 0) {\n                        element.css({\n                            maxHeight: ceil(elementMaxHeight) + \"px\"\n                        });\n                    }\n                }\n\n            },\n\n            _setElementHeight: function() {\n                var that = this,\n                    element = that.element,\n                    height = that.wrapper.outerHeight(true),\n                    elementHeight = parseFloat(height, 10) - that._uiHeight();\n\n                if (elementHeight < 0) {\n                    elementHeight = 0;\n                }\n\n                element.css({\n                    height: ceil(elementHeight) + \"px\"\n                });\n\n                this._applyScrollClassName(element);\n\n            },\n\n            _applyScrollClassName: function(element) {\n                    var hasScroll = element.get(0).scrollHeight > element.outerHeight();\n\n                    if (hasScroll) {\n                        element.addClass(KSCROLL);\n                    } else {\n                        element.removeClass(KSCROLL);\n                    }\n            },\n\n            _uiHeight: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    actionbar = wrapper.children(KBUTTONGROUP),\n                    actionbarHeight = actionbar[0] && actionbar[0].offsetHeight || 0,\n                    titlebar = wrapper.children(KDIALOGTITLEBAR),\n                    titlebarHeight = titlebar[0] && titlebar[0].offsetHeight || 0;\n\n                return actionbarHeight + titlebarHeight;\n            },\n\n            _closeClick: function(e) {\n                e.preventDefault();\n                this.close(false);\n            },\n\n            _closeKeyHandler: function(e) {\n                if (buttonKeyTrigger(e) || e.keyCode == keys.ESC) {\n                    this.close(false);\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    options = that.options,\n                    keyCode = e.keyCode;\n\n                if (keyCode == keys.ESC && !that._closing && options.closable) {\n                    that.close(false);\n                }\n            },\n\n            _createDialog: function() {\n                var that = this,\n                    content = that.element,\n                    options = that.options,\n                    isRtl = kendo.support.isRtl(content),\n                    titlebar = $(templates.titlebar(options)),\n                    titleId = (content.id || kendo.guid()) + \"_title\",\n                    wrapper = $(that.wrapperTemplate(options));\n\n                content.addClass(KCONTENTCLASS);\n                that.appendTo.append(wrapper);\n                wrapper = wrapper.find(\".k-dialog\");\n                wrapper.toggleClass(\"k-rtl\", isRtl);\n\n                if (options.title !== false) {\n                    wrapper.append(titlebar);\n                    titlebar.attr(\"id\", titleId);\n                    wrapper.attr(\"aria-labelledby\", titleId);\n                }\n\n                that._closable(wrapper);\n\n                wrapper.append(content);\n                if (options.themeColor && options.themeColor !== \"none\") {\n                    wrapper.addClass(wrapper.addClass(kendo.getValidCssClass(\"k-dialog-\", \"themeColor\", options.themeColor)));\n                }\n\n                if (options.content) {\n                    kendo.destroy(content.children());\n                    content.html(options.content);\n                }\n\n                if (options.actions.length) {\n                    that._createActionbar(wrapper);\n                }\n            },\n\n            _closable: function(wrapper) {\n                var that = this;\n                var options = that.options;\n                var titlebar = wrapper.children(KDIALOGTITLEBAR);\n                var titlebarActions = titlebar.find(\".k-window-titlebar-actions\");\n                var closeAction = titlebarActions.length ? titlebarActions.find(KCLOSE) : wrapper.find(KCLOSE);\n\n                closeAction.remove();\n\n                if (options.closable !== false) {\n                    if (options.title !== false && titlebarActions.length) {\n                        titlebarActions.append(templates.close(options));\n                    }\n                    else {\n                        wrapper.prepend(templates.close(options));\n                    }\n\n                    wrapper.autoApplyNS(NS);\n                    that.element.autoApplyNS(NS);\n\n                    wrapper.find(KCLOSE)\n                        .on(\"click\", that._closeClick.bind(that))\n                        .on(\"keydown\", that._closeKeyHandler.bind(that));\n\n                    that.element.on(\"keydown\", that._keydown.bind(that));\n                }\n            },\n\n            _createActionbar: function(wrapper) {\n                var isStretchedLayout = (this.options.buttonLayout === \"stretched\");\n                var buttonLayout = isStretchedLayout ? \"stretched\" : \"end\";\n                var actionbar = $(templates.actionbar({ buttonLayout: buttonLayout }));\n\n                this._addButtons(actionbar);\n                wrapper.append(actionbar);\n            },\n\n            _addButtons: function(actionbar) {\n                var that = this,\n                    actionClick = that._actionClick.bind(that),\n                    actionKeyHandler = that._actionKeyHandler.bind(that),\n                    actions = that.options.actions,\n                    length = actions.length,\n                    action,\n                    text;\n\n                for (var i = 0; i < length; i++) {\n                    action = actions[i];\n                    text = that._mergeTextWithOptions(action);\n\n                    $(templates.action(action, text))\n                        .autoApplyNS(NS)\n                        .appendTo(actionbar)\n                        .addClass(action.cssClass)\n                        .data(\"action\", action.action)\n                        .on(\"click\", actionClick)\n                        .on(\"keydown\", actionKeyHandler);\n                }\n            },\n\n            _mergeTextWithOptions: function(action) {\n                var text = action.text;\n\n                if (isFunction(text)) {\n                    return text(this.options);\n                }\n\n                return text ? text : \"\";\n            },\n\n            _tabindex: function(target) {\n                var that = this;\n                var wrapper = that.wrapper;\n                var closeBtn = wrapper.find(KCLOSE);\n                var actionButtons = wrapper.find(KBUTTONGROUP + \" \" + KBUTTON);\n\n                Widget.fn._tabindex.call(this, target);\n\n                var tabIndex = target.attr(\"tabindex\");\n\n                closeBtn.attr(\"tabIndex\", tabIndex);\n                actionButtons.attr(\"tabIndex\", tabIndex);\n            },\n\n            _actionClick: function(e) {\n                if (this.dialogWrapper.is(VISIBLE)) {\n                    this._runActionBtn(e.currentTarget);\n                }\n            },\n\n            _actionKeyHandler: function(e) {\n                if (buttonKeyTrigger(e)) {\n                    e.preventDefault();\n                    this._runActionBtn(e.currentTarget);\n                } else if (e.keyCode == keys.ESC) {\n                    this.close(false);\n                }\n            },\n\n            _runActionBtn: function(target) {\n                var that = this;\n                if (that._closing) {\n                    return;\n                }\n\n                var action = $(target).data(\"action\"),\n                    preventClose = (isFunction(action) && action({ sender: that }) === false);\n\n                if (!preventClose) {\n                    that.close(false);\n                }\n            },\n\n            _triggerOpen: function() {\n                var that = this;\n                var options = that.options;\n\n                that.toFront();\n                that._triggerInitOpen();\n                that.trigger(OPEN);\n                if (options.modal) {\n                    if (options.modal.preventScroll) {\n                        that._stopDocumentScrolling();\n                    }\n                    that._focusDialog();\n                }\n            },\n\n            open: function() {\n                var that = this,\n                    wrapper = that.dialogWrapper,\n                    showOptions = this._animationOptions(OPEN),\n                    options = that.options,\n                    overlay;\n\n                this._triggerInitOpen();\n\n                if (!that.trigger(OPEN)) {\n                    if (that._closing) {\n                        wrapper.kendoStop(true, true);\n                    }\n\n                    that._closing = false;\n\n                    that.toFront();\n                    options.visible = true;\n                    if (options.modal) {\n                        overlay = that.dialogWrapper.find(KOVERLAY);\n                        if (options.modal.preventScroll) {\n                            that._stopDocumentScrolling();\n                        }\n\n                        overlay.kendoStop(true, true);\n\n                        if (showOptions.duration && kendo.effects.Fade) {\n                            var overlayFx = kendo.fx(overlay).fadeIn();\n                            overlayFx.duration(showOptions.duration || 0);\n                            overlayFx.endValue(0.5);\n                            overlayFx.play();\n                        }\n                        that.dialogWrapper.show();\n\n                    }\n\n                    (options.modal ? that.wrapper : that.dialogWrapper).show().kendoStop().kendoAnimate({\n                        effects: showOptions.effects,\n                        duration: showOptions.duration,\n                        complete: that._openAnimationEnd.bind(that)\n                    });\n                    wrapper.show();\n\n                }\n\n                return that;\n            },\n\n            _animationOptions: function(id) {\n                var animation = this.options.animation;\n                var basicAnimation = {\n                    open: { effects: {} },\n                    close: { hide: true, effects: {} }\n                };\n\n                return animation && animation[id] || basicAnimation[id];\n            },\n\n            _openAnimationEnd: function() {\n                if (this.options.modal) {\n                    this._focusDialog();\n                }\n                this.trigger(SHOW);\n            },\n\n            _triggerInitOpen: function() {\n                if (!defined(this._initOpenTriggered)) {\n                    this._initOpenTriggered = true;\n                    this.trigger(INITOPEN);\n                }\n            },\n\n            toFront: function() {\n                var that = this,\n                    wrapper = that.dialogWrapper,\n                    zIndex = +wrapper.css(ZINDEX),\n                    originalZIndex = zIndex;\n\n                that.center();\n\n                $(KWINDOW + \",\" + KDIALOGWRAP).each(function(i, element) {\n                    var windowObject = $(element),\n                        zIndexNew = windowObject.css(ZINDEX);\n\n                    if (!isNaN(zIndexNew)) {\n                        zIndex = Math.max(+zIndexNew, zIndex);\n                    }\n                });\n\n                if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                    wrapper.css(ZINDEX, zIndex + 2);\n                }\n\n                wrapper = null;\n\n                return that;\n            },\n\n            close: function(systemTriggered) {\n                if (!arguments.length) {\n                    systemTriggered = true;\n                }\n\n                this._close(systemTriggered);\n                this._stopCenterOnResize();\n                return this;\n            },\n\n            _close: function(systemTriggered) {\n                var that = this,\n                    wrapper = that.dialogWrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    hideOptions = this._animationOptions(\"close\");\n\n                if (wrapper.is(VISIBLE) && !that.trigger(CLOSE, { userTriggered: !systemTriggered })) {\n                    if (that._closing) {\n                        return;\n                    }\n                    that._closing = true;\n\n                    options.visible = false;\n                    this._handleDocumentScrolling();\n\n                    (options.modal ? that.wrapper : that.dialogWrapper).kendoStop().kendoAnimate({\n                        effects: hideOptions.effects || showOptions.effects,\n                        reverse: hideOptions.reverse === true,\n                        duration: hideOptions.duration,\n                        complete: this._closeAnimationEnd.bind(this)\n                    });\n                }\n\n                return that;\n            },\n\n            center: function() {\n                this._center();\n                this._centerOnResize();\n            },\n\n            _center: function() {\n                var that = this,\n                    wrapper = that.dialogWrapper,\n                    documentWindow = $(window),\n                    scrollTop = 0,\n                    scrollLeft = 0,\n                    newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.width()) / 2),\n                    newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.height() - parseInt(wrapper.css(\"paddingTop\"), 10)) / 2);\n\n                wrapper.css({\n                    left: newLeft,\n                    top: newTop\n                });\n\n                return that;\n            },\n\n            _centerOnResize: function() {\n                if (this._trackResize) {\n                    return;\n                }\n\n                kendo.onResize(this._centerCallback);\n                this._trackResize = true;\n            },\n\n            _stopCenterOnResize: function() {\n                kendo.unbindResize(this._centerCallback);\n                this._trackResize = false;\n            },\n\n            _handleDocumentScrolling: function() {\n                var modals = this._modals();\n                var options = this.options;\n                var hideOverlay = options.modal && !modals.length;\n\n                if (hideOverlay && options.modal.preventScroll) {\n                    this._enableDocumentScrolling();\n                } else if (modals.length && options.modal.preventScroll) {\n                     this._stopDocumentScrolling();\n                }\n            },\n\n            _stopDocumentScrolling: function() {\n                var that = this;\n\n                var $body = $(\"body\");\n                that._storeOverflowRule($body);\n                $body.css(OVERFLOW, HIDDEN);\n\n                var $html = $(\"html\");\n                var html = $html[0];\n                that._storeOverflowRule($html);\n                $html.css(OVERFLOW, HIDDEN);\n\n                // prevent touch due to bug in ios\n                if (kendo.support.mobileOS.ios) {\n                    html.addEventListener(TOUCHSTART, that._touchStart, { passive: false });\n                    html.addEventListener(TOUCHMOVE, that._touchMove, { passive: false });\n                }\n            },\n\n            _touchStart: function(e) {\n                $(this).data(DATAHTMLTAPYRULE, e.changedTouches[0].pageY);\n            },\n\n            _touchMove: function(e) {\n                var target = e.target;\n                var $target = $(e.target);\n                var upScroll = e.changedTouches[0].pageY - $(this).data(DATAHTMLTAPYRULE) > 0;\n                var preventYScroll = $target.is(KCONTENTSELECTOR) &&\n                    (upScroll && $target.scrollTop() === 0) ||\n                    (!upScroll && $target.scrollTop() === target.scrollHeight - target.clientHeight);\n                if (!$target.is(KCONTENTSELECTOR) || preventYScroll) {\n                    e.preventDefault();\n                }\n            },\n\n            _enableDocumentScrolling: function() {\n                var that = this;\n                var $body = $(document.body);\n                var $html = $(\"html\");\n                var html = $html[0];\n\n                that._restoreOverflowRule($body);\n                that._restoreOverflowRule($html);\n\n                if (kendo.support.mobileOS.ios) {\n                    $html.removeData(DATAHTMLTAPYRULE);\n                    html.removeEventListener(TOUCHSTART, that._touchStart, { passive: false });\n                    html.removeEventListener(TOUCHMOVE, that._touchMove, { passive: false });\n                }\n            },\n\n            _storeOverflowRule: function($element) {\n                if (this._isOverflowStored($element)) {\n                    return;\n                }\n\n                var overflowRule = $element.get(0).style.overflow;\n\n                if (typeof overflowRule === \"string\") {\n                    $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                }\n            },\n\n            _isOverflowStored: function($element) {\n                return typeof $element.data(DATADOCOVERFLOWRULE) === \"string\";\n            },\n\n            _restoreOverflowRule: function($element) {\n                var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n\n                if (overflowRule !== null && overflowRule !== undefined$1) {\n                    $element.css(OVERFLOW, overflowRule);\n                    $element.removeData(DATADOCOVERFLOWRULE);\n                } else {\n                    $element.css(OVERFLOW, \"\");\n                }\n            },\n\n            _closeAnimationEnd: function() {\n                var that = this,\n                    previousFocus = that._previousFocus;\n\n                that._closing = false;\n                that.dialogWrapper.hide().css(\"opacity\", \"\");\n                that.trigger(HIDE);\n\n                if (that.options.modal) {\n                    var lastModal = that._object(that._modals().last());\n                    if (lastModal) {\n                        lastModal.toFront();\n                    } else if (previousFocus) {\n                        that._previousFocus = null;\n\n                        setTimeout(function() {\n                            previousFocus.focus();\n                        });\n                    }\n                }\n            },\n\n            _modals: function() {\n                var that = this;\n\n                var zStack = $(KWINDOW + \",\" + KDIALOGWRAP).filter(function() {\n                    var modal = that._object($(this));\n\n                    return modal &&\n                        modal.options &&\n                        modal.options.modal &&\n                        modal.options.visible &&\n                        modal.options.appendTo === that.options.appendTo &&\n                        !modal.containment &&\n                        $(modal.element).is(VISIBLE);\n                }).sort(function(a, b) {\n                    return +$(a).css(\"zIndex\") - +$(b).css(\"zIndex\");\n                });\n\n                that = null;\n\n                return zStack;\n            },\n\n            _object: function(element) {\n                var content = element.find(KCONTENTSELECTOR);\n                var widget = kendo.widgetInstance(content);\n\n                if (widget) {\n                    return widget;\n                }\n\n                return undefined$1;\n            },\n\n            destroy: function() {\n                var that = this;\n                that._destroy();\n\n                Widget.fn.destroy.call(that);\n\n                kendo.destroy(that.wrapper);\n\n                that.dialogWrapper.remove();\n                that.dialogWrapper = that.wrapper = that.element = $();\n            },\n\n            _destroy: function() {\n                var that = this;\n                var ns = \".\" + NS;\n\n                that.wrapper.off(ns);\n                that.element.off(ns);\n                that.wrapper.find(KCLOSE + \",\" + KBUTTONGROUP + \" > \" + KBUTTON).off(ns);\n                that._stopCenterOnResize();\n            },\n\n            title: function(html) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    titlebar = wrapper.children(KDIALOGTITLEBAR),\n                    title = titlebar.children(KDIALOGTITLE),\n                    encodedHtml = encode(html);\n\n                if (!arguments.length) {\n                    return title.html();\n                }\n\n                if (html === false) {\n                    titlebar.remove();\n                } else {\n                    if (!titlebar.length) {\n                        titlebar = $(templates.titlebar(options)).prependTo(wrapper);\n                        title = titlebar.children(KDIALOGTITLE);\n                    }\n                    title.html(encodedHtml);\n                }\n\n                that.options.title = encodedHtml;\n\n                return that;\n            },\n\n            content: function(html) {\n                var that = this,\n                    content = that.wrapper.children(KCONTENTSELECTOR);\n\n                if (!defined(html)) {\n                    return content.html();\n                }\n\n                kendo.destroy(content.children());\n                content.html(html);\n\n                that.options.content = html;\n\n                return that;\n            },\n\n            _focusDialog: function() {\n                var firstModal = this._object(this._modals().first());\n\n                this._previousFocus = firstModal && firstModal._previousFocus ? firstModal._previousFocus : document.activeElement;\n\n                if (this._defaultFocus) {\n                    this._focus(this._defaultFocus);\n                }\n                this._tabKeyTrap.trap();\n            },\n\n            _focus: function(node) {\n                if (node) {\n                    node.focus();\n                }\n            },\n\n            events: [\n                INITOPEN,\n                OPEN,\n                CLOSE,\n                SHOW,\n                HIDE\n            ],\n\n            options: {\n                title: \"\",\n                buttonLayout: \"stretched\",\n                themeColor: \"\",\n                actions: [],\n                modal: true,\n                size: \"auto\",\n                width: null,\n                height: null,\n                minWidth: 0,\n                minHeight: 0,\n                maxWidth: Infinity,\n                maxHeight: Infinity,\n                content: null,\n                visible: null,\n                appendTo: BODY,\n                closable: true\n            }\n        });\n\n        var Dialog = DialogBase.extend({\n            options: {\n                name: \"Dialog\",\n                messages: {\n                    close: \"Close\"\n                }\n            }\n        });\n\n        kendo.ui.plugin(Dialog);\n\n        var PopupBox = DialogBase.extend({\n            _init: function(element, options) {\n                var that = this;\n\n                that.wrapperTemplate = templates.alertWrapper;\n                options._defaultFocus = null;\n                that._ensureContentId(element);\n\n                DialogBase.fn._init.call(that, element, options);\n\n                that.bind(HIDE, that.destroy.bind(that));\n\n                that._ariaDescribedBy();\n                that._initFocus();\n            },\n\n            _ensureContentId: function(element) {\n                var node = $(element);\n                if (!node.attr(\"id\")) {\n                    node.attr(\"id\", kendo.guid() + \"_k-popup\");\n                }\n            },\n\n            _ariaDescribedBy: function() {\n                this.wrapper.attr(\"aria-describedby\", this.element.attr(\"id\"));\n            },\n\n            _initFocus: function() {\n                var o = this.options;\n\n                this._defaultFocus = this._chooseEntryFocus();\n                if (this._defaultFocus && o.visible && o.modal) {\n                    this._focusDialog();\n                }\n            },\n\n            _chooseEntryFocus: function() {\n                return this.wrapper.find(KBUTTONGROUP + \" > \" + KBUTTON)[0];\n            },\n\n            options: {\n                title: window.location.host,\n                closable: false,\n                messages: messages\n            }\n        });\n\n        var Alert = PopupBox.extend({\n            _init: function(element, options) {\n                var that = this;\n                PopupBox.fn._init.call(that, element, options);\n            },\n\n            options: {\n                name: \"Alert\",\n                modal: true,\n                actions: [{\n                    text: ({ messages }) => `${encode(messages.okText)}`\n                }]\n            }\n        });\n\n        kendo.ui.plugin(Alert);\n\n        var kendoAlert = function(text) {\n            return $(templates.alert).kendoAlert({ content: text }).data(\"kendoAlert\").open();\n        };\n\n        var Confirm = PopupBox.extend({\n            _init: function(element, options) {\n                var that = this;\n                PopupBox.fn._init.call(that, element, options);\n                that.result = $.Deferred();\n            },\n\n            options: {\n                name: \"Confirm\",\n                modal: true,\n                actions: [{\n                    text: ({ messages }) => `${encode(messages.okText)}`,\n                    primary: true,\n                    action: function(e) {\n                        e.sender.result.resolve();\n                    }\n                }, {\n                    text: ({ messages }) => `${encode(messages.cancel)}`,\n                    action: function(e) {\n                        e.sender.result.reject();\n                    }\n                }]\n            }\n        });\n\n        kendo.ui.plugin(Confirm);\n\n        var kendoConfirm = function(text) {\n            var confirmDialog = $(templates.confirm).kendoConfirm({ content: text }).data(\"kendoConfirm\").open();\n            return confirmDialog.result;\n        };\n\n        var Prompt = PopupBox.extend({\n            _init: function(element, options) {\n                var that = this;\n                PopupBox.fn._init.call(that, element, options);\n                that._createPrompt();\n                that.result = $.Deferred();\n            },\n\n            _createPrompt: function() {\n                var value = this.options.value,\n                    promptContainer = $(templates.promptInputContainer(this.options)).insertAfter(this.element);\n\n                this.input = new kendo.ui.TextBox(promptContainer.find(\"input\"));\n\n                if (value) {\n                    this.input.value(value);\n                }\n\n                this._defaultFocus = this._chooseEntryFocus();\n                this._focusDialog();\n            },\n\n            _chooseEntryFocus: function() {\n                return this.wrapper.find(KTEXTBOX)[0];\n            },\n\n            options: {\n                name: \"Prompt\",\n                modal: true,\n                value: \"\",\n                actions: [{\n                    text: ({ messages }) => `${encode(messages.okText)}`,\n                    primary: true,\n                    action: function(e) {\n                        var sender = e.sender,\n                            value = sender.input.value();\n\n                        sender.result.resolve(value);\n                    }\n                }, {\n                    text: ({ messages }) => `${encode(messages.cancel)}`,\n                    action: function(e) {\n                        var sender = e.sender,\n                            value = sender.input.value();\n\n                        e.sender.result.reject(value);\n                    }\n                }]\n            }\n        });\n\n        kendo.ui.plugin(Prompt);\n\n        var kendoPrompt = function(text, value) {\n            var promptDialog = $(templates.prompt).kendoPrompt({\n                content: text,\n                value: value\n            }).data(\"kendoPrompt\").open();\n\n            return promptDialog.result;\n        };\n\n        templates = {\n            wrapper: template((options) => `<div class='k-dialog-wrapper'>${options.modal ? '<div class=\"k-overlay\"></div>' : ''}<div class='k-window k-dialog' role='dialog'></div></div>`),\n            action: template((data, text) => `<button type='button' class='k-button k-button-md k-rounded-md k-button-solid ${data.primary ? 'k-button-solid-primary' : 'k-button-solid-base'}'><span class=\"k-button-text\">${encode(text)}</span></button>`),\n            titlebar: template(({ title }) =>\n                \"<div class='k-window-titlebar k-dialog-titlebar'>\" +\n                    `<span class='k-window-title k-dialog-title'>${encode(title)}</span>` +\n                    \"<div class='k-window-titlebar-actions k-dialog-titlebar-actions'></div>\" +\n                \"</div>\"\n            ),\n            close: template(({ messages }) => `<button class=\"k-window-titlebar-action k-dialog-titlebar-action k-button k-button-md k-button-flat k-button-flat-base k-rounded-md k-icon-button\" data-role=\"close\" title='${encode(messages.close)}' aria-label='${encode(messages.close)}' tabindex='-1'>\n                                                    ${kendo.ui.icon({ icon: \"x\", iconClass: \"k-button-icon\" })}\n                                                </button>`),\n            actionbar: template(({ buttonLayout }) => `<div class='k-dialog-actions k-actions k-actions-horizontal k-window-actions k-actions-${encode(buttonLayout)}'></div>`),\n            alertWrapper: template(() => \"<div class='k-dialog-wrapper'><div class='k-overlay'></div><div class='k-window k-dialog' role='alertdialog'></div></div>\"),\n            alert: \"<div></div>\",\n            confirm: \"<div></div>\",\n            prompt: \"<div></div>\",\n            promptInputContainer: template(({ messages }) => `<div class='k-prompt-container'><input type='text' title='${encode(messages.promptInput)}' aria-label='${encode(messages.promptInput)}' /></div>`)\n        };\n\n        kendo.alert = kendoAlert;\n        kendo.confirm = kendoConfirm;\n        kendo.prompt = kendoPrompt;\n\n    })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}