{"version":3,"sources":["raw-mjs/kendo.listview.js"],"names":["__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","CHANGE","CANCEL","DATABOUND","DATABINDING","Widget","ui","keys","EMPTY_STRING_TEMPLATE","FOCUSSELECTOR","PROGRESS","ERROR","FOCUSED","SELECTED","KEDITITEM","PAGER_CLASS","ITEM_CLASS","ARIA_ROLE","ARIA_LABEL","ARIA_MULTISELECTABLE","ARIA_ACTIVEDESCENDANT","EDIT","REMOVE","SAVE","TOUCHSTART","NS","activeElement","_activeElement","progress","DataSource","data","ListView","DataBoundWidget","extend","init","element","options","that","this","Array","isArray","dataSource","fn","call","wrapper","_itemId","guid","_element","_layout","_dataSource","_setContentHeight","_templates","_navigatable","_selectable","_pageable","_crudHandlers","_scrollable","autoBind","fetch","notify","events","ariaLabel","selectable","navigatable","pageable","height","template","altTemplate","editTemplate","contentTemplate","contentElement","bordered","borders","layout","flex","direction","wrap","grid","scrollable","setOptions","destroy","_item","action","content","children","items","dataItem","attr","uid","closest","getByUid","setDataSource","_bindScrollable","_unbindDataSource","unbind","_refreshHandler","_progressHandler","_errorHandler","isPlainObject","pageSize","refresh","bind","_progress","_error","create","toggle","opacity","addClass","document","createElement","appendTo","css","elementClassNames","contentClassNames","add","removeClass","index","className","indexOf","push","contentPadding","cols","rows","rowHeight","gutter","join","is","innerHeight","e","item","idx","length","view","html","role","active","endlessAppend","_endlessFetchInProgress","_skipRerenderItemsCount","trigger","_destroyEditable","append","not","_ariaAttributes","eq","total","_focusNext","current","next","find","removeAttr","_hasBindingTarget","editable","filter","replaceWith","_ariaLabelValue","Selectable","parseOptions","multiple","pagerWrap","settings","position","format","prependTo","pager","Pager","pagerId","multi","aria","change","on","target","keyCode","SPACEBAR","currentTarget","preventDefault","ctrlKey","hasClass","clear","value","originalPageSize","_endlessPageSize","off","scrollTop","clientHeight","scrollHeight","endless","candidate","_current","_scrollTo","container","UseJQueryoffset","SCROLL","scrollDirectionFunc","dimension","elementOffset","offset","toLowerCase","elementDimension","containerScrollAmount","containerDimension","_tabindex","key","canHandle","isTextBox","editItem","ESC","ENTER","UP","LEFT","prev","DOWN","RIGHT","PAGEUP","page","PAGEDOWN","HOME","END","blur","save","one","edit","cancel","focusElement","clearSelection","select","first","_modelFromElement","_closeEditable","kendoEditable","model","clearContainer","errorTemplate","end","sync","remove","cancelChanges","hide","insert","touchstartNs","clickNs","setTimeout","plugin","jQuery","kendo$1"],"mappings":";;;;;;;;MAAA,wBACA,4BACA,8BACA,mBAEA,IAAAA,SAAA,CACAC,GAAA,WACAC,KAAA,WACAC,SAAA,MACAC,YAAA,qEACAC,QAAA,CAAA,QACAC,SAAA,CAAA,CACAL,GAAA,mBACAC,KAAA,UACAE,YAAA,6BACAC,QAAA,CAAA,aACA,CACAJ,GAAA,qBACAC,KAAA,YACAE,YAAA,wBACAC,QAAA,CAAA,eACA,CACAJ,GAAA,kBACAC,KAAA,SACAE,YAAA,qBACAC,QAAA,CAAA,aAIA,SAAAE,EAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAA,SAEAC,EAAA,SACAC,EAAA,YACAC,EAAA,cACAC,EAAAN,EAAAO,GAAAD,OACAE,EAAAR,EAAAQ,KAEAC,EAAA,IADA,GAGAC,EAAA,2BACAC,EAAA,WACAC,EAAA,QACAC,EAAA,UACAC,EAAA,aACAC,EAAA,cACAC,EAAA,mBACAC,EAAA,kBAGAC,EAAA,OACAC,EAAA,aACAC,EAAA,uBACAC,EAAA,wBACAC,EAAA,OACAC,EAAA,SACAC,EAAA,OAGAC,EAAA,aACAC,EAAA,iBACAC,EAAA3B,EAAA4B,eACAC,EAAA7B,EAAAO,GAAAsB,SACAC,EAAA9B,EAAA+B,KAAAD,WAEAE,EAAAhC,EAAAO,GAAA0B,gBAAAC,OAAA,CACAC,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,KAEAF,EAAAG,MAAAC,QAAAJ,GAAA,CAAAK,WAAAL,GAAAA,EAEA/B,EAAAqC,GAAAR,KAAAS,KAAAN,EAAAF,EAAAC,GAEAA,EAAAC,EAAAD,QAEAC,EAAAO,QAAAT,EAAAE,EAAAF,QAEAA,EAAA,GAAA5C,GACA8C,EAAAQ,QAAAV,EAAA,GAAA5C,GAAA,aAEA8C,EAAAQ,QAAA9C,EAAA+C,OAAA,aAGAT,EAAAU,WAEAV,EAAAW,UAEAX,EAAAY,cAEAZ,EAAAa,oBAEAb,EAAAc,aAEAd,EAAAe,eAEAf,EAAAgB,cAEAhB,EAAAiB,YAEAjB,EAAAkB,gBAEAlB,EAAAmB,cAEAnB,EAAAD,QAAAqB,UACApB,EAAAI,WAAAiB,QAGA3D,EAAA4D,OAAAtB,EACA,EAEAuB,OAAA,CACA3D,EACAC,EACAE,EACAD,EACAkB,EACAC,EACAC,EAtFA,gBA0FAa,QAAA,CACA5C,KAAA,WACAqE,UAAA,KACAJ,UAAA,EACAK,YAAA,EACAC,aAAA,EACAC,UAAA,EACAC,OAAA,KACAC,SAAA1D,EACA2D,YAAA,KACAC,aAAA,KACAC,gBAAA,IAAA,8BACAC,eAAA,MACAC,UAAA,EACAC,QAAA,GACAC,OAAA,GACAC,KAAA,CACAC,UAAA,MACAC,KAAA,UAEAC,KAAA,CAAA,EACAC,YAAA,GAGAC,WAAA,SAAA3C,GACA/B,EAAAqC,GAAAqC,WAAApC,KAAAL,KAAAF,GAEAE,KAAAU,UAEAV,KAAAa,aAEAb,KAAAwB,aACAxB,KAAAwB,WAAAkB,UACA1C,KAAAwB,WAAA,MAGAxB,KAAAe,aACA,EAEAF,WAAA,WACA,IAAAf,EAAAE,KAAAF,QAEAE,KAAA4B,SAAAnE,EAAAmE,SAAA9B,EAAA8B,UAAA1D,GACA8B,KAAA6B,YAAApE,EAAAmE,SAAA9B,EAAA+B,aAAA/B,EAAA8B,UAAA1D,GACA8B,KAAA8B,aAAArE,EAAAmE,SAAA9B,EAAAgC,cAAA5D,EACA,EAEAyE,MAAA,SAAAC,GACA,OAAA5C,KAAA6C,QAAAC,WAAAF,IACA,EAEAG,MAAA,WACA,OAAA/C,KAAA6C,QAAAC,SAAA,wBACA,EAEAE,SAAA,SAAAnD,GACA,IAAAoD,EAAAxF,EAAAwF,KAAA,OACAC,EAAA3F,EAAAsC,GAAAsD,QAAA,IAAAF,EAAA,KAAAA,KAAAA,GAEA,OAAAjD,KAAAG,WAAAiD,SAAAF,EACA,EAEAG,cAAA,SAAAlD,GACAH,KAAAF,QAAAK,WAAAA,EACAH,KAAAW,cAEAX,KAAAgB,YAEAhB,KAAAF,QAAAqB,UACAhB,EAAAiB,QAGA,YAAApB,KAAAF,QAAA0C,YACAxC,KAAAsD,iBAEA,EAEAC,kBAAA,WACA,IAAAxD,EAAAC,KAEAD,EAAAI,WAAAqD,OAAA7F,EAAAoC,EAAA0D,iBACAD,OAAApF,EAAA2B,EAAA2D,kBACAF,OAAAnF,EAAA0B,EAAA4D,cACA,EAEAhD,YAAA,WACA,IAAAZ,EAAAC,KACA0B,EAAA3B,EAAAD,QAAA4B,SACAvB,EAAAJ,EAAAD,QAAAK,YAAA,CAAA,EAEA5C,EAAAqG,cAAAlC,IAAAA,EAAAmC,WAAArG,IACA2C,EAAA0D,SAAAnC,EAAAmC,UAGA9D,EAAAI,YAAAJ,EAAA0D,gBACA1D,EAAAwD,qBAEAxD,EAAA0D,gBAAA1D,EAAA+D,QAAAC,KAAAhE,GACAA,EAAA2D,iBAAA3D,EAAAiE,UAAAD,KAAAhE,GACAA,EAAA4D,cAAA5D,EAAAkE,OAAAF,KAAAhE,IAGAA,EAAAI,WAAAZ,EAAA2E,OAAA/D,GACA4D,KAAApG,EAAAoC,EAAA0D,iBACAM,KAAA3F,EAAA2B,EAAA2D,kBACAK,KAAA1F,EAAA0B,EAAA4D,cACA,EAEAK,UAAA,SAAAG,GACA,IAAAtE,EAAAG,KAAAM,QACA6D,GAAAnE,KAAA6C,QAAAlB,WACA9B,EAAAG,KAAA6C,SAEAvD,EAAAO,EAAAsE,EAAA,CAAAC,SAAA,GACA,EAEAH,OAAA,WACA3E,EAAAU,KAAA6C,SAAA,EACA,EAEApC,SAAA,WACA,IAAAX,EAAAE,KAAAF,QACA6B,EAAA7B,EAAA6B,OAEA3B,KAAAH,QAAAwE,SAAA,cAGAvE,EAAAkC,eACAhC,KAAA6C,QAAAtF,EAAA+G,SAAAC,cAAAzE,EAAAkC,iBAAAwC,SAAAxE,KAAAH,SAEAG,KAAA6C,QAAA7C,KAAAH,QAGA8B,GACA3B,KAAAH,QAAA4E,IAAA,SAAA9C,EAEA,EAEAjB,QAAA,WACA,IAAAX,EAAAC,KACAF,EAAAC,EAAAD,QACAsC,EAAAtC,EAAAsC,KACAG,EAAAzC,EAAAyC,KACA1C,EAAAE,EAAAF,QACA6E,EAAA,CAAA,cACA7B,EAAA9C,EAAA8C,QACA8B,EAAA,CAAA,sBAEA9E,EAAA+E,IAAA/B,GAAAgC,aAAA,SAAAC,EAAAC,GACA,GAAAA,EAAAC,QAAA,OAAA,EACA,OAAA,CAEA,KAGA,IAAAlF,EAAAmC,UACAyC,EAAAO,KAAA,uBAGA,iBAAAnF,EAAAoC,SAnPA,KAmPApC,EAAAoC,SACAwC,EAAAO,KAAA,sBAAAnF,EAAAoC,SAKA,iBAAApC,EAAAoF,gBAzPA,KAyPApF,EAAAoF,gBACAP,EAAAM,KAAA,8BAAAnF,EAAAoF,gBAGA,iBAAApF,EAAAqC,QA7PA,KA6PArC,EAAAqC,QACAwC,EAAAM,KAAA,OAAAnF,EAAAqC,QAGA,SAAArC,EAAAqC,QAAA,iBAAAC,IACA,iBAAAA,EAAAC,WAAA,KAAAD,EAAAC,WACAsC,EAAAM,KAAA,UAAA7C,EAAAC,WAGA,iBAAAD,EAAAE,MAAA,KAAAF,EAAAE,MACAqC,EAAAM,KAAA,UAAA7C,EAAAE,OAIA,SAAAxC,EAAAqC,QAAA,iBAAAI,IACA,iBAAAA,EAAA4C,KACAtC,EAAA4B,IAAA,wBAAA,UAAAlC,EAAA4C,KAAA,UACA,iBAAA5C,EAAA4C,MACAtC,EAAA4B,IAAA,wBAAAlC,EAAA4C,MAGA,iBAAA5C,EAAA6C,KACAvC,EAAA4B,IAAA,qBAAA,UAAAlC,EAAA6C,KAAA,MAAA7C,EAAA8C,YAAA7H,EAAA+E,EAAA8C,UAAA,OAAA,KACA,iBAAA9C,EAAA6C,MACAvC,EAAA4B,IAAA,qBAAAlC,EAAA6C,OAGA,iBAAA7C,EAAA+C,QAEA,iBAAA/C,EAAA+C,SADAzC,EAAA4B,IAAA,WAAAlC,EAAA+C,SAMAvF,EAAAF,QAAAwE,SAAAK,EAAAa,KAAA,MACAxF,EAAA8C,QAAAwB,SAAAM,EAAAY,KAAA,KAEA,EAEA3E,kBAAA,WACA,IAEAe,EAFA5B,EAAAC,KACAD,EAAAD,QAGA0C,YAAAzC,EAAAO,QAAAkF,GAAA,cAEA7D,EAAA5B,EAAAO,QAAAmF,cACA1F,EAAA8C,QAAAlB,OAAAA,GAEA,EAEAmC,QAAA,SAAA4B,GACA,IAEAlG,EACAuD,EACA4C,EAEAC,EACAC,EAPA9F,EAAAC,KACA8F,EAAA/F,EAAAI,WAAA2F,OAIAC,EAAA,GAGAnE,EAAA7B,EAAA6B,SACAC,EAAA9B,EAAA8B,YAEAmE,EADAjG,EAAAD,QACA0B,WAAA,SAAA,WACAyE,EAAA7G,IACA8G,EAAAnG,EAAAoG,wBACArB,EAAAoB,EAAAnG,EAAAqG,wBAAA,EACA5D,EAAAzC,EAAAD,QAAA0C,WAIA,GAAA,gBAFAkD,EAAAA,GAAA,CAAA,GAEA9C,QAsBA,IAAA7C,EAAAsG,QAAAvI,EAAA,CAAA8E,OAAA8C,EAAA9C,QAAA,SAAAG,MAAA2C,EAAA3C,MAAA+B,MAAAY,EAAAZ,QAAA,CAQA,IAJAoB,GACAnG,EAAAuG,mBAGAV,EAAAd,EAAAe,EAAAC,EAAAD,OAAAD,EAAAC,EAAAD,IAEAG,GADAH,EAAA,EACA/D,EAAAiE,EAAAF,IAEAhE,EAAAkE,EAAAF,IAcA,IAVAM,EACAnG,EAAA8C,QAAA0D,OAAAR,GAEAhG,EAAA8C,QAAAkD,KAAAA,GAGAhD,EAAAhD,EAAAgD,QAAAyD,IAAA,mBAEAzG,EAAA0G,gBAAAX,EAAAD,QAEAD,EAAAd,EAAAe,EAAAC,EAAAD,OAAAD,EAAAC,EAAAD,KACAD,EAAA5C,EAAA2D,GAAAd,IAEAvB,SAAA3F,GAEAiH,EAAA1C,KAAAxF,EAAAwF,KAAA,OAAA6C,EAAAF,GAAA1C,KACAD,KAAAtE,EAAAqH,GAEAjG,EAAAD,QAAA0B,YACAmE,EAAA1C,KAAA,gBAAA,SAGAlD,EAAAD,QAAA4B,WACAiE,EAAA1C,KAtXA,eAsXAlD,EAAAI,WAAAwG,SACAhB,EAAA1C,KAtXA,gBAsXAlD,EAAAI,WAAA6E,QAAAjF,EAAAiD,SAAA2C,IAAA,IAIA5F,EAAA8C,QAAA,KAAAoD,GAAAlG,EAAAD,QAAA2B,cACA1B,EAAA6G,WACA7G,EAAA8G,QAAA9G,EAAA8G,UAAAC,QAEAtE,GACAzC,EAAA8G,QAAA9D,EAAA2D,GAAA,KAKA3G,EAAAF,QAAAoD,KAAAnE,IACA,IAAAiB,EAAAF,QAAAkH,KAAA,IAAAhH,EAAAF,QAAAoD,KAAAnE,IAAA+G,QACA9F,EAAAF,QAAAmH,WAAAlI,GAGAiB,EAAAa,oBAEAb,EAAAiE,WAAA,GACAjE,EAAAoG,wBAAA,KAEApG,EAAAsG,QAAAxI,EAAA,CAAA+E,OAAA8C,EAAA9C,QAAA,SAAAG,MAAA2C,EAAA3C,MAAA+B,MAAAY,EAAAZ,OA9DA,OAvBA/E,EAAAkH,qBAAAlH,EAAAmH,WACA1H,EAAAkG,EAAA3C,MAAA,IACA4C,EAAA5F,EAAAgD,QAAAoE,OAAA,IAAA1J,EAAAwF,KAAA,OAAA,IAAAzD,EAAA0D,IAAA,MAEA2C,OAAA,IACAD,EAAAD,EAAAb,QAEAa,EAAAyB,YAAAxF,EAAApC,KACAmG,EAAA5F,EAAAgD,QAAA2D,GAAAd,IACA3C,KAAAxF,EAAAwF,KAAA,OAAAzD,EAAA0D,KAEAnD,EAAAsG,QAAA,aAAA,CACAV,KAAAA,EACAnG,KAAAA,KAyEA,EAEAiH,gBAAA,SAAAZ,GACA,IAAAhD,EAAA7C,KAAA6C,QAEArB,EADAxB,KAAAF,QACA0B,WAEAxB,KAAAqH,gBAAArH,KAAAqH,iBAAArH,KAAAF,QAAAyB,UAEA,IAAAsE,GACAhD,EAAAmE,WAAArI,GACAkE,EAAAmE,WAAAnI,GAEAgE,EAAAI,KAAArE,KACAoB,KAAAqH,gBAAAxE,EAAAI,KAAArE,GACAiE,EAAAmE,WAAApI,MAGAiE,EAAAI,KAAAtE,EAAA6C,EAAA,UAAA,QAEAA,GAAA/D,EAAAO,GAAAsJ,WAAAC,aAAA/F,GAAAgG,UACA3E,EAAAI,KAAApE,GAAA,GAGAmB,KAAAqH,iBACAxE,EAAAI,KAAArE,EAAAoB,KAAAqH,iBAGA,EAEArG,UAAA,WACA,IAGAyG,EACAC,EAJA3H,EAAAC,KACA0B,EAAA3B,EAAAD,QAAA4B,SACAD,EAAA1B,EAAAD,QAAA2B,YAIAC,KAIA+F,EAAA1H,EAAAO,QAAAyG,KAlcA,IAkcAtI,IAEAoH,SACA4B,EAAAlK,EAAA,WAAA8G,SAAA5F,IAGA,QAAAiD,EAAAiG,SACAF,EACApD,SAAA5G,EAAAmK,OAAA,UAAAnJ,EAAAiD,EAAAiG,WACAE,UAAA9H,EAAAO,SAEAmH,EAAAjD,SAAAzE,EAAAO,SAGAP,EAAA+H,OACA/H,EAAA+H,MAAApF,UAGA,iBAAAhB,GAAAA,aAAAjE,EAAAO,GAAA+J,MACAhI,EAAA+H,MAAApG,GAEA+F,EAAA/F,EAAAsG,QAAAzK,EAAA,IAAAmE,EAAAsG,SAAAP,EAEAC,EAAAnK,EAAAoC,OAAA,CAAA,EAAA+B,EAAA,CACAvB,WAAAJ,EAAAI,WACAsB,YAAAA,EACAuG,QAAA,OAGAjI,EAAA+H,MAAA,IAAArK,EAAAO,GAAA+J,MAAAN,EAAAC,IAEA,EAEA3G,YAAA,WACA,IACAkH,EACApB,EAFA9G,EAAAC,KAGAwB,EAAAzB,EAAAD,QAAA0B,WACAC,EAAA1B,EAAAD,QAAA2B,YAEAD,IACAyG,EAAAxK,EAAAO,GAAAsJ,WAAAC,aAAA/F,GAAAgG,SAEAzH,EAAAyB,WAAA,IAAA/D,EAAAO,GAAAsJ,WAAAvH,EAAAF,QAAA,CACAqI,MAAA,EACAV,SAAAS,EACAd,OAAApH,EAAAD,QAAAkC,eAAA,uBAAA7D,EAAAA,EACAgK,OAAA,WACApI,EAAAsG,QAAA1I,EACA,IAGA8D,GACA1B,EAAAF,QAAAuI,GAAA,UAAAjJ,GAAA,SAAAuG,GAEA,GAAAnI,EAAAmI,EAAA2C,QAAA7C,GAAAzF,EAAAF,UAEA6F,EAAA4C,UAAArK,EAAAsK,SAAA,CAOA,GANA1B,EAAA9G,EAAA8G,UAEAnB,EAAA2C,QAAA3C,EAAA8C,eACA9C,EAAA+C,iBAGAR,EACA,GAAAvC,EAAAgD,SAGA,GAAA7B,GAAAA,EAAA8B,SAAApK,GAGA,OAFAsI,EAAAhC,YAAAtG,QACAwB,EAAAsG,QAAA1I,QAJAoC,EAAAyB,WAAAoH,aASA7I,EAAAyB,WAAAoH,QAGA7I,EAAAyB,WAAAqH,MAAAhC,GACA9G,EAAAsG,QAAA1I,EACA,CACA,IAGA,EAEAuD,YAAA,WACA,IAAAnB,EAAAC,KACAwC,EAAAzC,EAAAD,QAAA0C,WAEAA,IAEAzC,EAAA8C,QAAA4B,IAAA,CACA,aAAA,SACAkD,SAAA,WACA,6BAAA,UAGA,YAAAnF,GACAzC,EAAAuD,kBAGA,EAEAA,gBAAA,WACA,IAAAvD,EAAAC,KACA8I,EAAA/I,EAAAgJ,iBAAAhJ,EAAAI,WAAAL,QAAA+D,SAEA9D,EAAA8C,QACAmG,IAAA,SAAA7J,GACAiJ,GAAA,SAAAjJ,GAAA,WACAa,KAAAiJ,UAAAjJ,KAAAkJ,aAAAlJ,KAAAmJ,eAAA,KACApJ,EAAAoG,yBACApG,EAAAgJ,iBAAAhJ,EAAAI,WAAAwG,UACA5G,EAAAqG,wBAAArG,EAAAgJ,iBACAhJ,EAAAgJ,iBAAAhJ,EAAAqG,wBAAA0C,EACA/I,EAAAI,WAAAL,QAAAsJ,SAAA,EACArJ,EAAAoG,yBAAA,EACApG,EAAAI,WAAA0D,SAAA9D,EAAAgJ,kBAEA,GACA,EAEAlC,QAAA,SAAAwC,GACA,IAAAtJ,EAAAC,KACAH,EAAAE,EAAAF,QACAgH,EAAA9G,EAAAuJ,SACArM,EAAA8C,EAAAQ,QAEA,GAAA8I,IAAA7L,EACA,OAAAqJ,EAGAA,GAAAA,EAAA,KACAA,EAAA,GAAA5J,KAAAA,GACA4J,EAAAG,WAAA,MAGAH,EAAAhC,YAAAvG,GACAuB,EAAAmH,WAAAlI,IAGAuK,GAAAA,EAAA,KACApM,EAAAoM,EAAA,GAAApM,IAAAA,EAEA8C,EAAAwJ,UAAAF,EAAA,IAEAxJ,EAAAoD,KAAAnE,EAAA7B,GACAoM,EAAAhF,SAAA/F,GAAA2E,KAAA,KAAAhG,IAGA8C,EAAAuJ,SAAAD,CACA,EAEAE,UAAA,SAAA1J,GACA,IAEA2J,EADA3G,EADA7C,KACA6C,QAEA4G,GAAA,EACAC,EAAA,SAEA,SAAA7G,EAAA4B,IAAA,aAAA5B,EAAA4B,IAAA,cAAAiF,GAAA7G,EAAA4B,IAAA,gBAAAiF,EACAF,EAAA3G,EAAA,IAEA2G,EAAA9L,OACA+L,GAAA,GAGA,IAAAE,EAAA,SAAAtH,EAAAuH,GAEA,IAAAC,EAAAJ,EAAAlM,EAAAsC,GAAAiK,SAAAzH,EAAA0H,eAAAlK,EAAA,SAAAwC,GACA2H,EAAAnK,EAAA,SAAA+J,GACAK,EAAA1M,EAAAiM,GAAAE,EAAArH,KACA6H,EAAA3M,EAAAiM,GAAAI,EAAAG,iBAEAF,EAAAG,EAAAC,EAAAC,EACA3M,EAAAiM,GAAAE,EAAArH,GAAAwH,EAAAG,EAAAE,GACAL,EAAAI,GACA1M,EAAAiM,GAAAE,EAAArH,GAAAwH,EAEA,EAEAF,EAAA,MAAA,UACAA,EAAA,OAAA,QACA,EAEA7I,aAAA,WACA,IAAAf,EAAAC,KACAyB,EAAA1B,EAAAD,QAAA2B,YACA5B,EAAAE,EAAAF,QACAgD,EAAA9C,EAAA8C,QAQApB,IACA1B,EAAAoK,YAEAtK,EACAuI,GAAA,QAAAjJ,GAAA,WACA,IAAA0H,EAAA9G,EAAAuJ,SAEAzC,GAAAA,EAAArB,GAAA,cACAqB,EAAA9G,EAAA4C,MAAA,UAGA5C,EAAA8G,QAAAA,EACA,IACAuB,GAAA,WAAAjJ,GAAA,WACAY,EAAAuJ,UACAvJ,EAAAuJ,SAAAzE,YAAAvG,EAEA,IACA8J,GAAA,UAAAjJ,EAAAY,GAAA,SAAA2F,GACA,IAOAE,EAPAwE,EAAA1E,EAAA4C,QACAzB,EAAA9G,EAAA8G,UACAwB,EAAA9K,EAAAmI,EAAA2C,QACAgC,GAAAhC,EAAA7C,GAAA,4CACA8E,EAAAjC,EAAA7C,GAAA,oBACAiD,EAAAhL,EAAAgL,eACA8B,EAAA1H,EAAAkE,KAAA,IAAAvI,GACAyH,EAAA7G,IACAoD,EAAAzC,EAAAD,QAAA0C,WAEA,KAAA6F,EAAAM,SAAAlK,KAAA4L,IAAAC,GAAAF,IAAAnM,EAAAuM,KAAAF,GAAAF,IAAAnM,EAAAuM,KAAAJ,IAAAnM,EAAAwM,OAAA,CA4DA,GAxDAL,IAAAnM,EAAAyM,IAAAN,IAAAnM,EAAA0M,OACA9D,GAAAA,EAAA,KACAA,EAAAA,EAAA+D,QAGA/D,GAAAA,EAAA,GACA9G,EAAA8G,QAAAA,GAEArE,GACAzC,EAAA8G,QAAA9G,EAAA4C,MAAA,SAEA8F,EAAA/C,IAGA0E,IAAAnM,EAAA4M,MAAAT,IAAAnM,EAAA6M,QACAtI,EACA,YAAAzC,EAAAD,QAAA0C,YAAAqE,EAAAC,OAAAjB,QAIAgB,EAAAA,EAAAC,SAEAD,EAAA,IACA9G,EAAA8G,QAAAA,IANA9G,EAAA8C,QAAA,GAAAoG,UAAAlJ,EAAA8C,QAAA,GAAAsG,aACApJ,EAAA6G,YAAA,IAUAC,EAAAA,EAAAC,OACA/G,EAAA8G,QAAAA,GAAAA,EAAA,GAAAA,EAAA9G,EAAA4C,MAAA,WAEA8F,EAAA/C,IAGA0E,IAAAnM,EAAA8M,SACAhL,EAAA8G,QAAA,MACA9G,EAAAI,WAAA6K,KAAAjL,EAAAI,WAAA6K,OAAA,GACAvC,EAAA/C,IAGA0E,IAAAnM,EAAAgN,WACAlL,EAAA8G,QAAA,MACA9G,EAAAI,WAAA6K,KAAAjL,EAAAI,WAAA6K,OAAA,GACAvC,EAAA/C,IAGA0E,IAAAnM,EAAAiN,OACAnL,EAAA8G,QAAA9G,EAAA4C,MAAA,UACA8F,EAAA/C,IAGA0E,IAAAnM,EAAAkN,MACApL,EAAA8G,QAAA9G,EAAA4C,MAAA,SACA8F,EAAA/C,IAGA0E,IAAAnM,EAAAwM,MACA,GAAA,IAAAF,EAAA1E,SAAAwE,GAAAC,GAAA,CACA1E,EAAA7F,EAAAgD,QAAA+B,MAAAyF,GAEAtE,GACAA,EAAAmF,OAGArL,EAAAsL,OAOAtL,EAAAuL,IAAA,aALA,WACAvL,EAAAF,QAAAwG,QAAA,SACAtG,EAAA8G,QAAA9G,EAAAgD,QAAA2D,GAAAd,GACA,GAGA,MAAA7F,EAAAD,QAAAgC,cACA/B,EAAAwL,KAAA1E,GAIA,GAAAuD,IAAAnM,EAAAuM,IAAA,CAGA,GAAA,KAFAD,EAAA1H,EAAAkE,KAAA,IAAAvI,IAEAqH,OACA,OAGAD,EAAA7F,EAAAgD,QAAA+B,MAAAyF,GACAxK,EAAAyL,SACAzL,EAAAF,QAAAwG,QAAA,SACAtG,EAAA8G,QAAA9G,EAAAgD,QAAA2D,GAAAd,GACA,CA1FA,CA2FA,IAEA/F,EAAAuI,GAlvBA,YAkvBAjJ,EAAA,IAAAD,EAAAC,EAAAY,EAAAD,QAAAkC,eAAA,uBAAA7D,EAAAA,EAnIA,SAAAuH,GACA3F,EAAA8G,QAAAtJ,EAAAmI,EAAA8C,gBACAjL,EAAAmI,EAAA2C,QAAA7C,GAAA,8DACA/H,EAAAgO,aAAA5L,EAEA,EA8HAkE,KAAAhE,IAEA,EAEA2L,eAAA,WACA1L,KACAwB,WAAAoH,OACA,EAEA+C,OAAA,SAAA5I,GACA,IACAvB,EADAxB,KACAwB,WAIA,OAFAuB,EAAAxF,EAAAwF,IAEA8C,QACArE,EAAA1B,QAAA0H,WACAhG,EAAAoH,QACA7F,EAAAA,EAAA6I,cAEApK,EAAAqH,MAAA9F,IAIAvB,EAAAqH,OACA,EAEAvC,iBAAA,WACA,IAAAvG,EAAAC,KACAD,EAAAmH,WACAnH,EAAAmH,SAAAxE,iBACA3C,EAAAmH,SAEA,EAEA2E,kBAAA,SAAAhM,GACA,IAAAqD,EAAArD,EAAAoD,KAAAxF,EAAAwF,KAAA,QAEA,OAAAjD,KAAAG,WAAAiD,SAAAF,EACA,EAEA4I,eAAA,WACA,IAIAtM,EACAmG,EACAb,EANA/E,EAAAC,KACAkH,EAAAnH,EAAAmH,SAEAlB,EADAjG,EAAAD,QACA0B,WAAA,SAAA,WAIAI,EAAA7B,EAAA6B,SAqBA,OAnBAsF,IACAA,EAAArH,QAAAiF,QAAA,IACAlD,EAAA7B,EAAA8B,aAGArC,EAAAO,EAAA8L,kBAAA3E,EAAArH,SACAE,EAAAuG,mBAEAxB,EAAAoC,EAAArH,QAAAiF,QACAoC,EAAArH,QAAAuH,YAAAxF,EAAApC,KACAmG,EAAA5F,EAAAgD,QAAA2D,GAAA5B,IACAT,SAAA3F,GACAiH,EAAA1C,KAAAxF,EAAAwF,KAAA,OAAAzD,EAAA0D,KACAyC,EAAA1C,KAAAtE,EAAAqH,GAEAjG,EAAAkH,qBACAxJ,EAAAsG,KAAA4B,EAAAnG,KAGA,CACA,EAEA+L,KAAA,SAAA5F,GACA,IAEA6D,EAEA1E,EAJA/E,EAAAC,KACAR,EAAAO,EAAA8L,kBAAAlG,GAEAzC,EAAA1D,EAAA0D,IAGAnD,EAAAyL,SAGA1G,GADAa,EAAA5F,EAAAgD,QAAAoE,OAAA,IAAA1J,EAAAwF,KAAA,OAAA,IAAAC,EAAA,MACA4B,QACAa,EAAAyB,YAAArH,EAAA+B,aAAAtC,IACAgK,EAAAzJ,EAAAgD,QAAA2D,GAAA5B,GAAAT,SAAA7F,GAAAyE,KAAAxF,EAAAwF,KAAA,OAAAzD,EAAA0D,KACAnD,EAAAmH,SAAAsC,EAAAuC,cAAA,CACAC,MAAAxM,EACAyM,gBAAA,EACAC,eAAA,EACA7D,OAAAtI,IACAP,KAAA,iBAEAO,EAAAsG,QAAAtH,EAAA,CAAAiN,MAAAxM,EAAAmG,KAAA6D,GACA,EAEA6B,KAAA,WACA,IAEAW,EAFAjM,EAAAC,KACAkH,EAAAnH,EAAAmH,SAGA,GAAAA,EAAA,CAIA,IAAAsC,EAAAtC,EAAArH,QACAmM,EAAAjM,EAAA8L,kBAAArC,GAEAtC,EAAAiF,QAAApM,EAAAsG,QAAApH,EAAA,CAAA+M,MAAAA,EAAArG,KAAA6D,MACAzJ,EAAA+L,iBACA/L,EAAAI,WAAAiM,OAPA,CASA,EAEAC,OAAA,SAAA1G,GACA,IAAA5F,EAAAC,KACAG,EAAAJ,EAAAI,WACAX,EAAAO,EAAA8L,kBAAAlG,GAEA5F,EAAAmH,WACA/G,EAAAmM,cAAAvM,EAAA8L,kBAAA9L,EAAAmH,SAAArH,UACAE,EAAA+L,kBAGA/L,EAAAsG,QAAArH,EAAA,CAAAgN,MAAAxM,EAAAmG,KAAAA,MACAA,EAAA1C,KAAA,QAAAlD,EAAAF,QAAAoD,KAAAnE,IACAiB,EAAAF,QAAAmH,WAAAlI,GAGA6G,EAAA4G,OACApM,EAAAkM,OAAA7M,GACAW,EAAAiM,OAEA,EAEAxH,IAAA,WACA,IACA5B,EADAjD,EAAAC,KAEAG,EAAAJ,EAAAI,WACA2E,EAAA3E,EAAA6E,SAAA7E,EAAA2F,QAAA,IAAA,IAEAhB,EAAA,IACAA,EAAA,GAGA/E,EAAAyL,SACAxI,EAAA7C,EAAAqM,OAAA1H,EAAA,CAAA,GACA/E,EAAAwL,KAAAxL,EAAAF,QAAAkH,KAAA,cAAA/D,EAAAE,IAAA,MACA,EAEAsI,OAAA,WACA,IAAAzL,EAAAC,KACAG,EAAAJ,EAAAI,WAEA,GAAAJ,EAAAmH,SAAA,CACA,IAAAsC,EAAAzJ,EAAAmH,SAAArH,QACAmM,EAAAjM,EAAA8L,kBAAArC,GAEAzJ,EAAAsG,QAAAzI,EAAA,CAAAoO,MAAAA,EAAAxC,UAAAA,MACArJ,EAAAmM,cAAAN,GACAjM,EAAA+L,iBAEA,CACA,EAEA7K,cAAA,WACA,IAAAlB,EAAAC,KACAyM,EAAAvN,EAAAC,EACAuN,EAz5BA,QAy5BAvN,EAEAY,EAAA8C,QAAAuF,GAAAqE,EAAA,IAAAC,EAAA,kBAAA,SAAAhH,GACAA,EAAA+C,iBACA,IAAA9C,EAAApI,EAAAyC,MAAAmD,QAAA,IAAA1F,EAAAwF,KAAA,OAAA,KACA0J,YAAA,WACA5M,EAAAwL,KAAA5F,EACA,GACA,IAGA5F,EAAA8C,QAAAuF,GAAAqE,EAAA,IAAAC,EAAA,oBAAA,SAAAhH,GACAA,EAAA+C,iBACA,IAAA9C,EAAApI,EAAAyC,MAAAmD,QAAA,IAAA1F,EAAAwF,KAAA,OAAA,KACA0J,YAAA,WACA5M,EAAAsM,OAAA1G,EACA,GACA,IAEA5F,EAAA8C,QAAAuF,GAAAsE,EAAA,oBAAA,SAAAhH,GACA3F,EAAAsL,OACA3F,EAAA+C,gBACA,IAEA1I,EAAA8C,QAAAuF,GAAAsE,EAAA,oBAAA,SAAAhH,GACA3F,EAAAyL,SACA9F,EAAA+C,gBACA,GACA,EAEA/F,QAAA,WACA,IAAA3C,EAAAC,KAEAjC,EAAAqC,GAAAsC,QAAArC,KAAAN,GAEAA,EAAAwD,oBAEAxD,EAAAuG,mBAEAvG,EAAAF,QAAAmJ,IAAA7J,GACAY,EAAA8C,QAAAmG,IAAA7J,GAEAY,EAAAoG,wBAAApG,EAAAgJ,iBAAAhJ,EAAAqG,wBAAArG,EAAA6G,WAAA,KAEA7G,EAAA+H,OACA/H,EAAA+H,MAAApF,UAGAjF,EAAAiF,QAAA3C,EAAAF,QACA,IAGApC,EAAAO,GAAA4O,OAAAnN,EACA,CA5+BA,CA4+BA/B,OAAAD,MAAAoP,QACA,IAAAC,QAAArP,aAEAqP","file":"kendo.listview.js","sourcesContent":["import './kendo.data.js';\nimport './kendo.editable.js';\nimport './kendo.selectable.js';\nimport './kendo.pager.js';\n\nvar __meta__ = {\n    id: \"listview\",\n    name: \"ListView\",\n    category: \"web\",\n    description: \"The ListView widget offers rich support for interacting with data.\",\n    depends: [ \"data\" ],\n    features: [ {\n        id: \"listview-editing\",\n        name: \"Editing\",\n        description: \"Support for record editing\",\n        depends: [ \"editable\" ]\n    }, {\n        id: \"listview-selection\",\n        name: \"Selection\",\n        description: \"Support for selection\",\n        depends: [ \"selectable\" ]\n    }, {\n        id: \"listview-paging\",\n        name: \"Paging\",\n        description: \"Support for paging\",\n        depends: [ \"pager\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        CHANGE = \"change\",\n        KENDO_KEYDOWN = \"kendoKeydown\",\n        CANCEL = \"cancel\",\n        DATABOUND = \"dataBound\",\n        DATABINDING = \"dataBinding\",\n        Widget = kendo.ui.Widget,\n        keys = kendo.keys,\n        EMPTY_STRING = \"\",\n        EMPTY_STRING_TEMPLATE = () => EMPTY_STRING,\n        DOT = \".\",\n        FOCUSSELECTOR = \"> *:not(.k-loading-mask)\",\n        PROGRESS = \"progress\",\n        ERROR = \"error\",\n        FOCUSED = \"k-focus\",\n        SELECTED = \"k-selected\",\n        KEDITITEM = \"k-edit-item\",\n        PAGER_CLASS = \"k-listview-pager\",\n        ITEM_CLASS = \"k-listview-item\",\n        ARIA_SETSIZE = \"aria-setsize\",\n        ARIA_POSINSET = \"aria-posinset\",\n        ARIA_ROLE = \"role\",\n        ARIA_LABEL = \"aria-label\",\n        ARIA_MULTISELECTABLE = \"aria-multiselectable\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        EDIT = \"edit\",\n        REMOVE = \"remove\",\n        SAVE = \"save\",\n        MOUSEDOWN = \"mousedown\",\n        CLICK = \"click\",\n        TOUCHSTART = \"touchstart\",\n        NS = \".kendoListView\",\n        activeElement = kendo._activeElement,\n        progress = kendo.ui.progress,\n        DataSource = kendo.data.DataSource;\n\n    var ListView = kendo.ui.DataBoundWidget.extend( {\n        init: function(element, options) {\n            var that = this;\n\n            options = Array.isArray(options) ? { dataSource: options } : options;\n\n            Widget.fn.init.call(that, element, options);\n\n            options = that.options;\n\n            that.wrapper = element = that.element;\n\n            if (element[0].id) {\n                that._itemId = element[0].id + \"_lv_active\";\n            } else {\n                that._itemId = kendo.guid() + \"_lv_active\";\n            }\n\n            that._element();\n\n            that._layout();\n\n            that._dataSource();\n\n            that._setContentHeight();\n\n            that._templates();\n\n            that._navigatable();\n\n            that._selectable();\n\n            that._pageable();\n\n            that._crudHandlers();\n\n            that._scrollable();\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            CHANGE,\n            CANCEL,\n            DATABINDING,\n            DATABOUND,\n            EDIT,\n            REMOVE,\n            SAVE,\n            KENDO_KEYDOWN\n        ],\n\n        options: {\n            name: \"ListView\",\n            ariaLabel: null,\n            autoBind: true,\n            selectable: false,\n            navigatable: false,\n            pageable: false,\n            height: null,\n            template: EMPTY_STRING_TEMPLATE,\n            altTemplate: null,\n            editTemplate: null,\n            contentTemplate: () => \"<div data-content='true' />\",\n            contentElement: \"div\",\n            bordered: true,\n            borders: \"\",\n            layout: \"\",\n            flex: {\n                direction: \"row\",\n                wrap: \"nowrap\"\n            },\n            grid: {},\n            scrollable: false\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._layout();\n\n            this._templates();\n\n            if (this.selectable) {\n                this.selectable.destroy();\n                this.selectable = null;\n            }\n\n            this._selectable();\n        },\n\n        _templates: function() {\n            var options = this.options;\n\n            this.template = kendo.template(options.template || EMPTY_STRING_TEMPLATE);\n            this.altTemplate = kendo.template(options.altTemplate || options.template || EMPTY_STRING_TEMPLATE);\n            this.editTemplate = kendo.template(options.editTemplate || EMPTY_STRING_TEMPLATE);\n        },\n\n        _item: function(action) {\n            return this.content.children()[action]();\n        },\n\n        items: function() {\n            return this.content.children(\":not(.k-loading-mask)\");\n        },\n\n        dataItem: function(element) {\n            var attr = kendo.attr(\"uid\");\n            var uid = $(element).closest(\"[\" + attr + \"]\").attr(attr);\n\n            return this.dataSource.getByUid(uid);\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n            this._dataSource();\n\n            this._pageable();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n\n            if (this.options.scrollable === \"endless\") {\n                this._bindScrollable();\n            }\n        },\n\n        _unbindDataSource: function() {\n            var that = this;\n\n            that.dataSource.unbind(CHANGE, that._refreshHandler)\n                            .unbind(PROGRESS, that._progressHandler)\n                            .unbind(ERROR, that._errorHandler);\n        },\n\n        _dataSource: function() {\n            var that = this,\n                pageable = that.options.pageable,\n                dataSource = that.options.dataSource || {};\n\n            if ($.isPlainObject(pageable) && pageable.pageSize !== undefined$1) {\n                dataSource.pageSize = pageable.pageSize;\n            }\n\n            if (that.dataSource && that._refreshHandler) {\n                that._unbindDataSource();\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._progress.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = DataSource.create(dataSource)\n                                .bind(CHANGE, that._refreshHandler)\n                                .bind(PROGRESS, that._progressHandler)\n                                .bind(ERROR, that._errorHandler);\n        },\n\n        _progress: function(toggle) {\n            var element = this.wrapper;\n            if (toggle && this.content.height()) {\n                element = this.content;\n            }\n            progress(element, toggle, { opacity: true });\n        },\n\n        _error: function() {\n            progress(this.content, false);\n        },\n\n        _element: function() {\n            var options = this.options;\n            var height = options.height;\n\n            this.element.addClass(\"k-listview\");\n\n\n            if (options.contentElement) {\n                this.content = $(document.createElement(options.contentElement)).appendTo(this.element);\n            } else {\n                this.content = this.element;\n            }\n\n            if (height) {\n                this.element.css(\"height\", height);\n            }\n        },\n\n        _layout: function() {\n            var that = this;\n            var options = that.options;\n            var flex = options.flex;\n            var grid = options.grid;\n            var element = that.element;\n            var elementClassNames = [\"k-listview\"];\n            var content = that.content;\n            var contentClassNames = [\"k-listview-content\"];\n\n            element.add(content).removeClass(function(index, className) {\n                if (className.indexOf(\"k-\") >= 0) {\n                    return true;\n                }\n            });\n\n            // Element class names\n            if (options.bordered === true) {\n                elementClassNames.push(\"k-listview-bordered\");\n            }\n\n            if (typeof options.borders === \"string\" && options.borders !== EMPTY_STRING) {\n                elementClassNames.push(\"k-listview-borders-\" + options.borders);\n            }\n\n\n            // Content class names\n            if (typeof options.contentPadding === \"string\" && options.contentPadding !== EMPTY_STRING) {\n                contentClassNames.push(\"k-listview-content-padding-\" + options.contentPadding);\n            }\n\n            if (typeof options.layout === \"string\" && options.layout !== EMPTY_STRING) {\n                contentClassNames.push(\"k-d-\" + options.layout);\n            }\n\n            if (options.layout === \"flex\" && typeof flex === \"object\") {\n                if (typeof flex.direction === \"string\" && flex.direction !== \"\") {\n                    contentClassNames.push(\"k-flex-\" + flex.direction);\n                }\n\n                if (typeof flex.wrap === \"string\" && flex.wrap !== \"\") {\n                    contentClassNames.push(\"k-flex-\" + flex.wrap);\n                }\n            }\n\n            if (options.layout === \"grid\" && typeof grid === \"object\") {\n                if (typeof grid.cols === \"number\") {\n                    content.css(\"grid-template-columns\", \"repeat(\" + grid.cols + \", 1fr)\");\n                } else if (typeof grid.cols === \"string\") {\n                    content.css(\"grid-template-columns\", grid.cols);\n                }\n\n                if (typeof grid.rows === \"number\") {\n                    content.css(\"grid-template-rows\", \"repeat(\" + grid.rows + \", \" + (grid.rowHeight !== undefined$1 ? grid.rowHeight : \"1fr\") + \")\");\n                } else if (typeof grid.rows === \"string\") {\n                    content.css(\"grid-template-rows\", grid.rows);\n                }\n\n                if (typeof grid.gutter === \"number\") {\n                    content.css(\"grid-gap\", grid.gutter);\n                } else if (typeof grid.gutter === \"string\") {\n                    content.css(\"grid-gap\", grid.gutter);\n                }\n            }\n\n            that.element.addClass(elementClassNames.join(\" \"));\n            that.content.addClass(contentClassNames.join(\" \"));\n\n        },\n\n        _setContentHeight: function() {\n            var that = this,\n                options = that.options,\n                height;\n\n            if (options.scrollable && that.wrapper.is(\":visible\")) {\n\n                height = that.wrapper.innerHeight();\n                that.content.height(height);\n            }\n        },\n\n        refresh: function(e) {\n            var that = this,\n                view = that.dataSource.view(),\n                data,\n                items,\n                item,\n                html = \"\",\n                idx,\n                length,\n                template = that.template,\n                altTemplate = that.altTemplate,\n                options = that.options,\n                role = options.selectable ? \"option\" : \"listitem\",\n                active = activeElement(),\n                endlessAppend = that._endlessFetchInProgress,\n                index = endlessAppend ? that._skipRerenderItemsCount : 0,\n                scrollable = that.options.scrollable;\n\n            e = e || {};\n\n            if (e.action === \"itemchange\") {\n                if (!that._hasBindingTarget() && !that.editable) {\n                    data = e.items[0];\n                    item = that.items().filter(\"[\" + kendo.attr(\"uid\") + \"=\" + data.uid + \"]\");\n\n                    if (item.length > 0) {\n                        idx = item.index();\n\n                        item.replaceWith(template(data));\n                        item = that.items().eq(idx);\n                        item.attr(kendo.attr(\"uid\"), data.uid);\n\n                        that.trigger(\"itemChange\", {\n                            item: item,\n                            data: data\n                        });\n                    }\n                }\n\n                return;\n            }\n\n            if (that.trigger(DATABINDING, { action: e.action || \"rebind\", items: e.items, index: e.index })) {\n                return;\n            }\n\n            if (!endlessAppend) {\n                that._destroyEditable();\n            }\n\n            for (idx = index, length = view.length; idx < length; idx++) {\n                if (idx % 2) {\n                    html += altTemplate(view[idx]);\n                } else {\n                    html += template(view[idx]);\n                }\n            }\n\n            if (endlessAppend) {\n                that.content.append(html);\n            } else {\n                that.content.html(html);\n            }\n\n            items = that.items().not(\".k-loading-mask\");\n\n            that._ariaAttributes(view.length);\n\n            for (idx = index, length = view.length; idx < length; idx++) {\n                item = items.eq(idx);\n\n                item.addClass(ITEM_CLASS);\n\n                item.attr(kendo.attr(\"uid\"), view[idx].uid)\n                    .attr(ARIA_ROLE, role);\n\n                if (that.options.selectable) {\n                    item.attr(\"aria-selected\", \"false\");\n                }\n\n                if (that.options.pageable) {\n                    item.attr(ARIA_SETSIZE, that.dataSource.total());\n                    item.attr(ARIA_POSINSET, that.dataSource.indexOf(that.dataItem(item)) + 1);\n                }\n            }\n\n            if (that.content[0] === active && that.options.navigatable) {\n                if (that._focusNext) {\n                    that.current(that.current().next());\n                } else {\n                    if (!scrollable) {\n                        that.current(items.eq(0));\n                    }\n                }\n            }\n\n            if (that.element.attr(ARIA_ACTIVEDESCENDANT) &&\n                that.element.find(\"#\" + that.element.attr(ARIA_ACTIVEDESCENDANT)).length === 0) {\n                    that.element.removeAttr(ARIA_ACTIVEDESCENDANT);\n            }\n\n            that._setContentHeight();\n\n            that._progress(false);\n            that._endlessFetchInProgress = null;\n\n            that.trigger(DATABOUND, { action: e.action || \"rebind\", items: e.items, index: e.index });\n        },\n\n        _ariaAttributes: function(length) {\n            var content = this.content,\n                options = this.options,\n                selectable = options.selectable;\n\n            this._ariaLabelValue = this._ariaLabelValue || this.options.ariaLabel;\n\n            if (length === 0) {\n                content.removeAttr(ARIA_ROLE);\n                content.removeAttr(ARIA_MULTISELECTABLE);\n\n                if (content.attr(ARIA_LABEL)) {\n                    this._ariaLabelValue = content.attr(ARIA_LABEL);\n                    content.removeAttr(ARIA_LABEL);\n                }\n            } else {\n                content.attr(ARIA_ROLE, selectable ? \"listbox\" : \"list\");\n\n                if (selectable && kendo.ui.Selectable.parseOptions(selectable).multiple) {\n                    content.attr(ARIA_MULTISELECTABLE, true);\n                }\n\n                if (this._ariaLabelValue) {\n                    content.attr(ARIA_LABEL, this._ariaLabelValue);\n                }\n            }\n        },\n\n        _pageable: function() {\n            var that = this,\n                pageable = that.options.pageable,\n                navigatable = that.options.navigatable,\n                pagerWrap,\n                settings;\n\n            if (!pageable) {\n                return;\n            }\n\n            pagerWrap = that.wrapper.find(DOT + PAGER_CLASS);\n\n            if (!pagerWrap.length) {\n                pagerWrap = $('<div />').addClass(PAGER_CLASS);\n            }\n\n            if (pageable.position === \"top\") {\n                pagerWrap\n                    .addClass(kendo.format(\"{0}-{1}\", PAGER_CLASS, pageable.position))\n                    .prependTo(that.wrapper);\n            } else {\n                pagerWrap.appendTo(that.wrapper);\n            }\n\n            if (that.pager) {\n                that.pager.destroy();\n            }\n\n            if (typeof pageable === \"object\" && pageable instanceof kendo.ui.Pager) {\n                that.pager = pageable;\n            } else {\n                pagerWrap = pageable.pagerId ? $(\"#\" + pageable.pagerId) : pagerWrap;\n\n                settings = $.extend({}, pageable, {\n                    dataSource: that.dataSource,\n                    navigatable: navigatable,\n                    pagerId: null\n                });\n\n                that.pager = new kendo.ui.Pager(pagerWrap, settings);\n            }\n        },\n\n        _selectable: function() {\n            var that = this,\n                multi,\n                current,\n                selectable = that.options.selectable,\n                navigatable = that.options.navigatable;\n\n            if (selectable) {\n                multi = kendo.ui.Selectable.parseOptions(selectable).multiple;\n\n                that.selectable = new kendo.ui.Selectable(that.element, {\n                    aria: true,\n                    multiple: multi,\n                    filter: that.options.contentElement ? \".k-listview-content \" + FOCUSSELECTOR : FOCUSSELECTOR,\n                    change: function() {\n                        that.trigger(CHANGE);\n                    }\n                });\n\n                if (navigatable) {\n                    that.element.on(\"keydown\" + NS, function(e) {\n\n                        if (!$(e.target).is(that.element)) { return; }\n\n                        if (e.keyCode === keys.SPACEBAR) {\n                            current = that.current();\n\n                            if (e.target == e.currentTarget) {\n                                e.preventDefault();\n                            }\n\n                            if (multi) {\n                                if (!e.ctrlKey) {\n                                    that.selectable.clear();\n                                } else {\n                                    if (current && current.hasClass(SELECTED)) {\n                                        current.removeClass(SELECTED);\n                                        that.trigger(CHANGE);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                that.selectable.clear();\n                            }\n\n                            that.selectable.value(current);\n                            that.trigger(CHANGE);\n                        }\n                    });\n                }\n            }\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var scrollable = that.options.scrollable;\n\n            if (scrollable) {\n\n                that.content.css({\n                    \"overflow-y\": \"scroll\",\n                    \"position\": \"relative\",\n                    \"-webkit-overflow-scrolling\": \"touch\"\n                });\n\n                if (scrollable === \"endless\") {\n                    that._bindScrollable();\n                }\n            }\n        },\n\n        _bindScrollable: function() {\n            var that = this;\n            var originalPageSize = that._endlessPageSize = that.dataSource.options.pageSize;\n\n            that.content\n                .off(\"scroll\" + NS)\n                .on(\"scroll\" + NS, function() {\n                    if (this.scrollTop + this.clientHeight - this.scrollHeight >= -15 &&\n                    !that._endlessFetchInProgress &&\n                    that._endlessPageSize < that.dataSource.total()) {\n                        that._skipRerenderItemsCount = that._endlessPageSize;\n                        that._endlessPageSize = that._skipRerenderItemsCount + originalPageSize;\n                        that.dataSource.options.endless = true;\n                        that._endlessFetchInProgress = true;\n                        that.dataSource.pageSize(that._endlessPageSize);\n                    }\n                });\n        },\n\n        current: function(candidate) {\n            var that = this,\n                element = that.element,\n                current = that._current,\n                id = that._itemId;\n\n            if (candidate === undefined$1) {\n                return current;\n            }\n\n            if (current && current[0]) {\n                if (current[0].id === id) {\n                    current.removeAttr(\"id\");\n                }\n\n                current.removeClass(FOCUSED);\n                element.removeAttr(ARIA_ACTIVEDESCENDANT);\n            }\n\n            if (candidate && candidate[0]) {\n                id = candidate[0].id || id;\n\n                that._scrollTo(candidate[0]);\n\n                element.attr(ARIA_ACTIVEDESCENDANT, id);\n                candidate.addClass(FOCUSED).attr(\"id\", id);\n            }\n\n            that._current = candidate;\n        },\n\n        _scrollTo: function(element) {\n            var that = this,\n                content = that.content,\n                container,\n                UseJQueryoffset = false,\n                SCROLL = \"scroll\";\n\n            if (content.css(\"overflow\") === \"auto\" || content.css(\"overflow\") === SCROLL || content.css(\"overflow-y\") === SCROLL) {\n                container = content[0];\n            } else {\n                container = window;\n                UseJQueryoffset = true;\n            }\n\n            var scrollDirectionFunc = function(direction, dimension) {\n\n                var elementOffset = UseJQueryoffset ? $(element).offset()[direction.toLowerCase()] : element[\"offset\" + direction],\n                    elementDimension = element[\"client\" + dimension],\n                    containerScrollAmount = $(container)[SCROLL + direction](),\n                    containerDimension = $(container)[dimension.toLowerCase()]();\n\n                if (elementOffset + elementDimension > containerScrollAmount + containerDimension) {\n                    $(container)[SCROLL + direction](elementOffset + elementDimension - containerDimension);\n                } else if (elementOffset < containerScrollAmount) {\n                    $(container)[SCROLL + direction](elementOffset);\n                }\n            };\n\n            scrollDirectionFunc(\"Top\", \"Height\");\n            scrollDirectionFunc(\"Left\", \"Width\");\n        },\n\n        _navigatable: function() {\n            var that = this,\n                navigatable = that.options.navigatable,\n                element = that.element,\n                content = that.content,\n                clickCallback = function(e) {\n                    that.current($(e.currentTarget));\n                    if (!$(e.target).is(\":button, a, :input, a > .k-icon, a > k-svg-icon, textarea\")) {\n                        kendo.focusElement(element);\n                    }\n                };\n\n            if (navigatable) {\n                that._tabindex();\n\n                element\n                    .on(\"focus\" + NS, function() {\n                        var current = that._current;\n\n                        if (!current || !current.is(\":visible\")) {\n                            current = that._item(\"first\");\n                        }\n\n                        that.current(current);\n                    })\n                    .on(\"focusout\" + NS, function() {\n                        if (that._current) {\n                            that._current.removeClass(FOCUSED);\n                        }\n                    })\n                    .on(\"keydown\" + NS, that, function(e) {\n                        var key = e.keyCode,\n                            current = that.current(),\n                            target = $(e.target),\n                            canHandle = !target.is(\":button, textarea, a, a > .t-icon, input\"),\n                            isTextBox = target.is(\":text, :password\"),\n                            preventDefault = kendo.preventDefault,\n                            editItem = content.find(\".\" + KEDITITEM),\n                            active = activeElement(), idx,\n                            scrollable = that.options.scrollable;\n\n                        if (target.hasClass(PAGER_CLASS) || (!canHandle && !isTextBox && key !== keys.ESC) || (isTextBox && key !== keys.ESC && key !== keys.ENTER)) {\n                            return;\n                        }\n\n                        if (key === keys.UP || key === keys.LEFT) {\n                            if (current && current[0]) {\n                                current = current.prev();\n                            }\n\n                            if (current && current[0]) {\n                                that.current(current);\n                            }\n                            else if (!scrollable) {\n                                that.current(that._item(\"last\"));\n                            }\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.DOWN || key === keys.RIGHT) {\n                            if (scrollable) {\n                                if (that.options.scrollable === \"endless\" && !current.next().length) {\n                                    that.content[0].scrollTop = that.content[0].scrollHeight;\n                                    that._focusNext = true;\n                                } else {\n                                    current = current.next();\n\n                                    if (current && current[0]) {\n                                        that.current(current);\n                                    }\n                                }\n                            }\n                            else {\n                                current = current.next();\n                                that.current(!current || !current[0] ? that._item(\"first\") : current);\n                            }\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.PAGEUP) {\n                            that.current(null);\n                            that.dataSource.page(that.dataSource.page() - 1);\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.PAGEDOWN) {\n                            that.current(null);\n                            that.dataSource.page(that.dataSource.page() + 1);\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.HOME) {\n                            that.current(that._item(\"first\"));\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.END) {\n                            that.current(that._item(\"last\"));\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.ENTER) {\n                            if (editItem.length !== 0 && (canHandle || isTextBox)) {\n                                idx = that.items().index(editItem);\n\n                                if (active) {\n                                    active.blur();\n                                }\n\n                                that.save();\n\n                                var focusAgain = function() {\n                                    that.element.trigger(\"focus\");\n                                    that.current(that.items().eq(idx));\n                                };\n\n                                that.one(\"dataBound\", focusAgain);\n                            } else if (that.options.editTemplate) {\n                                that.edit(current);\n                            }\n                        }\n\n                        if (key === keys.ESC) {\n                            editItem = content.find(\".\" + KEDITITEM);\n\n                            if (editItem.length === 0) {\n                                return;\n                            }\n\n                            idx = that.items().index(editItem);\n                            that.cancel();\n                            that.element.trigger(\"focus\");\n                            that.current(that.items().eq(idx));\n                        }\n                    });\n\n                element.on(MOUSEDOWN + NS + \" \" + TOUCHSTART + NS, that.options.contentElement ? \".k-listview-content \" + FOCUSSELECTOR : FOCUSSELECTOR, clickCallback.bind(that));\n            }\n        },\n\n        clearSelection: function() {\n            var that = this;\n            that.selectable.clear();\n        },\n\n        select: function(items) {\n            var that = this,\n                selectable = that.selectable;\n\n            items = $(items);\n\n            if (items.length) {\n                if (!selectable.options.multiple) {\n                    selectable.clear();\n                    items = items.first();\n                }\n                selectable.value(items);\n                return;\n            }\n\n            return selectable.value();\n        },\n\n        _destroyEditable: function() {\n            var that = this;\n            if (that.editable) {\n                that.editable.destroy();\n                delete that.editable;\n            }\n        },\n\n        _modelFromElement: function(element) {\n            var uid = element.attr(kendo.attr(\"uid\"));\n\n            return this.dataSource.getByUid(uid);\n        },\n\n        _closeEditable: function() {\n            var that = this,\n                editable = that.editable,\n                options = that.options,\n                role = options.selectable ? \"option\" : \"listitem\",\n                data,\n                item,\n                index,\n                template = that.template;\n\n            if (editable) {\n                if (editable.element.index() % 2) {\n                    template = that.altTemplate;\n                }\n\n                data = that._modelFromElement(editable.element);\n                that._destroyEditable();\n\n                index = editable.element.index();\n                editable.element.replaceWith(template(data));\n                item = that.items().eq(index);\n                item.addClass(ITEM_CLASS);\n                item.attr(kendo.attr(\"uid\"), data.uid);\n                item.attr(ARIA_ROLE, role);\n\n                if (that._hasBindingTarget()) {\n                    kendo.bind(item, data);\n                }\n            }\n            return true;\n        },\n\n        edit: function(item) {\n            var that = this,\n                data = that._modelFromElement(item),\n                container,\n                uid = data.uid,\n                index;\n\n            that.cancel();\n\n            item = that.items().filter(\"[\" + kendo.attr(\"uid\") + \"=\" + uid + \"]\");\n            index = item.index();\n            item.replaceWith(that.editTemplate(data));\n            container = that.items().eq(index).addClass(KEDITITEM).attr(kendo.attr(\"uid\"), data.uid);\n            that.editable = container.kendoEditable({\n                model: data,\n                clearContainer: false,\n                errorTemplate: false,\n                target: that\n            }).data(\"kendoEditable\");\n\n            that.trigger(EDIT, { model: data, item: container });\n        },\n\n        save: function() {\n            var that = this,\n                editable = that.editable,\n                model;\n\n            if (!editable) {\n                return;\n            }\n\n            var container = editable.element;\n            model = that._modelFromElement(container);\n\n            if (editable.end() && !that.trigger(SAVE, { model: model, item: container })) {\n                that._closeEditable();\n                that.dataSource.sync();\n            }\n        },\n\n        remove: function(item) {\n            var that = this,\n                dataSource = that.dataSource,\n                data = that._modelFromElement(item);\n\n            if (that.editable) {\n                dataSource.cancelChanges(that._modelFromElement(that.editable.element));\n                that._closeEditable();\n            }\n\n            if (!that.trigger(REMOVE, { model: data, item: item })) {\n                if (item.attr(\"id\") === that.element.attr(ARIA_ACTIVEDESCENDANT)) {\n                    that.element.removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n\n                item.hide();\n                dataSource.remove(data);\n                dataSource.sync();\n            }\n        },\n\n        add: function() {\n            var that = this,\n                dataItem,\n                dataSource = that.dataSource,\n                index = dataSource.indexOf((dataSource.view() || [])[0]);\n\n            if (index < 0) {\n                index = 0;\n            }\n\n            that.cancel();\n            dataItem = dataSource.insert(index, {});\n            that.edit(that.element.find(\"[data-uid='\" + dataItem.uid + \"']\"));\n        },\n\n        cancel: function() {\n            var that = this,\n                dataSource = that.dataSource;\n\n            if (that.editable) {\n                var container = that.editable.element;\n                var model = that._modelFromElement(container);\n\n                if (!that.trigger(CANCEL, { model: model, container: container })) {\n                    dataSource.cancelChanges(model);\n                    that._closeEditable();\n                }\n            }\n        },\n\n        _crudHandlers: function() {\n            var that = this,\n                touchstartNs = TOUCHSTART + NS,\n                clickNs = CLICK + NS;\n\n            that.content.on(touchstartNs + \" \" + clickNs, \".k-edit-button\", function(e) {\n                e.preventDefault();\n                var item = $(this).closest(\"[\" + kendo.attr(\"uid\") + \"]\");\n                setTimeout(function() {\n                    that.edit(item);\n                });\n            });\n\n\n            that.content.on(touchstartNs + \" \" + clickNs, \".k-delete-button\", function(e) {\n                e.preventDefault();\n                var item = $(this).closest(\"[\" + kendo.attr(\"uid\") + \"]\");\n                 setTimeout(function() {\n                    that.remove(item);\n                 });\n            });\n\n            that.content.on(clickNs, \".k-update-button\", function(e) {\n                that.save();\n                e.preventDefault();\n            });\n\n            that.content.on(clickNs, \".k-cancel-button\", function(e) {\n                that.cancel();\n                e.preventDefault();\n            });\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that._unbindDataSource();\n\n            that._destroyEditable();\n\n            that.element.off(NS);\n            that.content.off(NS);\n\n            that._endlessFetchInProgress = that._endlessPageSize = that._skipRerenderItemsCount = that._focusNext = null;\n\n            if (that.pager) {\n                that.pager.destroy();\n            }\n\n            kendo.destroy(that.element);\n        }\n    });\n\n    kendo.ui.plugin(ListView);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}