{"version":3,"sources":["raw-mjs/kendo.stepper.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","keys","extend","encode","htmlEncode","STEPPER","CLICK","ACTIVATE","SELECT","DOT","SPACE","VERTICAL","TABINDEX","ARIA_CURRENT","ARIA_DISABLED","ARIA_INVALID","stepStyles","stepperStyles","Step","Class","init","options","this","_render","label","icon","successIcon","iconTemplate","enabled","error","selected","isFirstStep","isLastStep","indicatorVisible","labelVisible","index","previous","selectable","_indicatorTemplate","indicatorContent","iconClass","_labelTemplate","deselect","_link","_stepClasses","enable","value","select","getEnabled","getIndex","setPrevious","getSelectable","getSelected","setValid","valid","_indicator","stepIndicator","addClass","attr","append","template","element","find","_label","stepLabel","empty","_linkAttributes","link","removeAttr","stepLink","stepClasses","removeClass","Stepper","that","fn","call","_indicatorAndLabel","_wrapper","steps","length","_processSteps","_progressBar","_attachEvents","_resizeHandler","onResize","resize","orientation","linear","indicator","selectOnFocus","events","destroy","progressBar","unbindResize","wrapper","off","setOptions","_addStepList","stepsOptions","forEach","step","idx","insertAt","stepOptions","selectedStep","isNaN","splice","_createSteps","_renderSteps","_resetProgressBar","_calculateDimensions","next","_steps","selectedIndex","_select","removeAt","newSelected","newSelectedIndex","stepIndex","Number","_stepList","on","_selectClickHandler","bind","_wrapperClickHandler","_focusout","_keydown","numberOfSteps","stepList","stepWidth","width","stepHeight","height","progressElement","margin","style","css","support","isRtl","_createStep","stepOpt","_selectablePreviousState","push","e","get","contains","relatedTarget","setTimeout","_leaveStepper","_focusStep","newStep","focusedStep","allStepLinks","focus","_focusNextStep","nextStep","document","activeElement","closest","_focusPreviousStep","previousStep","prev","_focusFirstStep","firstStep","_focusLastStep","lastStep","keyCode","focusedStepIndex","stepsCount","TAB","shiftKey","preventDefault","_tabKey","_navKeys","ENTER","SPACEBAR","_selectHandler","_navKeysSelect","_navKeysFocus","rtl","DOWN","RIGHT","UP","LEFT","HOME","END","targetStep","_selectHandlerOnKey","progressBarOptions","_progressOptions","kendoProgressBar","getKendoProgressBar","max","showStatus","reverse","newOptions","stepsList","_resetStep","i","forward","min","Math","stepElement","target","_preventWrapperClick","currentStep","trigger","sender","originalEvent","shift","focusedStepElement","parent","stepper","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.stepper.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.progressbar.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"stepper\",\n    name: \"Stepper\",\n    category: \"web\",\n    description: \"The Stepper widget displays navigation steps.\",\n    depends: [ \"core\", \"progressbar\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        keys = kendo.keys,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n\n        STEPPER = \".kendoStepper\",\n\n        CLICK = \"click\",\n        ACTIVATE = \"activate\",\n        SELECT = \"select\",\n        KEYDOWN = \"keydown\",\n        FOCUSOUT = \"focusout\",\n\n        DOT = \".\",\n        SPACE = \" \",\n        VERTICAL = \"vertical\",\n        TABINDEX = \"tabindex\",\n\n        ARIA_CURRENT = \"aria-current\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_INVALID = \"aria-invalid\",\n        ARIA_HIDDEN = \"aria-hidden\";\n\n    var stepStyles = {\n        step: \"k-step\",\n        firstStep: \"k-step-first\",\n        lastStep: \"k-step-last\",\n        doneStep: \"k-step-done\",\n        successStep: \"k-step-success\",\n        errorStep: \"k-step-error\",\n        currentStep: \"k-step-current\",\n        focusStep: \"k-focus\",\n        disabledStep: \"k-disabled\",\n        stepLink: \"k-step-link\",\n        stepIndicator: \"k-step-indicator\",\n        stepLabel: \"k-step-label\"\n    };\n\n    var stepperStyles = {\n        widget: \"k-stepper\",\n        stepperLinear: \"k-stepper-linear\",\n        stepList: \"k-step-list\",\n        stepListHorizontal: \"k-step-list-horizontal\",\n        stepListVertical: \"k-step-list-vertical\"\n    };\n\n    var Step = kendo.Class.extend({\n        init: function(options) {\n            this.options = extend({}, this.options, options);\n            this._render();\n        },\n\n        options: {\n            label: \"\",\n            icon: \"\",\n            successIcon: \"\",\n            iconTemplate: null,\n            enabled: true,\n            error: false,\n            selected: false,\n            isFirstStep: false,\n            isLastStep: false,\n            indicatorVisible: true,\n            labelVisible: true,\n            index: 0,\n            previous: false,\n            selectable: true\n        },\n\n        _indicatorTemplate: ({ successIcon, index, icon, previous, error }) => {\n            let indicatorContent;\n            if (successIcon && previous && !error) {\n                indicatorContent = kendo.ui.icon({ icon: encode(successIcon), iconClass: \"k-step-indicator-icon\" });\n            } else if (icon) {\n                indicatorContent = kendo.ui.icon({ icon: encode(icon), iconClass: \"k-step-indicator-icon\" });\n            } else if (previous && !error) {\n                indicatorContent = kendo.ui.icon({ icon: \"check\", iconClass: \"k-step-indicator-icon\" });\n            } else {\n                indicatorContent = `<span class=\"k-step-indicator-text\">${encode(index + 1)}</span>`;\n            }\n\n            return '<span class=\"k-step-indicator\" aria-hidden=\"true\">' + indicatorContent + '</span>';\n        },\n\n        _labelTemplate: ({ label, indicatorVisible, previous, error }) =>\n        '<span class=\"k-step-label\">' +\n            '<span class=\"k-step-text\">' +\n                encode(label) +\n            '</span>' +\n            ' ' +\n            ((error || (!indicatorVisible && !error && previous)) ?\n                kendo.ui.icon($('<span aria-hidden=\"true\"></span>'), {\n                    icon: error ? \"warning-circle\" : \"check-circle\"\n                })\n            : '') +\n        '</span>',\n\n        deselect: function() {\n            this.options.selected = false;\n            this._link();\n            this._stepClasses();\n        },\n\n        enable: function(value) {\n            if (this.options.enabled !== value) {\n                this.options.enabled = value;\n                this.options.selectable = value;\n                this._link();\n                this._stepClasses();\n            }\n        },\n\n        select: function() {\n            this.options.selected = true;\n            this._link();\n            this._stepClasses();\n        },\n\n        getEnabled: function() {\n            return this.options.enabled;\n        },\n\n        getIndex: function() {\n            return this.options.index;\n        },\n\n        setPrevious: function(previous) {\n            this.options.previous = previous;\n            this._link();\n            this._stepClasses();\n        },\n\n        getSelectable: function() {\n            return this.options.selectable;\n        },\n\n        getSelected: function() {\n            return this.options.selected;\n        },\n\n        setValid: function(valid) {\n            if (this.options.error === valid) {\n                this.options.error = !valid;\n                this._link();\n                this._stepClasses();\n            }\n        },\n\n        _indicator: function() {\n            var options = this.options,\n                stepIndicator;\n\n            if (!!options.iconTemplate) {\n                stepIndicator = $(\"<span>\").addClass(stepStyles.stepIndicator).attr(ARIA_HIDDEN, \"true\");\n                stepIndicator.append(kendo.template(options.iconTemplate)(options));\n            } else {\n                stepIndicator = kendo.template(this._indicatorTemplate)(options);\n            }\n\n            this.element.find(DOT + stepStyles.stepLink).append(stepIndicator);\n        },\n\n        _label: function() {\n            var stepLabel = kendo.template(this._labelTemplate)(this.options);\n            this.element.find(DOT + stepStyles.stepLink).append(stepLabel);\n        },\n\n        _link: function() {\n            var options = this.options;\n\n            this.element.find(DOT + stepStyles.stepLink).empty();\n            this._linkAttributes();\n\n            if (options.indicatorVisible) {\n                this._indicator();\n            }\n            if (options.labelVisible) {\n                this._label();\n            }\n        },\n\n        _linkAttributes: function() {\n            var options = this.options,\n                link = this.element.find(DOT + stepStyles.stepLink);\n\n            link.removeAttr(ARIA_DISABLED + SPACE + ARIA_INVALID + SPACE + ARIA_CURRENT + SPACE + TABINDEX);\n\n            if (!options.selected) {\n                link.attr(TABINDEX, \"-1\");\n            } else {\n                link.attr(ARIA_CURRENT, \"step\");\n            }\n            if (!options.enabled || !options.selectable) {\n                link.attr(ARIA_DISABLED, \"true\");\n            }\n            if (options.error) {\n                link.attr(ARIA_INVALID, \"true\");\n            }\n        },\n\n        _render: function() {\n            var stepLink = $(\"<a href='#'>\").addClass(stepStyles.stepLink).attr(\"title\", this.options.label);\n\n            this.element = $(\"<li>\").append(stepLink);\n\n            this._link();\n            this._stepClasses();\n        },\n\n        _stepClasses: function() {\n            var options = this.options,\n                stepClasses = stepStyles.step;\n\n            if (options.isFirstStep) {\n                stepClasses += (SPACE + stepStyles.firstStep);\n            }\n            if (options.isLastStep) {\n                stepClasses += (SPACE + stepStyles.lastStep);\n            }\n            if (!options.enabled) {\n                stepClasses += (SPACE + stepStyles.disabledStep);\n            }\n            if (options.error) {\n                stepClasses += (SPACE + stepStyles.errorStep);\n            }\n            if (options.previous) {\n                stepClasses += (SPACE + stepStyles.doneStep);\n                if (!options.error) {\n                    stepClasses += (SPACE + stepStyles.successStep);\n                }\n            } else if (options.selected) {\n                stepClasses += (SPACE + stepStyles.currentStep);\n                stepClasses += (SPACE + stepStyles.focusStep);\n            }\n\n            this.element.removeClass().addClass(stepClasses);\n        }\n    });\n\n    var Stepper = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options = options || {};\n\n            Widget.fn.init.call(that, element, options);\n\n            that._indicatorAndLabel();\n\n            that._wrapper();\n\n            if (options.steps && options.steps.length) {\n                that._processSteps(options.steps);\n                that._progressBar();\n            }\n\n            that._attachEvents();\n\n            that._resizeHandler = kendo.onResize(function() {\n                that.resize();\n            });\n        },\n\n        options: {\n            orientation: \"horizontal\",\n            linear: true,\n            indicator: true,\n            label: true,\n            selectOnFocus: false,\n            steps: null,\n            name: \"Stepper\"\n        },\n\n        events: [ ACTIVATE, SELECT, \"kendoKeydown\" ],\n\n        destroy: function() {\n            var that = this;\n\n            if (that.progressBar) {\n                Widget.fn.destroy.call(that.progressBar);\n            }\n\n            Widget.fn.destroy.call(that);\n\n            kendo.unbindResize(that._resizeHandler);\n\n            that.wrapper.off(STEPPER);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(that, options);\n\n            if (that.progressBar) {\n                Widget.fn.destroy.call(that.progressBar);\n            }\n\n            that._indicatorAndLabel();\n\n            that._addStepList();\n\n            if (that.options.steps && that.options.steps.length) {\n                that._processSteps(that.options.steps);\n                that._progressBar();\n            }\n        },\n\n        enable: function(value) {\n            var steps = this.steps(),\n                stepsOptions = this.options.steps;\n\n            var enableStep = function(step, idx) {\n                step.enable(value);\n                stepsOptions[idx] = step.options;\n            };\n\n            if (value) {\n                this.wrapper.removeAttr(ARIA_DISABLED);\n            } else {\n                this.wrapper.attr(ARIA_DISABLED, \"true\");\n            }\n\n            this.progressBar.enable(value);\n\n            steps.forEach(enableStep);\n        },\n\n        insertAt: function(index, stepOptions) {\n            var steps = this.options.steps,\n                selectedStep;\n            var findSelectedStep = function(step) {\n                if (step.selected) {\n                    selectedStep = step;\n                }\n            };\n\n            if (!stepOptions || isNaN(index)) {\n                return;\n            }\n            if (index < 0) {\n                index = steps.length + index;\n            }\n            if (index < 0) {\n                return;\n            }\n            if (!steps) {\n                steps = [];\n            }\n\n            if (steps.length === 0 || index >= steps.length) {\n                index = steps.length;\n            }\n\n            steps.forEach(findSelectedStep);\n\n            if (stepOptions.selected === true) {\n                selectedStep.selected = false;\n            }\n\n            steps.splice(index, 0, stepOptions);\n\n            this._createSteps();\n            this._renderSteps();\n            this._resetProgressBar();\n            this._calculateDimensions();\n        },\n\n        next: function() {\n            if (!this._steps || this._steps.length <= 1) {\n                return;\n            }\n\n            var selectedStep = this.selectedStep;\n            var selectedIndex = selectedStep.getIndex();\n\n            if (selectedIndex + 1 === this._steps.length) {\n                return;\n            } else {\n                this._select(selectedIndex + 1);\n            }\n        },\n\n        previous: function() {\n            if (!this._steps || this._steps.length <= 1) {\n                return;\n            }\n\n            var selectedStep = this.selectedStep;\n            var selectedIndex = selectedStep.getIndex();\n\n            if (selectedIndex === 0) {\n                return;\n            } else {\n                this._select(selectedIndex - 1);\n            }\n        },\n\n        removeAt: function(index) {\n            var steps = this.options.steps,\n                removedStep, newSelected, newSelectedIndex;\n\n            if (isNaN(index) || !steps || steps.length < 2 || index >= steps.length) {\n                return;\n            }\n            if (index < 0) {\n                index = steps.length + index;\n            }\n            if (index < 0) {\n                return;\n            }\n\n            removedStep = steps.splice(index, 1)[0];\n\n            if (removedStep.selected === true && steps.length > 0) {\n                if (index > 0) {\n                    newSelectedIndex = index - 1;\n                } else {\n                    newSelectedIndex = 0;\n                }\n\n                newSelected = steps[newSelectedIndex];\n\n                if (typeof newSelected === \"string\") {\n                    newSelected = {\n                        label: newSelected\n                    };\n                    steps[newSelectedIndex] = newSelected;\n                }\n\n                newSelected.selected = true;\n                newSelected.previous = false;\n            }\n\n            this._createSteps();\n            this._renderSteps();\n            this._resetProgressBar();\n            this._calculateDimensions();\n        },\n\n        resize: function() {\n            this._calculateDimensions();\n        },\n\n        select: function(stepIndex) {\n            var that = this;\n\n            if (stepIndex === undefined$1 || stepIndex === null || isNaN(stepIndex)) {\n                return that.selectedStep;\n            }\n\n            if (stepIndex >= that._steps.length || stepIndex < 0) {\n                return;\n            }\n\n            stepIndex = Number(stepIndex);\n\n            that._select(stepIndex);\n        },\n\n        steps: function(steps) {\n            if (steps === undefined$1) {\n                return this._steps;\n            }\n\n            this._processSteps(steps);\n            this._resetProgressBar();\n            this._calculateDimensions();\n        },\n\n        _processSteps: function(steps) {\n            var that = this,\n                selectedStep;\n            var findSelectedStep = function(step) {\n                if (step.selected) {\n                    selectedStep = step;\n                }\n            };\n\n            steps.forEach(findSelectedStep);\n\n            if (!selectedStep) {\n                if (typeof steps[0] === \"string\") {\n                    steps[0] = {\n                        label: steps[0]\n                    };\n                }\n                steps[0].selected = true;\n            }\n\n            that.options.steps = steps;\n\n            that._createSteps();\n            that._renderSteps();\n        },\n\n        _addStepList: function() {\n            var that = this;\n\n            that.wrapper.empty().append($(\"<ol />\").addClass(stepperStyles.stepList));\n            that._stepList = that.wrapper.find(DOT + stepperStyles.stepList);\n\n            if (that.options.orientation === VERTICAL) {\n                that._stepList.addClass(stepperStyles.stepListVertical);\n            } else {\n                that._stepList.addClass(stepperStyles.stepListHorizontal);\n            }\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.wrapper\n                .on(CLICK + STEPPER, DOT + stepStyles.step, that._selectClickHandler.bind(that))\n                .on(CLICK + STEPPER, that._wrapperClickHandler.bind(that))\n                .on(FOCUSOUT + STEPPER, that._focusout.bind(that))\n                .on(KEYDOWN + STEPPER, that, that._keydown.bind(that));\n        },\n\n        _calculateDimensions: function() {\n            var orientation = this.options.orientation,\n                numberOfSteps = this._steps.length,\n                stepList = this._stepList,\n                steps = stepList.find(DOT + stepStyles.step),\n                stepWidth = stepList.width() / numberOfSteps,\n                stepHeight = stepList.height() / numberOfSteps,\n                progressElement = this.progressBar.element,\n                margin = \"margin-left\",\n                style = {};\n\n            if (orientation === VERTICAL) {\n                steps.css(\"max-height\", 100 / numberOfSteps + \"%\");\n                progressElement.css({\n                    \"margin-top\": -1 * (stepList.height() - 16),\n                    \"height\": stepHeight * (numberOfSteps - 1)\n                });\n            } else {\n                steps.css(\"max-width\", 100 / numberOfSteps + \"%\");\n\n                if (kendo.support.isRtl(this.wrapper)) {\n                    margin = \"margin-right\";\n                }\n                style[margin] = stepWidth / 2;\n                style.width = stepWidth * (numberOfSteps - 1);\n\n                progressElement.css(style);\n            }\n        },\n\n        _createStep: function(stepOptions, idx, isLastStep) {\n            var that = this,\n                isFirstStep = idx === 0,\n                options = that.options,\n                indicatorVisible = options.indicator,\n                labelVisible = options.label;\n\n            stepOptions = extend({}, stepOptions, {\n                enabled: stepOptions.enabled === false ? false : true\n            });\n\n            stepOptions = extend({}, stepOptions, {\n                isFirstStep: isFirstStep,\n                isLastStep: isLastStep,\n                indicatorVisible: indicatorVisible,\n                labelVisible: labelVisible,\n                index: idx\n            });\n\n            return new Step(stepOptions);\n        },\n\n        _createSteps: function() {\n            var that = this,\n                stepsOptions = that.options.steps,\n                selected = false,\n                step, idx, isLastStep, stepOpt;\n\n            that._steps = [];\n\n            for (idx = 0; idx < stepsOptions.length; idx++) {\n                stepOpt = stepsOptions[idx];\n\n                if (typeof stepOpt === \"string\") {\n                    stepOpt = {\n                        label: stepOpt\n                    };\n                }\n\n                if (stepOpt !== undefined$1) {\n                    isLastStep = idx === stepsOptions.length - 1;\n\n                    if (stepOpt.selected) {\n                        selected = true;\n                    } else {\n                        stepOpt = that._selectablePreviousState(stepOpt, selected, idx);\n                    }\n\n                    step = that._createStep(stepOpt, idx, isLastStep);\n                    that._steps.push(step);\n\n                    if (step.getSelected()) {\n                        that.selectedStep = step;\n                    }\n                }\n            }\n        },\n\n        _indicatorAndLabel: function() {\n            if (!this.options.indicator && !this.options.label) {\n                this.options.indicator = true;\n                this.options.label = true;\n            }\n        },\n\n        _focusout: function(e) {\n            var that = this;\n\n            if (!that.wrapper.get(0).contains(e.relatedTarget)) {\n                setTimeout(function() {\n                    that._leaveStepper();\n                });\n            }\n        },\n\n        _focusStep: function(newStep) {\n            var focusedStep = this.wrapper.find(DOT + stepStyles.focusStep),\n                allStepLinks = this.wrapper.find(DOT + stepStyles.stepLink);\n\n            if (newStep.length > 0) {\n                focusedStep.removeClass(stepStyles.focusStep);\n                allStepLinks.attr(TABINDEX, \"-1\");\n                newStep.find(DOT + stepStyles.stepLink).removeAttr(TABINDEX)[0].focus();\n            }\n        },\n\n        _focusNextStep: function() {\n            var focusedStep = $(document.activeElement).closest(DOT + stepStyles.step),\n                nextStep = focusedStep.next();\n\n            this._focusStep(nextStep);\n        },\n\n        _focusPreviousStep: function() {\n            var focusedStep = $(document.activeElement).closest(DOT + stepStyles.step),\n                previousStep = focusedStep.prev();\n\n            this._focusStep(previousStep);\n        },\n\n        _focusFirstStep: function() {\n            var wrapper = this.wrapper,\n                firstStep = wrapper.find(DOT + stepStyles.firstStep);\n\n            this._focusStep(firstStep);\n        },\n\n        _focusLastStep: function() {\n            var wrapper = this.wrapper,\n                lastStep = wrapper.find(DOT + stepStyles.lastStep);\n\n            this._focusStep(lastStep);\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                keyCode = e.keyCode,\n                focusedStepElement = $(document.activeElement).closest(DOT + stepStyles.step),\n                focusedStepIndex = focusedStepElement.index(),\n                stepsCount = that.steps().length;\n\n            if (keyCode === keys.TAB) {\n                if (e.shiftKey && focusedStepIndex > 0) {\n                    e.preventDefault();\n                    that._tabKey(e, -1);\n                } else if (!e.shiftKey && focusedStepIndex < stepsCount - 1) {\n                    e.preventDefault();\n                    that._tabKey(e, +1);\n                }\n            } else if (keyCode > 34 && keyCode < 41) {\n                e.preventDefault();\n                that._navKeys(e);\n            } else if (keyCode === keys.ENTER || keyCode === keys.SPACEBAR) {\n                e.preventDefault();\n                that._selectHandler(e, $(document.activeElement).closest(DOT + stepStyles.step));\n            } else {\n                e.preventDefault();\n            }\n        },\n\n        _leaveStepper: function() {\n            var selectedStep = this.wrapper.find(DOT + stepStyles.currentStep),\n                allStepLinks = this.wrapper.find(DOT + stepStyles.stepLink);\n\n            allStepLinks.removeClass(stepStyles.focusStep).attr(TABINDEX, \"-1\");\n\n            selectedStep.addClass(stepStyles.focusStep);\n            selectedStep.find(DOT + stepStyles.stepLink).removeAttr(TABINDEX);\n        },\n\n        _navKeys: function(e) {\n            var selectOnFocus = this.options.selectOnFocus;\n\n            if (selectOnFocus) {\n                this._navKeysSelect(e);\n            } else {\n                this._navKeysFocus(e);\n            }\n        },\n\n        _navKeysFocus: function(e) {\n            var keyCode = e.keyCode,\n                rtl = kendo.support.isRtl(this.wrapper),\n                orientation = this.options.orientation;\n\n            switch (keyCode) {\n                case keys.DOWN:\n                    if (rtl && orientation !== VERTICAL) {\n                        this._focusPreviousStep();\n                    } else {\n                        this._focusNextStep();\n                    }\n                    break;\n                case keys.RIGHT:\n                    if (rtl) {\n                        this._focusPreviousStep();\n                    } else {\n                        this._focusNextStep();\n                    }\n                    break;\n                case keys.UP:\n                    if (rtl && orientation !== VERTICAL) {\n                        this._focusNextStep();\n                    } else {\n                        this._focusPreviousStep();\n                    }\n                    break;\n                case keys.LEFT:\n                    if (rtl) {\n                        this._focusNextStep();\n                    } else {\n                        this._focusPreviousStep();\n                    }\n                    break;\n                case keys.HOME:\n                    this._focusFirstStep();\n                    break;\n                case keys.END:\n                    this._focusLastStep();\n                    break;\n            }\n        },\n\n        _navKeysSelect: function(e) {\n            var keyCode = e.keyCode,\n                focusedStepIndex = $(document.activeElement).closest(DOT + stepStyles.step).index(),\n                rtl = kendo.support.isRtl(this.wrapper),\n                steps = this.steps(),\n                orientation = this.options.orientation,\n                targetStep;\n\n            switch (keyCode) {\n                case keys.DOWN:\n                    if (rtl && orientation !== VERTICAL) {\n                        targetStep = steps[focusedStepIndex - 1];\n                    } else {\n                        targetStep = steps[focusedStepIndex + 1];\n                    }\n                    break;\n                case keys.RIGHT:\n                    if (rtl) {\n                        targetStep = steps[focusedStepIndex - 1];\n                    } else {\n                        targetStep = steps[focusedStepIndex + 1];\n                    }\n                    break;\n                case keys.UP:\n                    if (rtl && orientation !== VERTICAL) {\n                        targetStep = steps[focusedStepIndex + 1];\n                    } else {\n                        targetStep = steps[focusedStepIndex - 1];\n                    }\n                    break;\n                case keys.LEFT:\n                    if (rtl) {\n                        targetStep = steps[focusedStepIndex + 1];\n                    } else {\n                        targetStep = steps[focusedStepIndex - 1];\n                    }\n                    break;\n                case keys.HOME:\n                    targetStep = steps[0];\n                    break;\n                case keys.END:\n                    targetStep = steps[steps.length - 1];\n                    break;\n            }\n\n            if (targetStep) {\n                this._focusStep(targetStep.element);\n                this._selectHandlerOnKey(e, targetStep.element);\n            }\n        },\n\n        _progressBar: function() {\n            var wrapper = this.wrapper,\n                progressBarOptions = this._progressOptions();\n\n            this.progressBar = $(\"<div>\").kendoProgressBar(progressBarOptions).getKendoProgressBar();\n\n            // TODO: for 2021 R2 the following line must be removed!\n            this.progressBar.element.css(\"position\", \"absolute\");\n\n            this._calculateDimensions();\n\n            wrapper.append(this.progressBar.element);\n        },\n\n        _progressOptions: function() {\n            var options = this.options,\n                orientation = options.orientation,\n                stepsOptions = options.steps,\n                numberOfSteps, progressBarOptions;\n\n            if (!stepsOptions || stepsOptions.length === 0) {\n                return;\n            } else {\n                numberOfSteps = stepsOptions.length;\n            }\n\n            progressBarOptions = {\n                max: numberOfSteps - 1,\n                value: this.select().getIndex(),\n                orientation: orientation,\n                showStatus: false\n            };\n\n            if (orientation === VERTICAL) {\n                progressBarOptions.reverse = true;\n            }\n\n            return progressBarOptions;\n        },\n\n        _resetProgressBar: function() {\n            var progressBar = this.progressBar,\n                newOptions;\n\n            if (!progressBar) {\n                return;\n            }\n\n            newOptions = this._progressOptions();\n            progressBar.setOptions(newOptions);\n        },\n\n        _renderSteps: function() {\n            var steps = this._steps,\n                stepsList = this._stepList,\n                step, idx;\n\n            stepsList.empty();\n\n            for (idx = 0; idx < steps.length; idx++) {\n                step = steps[idx];\n                stepsList.append(step.element);\n            }\n        },\n\n        _resetStep: function(i, index, forward) {\n            var step = this._steps[i];\n\n            if (i === index) {\n                step.options.previous = false;\n                step.options.selected = true;\n            } else if ((forward || i > index) && (!forward || i < index)) {\n                step.options.selected = false;\n                step.options.previous = forward;\n            }\n\n            if (this.options.linear && (i < index - 1 || i > index + 1)) {\n                step.options.selectable = false;\n            } else {\n                step.options.selectable = true;\n            }\n\n            step._link();\n            step._stepClasses();\n            this.options.steps[i] = step.options;\n        },\n\n        _select: function(index) {\n            var options = this.options,\n                linear = options.linear,\n                selectedStep = this.select(),\n                selectedIndex = selectedStep.getIndex(),\n                stepsOptions = options.steps,\n                targetStep = this._steps[index],\n                forward, i, min, max;\n\n            if (!targetStep || !targetStep.getEnabled()) {\n                return;\n            }\n\n            if (index > selectedIndex) {\n                forward = true;\n\n                if (linear) {\n                    min = Math.max(selectedIndex - 1, 0);\n                    max = Math.min(index + 1, stepsOptions.length - 1);\n                } else {\n                    min = selectedIndex;\n                    max = index;\n                }\n            } else {\n                forward = false;\n\n                if (linear) {\n                    min = Math.max(index - 1, 0);\n                    max = Math.min(selectedIndex + 1, stepsOptions.length - 1);\n                } else {\n                    min = index;\n                    max = selectedIndex;\n                }\n            }\n\n            for (i = min; i <= max; i ++) {\n                this._resetStep(i, index, forward);\n            }\n\n            this.selectedStep = targetStep;\n            this.progressBar.value(index);\n        },\n\n        _selectablePreviousState: function(stepOpt, selected, idx) {\n            var stepsOptions = this.options.steps,\n                linear = this.options.linear;\n\n            if (!selected) {\n                stepOpt.previous = true;\n                if (linear && !stepsOptions[idx + 1].selected) {\n                    stepOpt.selectable = false;\n                } else {\n                    stepOpt.selectable = true;\n                }\n            } else if (linear && !stepsOptions[idx - 1].selected) {\n                stepOpt.selectable = false;\n            } else {\n                stepOpt.selectable = true;\n            }\n\n            return stepOpt;\n        },\n\n        _selectClickHandler: function(e) {\n            var stepElement = $(e.target).closest(DOT + stepStyles.step);\n\n            e.preventDefault();\n            this._preventWrapperClick = true;\n            this._selectHandler(e, stepElement);\n        },\n\n        _selectHandler: function(e, stepElement) {\n            var that = this,\n                step = that._steps[stepElement.index()],\n                currentStep = this.select();\n\n            if (!step || step.getIndex() === currentStep.getIndex() || !step.getEnabled() || !step.getSelectable()) {\n                that._focusStep(currentStep.element);\n\n                return;\n            }\n\n            if (!that.trigger(SELECT, { sender: that, originalEvent: e, step: step })) {\n                that._select(step.getIndex());\n                stepElement.find(DOT + stepStyles.stepLink)[0].focus();\n                that.trigger(ACTIVATE, { sender: that, originalEvent: e, step: step });\n            }\n        },\n\n        _selectHandlerOnKey: function(e, stepElement) {\n            var that = this,\n                step = that._steps[stepElement.index()];\n\n            if (!step.getEnabled() || !step.getSelectable()) {\n                return;\n            }\n\n            if (!that.trigger(SELECT, { sender: that, originalEvent: e, step: step })) {\n                that._select(step.getIndex());\n                stepElement.find(DOT + stepStyles.stepLink)[0].focus();\n                that.trigger(ACTIVATE, { sender: that, originalEvent: e, step: step });\n            }\n        },\n\n        _tabKey: function(e, shift) {\n            var selectOnFocus = this.options.selectOnFocus,\n                focusedStepElement = $(document.activeElement).closest(DOT + stepStyles.step),\n                focusedStepIndex = focusedStepElement.index(),\n                targetStep = $(focusedStepElement.parent().find(DOT + stepStyles.step)[focusedStepIndex + shift]);\n\n            this._focusStep(targetStep);\n\n            if (selectOnFocus) {\n                this._selectHandlerOnKey(e, targetStep);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element;\n\n            that.wrapper = element;\n            that.wrapper.addClass(stepperStyles.widget);\n\n            if (that.options.linear) {\n                that.wrapper.addClass(stepperStyles.stepperLinear);\n            }\n\n            this._addStepList();\n        },\n\n        _wrapperClickHandler: function(e) {\n            var currentStep = this.select();\n\n            if (!this._preventWrapperClick) {\n                e.preventDefault();\n                this._focusStep(currentStep.element);\n            } else {\n                this._preventWrapperClick = false;\n            }\n        }\n    });\n\n    kendo.stepper = {\n        Step: Step\n    };\n\n    kendo.ui.plugin(Stepper);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}