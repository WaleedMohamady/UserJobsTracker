{"version":3,"sources":["raw-mjs/kendo.skeletoncontainer.js"],"names":["__meta__","id","name","category","depends","$","kendo","window","ui","Widget","SkeletonContainer","extend","init","element","options","that","this","fn","call","cssNumber","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","addClass","_setWrapperStyles","_initItems","_initTemplate","_aria","animation","grid","template","height","width","setOptions","deepExtend","empty","getOptions","attr","role","progress","messages","loading","shape","settings","item","items","i","length","toLowerCase","css","format","colStart","colSpan","rowStart","rowSpan","appendTo","replace","append","_addClasses","shapes","animations","find","removeAttr","j","columns","rows","gap","plugin","jQuery","kendo$1"],"mappings":";;;;;;;;MAAA,kBAEA,IAAAA,SAAA,CACAC,GAAA,oBACAC,KAAA,oBACAC,SAAA,MACAC,QAAA,CAAA,UAGA,SAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAE,GACAC,EAAAD,EAAAC,OAKAC,EAAAD,EAAAE,OAAA,CACAC,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,KAEAP,EAAAQ,GAAAL,KAAAM,KAAAH,EAAAF,EAAAC,GAEAT,EAAAc,UAAAC,iBAAA,EACAf,EAAAc,UAAAE,eAAA,EACAhB,EAAAc,UAAAG,cAAA,EACAjB,EAAAc,UAAAI,YAAA,EAEAR,EAAAF,QAAAR,EAAAQ,GAAAW,SAbA,wBAeAT,EAAAU,oBACAV,EAAAW,aACAX,EAAAY,gBACAZ,EAAAa,OACA,EAEAd,QAAA,CACAZ,KAAA,oBACA2B,UAAA,QACAC,KAAA,KACAC,SAAA,KACAC,OAAA,GACAC,MAAA,IAGAC,WAAA,SAAApB,GACAR,EAAA6B,WAAAnB,KAAAF,QAAAA,GACAE,KAAAH,QAAAuB,QACApB,KAAAJ,KAAAI,KAAAH,QAAAG,KAAAF,QACA,EAEAuB,WAAA,WAGA,OAFAhC,EAAAM,QAAA,EAAA,CAAA,EAAAK,KAAAF,QAGA,EAEAc,MAAA,WACAZ,KAAAH,QAEAyB,KAAA,CACAC,KAAA,QACA,YAAA,SACA,aAAAjC,EAAAE,GAAAgC,SAAAC,SAAAC,SAEA,EAEAhB,WAAA,WACA,GAAAV,KAAAF,QAAAgB,KAWA,IAPA,IAGAa,EACAC,EACAC,EAHAC,EAFA9B,KACAF,QAAAgB,KACAgB,MAKAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IACAH,EAAAE,EAAAC,GACAF,EAAAxC,EAAA,eAEAsC,EAAAC,EAAAD,MAAAM,cAEAJ,EACAK,IAAA,CACA,cAAA5C,EAAA6C,OAAA,iBAAAP,EAAAQ,SAAAR,EAAAS,SACA,WAAA/C,EAAA6C,OAAA,iBAAAP,EAAAU,SAAAV,EAAAW,WAEA/B,SAAA,cACAA,SAAAlB,EAAA6C,OAAA,iBAAA,cAAAR,EAAA,OAAAA,IAEAE,EAAAW,SArBAxC,KAqBAH,QAEA,EAEAc,cAAA,WACA,GAAAX,KAAAF,QAAAiB,WAAAf,KAAAF,QAAAgB,KAAA,CAIA,IAAAC,EAAAzB,EAAAyB,SAAAf,KAAAF,QAAAiB,SAAAzB,CAAA,CAAA,GAEAyB,EAAAA,EACA0B,QAAA,mBAAA,cACAA,QAAA,eAAA,cACAA,QAAA,yBAAA,mBAEAzC,KAAAH,QAAA6C,OAAA3B,GAEAf,KAAA2C,aAXA,CAYA,EAEAA,YAAA,WAIA,IAHA,IAAAC,EAAA,CAAA,SAAA,OAAA,QACAC,EAAA,CAAA,OAAA,SAEAd,EAAA,EAAAA,EAAAa,EAAAZ,OAAAD,IACA/B,KAAAH,QACAiD,KAAA,eAAAF,EAAAb,GAAA,KACAgB,WAAA,cAAAH,EAAAb,IACAvB,SAAA,yBAAAoC,EAAAb,IAGA,IAAA,IAAAiB,EAAA,EAAAA,EAAAH,EAAAb,OAAAgB,IACAhD,KAAAH,QACAiD,KAAA,eAAAD,EAAAG,GAAA,KACAD,WAAA,cAAAF,EAAAG,IACAxC,SAAA,cAAAqC,EAAAG,GAEA,EAEAvC,kBAAA,WACA,IAAAV,EAAAC,KACAF,EAAAC,EAAAD,QACAgB,EAAAhB,EAAAgB,KACAD,EAAAf,EAAAe,UAAAoB,cAEAnB,GACAf,EAAAF,QACAqC,IAAA,CACA,wBAAA5C,EAAA6C,OAAA,mBAAArB,EAAAmC,SACA,qBAAA3D,EAAA6C,OAAA,mBAAArB,EAAAoC,MACA,cAAApC,EAAAqC,KAAA,CAAA,GAAAF,QACA,WAAAnC,EAAAqC,KAAA,CAAA,GAAAD,OAEA1C,SAAA,YAGAT,EAAAF,QAAAqC,IAAA,CACAjB,MAAA,iBAAAnB,EAAAmB,MAAAnB,EAAAmB,MAAAnB,EAAAmB,MAAA,KACAD,OAAA,iBAAAlB,EAAAkB,OAAAlB,EAAAkB,OAAAlB,EAAAkB,OAAA,OAGA,SAAAH,GACAd,EAAAF,QAAAW,SAAA,QAAAK,EA/IA,kBACA,mBAgJA,IAGArB,EAAA4D,OAAA1D,EAEA,CA1JA,CA0JAH,OAAAD,MAAA+D,QACA,IAAAC,QAAAhE,aAEAgE","file":"kendo.skeletoncontainer.js","sourcesContent":["import './kendo.core.js';\n\nvar __meta__ = {\n    id: \"skeletoncontainer\",\n    name: \"SkeletonContainer\",\n    category: \"web\",\n    depends: [ \"core\"]\n};\n\n(function($) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        WAVE_ANIMATION = \"k-skeleton-wave\",\n        PULSE_ANIMATION = \"k-skeleton-pulse\",\n        WRAPPER_CLASS = \"k-skeleton-container\";\n\n    var SkeletonContainer = Widget.extend( {\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            $.cssNumber.gridColumnStart = true;\n            $.cssNumber.gridColumnEnd = true;\n            $.cssNumber.gridRowStart = true;\n            $.cssNumber.gridRowEnd = true;\n\n            that.element = $(element).addClass(WRAPPER_CLASS);\n\n            that._setWrapperStyles();\n            that._initItems();\n            that._initTemplate();\n            that._aria();\n        },\n\n        options: {\n            name: \"SkeletonContainer\",\n            animation: \"pulse\",\n            grid: null,\n            template: null,\n            height: \"\",\n            width: \"\"\n        },\n\n        setOptions: function(options) {\n            kendo.deepExtend(this.options, options);\n            this.element.empty();\n            this.init(this.element, this.options);\n        },\n\n        getOptions: function() {\n            var result = $.extend(true, {}, this.options);\n\n            return result;\n        },\n\n        _aria: function() {\n            var element = this.element;\n\n            element.attr({\n                \"role\": \"alert\",\n                \"aria-live\": \"polite\",\n                \"aria-label\": kendo.ui.progress.messages.loading\n            });\n        },\n\n        _initItems: function() {\n            if (!this.options.grid) {\n                return;\n            }\n\n            var that = this;\n            var grid = that.options.grid;\n            var items = grid.items;\n            var shape;\n            var settings;\n            var item;\n\n            for (var i = 0; i < items.length; i++) {\n                settings = items[i];\n                item = $(\"<div></div>\");\n\n                shape = settings.shape.toLowerCase();\n\n                item\n                    .css({\n                        \"grid-column\": kendo.format(\"{0} / span {1}\",settings.colStart, settings.colSpan),\n                        \"grid-row\": kendo.format(\"{0} / span {1}\",settings.rowStart, settings.rowSpan)\n                    })\n\t\t\t\t\t.addClass(\"k-skeleton\")\n                    .addClass(kendo.format(\"k-skeleton-{0}\", shape === \"rectangle\" ? \"rect\" : shape));\n\n                item.appendTo(that.element);\n            }\n        },\n\n        _initTemplate: function() {\n            if (!this.options.template || this.options.grid) {\n                return;\n            }\n\n            var template = kendo.template(this.options.template)({});\n\n            template = template\n                    .replace(/data-animation/gi, \"k-skeleton\")\n                    .replace(/data-shape/gi, \"k-skeleton\")\n                    .replace(/k-skeleton-rectangle/gi, \"k-skeleton-rect\");\n\n            this.element.append(template);\n\n            this._addClasses();\n        },\n\n        _addClasses: function() {\n            var shapes = [\"circle\", \"rect\", \"text\"];\n            var animations = [\"wave\", \"pulse\"];\n\n            for (var i = 0; i < shapes.length; i++) {\n                this.element\n                    .find(\"[k-skeleton-\" + shapes[i] + \"]\")\n                    .removeAttr(\"k-skeleton-\" + shapes[i])\n                    .addClass(\"k-skeleton k-skeleton-\" + shapes[i] + \"\");\n            }\n\n            for (var j = 0; j < animations.length; j++) {\n                this.element\n                    .find(\"[k-skeleton-\" + animations[j] + \"]\")\n                    .removeAttr(\"k-skeleton-\" + animations[j])\n                    .addClass(\"k-skeleton-\" + animations[j] + \"\");\n            }\n        },\n\n        _setWrapperStyles: function() {\n            var that = this;\n            var options = that.options;\n            var grid = options.grid;\n            var animation = options.animation.toLowerCase();\n\n            if (grid) {\n                that.element\n                    .css({\n                        \"grid-template-columns\": kendo.format(\"repeat({0}, 1fr)\", grid.columns),\n                        \"grid-template-rows\": kendo.format(\"repeat({0}, 1fr)\", grid.rows),\n                        \"column-gap\": (grid.gap || {}).columns,\n                        \"row-gap\": (grid.gap || {}).rows\n                    })\n                    .addClass(\"k-d-grid\");\n            }\n\n            that.element.css({\n                \"width\": typeof options.width === \"string\" ? options.width : options.width + \"px\",\n                \"height\": typeof options.height === \"string\" ? options.height : options.height + \"px\"\n            });\n\n            if (animation !== \"none\") {\n                that.element.addClass(animation == \"wave\" ? WAVE_ANIMATION : PULSE_ANIMATION);\n            }\n        }\n    });\n\n    ui.plugin(SkeletonContainer);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}