{"version":3,"sources":["raw-mjs/kendo.slider.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","Draggable","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","format","parse","parseFloat","isArray","Array","math","Math","support","pointers","msPointers","CHANGE","SLIDE","NS","MOUSE_DOWN","TRACK_MOUSE_DOWN","MOUSE_UP","TRACK_MOUSE_UP","MOVE_SELECTION","KEY_DOWN","CLICK","MOUSE_OVER","FOCUS","BLUR","DRAG_HANDLE","TRACK_SELECTOR","TICK_SELECTOR","STATE_SELECTED","STATE_FOCUSED","STATE_DISABLED","DISABLED","TABINDEX","getTouches","ARIA_VALUETEXT","ARIA_VALUENOW","SliderBase","init","element","options","that","this","fn","call","_isHorizontal","orientation","_isRtl","isRtl","_position","_sizeFn","_outerSize","tooltip","enabled","smallStep","Error","_createHtml","_trackDiv","wrapper","find","_maxSelection","_sliderItemsInit","_reset","_tabindex","rtlDirectionSign","_keyMap","step","setValue","max","min","largeStep","_ariaLabel","notify","events","tickPlacement","_distance","round","_resize","remove","_refresh","enable","sizeBetweenTicks","pixelWidths","_calculateItemsWidth","floor","removeFraction","parent","before","distance","i","result","count","createSliderItems","_setItemsTitle","_calculateSteps","_setItemsLargeTick","first","addClass","last","getSize","dimensions","items","titleNumber","length","attr","item","makeArray","reverse","valueWithoutFraction","_values","html","css","itemsCount","itemWidth","trackDivSize","preciseItemsCount","pixelStep","_roundWidths","pixelWidthsArray","balance","_addAdditionalSize","additionalSize","parseInt","lastItem","val","selection","ceil","splice","pop","_pixelSteps","_getValueFromPosition","mousePosition","draggableArea","position","halfStep","startPoint","abs","_getFormattedValue","drag","tooltipTemplate","selectionStart","selectionEnd","type","template","value","_getDraggableArea","offset","getOffset","left","top","endPoint","inputs","eq","prop","formatValue","wrap","isHorizontal","orientationCssClass","style","cssClasses","tickPlacementCssClass","createWrapper","hide","parents","showButtons","after","createButton","elementValue","minElementValue","maxElementValue","dragHandleCount","is","firstDragHandleTitle","leftDragHandleTitle","dragHandleTitle","rightDragHandleTitle","createTrack","_focus","e","target","_drag","_firstHandleDrag","_activeHandle","_lastHandleDrag","_activeHandleDrag","_updateTooltip","_focusWithMouse","idx","index","setTimeout","focus","_setTooltipTimeout","_blur","removeClass","_removeTooltip","_tooltipTimeout","_clearTooltipTimeout","clearTimeout","tooltipDiv","stop","formId","form","closest","_form","on","_formResetHandler","bind","setOptions","destroy","off","buttonIconName","icon","iconClass","stepValue","replace","cultures","current","numberFormat","precision","power","number","toString","split","calculatePrecision","pow","parseAttr","getAttribute","defined","Slider","dragHandle","_selection","Selection","Drag","_refreshAriaAttr","increaseButtonTitle","decreaseButtonTitle","clickHandler","move","disable","touch","location","pageX","pageY","hasClass","_update","dragstart","preventDefault","end","document","documentElement","one","_end","sign","newVal","_nextValueByIndex","_valueIndex","_setValueInRange","mouseDownHandler","which","timeout","timer","setInterval","_clearTimer","currentTarget","_keydown","change","trigger","isNaN","formattedValue","_tooltipDiv","text","clearInterval","keyCode","draggable","moveSelection","selectionValue","sender","owner","_dragstart","dragend","dragcancel","click","prototype","_activeDragHandle","userEvents","cancel","_setZIndex","oldVal","_createTooltip","calloutCssClass","wnd","appendTo","body","tooltipInnerDiv","_scrollOffset","scrollTop","scrollLeft","moveTooltip","slideParams","x","y","constrainValue","values","_disposeAll","noAnimation","fadeOut","dragHandles","sdhOffset","diff","anchorSize","viewport","callout","width","height","_flip","_fit","size","viewPortEnd","output","maxOverflow","plugin","RangeSlider","firstInput","secondInput","console","warn","from","to","handle","dragSelectionStart","dragSelectionEnd","activeHandleDrag","selectionStartValue","selectionEndValue","_value","start","each","selectionStartIndex","selectionEndIndex","selectionPosition","selectionDiv","makeSelection","jQuery","kendo$1"],"mappings":"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","file":"kendo.slider.js","sourcesContent":["import './kendo.draganddrop.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"slider\",\n    name: \"Slider\",\n    category: \"web\",\n    description: \"The Slider widget provides a rich input for selecting values or ranges of values.\",\n    depends: [ \"draganddrop\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        Draggable = kendo.ui.Draggable,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        extend = $.extend,\n        format = kendo.format,\n        parse = kendo.parseFloat,\n        isArray = Array.isArray,\n        math = Math,\n        support = kendo.support,\n        pointers = support.pointers,\n        msPointers = support.msPointers,\n        CHANGE = \"change\",\n        SLIDE = \"slide\",\n        NS = \".slider\",\n        MOUSE_DOWN = \"touchstart\" + NS + \" mousedown\" + NS,\n        TRACK_MOUSE_DOWN = pointers ? \"pointerdown\" + NS : (msPointers ? \"MSPointerDown\" + NS : MOUSE_DOWN),\n        MOUSE_UP = \"touchend\" + NS + \" mouseup\" + NS,\n        TRACK_MOUSE_UP = pointers ? \"pointerup\" : (msPointers ? \"MSPointerUp\" + NS : MOUSE_UP),\n        MOVE_SELECTION = \"moveSelection\",\n        KEY_DOWN = \"keydown\" + NS,\n        CLICK = \"click\" + NS,\n        MOUSE_OVER = \"mouseover\" + NS,\n        FOCUS = \"focus\" + NS,\n        BLUR = \"blur\" + NS,\n        DRAG_HANDLE = \".k-draghandle\",\n        TRACK_SELECTOR = \".k-slider-track\",\n        TICK_SELECTOR = \".k-tick\",\n        STATE_SELECTED = \"k-selected\",\n        STATE_FOCUSED = \"k-focus\",\n        STATE_DISABLED = \"k-disabled\",\n        DISABLED = \"disabled\",\n        UNDEFINED = \"undefined\",\n        TABINDEX = \"tabindex\",\n        getTouches = kendo.getTouches,\n\n        ARIA_VALUETEXT = \"aria-valuetext\",\n        ARIA_VALUENOW = \"aria-valuenow\";\n\n    var SliderBase = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            options = that.options;\n            that._isHorizontal = options.orientation == \"horizontal\";\n            that._isRtl = that._isHorizontal && kendo.support.isRtl(element);\n            that._position = that._isRtl ? \"right\" : that._isHorizontal ? \"left\" : \"bottom\";\n            that._sizeFn = that._isHorizontal ? \"width\" : \"height\";\n            that._outerSize = that._isHorizontal ? outerWidth : outerHeight;\n\n            options.tooltip.format = options.tooltip.enabled ? options.tooltip.format || \"{0}\" : \"{0}\";\n\n            if (options.smallStep <= 0) {\n                throw new Error('Kendo UI Slider smallStep must be a positive number.');\n            }\n\n            that._createHtml();\n            that._trackDiv = that.wrapper.find(TRACK_SELECTOR);\n\n            that._maxSelection = that._trackDiv[that._sizeFn]();\n\n            that._sliderItemsInit();\n\n            that._reset();\n\n            that._tabindex(that.wrapper.find(DRAG_HANDLE));\n            that[options.enabled ? \"enable\" : \"disable\"]();\n\n            var rtlDirectionSign = kendo.support.isRtl(that.wrapper) ? -1 : 1;\n\n            that._keyMap = {\n                37: step(-1 * rtlDirectionSign * options.smallStep), // left arrow\n                40: step(-options.smallStep), // down arrow\n                39: step(+1 * rtlDirectionSign * options.smallStep), // right arrow\n                38: step(+options.smallStep), // up arrow\n                35: setValue(options.max), // end\n                36: setValue(options.min), // home\n                33: step(+options.largeStep), // page up\n                34: step(-options.largeStep) // page down\n            };\n\n            that._ariaLabel(that.wrapper.find(DRAG_HANDLE));\n\n            kendo.notify(that);\n        },\n\n        events: [\n            CHANGE,\n            SLIDE\n        ],\n\n        options: {\n            enabled: true,\n            min: 0,\n            max: 10,\n            smallStep: 1,\n            largeStep: 5,\n            orientation: \"horizontal\",\n            tickPlacement: \"both\",\n            tooltip: { enabled: true, format: \"{0}\" }\n        },\n\n        _distance: function() {\n            return round(this.options.max - this.options.min);\n        },\n\n        _resize: function() {\n            this.wrapper.find(\".k-slider-items\").remove();\n\n            this._maxSelection = this._trackDiv[this._sizeFn]();\n            this._sliderItemsInit();\n            this._refresh();\n\n            if (this.options.enabled) {\n                this.enable(true);\n            }\n        },\n\n        _sliderItemsInit: function() {\n            var that = this,\n                options = that.options;\n\n            // [Backwards compatibilty]: maxSelection is reduced with 2 to compensate new styling and preserve automatic calculation to not show ticks.\n            var sizeBetweenTicks = (that._maxSelection - 2) / ((options.max - options.min) / options.smallStep);\n\n            var pixelWidths = that._calculateItemsWidth(math.floor(removeFraction(that._distance()) / removeFraction(options.smallStep)));\n\n            if (options.tickPlacement != \"none\" && sizeBetweenTicks >= 2) {\n                $(this.element).parent().find(\".k-slider-items\").remove();\n                that._trackDiv.before(createSliderItems(options, that._distance()));\n                that._setItemsTitle();\n            }\n\n            that._calculateSteps(pixelWidths);\n\n            if (options.tickPlacement != \"none\" && sizeBetweenTicks >= 2 &&\n                options.largeStep >= options.smallStep) {\n                that._setItemsLargeTick();\n                that.wrapper.find(TICK_SELECTOR).first().addClass(\"k-first\");\n                that.wrapper.find(TICK_SELECTOR).last().addClass(\"k-last\");\n            }\n        },\n\n        getSize: function() {\n            return kendo.dimensions(this.wrapper);\n        },\n\n        _setItemsTitle: function() {\n            var that = this,\n                options = that.options,\n                items = that.wrapper.find(TICK_SELECTOR),\n                titleNumber = options.min,\n                count = items.length;\n\n            for (var i = 0; i <= count; i += 1) {\n                $(items[i]).attr(\"title\", format(options.tooltip.format, round(titleNumber)));\n                titleNumber += options.smallStep;\n            }\n        },\n\n        _setItemsLargeTick: function() {\n            var that = this,\n                options = that.options,\n                items = that.wrapper.find(TICK_SELECTOR),\n                i = 0, item, value;\n\n            if (removeFraction(options.largeStep) % removeFraction(options.smallStep) === 0 || that._distance() / options.largeStep >= 3) {\n                if (!that._isHorizontal && !that._isRtl) {\n                    items = $.makeArray(items).reverse();\n                }\n\n                for (i = 0; i < items.length; i++) {\n                    item = $(items[i]);\n                    value = that._values[i];\n                    var valueWithoutFraction = round(removeFraction(value - this.options.min));\n                    if (valueWithoutFraction % removeFraction(options.smallStep) === 0 && valueWithoutFraction % removeFraction(options.largeStep) === 0) {\n                        item.addClass(\"k-tick-large\")\n                            .html(\"<span class='k-label'>\" + item.attr(\"title\") + \"</span>\");\n\n                        if (i !== 0 && i !== items.length - 1) {\n                            item.css(\"line-height\", item[that._sizeFn]() + \"px\");\n                        }\n                    }\n                }\n            }\n        },\n\n        _calculateItemsWidth: function(itemsCount) {\n            var that = this,\n                options = that.options,\n                trackDivSize = parseFloat(that._trackDiv.css(that._sizeFn)) + 1,\n                distance = that._distance(),\n                preciseItemsCount = removeFraction(distance) / removeFraction(options.smallStep),\n                pixelStep = trackDivSize / removeFraction(distance),\n                itemWidth,\n                pixelWidths,\n                i;\n\n            if (preciseItemsCount - itemsCount > 0) {\n                trackDivSize -= ((removeFraction(distance) % removeFraction(options.smallStep)) * pixelStep);\n            }\n\n            itemWidth = trackDivSize / itemsCount;\n            pixelWidths = [];\n\n            for (i = 0; i < itemsCount - 1; i++) {\n                pixelWidths[i] = itemWidth;\n            }\n\n            pixelWidths[itemsCount - 1] = pixelWidths[itemsCount] = itemWidth / 2;\n            return that._roundWidths(pixelWidths);\n        },\n\n        _roundWidths: function(pixelWidthsArray) {\n            var balance = 0,\n                count = pixelWidthsArray.length,\n                i;\n\n            for (i = 0; i < count; i++) {\n                balance += (pixelWidthsArray[i] - math.floor(pixelWidthsArray[i]));\n                pixelWidthsArray[i] = math.floor(pixelWidthsArray[i]);\n            }\n\n            balance = math.round(balance);\n\n            return this._addAdditionalSize(balance, pixelWidthsArray);\n        },\n\n        _addAdditionalSize: function(additionalSize, pixelWidthsArray) {\n            if (additionalSize === 0) {\n                return pixelWidthsArray;\n            }\n\n            //set step size\n            var step = parseFloat(pixelWidthsArray.length - 1) / parseFloat(additionalSize == 1 ? additionalSize : additionalSize - 1),\n                i;\n\n            for (i = 0; i < additionalSize; i++) {\n                pixelWidthsArray[parseInt(math.round(step * i), 10)] += 1;\n            }\n\n            return pixelWidthsArray;\n        },\n\n        _calculateSteps: function(pixelWidths) {\n            var that = this,\n                options = that.options,\n                val = options.min,\n                selection = 0,\n                distance = that._distance(),\n                itemsCount = math.ceil(removeFraction(distance) / removeFraction(options.smallStep)),\n                i = 1,\n                lastItem;\n\n            itemsCount += (removeFraction(distance) / removeFraction(options.smallStep)) % 1 === 0 ? 1 : 0;\n            pixelWidths.splice(0, 0, pixelWidths[itemsCount - 2] * 2);\n            pixelWidths.splice(itemsCount - 1, 1, pixelWidths.pop() * 2);\n\n            that._pixelSteps = [selection];\n            that._values = [val];\n\n            if (itemsCount === 0) {\n                return;\n            }\n\n            while (i < itemsCount) {\n                selection += (pixelWidths[i - 1] + pixelWidths[i]) / 2;\n                that._pixelSteps[i] = selection;\n                val += options.smallStep;\n                that._values[i] = round(val);\n\n                i++;\n            }\n\n            lastItem = (removeFraction(distance) % removeFraction(options.smallStep)) === 0 ? itemsCount - 1 : itemsCount;\n\n            that._pixelSteps[lastItem] = that._maxSelection;\n            that._values[lastItem] = options.max;\n        },\n\n        _getValueFromPosition: function(mousePosition, draggableArea) {\n            var that = this,\n                options = that.options,\n                step = math.max(options.smallStep * (that._maxSelection / that._distance()), 0),\n                position = 0,\n                halfStep = (step / 2),\n                i;\n\n            if (that._isHorizontal) {\n                position = mousePosition - draggableArea.startPoint;\n                if (that._isRtl) {\n                    position = that._maxSelection - position;\n                }\n            } else {\n                position = draggableArea.startPoint - mousePosition;\n            }\n\n            if (that._maxSelection - ((parseInt(that._maxSelection % step, 10) - 3) / 2) < position) {\n                return options.max;\n            }\n\n            for (i = 0; i < that._pixelSteps.length; i++) {\n                if (math.abs(that._pixelSteps[i] - position) - 1 <= halfStep) {\n                    return round(that._values[i]);\n                }\n            }\n        },\n\n        _getFormattedValue: function(val, drag) {\n            var that = this,\n                html = \"\",\n                tooltip = that.options.tooltip,\n                tooltipTemplate,\n                selectionStart,\n                selectionEnd;\n\n            if (isArray(val)) {\n                selectionStart = val[0];\n                selectionEnd = val[1];\n            } else if (drag && drag.type) {\n                selectionStart = drag.selectionStart;\n                selectionEnd = drag.selectionEnd;\n            }\n\n            if (drag) {\n                tooltipTemplate = drag.tooltipTemplate;\n            }\n\n            if (!tooltipTemplate && tooltip.template) {\n                tooltipTemplate = kendo.template(tooltip.template);\n            }\n\n            if (isArray(val) || (drag && drag.type)) {\n\n                if (tooltipTemplate) {\n                    html = tooltipTemplate({\n                        selectionStart: selectionStart,\n                        selectionEnd: selectionEnd\n                    });\n                } else {\n                    selectionStart = format(tooltip.format, selectionStart);\n                    selectionEnd = format(tooltip.format, selectionEnd);\n                    html = selectionStart + \" - \" + selectionEnd;\n                }\n            } else {\n                if (drag) {\n                    drag.val = val;\n                }\n\n                if (tooltipTemplate) {\n                    html = tooltipTemplate({\n                        value: val\n                    });\n                } else {\n                    html = format(tooltip.format, val);\n                }\n            }\n            return html;\n        },\n\n        _getDraggableArea: function() {\n            var that = this,\n                offset = kendo.getOffset(that._trackDiv);\n\n            return {\n                startPoint: that._isHorizontal ? offset.left : offset.top + that._maxSelection,\n                endPoint: that._isHorizontal ? offset.left + that._maxSelection : offset.top\n            };\n        },\n\n        _createHtml: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                inputs = element.find(\"input\");\n\n            if (inputs.length == 2) {\n                inputs.eq(0).prop(\"value\", formatValue(options.selectionStart));\n                inputs.eq(1).prop(\"value\", formatValue(options.selectionEnd));\n            } else {\n                element.prop(\"value\", formatValue(options.value));\n            }\n\n            that.wrapper = element.wrap(createWrapper(options, element, that._isHorizontal)).hide().parents(\".k-slider\");\n\n            if (options.showButtons) {\n                that.wrapper.find(\".k-slider-track-wrap\")\n                       .after(createButton(options, \"increase\", that._isHorizontal, that._isRtl))\n                       .before(createButton(options, \"decrease\", that._isHorizontal, that._isRtl));\n            }\n\n            element.before(createTrack(options, element, that._isHorizontal));\n        },\n\n        _focus: function(e) {\n            var that = this,\n                target = e.target,\n                val = that.value(),\n                drag = that._drag;\n\n            if (!drag) {\n                if (target == that.wrapper.find(DRAG_HANDLE).eq(0)[0]) {\n                    drag = that._firstHandleDrag;\n                    that._activeHandle = 0;\n                } else {\n                    drag = that._lastHandleDrag;\n                    that._activeHandle = 1;\n                }\n                val = val[that._activeHandle];\n            }\n\n            $(target).addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n\n            if (drag) {\n                that._activeHandleDrag = drag;\n\n                drag.selectionStart = that.options.selectionStart;\n                drag.selectionEnd = that.options.selectionEnd;\n\n                drag._updateTooltip(val);\n            }\n        },\n\n        _focusWithMouse: function(target) {\n            target = $(target);\n\n            var that = this,\n                idx = target.is(DRAG_HANDLE) ? target.index() : 0;\n\n            window.setTimeout(function() {\n                that.wrapper.find(DRAG_HANDLE)[idx == 2 ? 1 : 0].focus();\n            }, 1);\n\n            that._setTooltipTimeout();\n        },\n\n        _blur: function(e) {\n            var that = this,\n                drag = that._activeHandleDrag;\n\n            $(e.target).removeClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n\n            if (drag) {\n                drag._removeTooltip();\n                delete that._activeHandleDrag;\n                delete that._activeHandle;\n            }\n        },\n\n        _setTooltipTimeout: function() {\n            var that = this;\n            that._tooltipTimeout = window.setTimeout(function() {\n                var drag = that._drag || that._activeHandleDrag;\n                if (drag) {\n                    drag._removeTooltip();\n                }\n            }, 300);\n        },\n\n        _clearTooltipTimeout: function() {\n            var that = this;\n            window.clearTimeout(this._tooltipTimeout);\n            var drag = that._drag || that._activeHandleDrag;\n            if (drag && drag.tooltipDiv) {\n                drag.tooltipDiv.stop(true, false).css(\"opacity\", 1);\n            }\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._form = form.on(\"reset\", that._formResetHandler.bind(that));\n            }\n        },\n\n        min: function(value) {\n            if (!value) {\n                return this.options.min;\n            }\n            this.setOptions({ \"min\": value });\n        },\n\n        max: function(value) {\n            if (!value) {\n                return this.options.max;\n            }\n            this.setOptions({ \"max\": value });\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n            this._sliderItemsInit();\n            this._refresh();\n        },\n\n        destroy: function() {\n            if (this._form) {\n                this._form.off(\"reset\", this._formResetHandler);\n            }\n            Widget.fn.destroy.call(this);\n        }\n    });\n\n    function createWrapper(options, element, isHorizontal) {\n        var orientationCssClass = isHorizontal ? \" k-slider-horizontal\" : \" k-slider-vertical\",\n            style = options.style ? options.style : element.attr(\"style\"),\n            cssClasses = element.attr(\"class\") ? (\" \" + element.attr(\"class\")) : \"\",\n            tickPlacementCssClass = \"\";\n\n        if (options.tickPlacement == \"bottomRight\") {\n            tickPlacementCssClass = \" k-slider-bottomright\";\n        } else if (options.tickPlacement == \"topLeft\") {\n            tickPlacementCssClass = \" k-slider-topleft\";\n        }\n\n        style = style ? \" style='\" + style + \"'\" : \"\";\n\n        return \"<div class='k-slider\" + orientationCssClass + cssClasses + \"'\" + style + \">\" +\n               \"<div class='k-slider-track-wrap\" + tickPlacementCssClass +\n               \"'></div></div>\";\n    }\n\n    function createButton(options, type, isHorizontal, isRtl) {\n        var buttonIconName = \"\";\n\n        if (isHorizontal) {\n            if (type === \"increase\") {\n                buttonIconName = isRtl ? \"caret-alt-left\" : \"caret-alt-right\";\n            } else {\n                buttonIconName = isRtl ? \"caret-alt-right\" : \"caret-alt-left\";\n            }\n        } else {\n            if (type == \"increase\") {\n                buttonIconName = \"caret-alt-up\";\n            } else {\n                buttonIconName = \"caret-alt-down\";\n            }\n        }\n\n        return \"<button class='k-button k-button-md k-rounded-full k-button-solid k-button-solid-base k-icon-button k-button-\" + type + \"' \" +\n                \"title='\" + options[type + \"ButtonTitle\"] + \"' \" +\n                \"aria-label='\" + options[type + \"ButtonTitle\"] + \"'>\" +\n                    kendo.ui.icon({ icon: buttonIconName, iconClass: \"k-button-icon\" }) +\n                \"</button>\";\n    }\n\n    function createSliderItems(options, distance) {\n        var result = \"<ul class='k-reset k-slider-items' role='presentation'>\",\n            count = math.floor(round(distance / options.smallStep)) + 1,\n            i;\n\n        for (i = 0; i < count; i++) {\n            result += \"<li class='k-tick'></li>\";\n        }\n\n        result += \"</ul>\";\n\n        return result;\n    }\n\n    function createTrack(options, element, isHorizontal) {\n        var dragHandleCount = element.is(\"input\") ? 1 : 2,\n            firstDragHandleTitle = dragHandleCount == 2 ? options.leftDragHandleTitle : options.dragHandleTitle,\n            value = options.value,\n            min = options.selectionStart,\n            max = options.selectionEnd,\n            elementValue, minElementValue, maxElementValue;\n\n        if (dragHandleCount === 1) {\n            elementValue = element.val();\n\n            if (elementValue !== null && elementValue !== undefined$1 && elementValue !== 'null') {\n                if (value === null || value === undefined$1) {\n                    value = elementValue;\n                }\n            }\n        } else {\n            minElementValue = element.find(\"input\").eq(0).val();\n            maxElementValue = element.find(\"input\").eq(1).val();\n\n            if (minElementValue !== null && minElementValue !== undefined$1 && minElementValue !== 'null') {\n                if (min === null || min === undefined$1) {\n                    min = minElementValue;\n                }\n            }\n\n            if (maxElementValue !== null && maxElementValue !== undefined$1 && maxElementValue !== 'null') {\n                if (max === null || max === undefined$1) {\n                    max = maxElementValue;\n                }\n            }\n        }\n\n        var result = \"<div class='k-slider-track'><div class='k-slider-selection'><!-- --></div>\" +\n               \"<span tabindex='0' class='k-draghandle' title='\" + firstDragHandleTitle + \"' role='slider' \" +\n               (isHorizontal === false ? \"aria-orientation='vertical' \" : \"\") +\n               \"aria-valuemin='\" + options.min + \"' aria-valuemax='\" + options.max + \"' aria-valuenow='\" + (dragHandleCount > 1 ? (min || options.min) : value || options.min) + \"'></span>\" +\n               (dragHandleCount > 1 ? \"<span tabindex='0' class='k-draghandle' title='\" + options.rightDragHandleTitle + \"'role='slider' \" +\n               (isHorizontal === false ? \"aria-orientation='vertical' \" : \"\") +\n               \"aria-valuemin='\" + options.min + \"' aria-valuemax='\" + options.max + \"' aria-valuenow='\" + (max || options.max) + \"'></span>\" : \"\") +\n               \"</div>\";\n\n        return result;\n    }\n\n    function step(stepValue) {\n        return function(value) {\n            return value + stepValue;\n        };\n    }\n\n    function setValue(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    function formatValue(value) {\n        return (value + \"\").replace(\".\", kendo.cultures.current.numberFormat[\".\"]);\n    }\n\n    function calculatePrecision(value) {\n        var number = value.toString();\n        var precision = 0;\n\n        number = number.split(\".\");\n\n        if (number[1]) {\n            precision = number[1].length;\n        }\n\n        precision = precision > 10 ? 10 : precision;\n        return precision;\n    }\n\n    function round(value) {\n        var precision, power;\n\n        value = parseFloat(value, 10);\n        precision = calculatePrecision(value);\n        power = math.pow(10, precision || 0);\n\n        return math.round(value * power) / power;\n    }\n\n    function parseAttr(element, name) {\n        var value = parse(element.getAttribute(name));\n        if (value === null) {\n            value = undefined$1;\n        }\n        return value;\n    }\n\n    function defined(value) {\n        return typeof value !== UNDEFINED;\n    }\n\n    function removeFraction(value) {\n        return value * 10000;\n    }\n\n    var Slider = SliderBase.extend({\n        init: function(element, options) {\n            var that = this,\n                dragHandle;\n\n            element.type = \"text\";\n            options = extend({}, {\n                value: parseAttr(element, \"value\"),\n                min: parseAttr(element, \"min\"),\n                max: parseAttr(element, \"max\"),\n                smallStep: parseAttr(element, \"step\")\n            }, options);\n\n            element = $(element);\n\n            if (options && options.enabled === undefined$1) {\n                options.enabled = !element.is(\"[disabled]\");\n            }\n\n            SliderBase.fn.init.call(that, element, options);\n            options = that.options;\n            if (!defined(options.value) || options.value === null) {\n                options.value = options.min;\n                element.prop(\"value\", formatValue(options.min));\n            }\n            options.value = math.max(math.min(options.value, options.max), options.min);\n\n            dragHandle = that.wrapper.find(DRAG_HANDLE);\n\n            that._selection = new Slider.Selection(dragHandle, that, options);\n            that._drag = new Slider.Drag(dragHandle, \"\", that, options);\n\n            that._refreshAriaAttr(options.value);\n        },\n\n        options: {\n            name: \"Slider\",\n            showButtons: true,\n            increaseButtonTitle: \"Increase\",\n            decreaseButtonTitle: \"Decrease\",\n            dragHandleTitle: \"drag\",\n            tooltip: { format: \"{0:#,#.##}\" },\n            value: null\n        },\n\n        enable: function(enable) {\n            var that = this,\n                options = that.options,\n                clickHandler,\n                move;\n\n            that.disable();\n            if (enable === false) {\n                return;\n            }\n\n            that.wrapper\n                .removeClass(STATE_DISABLED);\n\n            that.wrapper.find(\"input\").prop(DISABLED, false);\n\n            clickHandler = function(e) {\n                var touch = getTouches(e)[0];\n\n                if (!touch) {\n                    return;\n                }\n\n                var mousePosition = that._isHorizontal ? touch.location.pageX : touch.location.pageY,\n                    draggableArea = that._getDraggableArea(),\n                    target = $(e.target);\n\n                if (target.hasClass(\"k-draghandle\")) {\n                    target.addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n                    return;\n                }\n\n                that._update(that._getValueFromPosition(mousePosition, draggableArea));\n\n                that._focusWithMouse(e.target);\n\n                that._drag.dragstart(e);\n                e.preventDefault();\n            };\n\n            that.wrapper\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR)\n                    .on(TRACK_MOUSE_DOWN, clickHandler)\n                    .end()\n                    .on(TRACK_MOUSE_DOWN, function() {\n                        $(document.documentElement).one(\"selectstart\", kendo.preventDefault);\n                    })\n                    .on(TRACK_MOUSE_UP, function() {\n                        that._drag._end();\n                    });\n\n            that.wrapper\n                .find(DRAG_HANDLE)\n                .attr(TABINDEX, 0)\n                .on(MOUSE_UP, function() {\n                    that._setTooltipTimeout();\n                })\n                .on(CLICK, function(e) {\n                    that._focusWithMouse(e.target);\n                    e.preventDefault();\n                })\n                .on(FOCUS, that._focus.bind(that))\n                .on(BLUR, that._blur.bind(that));\n\n            move = (function(sign) {\n                var newVal = that._nextValueByIndex(that._valueIndex + (sign * 1));\n                that._setValueInRange(newVal);\n                that._drag._updateTooltip(newVal);\n            });\n\n            if (options.showButtons) {\n                var mouseDownHandler = (function(e, sign) {\n                    this._clearTooltipTimeout();\n                    if (e.which === 1 || (support.touch && e.which === 0)) {\n                        move(sign);\n\n                        this.timeout = setTimeout((function() {\n                            this.timer = setInterval(function() {\n                                move(sign);\n                            }, 60);\n                        }).bind(this), 200);\n                    }\n                }).bind(that);\n\n                that.wrapper.find(\".k-button\")\n                    .on(MOUSE_UP, (function(e) {\n                        this._clearTimer();\n                        that._focusWithMouse(e.target);\n                    }).bind(that))\n                    .on(MOUSE_OVER, function(e) {\n                        $(e.currentTarget).addClass(\"k-hover\");\n                    })\n                    .on(\"mouseout\" + NS, (function(e) {\n                        $(e.currentTarget).removeClass(\"k-hover\");\n                        this._clearTimer();\n                    }).bind(that))\n                    .on(MOUSE_DOWN, (function(e) {\n                        var sign = $(e.target).closest(\".k-button\").is(\".k-button-increase\") ? 1 : -1;\n                        mouseDownHandler(e, sign);\n                    }))\n                    .on(\"click\", kendo.preventDefault);\n            }\n\n            that.wrapper\n                .find(DRAG_HANDLE)\n                .off(KEY_DOWN, false)\n                .on(KEY_DOWN, this._keydown.bind(that));\n\n            options.enabled = true;\n        },\n\n        disable: function() {\n            var that = this;\n\n            that.wrapper\n                .addClass(STATE_DISABLED);\n\n            $(that.element).prop(DISABLED, DISABLED);\n\n            that.wrapper\n                .find(\".k-button\")\n                .off(MOUSE_DOWN)\n                .on(MOUSE_DOWN, function(e) {\n                    e.preventDefault();\n                    $(this).addClass(\"k-active\");\n                })\n                .off(MOUSE_UP)\n                .on(MOUSE_UP, function(e) {\n                    e.preventDefault();\n                    $(this).removeClass(\"k-active\");\n                })\n                .off(\"mouseleave\" + NS)\n                .on(\"mouseleave\" + NS, kendo.preventDefault)\n                .off(MOUSE_OVER)\n                .on(MOUSE_OVER, kendo.preventDefault);\n\n            that.wrapper\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(TRACK_MOUSE_DOWN).off(TRACK_MOUSE_UP);\n\n            that.wrapper\n                .find(DRAG_HANDLE)\n                .attr(TABINDEX, -1)\n                .off(MOUSE_UP)\n                .off(KEY_DOWN)\n                .off(CLICK)\n                .off(FOCUS)\n                .off(BLUR);\n\n            that.options.enabled = false;\n        },\n\n        _update: function(val) {\n            var that = this,\n                change = that.value() != val;\n\n            that.value(val);\n\n            if (change) {\n                that.trigger(CHANGE, { value: that.options.value });\n            }\n        },\n\n        value: function(value) {\n            var that = this,\n                options = that.options;\n\n            value = round(value);\n            if (isNaN(value)) {\n                return options.value;\n            }\n\n            if (value >= options.min && value <= options.max) {\n                if (options.value != value) {\n                    that.element.prop(\"value\", formatValue(value));\n                    options.value = value;\n                    that._refreshAriaAttr(value);\n                    that._refresh();\n                }\n            }\n        },\n\n        _refresh: function() {\n            this.trigger(MOVE_SELECTION, { value: this.options.value });\n        },\n\n        _refreshAriaAttr: function(value) {\n            var that = this,\n                drag = that._drag,\n                formattedValue;\n\n            if (drag && drag._tooltipDiv) {\n                formattedValue = drag._tooltipDiv.text();\n            } else {\n                formattedValue = that._getFormattedValue(value, null);\n            }\n            this.wrapper.find(DRAG_HANDLE).attr(ARIA_VALUENOW, value).attr(ARIA_VALUETEXT, formattedValue);\n        },\n\n        _clearTimer: function() {\n            clearTimeout(this.timeout);\n            clearInterval(this.timer);\n        },\n\n        _keydown: function(e) {\n            var that = this;\n\n            if (e.keyCode in that._keyMap) {\n                that._clearTooltipTimeout();\n                that._setValueInRange(that._keyMap[e.keyCode](that.options.value));\n                that._drag._updateTooltip(that.value());\n                e.preventDefault();\n            }\n        },\n\n        _setValueInRange: function(val) {\n            var that = this,\n                options = that.options;\n\n            val = round(val);\n            if (isNaN(val)) {\n                that._update(options.min);\n                return;\n            }\n\n            val = math.max(math.min(val, options.max), options.min);\n            that._update(val);\n        },\n\n        _nextValueByIndex: function(index) {\n            var count = this._values.length;\n\n            return this._values[math.max(0, math.min(index, count - 1))];\n        },\n\n        _formResetHandler: function() {\n            var that = this,\n                min = that.options.min;\n\n            setTimeout(function() {\n                var value = that.element[0].value;\n                that.value(value === \"\" || isNaN(value) ? min : value);\n            });\n        },\n\n        destroy: function() {\n            var that = this;\n\n            SliderBase.fn.destroy.call(that);\n\n            that.wrapper.off(NS)\n                .find(\".k-button\").off(NS)\n                .end()\n                .find(DRAG_HANDLE).off(NS)\n                .end()\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(NS)\n                .end();\n\n            that._drag.draggable.destroy();\n            that._drag._removeTooltip(true);\n        }\n    });\n\n    Slider.Selection = function(dragHandle, that, options) {\n        function moveSelection(val) {\n            var selectionValue = val - options.min,\n                index = that._valueIndex = math.ceil(round(selectionValue / options.smallStep)),\n                selection = parseInt(that._pixelSteps[index], 10),\n                selectionDiv = that._trackDiv.find(\".k-slider-selection\");\n\n            selectionDiv[that._sizeFn](selection);\n            dragHandle.css(that._position, selection);\n        }\n\n        moveSelection(options.value);\n\n        that.bind([SLIDE, MOVE_SELECTION], function(e) {\n            moveSelection(parseFloat(e.value, 10));\n        });\n\n        that.bind(CHANGE, function(e) {\n            moveSelection(parseFloat(e.sender.value(), 10));\n        });\n    };\n\n    Slider.Drag = function(element, type, owner, options) {\n        var that = this;\n        that.owner = owner;\n        that.options = options;\n        that.element = element;\n        that.type = type;\n\n        that.draggable = new Draggable(element, {\n            distance: 0,\n            dragstart: that._dragstart.bind(that),\n            drag: that.drag.bind(that),\n            dragend: that.dragend.bind(that),\n            dragcancel: that.dragcancel.bind(that)\n        });\n\n        element.click(false);\n\n        // Disable link dragging\n        element.on(\"dragstart\", function(e) {\n            e.preventDefault();\n        });\n    };\n\n    Slider.Drag.prototype = {\n        dragstart: function(e) {\n            // add reference to the last active drag handle.\n            this.owner._activeDragHandle = this;\n            // HACK to initiate click on the line\n            this.draggable.userEvents.cancel();\n            this._dragstart(e);\n            this.dragend();\n        },\n\n        _dragstart: function(e) {\n            var that = this,\n                owner = that.owner,\n                options = that.options;\n\n            if (!options.enabled) {\n                e.preventDefault();\n                return;\n            }\n\n            // add reference to the last active drag handle.\n            this.owner._activeDragHandle = this;\n\n            owner.element.off(MOUSE_OVER);\n            owner.wrapper.find(\".\" + STATE_FOCUSED).removeClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n            that.element.addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n            $(document.documentElement).css(\"cursor\", \"pointer\");\n\n            that.draggableArea = owner._getDraggableArea();\n            that.step = math.max(options.smallStep * (owner._maxSelection / owner._distance()), 0);\n\n            if (that.type) {\n                that.selectionStart = options.selectionStart;\n                that.selectionEnd = options.selectionEnd;\n                owner._setZIndex(that.type);\n            } else {\n                that.oldVal = that.val = options.value;\n            }\n\n            that._removeTooltip(true);\n            that._createTooltip();\n        },\n\n        _createTooltip: function() {\n            var that = this,\n                owner = that.owner,\n                tooltip = that.options.tooltip,\n                html = '',\n                wnd = $(window),\n                tooltipTemplate, calloutCssClass;\n\n            if (!tooltip.enabled) {\n                return;\n            }\n\n            if (tooltip.template) {\n                tooltipTemplate = that.tooltipTemplate = kendo.template(tooltip.template);\n            }\n\n            $(\".k-slider-tooltip\").remove(); // if user changes window while tooltip is visible, a second one will be created\n            that.tooltipDiv = $(\"<div role='tooltip' class='k-tooltip k-slider-tooltip'><!-- --></div>\").appendTo(document.body);\n\n            html = owner._getFormattedValue(that.val || owner.value(), that);\n\n            if (!that.type) {\n                calloutCssClass = \"k-callout-\" + (owner._isHorizontal ? 's' : 'e');\n                that.tooltipInnerDiv = \"<div class='k-callout \" + calloutCssClass + \"'><!-- --></div>\";\n                html += that.tooltipInnerDiv;\n            }\n\n            that.tooltipDiv.html(html);\n\n            that._scrollOffset = {\n                top: wnd.scrollTop(),\n                left: kendo.scrollLeft(wnd)\n            };\n\n            that.moveTooltip();\n        },\n\n        drag: function(e) {\n            var that = this,\n                owner = that.owner,\n                x = e.x.location,\n                y = e.y.location,\n                startPoint = that.draggableArea.startPoint,\n                endPoint = that.draggableArea.endPoint,\n                slideParams;\n\n            e.preventDefault();\n\n            if (owner._isHorizontal) {\n                if (owner._isRtl) {\n                    that.val = that.constrainValue(x, startPoint, endPoint, x < endPoint);\n                } else {\n                    that.val = that.constrainValue(x, startPoint, endPoint, x >= endPoint);\n                }\n            } else {\n                that.val = that.constrainValue(y, endPoint, startPoint, y <= endPoint);\n            }\n\n            if (that.oldVal != that.val) {\n                that.oldVal = that.val;\n\n                if (that.type) {\n                    if (that.type == \"firstHandle\") {\n                        if (that.val < that.selectionEnd) {\n                            that.selectionStart = that.val;\n                        } else {\n                            that.selectionStart = that.selectionEnd = that.val;\n                        }\n                    } else {\n                        if (that.val > that.selectionStart) {\n                            that.selectionEnd = that.val;\n                        } else {\n                            that.selectionStart = that.selectionEnd = that.val;\n                        }\n                    }\n                    slideParams = {\n                        values: [that.selectionStart, that.selectionEnd],\n                        value: [that.selectionStart, that.selectionEnd]\n                    };\n                } else {\n                    slideParams = { value: that.val };\n                }\n\n                owner.trigger(SLIDE, slideParams);\n            }\n            that._updateTooltip(that.val);\n        },\n\n        _updateTooltip: function(val) {\n            var that = this,\n                options = that.options,\n                tooltip = options.tooltip,\n                html = \"\";\n\n            if (!tooltip.enabled) {\n                return;\n            }\n\n            if (!that.tooltipDiv) {\n                that._createTooltip();\n            }\n\n            html = that.owner._getFormattedValue(round(val), that);\n\n            if (!that.type) {\n                html += that.tooltipInnerDiv;\n            }\n\n            that.tooltipDiv.html(html);\n            that.moveTooltip();\n        },\n\n        dragcancel: function() {\n            this.owner._refresh();\n            $(document.documentElement).css(\"cursor\", \"\");\n            return this._end();\n        },\n\n        dragend: function() {\n            var that = this,\n                owner = that.owner;\n\n            $(document.documentElement).css(\"cursor\", \"\");\n\n            if (that.type) {\n                owner._update(that.selectionStart, that.selectionEnd);\n            } else {\n                owner._update(that.val);\n                that.draggable.userEvents._disposeAll();\n            }\n\n            that.draggable.userEvents.cancel();\n            return that._end();\n        },\n\n        _end: function() {\n            var that = this,\n                owner = that.owner;\n\n            owner._focusWithMouse(that.element);\n\n            owner.element.on(MOUSE_OVER);\n\n            return false;\n        },\n\n        _removeTooltip: function(noAnimation) {\n            var that = this,\n                owner = that.owner;\n\n            if (that.tooltipDiv && owner.options.tooltip.enabled && owner.options.enabled) {\n                if (noAnimation) {\n                    that.tooltipDiv.remove();\n                    that.tooltipDiv = null;\n                } else {\n                    that.tooltipDiv.fadeOut(\"slow\", function() {\n                        $(this).remove();\n                        that.tooltipDiv = null;\n                    });\n                }\n            }\n        },\n\n        moveTooltip: function() {\n            var that = this,\n                owner = that.owner,\n                top = 0,\n                left = 0,\n                element = that.element,\n                offset = kendo.getOffset(element),\n                margin = 8,\n                viewport = $(window),\n                callout = that.tooltipDiv.find(\".k-callout\"),\n                width = outerWidth(that.tooltipDiv),\n                height = outerHeight(that.tooltipDiv),\n                dragHandles, sdhOffset, diff, anchorSize;\n\n            if (that.type) {\n                dragHandles = owner.wrapper.find(DRAG_HANDLE);\n                offset = kendo.getOffset(dragHandles.eq(0));\n                sdhOffset = kendo.getOffset(dragHandles.eq(1));\n\n                if (owner._isHorizontal) {\n                    top = sdhOffset.top;\n                    left = offset.left + ((sdhOffset.left - offset.left) / 2);\n                } else {\n                    top = offset.top + ((sdhOffset.top - offset.top) / 2);\n                    left = sdhOffset.left;\n                }\n\n                anchorSize = outerWidth(dragHandles.eq(0)) + 2 * margin;\n            } else {\n                top = offset.top;\n                left = offset.left;\n                anchorSize = outerWidth(element) + 2 * margin;\n            }\n\n            if (owner._isHorizontal) {\n                left -= parseInt((width - owner._outerSize(element)) / 2, 10);\n                top -= height + margin + (callout.length ? callout.height() : 0);\n            } else {\n                top -= parseInt((height - owner._outerSize(element)) / 2, 10);\n                left -= width + margin + (callout.length ? callout.width() : 0);\n            }\n\n            if (owner._isHorizontal) {\n                diff = that._flip(top, height, anchorSize, outerHeight(viewport) + that._scrollOffset.top);\n                top += diff;\n                left += that._fit(left, width, outerWidth(viewport) + that._scrollOffset.left);\n            } else {\n                diff = that._flip(left, width, anchorSize, outerWidth(viewport) + that._scrollOffset.left);\n                top += that._fit(top, height, outerHeight(viewport) + that._scrollOffset.top);\n                left += diff;\n            }\n\n            if (diff > 0 && callout) {\n                callout.removeClass();\n                callout.addClass(\"k-callout k-callout-\" + (owner._isHorizontal ? \"n\" : \"w\"));\n            }\n\n            that.tooltipDiv.css({ top: top, left: left });\n        },\n\n        _fit: function(position, size, viewPortEnd) {\n            var output = 0;\n\n            if (position + size > viewPortEnd) {\n                output = viewPortEnd - (position + size);\n            }\n\n            if (position < 0) {\n                output = -position;\n            }\n\n            return output;\n        },\n\n        _flip: function(offset, size, anchorSize, viewPortEnd) {\n            var output = 0;\n\n            if (offset + size > viewPortEnd) {\n                output += -(anchorSize + size);\n            }\n\n            if (offset + output < 0) {\n                output += anchorSize + size;\n            }\n\n            return output;\n        },\n\n        constrainValue: function(position, min, max, maxOverflow) {\n            var that = this,\n                val = 0;\n\n            if (min < position && position < max) {\n                val = that.owner._getValueFromPosition(position, that.draggableArea);\n            } else {\n                if (maxOverflow ) {\n                    val = that.options.max;\n                } else {\n                    val = that.options.min;\n                }\n            }\n\n            return val;\n        }\n\n    };\n\n    kendo.ui.plugin(Slider);\n\n    var RangeSlider = SliderBase.extend({\n        init: function(element, options) {\n            var that = this,\n                inputs = $(element).find(\"input\"),\n                firstInput = inputs.eq(0)[0],\n                secondInput = inputs.eq(1)[0];\n\n            firstInput.type = \"text\";\n            secondInput.type = \"text\";\n\n            if (options && options.showButtons) {\n                if (window.console) {\n                    window.console.warn(\"showbuttons option is not supported for the range slider, ignoring\");\n                }\n\n                options.showButtons = false;\n            }\n\n            options = extend({}, {\n                selectionStart: parseAttr(firstInput, \"value\"),\n                min: parseAttr(firstInput, \"min\"),\n                max: parseAttr(firstInput, \"max\"),\n                smallStep: parseAttr(firstInput, \"step\")\n            }, {\n                selectionEnd: parseAttr(secondInput, \"value\"),\n                min: parseAttr(secondInput, \"min\"),\n                max: parseAttr(secondInput, \"max\"),\n                smallStep: parseAttr(secondInput, \"step\")\n            }, options);\n\n            if (options && options.enabled === undefined$1) {\n                options.enabled = !inputs.is(\"[disabled]\");\n            }\n\n            SliderBase.fn.init.call(that, element, options);\n            options = that.options;\n            if (!defined(options.selectionStart) || options.selectionStart === null) {\n                options.selectionStart = options.min;\n                inputs.eq(0).prop(\"value\", formatValue(options.min));\n            }\n\n            if (!defined(options.selectionEnd) || options.selectionEnd === null) {\n                options.selectionEnd = options.max;\n                inputs.eq(1).prop(\"value\", formatValue(options.max));\n            }\n\n            var dragHandles = that.wrapper.find(DRAG_HANDLE);\n\n            this._selection = new RangeSlider.Selection(dragHandles, that, options);\n            that._firstHandleDrag = new Slider.Drag(dragHandles.eq(0), \"firstHandle\", that, options);\n            that._lastHandleDrag = new Slider.Drag(dragHandles.eq(1), \"lastHandle\" , that, options);\n\n            that._refreshAriaAttr(options.selectionStart , options.selectionEnd);\n        },\n\n        options: {\n            name: \"RangeSlider\",\n            leftDragHandleTitle: \"drag\",\n            rightDragHandleTitle: \"drag\",\n            tooltip: { format: \"{0:#,#.##}\" },\n            selectionStart: null,\n            selectionEnd: null\n        },\n\n        enable: function(enable) {\n            var that = this,\n                options = that.options,\n                clickHandler;\n\n            that.disable();\n            if (enable === false) {\n                return;\n            }\n\n            that.wrapper\n                .removeClass(STATE_DISABLED);\n\n            that.wrapper.find(\"input\").prop(DISABLED, false);\n\n            clickHandler = function(e) {\n                var touch = getTouches(e)[0];\n\n                if (!touch) {\n                    return;\n                }\n\n                var mousePosition = that._isHorizontal ? touch.location.pageX : touch.location.pageY,\n                    draggableArea = that._getDraggableArea(),\n                    val = that._getValueFromPosition(mousePosition, draggableArea),\n                    target = $(e.target),\n                    from, to, drag;\n\n                if (target.hasClass(\"k-draghandle\")) {\n                    that.wrapper.find(\".\" + STATE_FOCUSED).removeClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n                    target.addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n                    return;\n                }\n\n                if (val < options.selectionStart) {\n                    from = val;\n                    to = options.selectionEnd;\n                    drag = that._firstHandleDrag;\n                } else if (val > that.selectionEnd) {\n                    from = options.selectionStart;\n                    to = val;\n                    drag = that._lastHandleDrag;\n                } else {\n                    if (val - options.selectionStart <= options.selectionEnd - val) {\n                        from = val;\n                        to = options.selectionEnd;\n                        drag = that._firstHandleDrag;\n                    } else {\n                        from = options.selectionStart;\n                        to = val;\n                        drag = that._lastHandleDrag;\n                    }\n                }\n\n                drag.dragstart(e);\n                that._setValueInRange(from, to);\n                that._focusWithMouse(drag.element);\n            };\n\n            that.wrapper\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR)\n                    .on(TRACK_MOUSE_DOWN, clickHandler)\n                    .end()\n                    .on(TRACK_MOUSE_DOWN, function() {\n                        $(document.documentElement).one(\"selectstart\", kendo.preventDefault);\n                    })\n                    .on(TRACK_MOUSE_UP, function() {\n                        if (that._activeDragHandle) {\n                            that._activeDragHandle._end();\n                        }\n                    });\n\n            that.wrapper\n                .find(DRAG_HANDLE)\n                .attr(TABINDEX, 0)\n                .on(MOUSE_UP, function() {\n                    that._setTooltipTimeout();\n                })\n                .on(CLICK, function(e) {\n                    that._focusWithMouse(e.target);\n                    e.preventDefault();\n                })\n                .on(FOCUS, that._focus.bind(that))\n                .on(BLUR, that._blur.bind(that));\n\n            that.wrapper.find(DRAG_HANDLE)\n                .off(KEY_DOWN, kendo.preventDefault)\n                .eq(0).on(KEY_DOWN,\n                    (function(e) {\n                        this._keydown(e, \"firstHandle\");\n                    }).bind(that)\n                )\n                .end()\n                .eq(1).on(KEY_DOWN,\n                    (function(e) {\n                        this._keydown(e, \"lastHandle\");\n                    }).bind(that)\n                );\n\n            that.options.enabled = true;\n        },\n\n        disable: function() {\n            var that = this;\n\n            that.wrapper\n                .addClass(STATE_DISABLED);\n\n            that.wrapper.find(\"input\").prop(DISABLED, DISABLED);\n\n            that.wrapper\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(TRACK_MOUSE_DOWN).off(TRACK_MOUSE_UP);\n\n            that.wrapper\n                .find(DRAG_HANDLE)\n                .attr(TABINDEX, -1)\n                .off(MOUSE_UP)\n                .off(KEY_DOWN)\n                .off(CLICK)\n                .off(FOCUS)\n                .off(BLUR);\n\n            that.options.enabled = false;\n        },\n\n        _keydown: function(e, handle) {\n            var that = this,\n                selectionStartValue = that.options.selectionStart,\n                selectionEndValue = that.options.selectionEnd,\n                dragSelectionStart,\n                dragSelectionEnd,\n                activeHandleDrag;\n\n            if (e.keyCode in that._keyMap) {\n\n                that._clearTooltipTimeout();\n\n                if (handle == \"firstHandle\") {\n                    activeHandleDrag = that._activeHandleDrag = that._firstHandleDrag;\n                    selectionStartValue = that._keyMap[e.keyCode](selectionStartValue);\n\n                    if (selectionStartValue > selectionEndValue) {\n                        selectionEndValue = selectionStartValue;\n                    }\n                } else {\n                    activeHandleDrag = that._activeHandleDrag = that._lastHandleDrag;\n                    selectionEndValue = that._keyMap[e.keyCode](selectionEndValue);\n\n                    if (selectionStartValue > selectionEndValue) {\n                        selectionStartValue = selectionEndValue;\n                    }\n                }\n\n                that._setValueInRange(round(selectionStartValue), round(selectionEndValue));\n\n                dragSelectionStart = Math.max(selectionStartValue, that.options.selectionStart);\n                dragSelectionEnd = Math.min(selectionEndValue, that.options.selectionEnd);\n\n                activeHandleDrag.selectionEnd = Math.max(dragSelectionEnd, that.options.selectionStart);\n                activeHandleDrag.selectionStart = Math.min(dragSelectionStart, that.options.selectionEnd);\n\n                activeHandleDrag._updateTooltip(that.value()[that._activeHandle]);\n\n                e.preventDefault();\n            }\n        },\n\n        _update: function(selectionStart, selectionEnd) {\n            var that = this,\n                values = that.value();\n\n            var change = values[0] != selectionStart || values[1] != selectionEnd;\n\n            that.value([selectionStart, selectionEnd]);\n\n            if (change) {\n                that.trigger(CHANGE, {\n                    values: [selectionStart, selectionEnd],\n                    value: [selectionStart, selectionEnd]\n                });\n            }\n        },\n\n        value: function(value) {\n            if (value && value.length) {\n                return this._value(value[0], value[1]);\n            } else {\n                return this._value();\n            }\n        },\n\n        _value: function(start, end) {\n            var that = this,\n                options = that.options,\n                selectionStart = options.selectionStart,\n                selectionEnd = options.selectionEnd;\n\n            if (isNaN(start) && isNaN(end)) {\n                return [selectionStart, selectionEnd];\n            } else {\n                start = round(start);\n                end = round(end);\n            }\n\n            if (start >= options.min && start <= options.max &&\n                end >= options.min && end <= options.max && start <= end) {\n                if (selectionStart != start || selectionEnd != end) {\n                    that.element.find(\"input\")\n                        .eq(0).prop(\"value\", formatValue(start))\n                        .end()\n                        .eq(1).prop(\"value\", formatValue(end));\n\n                    options.selectionStart = start;\n                    options.selectionEnd = end;\n                    that._refresh();\n                    that._refreshAriaAttr(start, end);\n                }\n            }\n        },\n\n        values: function(start, end) {\n            if (isArray(start)) {\n                return this._value(start[0], start[1]);\n            } else {\n                return this._value(start, end);\n            }\n        },\n\n        _refresh: function() {\n            var that = this,\n                options = that.options;\n\n            that.trigger(MOVE_SELECTION, {\n                values: [options.selectionStart, options.selectionEnd],\n                value: [options.selectionStart, options.selectionEnd]\n            });\n\n            if (options.selectionStart == options.max && options.selectionEnd == options.max) {\n                that._setZIndex(\"firstHandle\");\n            }\n        },\n\n        _refreshAriaAttr: function(start, end) {\n            var that = this,\n                dragHandles = that.wrapper.find(DRAG_HANDLE),\n                drag = that._activeHandleDrag,\n                formattedValue;\n\n            formattedValue = that._getFormattedValue([start, end], drag);\n\n            dragHandles.eq(0).attr(ARIA_VALUENOW, start);\n            dragHandles.eq(1).attr(ARIA_VALUENOW, end);\n            dragHandles.attr(ARIA_VALUETEXT, formattedValue);\n        },\n\n        _setValueInRange: function(selectionStart, selectionEnd) {\n            var options = this.options;\n\n            selectionStart = math.max(math.min(selectionStart, options.max), options.min);\n\n            selectionEnd = math.max(math.min(selectionEnd, options.max), options.min);\n\n            if (selectionStart == options.max && selectionEnd == options.max) {\n                this._setZIndex(\"firstHandle\");\n            }\n\n            this._update(math.min(selectionStart, selectionEnd), math.max(selectionStart, selectionEnd));\n        },\n\n        _setZIndex: function(type) {\n            this.wrapper.find(DRAG_HANDLE).each(function(index) {\n                $(this).css(\"z-index\", type == \"firstHandle\" ? 1 - index : index);\n            });\n        },\n\n        _formResetHandler: function() {\n            var that = this,\n                options = that.options;\n\n            setTimeout(function() {\n                var inputs = that.element.find(\"input\");\n                var start = inputs[0].value;\n                var end = inputs[1].value;\n                that.values(start === \"\" || isNaN(start) ? options.min : start, end === \"\" || isNaN(end) ? options.max : end);\n            });\n        },\n\n        destroy: function() {\n            var that = this;\n\n            SliderBase.fn.destroy.call(that);\n\n            that.wrapper.off(NS)\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(NS)\n                .end()\n                .find(DRAG_HANDLE).off(NS);\n\n            that._firstHandleDrag.draggable.destroy();\n            that._lastHandleDrag.draggable.destroy();\n        }\n    });\n\n    RangeSlider.Selection = function(dragHandles, that, options) {\n        function moveSelection(value) {\n            value = value || [];\n            var selectionStartValue = value[0] - options.min,\n                selectionEndValue = value[1] - options.min,\n                selectionStartIndex = math.ceil(round(selectionStartValue / options.smallStep)),\n                selectionEndIndex = math.ceil(round(selectionEndValue / options.smallStep)),\n                selectionStart = that._pixelSteps[selectionStartIndex],\n                selectionEnd = that._pixelSteps[selectionEndIndex];\n\n            dragHandles.eq(0).css(that._position, selectionStart)\n                       .end()\n                       .eq(1).css(that._position, selectionEnd);\n\n            makeSelection(selectionStart, selectionEnd);\n        }\n\n        function makeSelection(selectionStart, selectionEnd) {\n            var selection,\n                selectionPosition,\n                selectionDiv = that._trackDiv.find(\".k-slider-selection\");\n\n            selection = math.abs(selectionStart - selectionEnd);\n\n            selectionDiv[that._sizeFn](selection);\n            selectionPosition = math.min(selectionStart, selectionEnd);\n            selectionDiv.css(that._position, selectionPosition - 1);\n        }\n\n        moveSelection(that.value());\n\n        that.bind([ CHANGE, SLIDE, MOVE_SELECTION ], function(e) {\n            moveSelection(e.values);\n        });\n    };\n\n    kendo.ui.plugin(RangeSlider);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}