{"version":3,"sources":["raw-mjs/kendo.scheduler.recurrence.js"],"names":["__meta__","id","name","category","depends","hidden","$","undefined$1","kendo","window","encode","htmlEncode","timezone","Class","ui","Widget","DropDownList","ButtonGroup","kendoDate","date","setTime","setDayOfWeek","adjustDST","firstDayOfMonth","getMilliseconds","DAYS_IN_LEAPYEAR","DAYS_IN_YEAR","MONTHS","WEEK_DAYS","WEEK_DAYS_IDX","SU","MO","TU","WE","TH","FR","SA","DATE_FORMATS","RULE_NAMES","RULE_NAMES_LENGTH","length","RECURRENCE_DATE_FORMAT","limitation","months","end","rule","monthRules","ruleValues","getMonth","changed","setMonth","setFullYear","getFullYear","monthDays","monthLength","month","days","hours","getHours","normalize","monthDay","getMonthLength","getDate","sort","numberSortPredicate","yearDays","year","yearDay","leapYear","dayInYear","weeks","day","weekStart","week","weekInYear","weekDays","weekDayRule","offsetDate","Date","getTime","offsets","start","normalizeDay","getDay","weekDayRules","ruleWeekOffset","weekDay","weekNumber","currentDay","normalizeDayIndex","result","idx","weekInMonth","normalizeOffset","push","ruleWeekValues","freq","positions","position","forEach","nextMonthFirstDay","ruleDay","offset","isInWeek","numberOfWeeks","setDate","hourRules","startTime","_startTime","startHours","setHours","minutes","setMinutes","getMinutes","minuteRules","seconds","setSeconds","getSeconds","secondRules","BaseFrequency","extend","next","options","this","_hour","limit","ruleName","firstRule","modified","interval","current","diff","startTimeHours","_startPeriod","frequency","excess","getTimezoneOffset","MS_PER_HOUR","MS_PER_MINUTE","intervalExcess","Math","floor","round","MS_PER_DAY","_date","_getNumberOfWeeksBetweenDates","_hasRuleValue","first","second","exactWeeks","HourlyFrequency","fn","DailyFrequency","WeeklyFrequency","setup","eventStartDate","MonthlyFrequency","YearlyFrequency","frequencies","hourly","daily","weekly","monthly","yearly","CLICK","CHANGE","firstWeekLength","ceil","lastDate","weeksInMonth","skipFirst","skipLast","rules","value","ruleValue","availableRules","parseArray","list","range","parseInt","isNaN","parseWeekDayList","valueLength","substring","toUpperCase","a","b","parseExceptions","exceptions","zone","dates","split","indexOf","parseUTCDate","isException","Array","isArray","dateTime","toExceptionString","concat","convert","toString","join","endPeriodByFreq","eventsByPosition","periodEvents","until","event","inPeriod","periodEventsLength","events","removeExceptionDates","exceptionDates","getZoneOffset","parseDate","apply","parseDateRule","dateRule","pair","property","tzid","valueIdx","pairs","parseRule","recur","splits","part","parts","instance","trim","exdates","toLowerCase","count","culture","calendar","firstDay","day1","day2","serializeDateRule","val","serialize","ruleString","valueString","serializeWeekDayList","recurrence","parse","expand","endTime","endDate","durationMS","startPeriod","ruleStart","ruleEnd","useEventStart","freqName","eventStartTime","eventStartMS","eventStart","currentIdx","shiftedStart","shiftedEnd","shiftedStartTime","shifterEndTime","recurrenceRule","startTimezone","endTimezone","clone","recurrenceException","set","startPeriodByFreq","_endPeriod","duration","dateOffset","dateMinusHour","dateMinusHourOffset","allDayCompensation","isAllDay","toInvariantTime","inPeriodCheckEndDate","toUtcTime","startZone","endZone","startOffsetDiff","endOffsetDiff","startTZOffsetDiff","endTZOffsetDiff","offsetTicksStart","offsetTicksEnd","toOccurrence","_endTime","slice","isMissingDSTHour","RECURRENCE_VIEW_TEMPLATE","template","messages","repeatEvery","repeatOn","attr","of","label","never","after","occurrence","on","DAY_RULE","WEEKDAY_RULE","WEEKEND_RULE","BaseRecurrenceEditor","init","element","that","call","wrapper","today","firstWeekDay","_namespace","spinners","mobile","repeat","recurrenceEditorTitle","mobileLabel","offsetPositions","third","fourth","last","weekdays","weekday","weekend","_initInterval","_value","_container","find","kendoNumericTextBox","decimals","format","min","change","_trigger","_weekDayButtons","names","abbreviated","namesAbbr","values","items","text","attributes","_weekDayButtonGroup","selection","select","selectedDays","map","i","Number","getAttribute","_weekDayRule","clear","_weekDay","_weekDayOffset","_weekDayView","weekDayOffset","weekDayValue","method","weekDayOffsetWidget","_initWeekDay","data","weekdayMessage","offsetMessage","weekDayInput","autoWidth","dataTextField","dataValueField","dataSource","dayName","_initWeekDays","weekDayButtonGroup","selectedWeekDayButtons","ruleDays","ruleDaysLength","selectors","_initMonthDay","monthDayInput","_monthDay","NumericTextBox","max","_initCount","input","_count","_initUntil","startInput","closest","validDateValidationMessage","Validator","prototype","dateCompareValidationMessage","dateCompare","initialValue","_until","kendoDatePicker","untilEl","readonly","Boolean","enable","is","parents","setOptions","trigger","RecurrenceEditor","_initFrequency","_initContainer","destroy","_frequency","off","freqButton","_initView","container","editContainer","parent","insertAfter","append","buttonGroupElement","title","recurrenceViewHtml","empty","applyStylesFromKendoAttributes","html","_initMonth","_period","_end","monthInputs","monthName","_month1","_month2","endRule","namespace","click","e","_toggleEnd","currentTarget","_buttonNever","_buttonCount","_buttonUntil","toggleRule","_toggleMonthDay","_toggleYear","selector","radioButtons","_buttonMonthDay","eq","_buttonWeekDay","enableCount","enableUntil","prop","monthRule","enableMonthDay","enableWeekDay","yearRule","enableMonth1","enableMonth2","plugin","RECURRENCE_HEADER_TEMPLATE","headerTitle","RECURRENCE_REPEAT_PATTERN_TEMPLATE","repeatBy","every","RECURRENCE_END_PATTERN_TEMPLATE","endPattern","RECURRENCE_GROUP_BUTTON_TEMPLATE","item","MobileRecurrenceEditor","_optionTemplate","_pane","pane","_initRepeatButton","_initParentRepeatEnd","_defaultValue","animations","left","right","cancel","update","endTitle","repeatTitle","patterns","dayOfMonth","dayOfWeek","_destroyView","_endFields","target","_chevronButton","icon","_repeatValue","preventDefault","_createView","navigate","_view","_endLiItem","endLabelField","endEditField","appendTo","_navigateToView","_endParentLabelField","toggle","_endParentEndButton","_endText","_initRepeatEnd","_endLabelField","toggleClass","_endButton","viewName","frequencyMessages","ns","_initRepeatView","_initEndNavigation","endMessages","_initEndView","viewType","returnViewId","view","stopPropagation","hasClass","one","remove","$html","content","hide","show","ev","weekDaySelect","_options","monthSelect","monthNames","_monthSelect","repeatRuleGroupButton","weekDayView","monthDayView","currentValue","weekDayName","support","optionLabel","jQuery","kendo$1"],"mappings":"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","file":"kendo.scheduler.recurrence.js","sourcesContent":["import './kendo.dropdownlist.js';\nimport './kendo.datepicker.js';\nimport './kendo.numerictextbox.js';\nimport './kendo.buttongroup.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"scheduler.recurrence\",\n    name: \"Recurrence\",\n    category: \"web\",\n    depends: [ \"dropdownlist\", \"datepicker\", \"numerictextbox\", \"buttongroup\", \"icons\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        encode = kendo.htmlEncode,\n        timezone = kendo.timezone,\n        Class = kendo.Class,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        DropDownList = ui.DropDownList,\n        ButtonGroup = ui.ButtonGroup,\n        kendoDate = kendo.date,\n        setTime = kendoDate.setTime,\n        setDayOfWeek = kendoDate.setDayOfWeek,\n        adjustDST = kendoDate.adjustDST,\n        firstDayOfMonth = kendoDate.firstDayOfMonth,\n        getMilliseconds = kendoDate.getMilliseconds,\n        DAYS_IN_LEAPYEAR = [0,31,60,91,121,152,182,213,244,274,305,335,366],\n        DAYS_IN_YEAR = [0,31,59,90,120,151,181,212,243,273,304,334,365],\n        MONTHS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n        WEEK_DAYS = {\n            0: \"SU\",\n            1: \"MO\",\n            2: \"TU\",\n            3: \"WE\",\n            4: \"TH\",\n            5: \"FR\",\n            6: \"SA\"\n        },\n        WEEK_DAYS_IDX = {\n            \"SU\": 0,\n            \"MO\": 1,\n            \"TU\": 2,\n            \"WE\": 3,\n            \"TH\": 4,\n            \"FR\": 5,\n            \"SA\": 6\n        },\n        DATE_FORMATS = [\n            \"yyyy-MM-ddTHH:mm:ss.fffzzz\",\n            \"yyyy-MM-ddTHH:mm:sszzz\",\n            \"yyyy-MM-ddTHH:mm:ss\",\n            \"yyyy-MM-ddTHH:mm\",\n            \"yyyy-MM-ddTHH\",\n            \"yyyy-MM-dd\",\n            \"yyyyMMddTHHmmssfffzzz\",\n            \"yyyyMMddTHHmmsszzz\",\n            \"yyyyMMddTHHmmss\",\n            \"yyyyMMddTHHmm\",\n            \"yyyyMMddTHH\",\n            \"yyyyMMdd\"\n        ],\n        RULE_NAMES = [\"months\", \"weeks\", \"yearDays\", \"monthDays\", \"weekDays\", \"hours\", \"minutes\", \"seconds\"],\n        RULE_NAMES_LENGTH = RULE_NAMES.length,\n        RECURRENCE_DATE_FORMAT = \"yyyyMMddTHHmmssZ\",\n        limitation = {\n            months: function(date, end, rule) {\n                var monthRules = rule.months,\n                    months = ruleValues(monthRules, date.getMonth() + 1),\n                    changed = false;\n\n                if (months !== null) {\n                    if (months.length) {\n                        date.setMonth(months[0] - 1, 1);\n                    } else {\n                        date.setFullYear(date.getFullYear() + 1, monthRules[0] - 1, 1);\n                    }\n\n                    changed = true;\n                }\n\n                return changed;\n            },\n\n            monthDays: function(date, end, rule) {\n                var monthLength, month, days,\n                    changed = false,\n                    hours = date.getHours(),\n                    normalize = function(monthDay) {\n                        if (monthDay < 0) {\n                            monthDay = monthLength + monthDay + 1;\n                        }\n                        return monthDay;\n                    };\n\n                while (date <= end) {\n                    month = date.getMonth();\n                    monthLength = getMonthLength(date);\n                    days = ruleValues(rule.monthDays, date.getDate(), normalize);\n\n                    if (days === null) {\n                        return changed;\n                    }\n\n                    changed = true;\n\n                    if (days.length) {\n                        date.setMonth(month, days.sort(numberSortPredicate)[0]);\n                        adjustDST(date, hours);\n\n                        if (month === date.getMonth()) {\n                            break;\n                        }\n                    } else {\n                        date.setMonth(month + 1, 1);\n                    }\n                }\n\n                return changed;\n            },\n\n            yearDays: function(date, end, rule) {\n                var year, yearDays,\n                    changed = false,\n                    hours = date.getHours(),\n                    normalize = function(yearDay) {\n                        if (yearDay < 0) {\n                            yearDay = year + yearDay;\n                        }\n                        return yearDay;\n                    };\n\n                while (date < end) {\n                    year = leapYear(date) ? 366 : 365;\n                    yearDays = ruleValues(rule.yearDays, dayInYear(date), normalize);\n\n                    if (yearDays === null) {\n                        return changed;\n                    }\n\n                    changed = true;\n                    year = date.getFullYear();\n\n                    if (yearDays.length) {\n                        date.setFullYear(year, 0, yearDays.sort(numberSortPredicate)[0]);\n                        adjustDST(date, hours);\n                        break;\n                    } else {\n                        date.setFullYear(year + 1, 0, 1);\n                    }\n                }\n\n                return changed;\n            },\n\n            weeks: function(date, end, rule) {\n                var weekStart = rule.weekStart,\n                    year, weeks, day,\n                    changed = false,\n                    hours = date.getHours(),\n                    normalize = function(week) {\n                        if (week < 0) {\n                            week = 53 + week;\n                        }\n                        return week;\n                    };\n\n                while (date < end) {\n                    weeks = ruleValues(rule.weeks, weekInYear(date, weekStart), normalize);\n\n                    if (weeks === null) {\n                        return changed;\n                    }\n\n                    changed = true;\n                    year = date.getFullYear();\n\n                    if (weeks.length) {\n                        day = (weeks.sort(numberSortPredicate)[0] * 7) - 1;\n\n                        date.setFullYear(year, 0, day);\n                        setDayOfWeek(date, weekStart, -1);\n\n                        adjustDST(date, hours);\n                        break;\n                    } else {\n                        date.setFullYear(year + 1, 0, 1);\n                    }\n                }\n\n                return changed;\n            },\n\n            weekDays: function(date, end, rule) {\n                var offsetDate = new Date(date.getTime() + rule.offsets.start);\n                var normalizeDay = offsetDate.getDay() - date.getDay();\n                var weekDays = rule.weekDays;\n                var weekStart = rule.weekStart;\n                var weekDayRules = ruleWeekValues(weekDays, offsetDate, weekStart);\n                var hours = date.getHours();\n                var traverseRuleForNextMont = function(rule) {\n                    var nextMonthFirstDay = new Date(date.getFullYear(), date.getMonth() + 1, 1);\n                    var ruleDay = normalizeDayIndex(rule.day, weekStart);\n\n                    if (nextMonthFirstDay.getDay() <= ruleDay) {\n                        if (!weekDayRule || normalizeDayIndex(weekDayRule.day, weekStart) > ruleDay) {\n                            weekDayRule = rule;\n                        }\n                    }\n                };\n                var weekDayRule, day;\n\n\n                if (weekDayRules === null) {\n                    return false;\n                }\n\n                weekDayRule = weekDayRules[0];\n\n                if (!weekDayRule) {\n                    if (rule.freq === \"monthly\" && !rule.positions || rule.position > 0) {\n                        weekDays.forEach(traverseRuleForNextMont);\n                    }\n                    if (!weekDayRule) {\n                        weekDayRule = weekDays[0];\n                    }\n                    setDayOfWeek(date, weekStart);\n                }\n\n                day = weekDayRule.day;\n                day -= normalizeDay;\n\n                if (weekDayRule.offset) {\n                    while (date <= end && !isInWeek(date, weekDayRule, weekStart)) {\n                        if (weekInMonth(date, weekStart) === numberOfWeeks(date, weekStart)) {\n                            date.setMonth(date.getMonth() + 1, 1);\n                            adjustDST(date, hours);\n                        } else {\n                            date.setDate(date.getDate() + 7);\n                            adjustDST(date, hours);\n\n                            setDayOfWeek(date, weekStart, -1);\n                        }\n                    }\n                }\n\n                if (date.getDay() !== day) {\n                    setDayOfWeek(date, day);\n                }\n\n                return true;\n            },\n\n            hours: function(date, end, rule) {\n                var hourRules = rule.hours,\n                    startTime = rule._startTime,\n                    startHours = startTime.getHours(),\n                    hours = ruleValues(hourRules, startHours),\n                    changed = false;\n\n                if (hours !== null) {\n                    changed = true;\n\n                    date.setHours(startHours);\n                    adjustDST(date, startHours);\n\n                    if (hours.length) {\n                        hours = hours[0];\n                        date.setHours(hours);\n                    } else {\n                        hours = date.getHours();\n                        date.setDate(date.getDate() + 1);\n                        adjustDST(date, hours);\n\n                        hours = hourRules[0];\n                        date.setHours(hours);\n                        adjustDST(date, hours);\n                    }\n\n                    if (rule.minutes) {\n                        date.setMinutes(0);\n                    }\n\n                    startTime.setHours(hours, date.getMinutes());\n                }\n\n                return changed;\n            },\n\n            minutes: function(date, end, rule) {\n                var minuteRules = rule.minutes,\n                    currentMinutes = date.getMinutes(),\n                    minutes = ruleValues(minuteRules, currentMinutes),\n                    hours = rule._startTime.getHours(),\n                    changed = false;\n\n                if (minutes !== null) {\n                    changed = true;\n\n                    if (minutes.length) {\n                        minutes = minutes[0];\n                    } else {\n                        hours += 1;\n                        minutes = minuteRules[0];\n                    }\n\n                    if (rule.seconds) {\n                        date.setSeconds(0);\n                    }\n\n                    date.setHours(hours, minutes);\n\n                    hours = hours % 24;\n                    adjustDST(date, hours);\n                    rule._startTime.setHours(hours, minutes, date.getSeconds());\n                }\n\n                return changed;\n            },\n\n            seconds: function(date, end, rule) {\n                var secondRules = rule.seconds,\n                    hours = rule._startTime.getHours(),\n                    seconds = ruleValues(secondRules, date.getSeconds()),\n                    minutes = date.getMinutes(),\n                    changed = false;\n\n                if (seconds !== null) {\n                    changed = true;\n\n                    if (seconds.length) {\n                        date.setSeconds(seconds[0]);\n                    } else {\n                        minutes += 1;\n                        date.setMinutes(minutes, secondRules[0]);\n\n                        if (minutes > 59) {\n                            minutes = minutes % 60;\n                            hours = (hours + 1) % 24;\n                        }\n                    }\n\n                    rule._startTime.setHours(hours, minutes, date.getSeconds());\n                }\n\n                return changed;\n            }\n        },\n        BaseFrequency = Class.extend({\n            next: function(date, rule) {\n                var startTime = rule._startTime,\n                    day = startTime.getDate(),\n                    minutes, seconds;\n\n                if (rule.seconds) {\n                    seconds = date.getSeconds() + 1;\n\n                    date.setSeconds(seconds);\n                    startTime.setSeconds(seconds);\n                    startTime.setDate(day);\n\n                } else if (rule.minutes) {\n                    minutes = date.getMinutes() + 1;\n\n                    date.setMinutes(minutes);\n                    startTime.setMinutes(minutes);\n                    startTime.setDate(day);\n                } else {\n                    return false;\n                }\n\n                return true;\n            },\n\n            normalize: function(options) {\n                var rule = options.rule;\n\n                if (options.idx === 4 && rule.hours) {\n                    rule._startTime.setHours(0);\n                    this._hour(options.date, rule);\n                }\n            },\n\n            limit: function(date, end, rule) {\n                var interval = rule.interval,\n                    ruleName, firstRule,\n                    modified,\n                    idx, day;\n\n                while (date <= end) {\n                    modified = firstRule = undefined$1;\n                    day = date.getDate();\n\n                    for (idx = 0; idx < RULE_NAMES_LENGTH; idx++) {\n                        ruleName = RULE_NAMES[idx];\n\n                        if (rule[ruleName]) {\n                            modified = limitation[ruleName](date, end, rule);\n                            if (firstRule !== undefined$1 && modified) {\n                                break;\n                            } else {\n                                firstRule = modified;\n                            }\n                        }\n\n                        if (modified) {\n                            this.normalize({ date: date, rule: rule, day: day, idx: idx });\n                        }\n                    }\n\n                    if ((interval === 1 || !this.interval(rule, date)) && idx === RULE_NAMES_LENGTH) {\n                        break;\n                    }\n                }\n            },\n\n            interval: function(rule, current) {\n                var start = new Date(rule._startPeriod);\n                var date = new Date(current);\n                var hours = current.getHours();\n                var weekStart = rule.weekStart;\n                var interval = rule.interval;\n                var frequency = rule.freq;\n                var modified = false;\n                var excess = 0;\n                var month = 0;\n                var day = 1;\n                var diff;\n\n                var startTimeHours;\n\n                if (frequency === \"hourly\") {\n                    diff = date.getTimezoneOffset() - start.getTimezoneOffset();\n                    startTimeHours = rule._startTime.getHours();\n\n                    date = date.getTime();\n                    if (hours !== startTimeHours) {\n                        date += (startTimeHours - hours) * kendoDate.MS_PER_HOUR;\n                    }\n                    date -= start;\n\n                    if (diff) {\n                        date -= diff * kendoDate.MS_PER_MINUTE;\n                    }\n\n                    diff = Math.floor(date / kendoDate.MS_PER_HOUR);\n                    excess = intervalExcess(diff, interval);\n\n                    if (excess !== 0) {\n                        this._hour(current, rule, excess);\n                        modified = true;\n                    }\n                } else if (frequency === \"daily\") {\n                    kendoDate.setTime(date, -start, true);\n\n                    diff = Math.round(date / kendoDate.MS_PER_DAY);\n                    excess = intervalExcess(diff, interval);\n\n                    if (excess !== 0) {\n                        this._date(current, rule, excess);\n                        modified = true;\n                    }\n\n                } else if (frequency === \"weekly\") {\n                    excess = this._getNumberOfWeeksBetweenDates(start, current);\n\n                    var normalizedCurrentIndex = normalizeDayIndex(current.getDay(), weekStart);\n                    var normalizedStartIndex = normalizeDayIndex(start.getDay(), weekStart);\n\n                    if (normalizedCurrentIndex < normalizedStartIndex) {\n                        excess += 1;\n                    }\n\n                    excess = intervalExcess(excess, interval);\n                    if (excess !== 0) {\n                        kendoDate.setDayOfWeek(current, rule.weekStart, -1);\n\n                        current.setDate(current.getDate() + (excess * 7));\n                        adjustDST(current, hours);\n\n                        modified = true;\n                    }\n                } else if (frequency === \"monthly\") {\n                    diff = current.getFullYear() - start.getFullYear();\n                    diff = current.getMonth() - start.getMonth() + (diff * 12);\n\n                    excess = intervalExcess(diff, interval);\n\n                    if (excess !== 0) {\n                        day = rule._hasRuleValue ? 1 : current.getDate();\n\n                        current.setFullYear(current.getFullYear(), current.getMonth() + excess, day);\n                        adjustDST(current, hours);\n\n                        modified = true;\n                    }\n                } else if (frequency === \"yearly\") {\n                    diff = current.getFullYear() - start.getFullYear();\n                    excess = intervalExcess(diff, interval);\n\n                    if (!rule.months) {\n                        month = current.getMonth();\n                    }\n\n                    if (!rule.yearDays && !rule.monthDays && !rule.weekDays) {\n                        day = current.getDate();\n                    }\n\n                    if (excess !== 0) {\n                        current.setFullYear(current.getFullYear() + excess, month, day);\n                        adjustDST(current, hours);\n\n                        modified = true;\n                    }\n                }\n\n                return modified;\n            },\n\n            _getNumberOfWeeksBetweenDates: function(first, second) {\n                 var weeks = (second - first) / 604800000;\n                 var exactWeeks = Math.floor(weeks);\n\n                //this is happening when weeks pass DST change\n                if (weeks - exactWeeks > 0.99) {\n                    exactWeeks = Math.round(weeks);\n                }\n                return exactWeeks;\n            },\n\n            _hour: function(date, rule, interval) {\n                var startTime = rule._startTime,\n                    hours = startTime.getHours();\n\n                if (interval) {\n                    hours += interval;\n                }\n\n                date.setHours(hours);\n\n                hours = hours % 24;\n                startTime.setHours(hours);\n                adjustDST(date, hours);\n            },\n\n            _date: function(date, rule, interval) {\n                var hours = date.getHours();\n\n                date.setDate(date.getDate() + interval);\n                if (!adjustDST(date, hours)) {\n                    this._hour(date, rule);\n                }\n            }\n        }),\n        HourlyFrequency = BaseFrequency.extend({\n            next: function(date, rule) {\n                if (!BaseFrequency.fn.next(date, rule)) {\n                    this._hour(date, rule, 1);\n                }\n            },\n\n            normalize: function(options) {\n                var rule = options.rule;\n\n                if (options.idx === 4) {\n                    rule._startTime.setHours(0);\n                    this._hour(options.date, rule);\n                }\n            }\n        }),\n        DailyFrequency = BaseFrequency.extend({\n            next: function(date, rule) {\n                if (!BaseFrequency.fn.next(date, rule)) {\n                    this[rule.hours ? \"_hour\" : \"_date\"](date, rule, 1);\n                }\n            }\n        }),\n        WeeklyFrequency = DailyFrequency.extend({\n            setup: function(rule, eventStartDate) {\n                if (!rule.weekDays) {\n                    rule.weekDays = [{\n                        day: eventStartDate.getDay(),\n                        offset: 0\n                    }];\n                }\n            }\n        }),\n        MonthlyFrequency = BaseFrequency.extend({\n            next: function(date, rule) {\n                var day, hours;\n                if (!BaseFrequency.fn.next(date, rule)) {\n                    if (rule.hours) {\n                        this._hour(date, rule, 1);\n                    } else if (rule.monthDays || rule.weekDays || rule.yearDays || rule.weeks) {\n                        this._date(date, rule, 1);\n                    } else {\n                        day = date.getDate();\n                        hours = date.getHours();\n\n                        date.setMonth(date.getMonth() + 1);\n                        adjustDST(date, hours);\n\n                        while (date.getDate() !== day) {\n                            date.setDate(day);\n                            adjustDST(date, hours);\n                        }\n\n                        this._hour(date, rule);\n                    }\n                }\n            },\n            normalize: function(options) {\n                var rule = options.rule,\n                    date = options.date,\n                    hours = date.getHours();\n\n                if (options.idx === 0 && !rule.monthDays && !rule.weekDays) {\n                    date.setDate(options.day);\n                    adjustDST(date, hours);\n                } else {\n                    BaseFrequency.fn.normalize(options);\n                }\n            },\n            setup: function(rule, eventStartDate, date) {\n                if (!rule.monthDays && !rule.weekDays) {\n                    date.setDate(eventStartDate.getDate());\n                }\n            }\n        }),\n        YearlyFrequency = MonthlyFrequency.extend({\n            next: function(date, rule) {\n                var day,\n                    hours = date.getHours();\n\n                if (!BaseFrequency.fn.next(date, rule)) {\n                    if (rule.hours) {\n                        this._hour(date, rule, 1);\n                    } else if (rule.monthDays || rule.weekDays || rule.yearDays || rule.weeks) {\n                        this._date(date, rule, 1);\n                    } else if (rule.months) {\n                        day = date.getDate();\n\n                        date.setMonth(date.getMonth() + 1);\n                        adjustDST(date, hours);\n\n                        while (date.getDate() !== day) {\n                            date.setDate(day);\n                            adjustDST(date, hours);\n                        }\n\n                        this._hour(date, rule);\n                    } else {\n                        date.setFullYear(date.getFullYear() + 1);\n                        adjustDST(date, hours);\n\n                        this._hour(date, rule);\n                    }\n                }\n            },\n            setup: function() {}\n        }),\n        frequencies = {\n            \"hourly\": new HourlyFrequency(),\n            \"daily\": new DailyFrequency(),\n            \"weekly\": new WeeklyFrequency(),\n            \"monthly\": new MonthlyFrequency(),\n            \"yearly\": new YearlyFrequency()\n        },\n        CLICK = \"click\",\n        CHANGE = \"change\";\n\n    function intervalExcess(diff, interval) {\n        var excess;\n        if (diff !== 0 && diff < interval) {\n            excess = interval - diff;\n        } else {\n            excess = diff % interval;\n            if (excess) {\n                excess = interval - excess;\n            }\n        }\n\n        return excess;\n    }\n\n    function dayInYear(date) {\n        var month = date.getMonth();\n        var days = leapYear(date) ? DAYS_IN_LEAPYEAR[month] : DAYS_IN_YEAR[month];\n\n        return days + date.getDate();\n    }\n\n    function weekInYear(date, weekStart) {\n        var year, days;\n\n        date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n        adjustDST(date, 0);\n\n        year = date.getFullYear();\n\n        if (weekStart !== undefined$1) {\n            setDayOfWeek(date, weekStart, -1);\n            date.setDate(date.getDate() + 4);\n        } else {\n            date.setDate(date.getDate() + (4 - (date.getDay() || 7)));\n        }\n\n        adjustDST(date, 0);\n        days = Math.floor((date.getTime() - new Date(year, 0, 1, -6)) / 86400000);\n\n        return 1 + Math.floor(days / 7);\n    }\n\n    function weekInMonth(date, weekStart) {\n        var firstWeekDay = firstDayOfMonth(date).getDay();\n        var firstWeekLength = 7 - (firstWeekDay + 7 - (weekStart || 7)) || 7;\n\n        if (firstWeekLength < 0) {\n            firstWeekLength += 7;\n        }\n\n        return Math.ceil((date.getDate() - firstWeekLength) / 7) + 1;\n    }\n\n    function normalizeDayIndex(weekDay, weekStart) {\n        return weekDay + (weekDay < weekStart ? 7 : 0);\n    }\n\n    function normalizeOffset(date, rule, weekStart) {\n        var offset = rule.offset;\n\n        if (!offset) {\n            return weekInMonth(date, weekStart);\n        }\n\n        var lastDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n        var weeksInMonth = weekInMonth(lastDate, weekStart);\n\n        var day = normalizeDayIndex(rule.day, weekStart);\n\n        var skipFirst = day < normalizeDayIndex(new Date(date.getFullYear(), date.getMonth(), 1).getDay(), weekStart);\n        var skipLast = day > normalizeDayIndex(lastDate.getDay(), weekStart);\n\n        if (offset < 0) {\n            offset = weeksInMonth + (offset + 1 - (skipLast ? 1 : 0));\n        } else if (skipFirst) {\n            offset += 1;\n        }\n\n        weeksInMonth -= (skipLast ? 1 : 0);\n\n        if (offset < (skipFirst ? 1 : 0) || offset > weeksInMonth) {\n            return null;\n        }\n\n        return offset;\n    }\n\n    function numberOfWeeks(date, weekStart) {\n        return weekInMonth(new Date(date.getFullYear(), date.getMonth() + 1, 0), weekStart);\n    }\n\n    function isInWeek(date, rule, weekStart) {\n        return weekInMonth(date, weekStart) === normalizeOffset(date, rule, weekStart);\n    }\n\n    function ruleWeekValues(weekDays, date, weekStart) {\n        var currentDay = normalizeDayIndex(date.getDay(), weekStart);\n        var length = weekDays.length;\n        var ruleWeekOffset;\n        var weekDay, day;\n        var weekNumber;\n        var result = [];\n        var idx = 0;\n\n        for (;idx < length; idx++) {\n            weekDay = weekDays[idx];\n\n            weekNumber = weekInMonth(date, weekStart);\n            ruleWeekOffset = normalizeOffset(date, weekDay, weekStart);\n\n            if (ruleWeekOffset === null) {\n                continue;\n            }\n\n            if (weekNumber < ruleWeekOffset) {\n                result.push(weekDay);\n            } else if (weekNumber === ruleWeekOffset) {\n                day = normalizeDayIndex(weekDay.day, weekStart);\n\n                if (currentDay < day) {\n                    result.push(weekDay);\n                } else if (currentDay === day) {\n                    return null;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function ruleValues(rules, value, normalize) {\n        var idx = 0,\n            length = rules.length,\n            availableRules = [],\n            ruleValue;\n\n        for (; idx < length; idx++) {\n            ruleValue = rules[idx];\n\n            if (normalize) {\n                ruleValue = normalize(ruleValue);\n            }\n\n            if (value === ruleValue) {\n                return null;\n            } else if (value < ruleValue) {\n                availableRules.push(ruleValue);\n            }\n        }\n\n        return availableRules;\n    }\n\n    function parseArray(list, range) {\n        var idx = 0,\n            length = list.length,\n            value;\n\n        for (; idx < length; idx++) {\n            value = parseInt(list[idx], 10);\n            if (isNaN(value) || value < range.start || value > range.end || (value === 0 && range.start < 0)) {\n                return null;\n            }\n\n            list[idx] = value;\n        }\n\n        return list.sort(numberSortPredicate);\n    }\n\n    function parseWeekDayList(list) {\n        var idx = 0, length = list.length,\n            value, valueLength, day;\n\n        for (; idx < length; idx++) {\n            value = list[idx];\n            valueLength = value.length;\n            day = value.substring(valueLength - 2).toUpperCase();\n\n            day = WEEK_DAYS_IDX[day];\n            if (day === undefined$1) {\n                return null;\n            }\n\n            list[idx] = {\n                offset: parseInt(value.substring(0, valueLength - 2), 10) || 0,\n                day: day\n            };\n        }\n        return list;\n    }\n\n    function serializeWeekDayList(list) {\n        var idx = 0, length = list.length,\n            value, valueString, result = [];\n\n        for (; idx < length; idx++) {\n            value = list[idx];\n            if (typeof value === \"string\") {\n                valueString = value;\n            } else {\n                valueString = \"\" + WEEK_DAYS[value.day];\n\n                if (value.offset) {\n                    valueString = value.offset + valueString;\n                }\n            }\n\n            result.push(valueString);\n        }\n        return result.toString();\n    }\n\n    function getMonthLength(date) {\n        var month = date.getMonth();\n\n        if (month === 1) {\n            if (new Date(date.getFullYear(), 1, 29).getMonth() === 1) {\n                return 29;\n            }\n            return 28;\n        }\n        return MONTHS[month];\n    }\n\n    function leapYear(year) {\n        year = year.getFullYear();\n        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n    }\n\n    function numberSortPredicate(a, b) {\n        return a - b;\n    }\n\n    function parseExceptions(exceptions, zone) {\n        var idx = 0, length, date,\n            dates = [];\n\n        if (exceptions) {\n            exceptions = exceptions.split(exceptions.indexOf(\";\") !== -1 ? \";\" : \",\");\n            length = exceptions.length;\n\n            for (; idx < length; idx++) {\n                date = parseUTCDate(exceptions[idx], zone);\n\n                if (date) {\n                    dates.push(date);\n                }\n            }\n        }\n\n        return dates;\n    }\n\n    function isException(exceptions, date, zone) {\n        var dates = Array.isArray(exceptions) ? exceptions : parseExceptions(exceptions, zone),\n            dateTime = date.getTime() - date.getMilliseconds(),\n            idx = 0, length = dates.length;\n\n        for (; idx < length; idx++) {\n            if (dates[idx].getTime() === dateTime) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function toExceptionString(dates, zone) {\n        var idx = 0;\n        var length;\n        var date;\n        var result = [].concat(dates);\n\n        for (length = result.length; idx < length; idx++) {\n            date = result[idx];\n            date = kendo.timezone.convert(date, zone || date.getTimezoneOffset(), \"Etc/UTC\");\n            result[idx] = kendo.toString(date, RECURRENCE_DATE_FORMAT);\n        }\n\n        return result.join(\",\");\n    }\n\n    function startPeriodByFreq(start, rule) {\n        var date = new Date(start);\n\n        switch (rule.freq) {\n            case \"yearly\":\n                date.setFullYear(date.getFullYear(), 0, 1);\n                break;\n\n            case \"monthly\":\n                date.setFullYear(date.getFullYear(), date.getMonth(), 1);\n                break;\n\n            case \"weekly\":\n                setDayOfWeek(date, rule.weekStart, -1);\n                break;\n\n            default:\n                break;\n        }\n\n        if (rule.hours) {\n            date.setHours(0);\n        }\n\n        if (rule.minutes) {\n            date.setMinutes(0);\n        }\n\n        if (rule.seconds) {\n            date.setSeconds(0);\n        }\n\n        return date;\n    }\n\n    function endPeriodByFreq(start, rule) {\n        var date = new Date(start);\n\n        switch (rule.freq) {\n            case \"yearly\":\n                date.setFullYear(date.getFullYear(), 11, 31);\n                break;\n\n            case \"monthly\":\n                date.setFullYear(date.getFullYear(), date.getMonth() + 1, 0);\n                break;\n\n            case \"weekly\":\n                setDayOfWeek(date, rule.weekStart, -1);\n                date.setDate(date.getDate() + 6);\n                break;\n\n            default:\n                break;\n        }\n\n        if (rule.hours) {\n            date.setHours(23);\n        }\n\n        if (rule.minutes) {\n            date.setMinutes(59);\n        }\n\n        if (rule.seconds) {\n            date.setSeconds(59);\n        }\n\n        return date;\n    }\n\n    function eventsByPosition(periodEvents, start, positions, until) {\n        var periodEventsLength = periodEvents.length;\n        var events = [];\n        var position;\n        var event;\n        var inPeriod;\n\n        for (var idx = 0, length = positions.length; idx < length; idx++) {\n            position = positions[idx];\n\n            if (position < 0) {\n                position = periodEventsLength + position;\n            } else {\n                position -= 1; //convert to zero based index\n            }\n\n            event = periodEvents[position];\n            inPeriod = until ? event.start < until : true;\n\n            if (event && event.start >= start && inPeriod) {\n                events.push(event);\n            }\n        }\n\n        return events;\n    }\n\n    function removeExceptionDates(periodEvents, exceptionDates, zone) {\n        var events = [];\n        var event;\n\n        for (var idx = 0; idx < periodEvents.length; idx++) {\n            event = periodEvents[idx];\n            if (!isException(exceptionDates, event.start, zone)) {\n                events.push(event);\n            }\n        }\n\n        return events;\n    }\n\n    function expand(event, start, end, zone) {\n        var rule,\n            startTime, endTime, endDate,\n            hours, minutes, seconds,\n            durationMS, startPeriod, inPeriod,\n            ruleStart, ruleEnd,\n            useEventStart, freqName,\n            exceptionDates,\n            eventStartTime,\n            eventStartMS,\n            eventStart,\n            count, freq,\n            positions,\n            currentIdx,\n            periodEvents,\n            events = [],\n            shiftedStart,\n            shiftedEnd,\n            shiftedStartTime,\n            shifterEndTime;\n\n        rule = parseRule(event.recurrenceRule, zone, { // offsets argument\n            start: (getZoneOffset(event.start, zone) - getZoneOffset(event.start, event.startTimezone || zone)) * kendo.date.MS_PER_MINUTE,\n            end: (getZoneOffset(event.end, zone) - getZoneOffset(event.end, event.endTimezone || zone)) * kendo.date.MS_PER_MINUTE\n        });\n\n        if (!rule) {\n            return [event];\n        }\n\n        positions = rule.positions;\n        currentIdx = positions ? 0 : 1;\n\n        ruleStart = rule.start;\n        ruleEnd = rule.end;\n\n        if (ruleStart || ruleEnd) {\n            event = event.clone({\n                start: ruleStart ? new Date(ruleStart.value[0]) : undefined$1,\n                end: ruleEnd ? new Date(ruleEnd.value[0]) : undefined$1\n            });\n        }\n\n        eventStart = event.start;\n        eventStartMS = eventStart.getTime();\n        eventStartTime = getMilliseconds(eventStart);\n\n        exceptionDates = parseExceptions(event.recurrenceException, zone);\n\n        if (!exceptionDates[0] && rule.exdates) {\n            exceptionDates = rule.exdates.value;\n            event.set(\"recurrenceException\", toExceptionString(exceptionDates, zone));\n        }\n\n        startPeriod = start = new Date(start);\n        end = new Date(end);\n\n        freqName = rule.freq;\n        freq = frequencies[freqName];\n        count = rule.count;\n\n        if (rule.until && rule.until < end) {\n            end = new Date(rule.until);\n        }\n\n        useEventStart = freqName === \"yearly\" || freqName === \"monthly\" || freqName === \"weekly\";\n\n        if (start < eventStartMS || count || rule.interval > 1 || useEventStart ||\n             ((freqName === \"daily\" || freqName === \"hourly\") && !rule.seconds)) {\n                    start = new Date(eventStartMS);\n        } else {\n            hours = start.getHours();\n            minutes = start.getMinutes();\n            seconds = start.getSeconds();\n\n            if (!rule.hours) {\n                hours = eventStart.getHours();\n            }\n\n            if (!rule.minutes) {\n                minutes = eventStart.getMinutes();\n            }\n\n            if (!rule.seconds) {\n                seconds = eventStart.getSeconds();\n            }\n\n            start.setHours(hours, minutes, seconds, eventStart.getMilliseconds());\n        }\n\n        rule._startPeriod = new Date(start);\n\n        if (positions) {\n            start = startPeriodByFreq(start, rule);\n            end = endPeriodByFreq(end, rule);\n\n            var diff = getMilliseconds(end) - getMilliseconds(start);\n            if (diff < 0) {\n                hours = start.getHours();\n                end.setHours(hours, start.getMinutes(), start.getSeconds(), start.getMilliseconds());\n                kendoDate.adjustDST(end, hours);\n            }\n\n            rule._startPeriod = new Date(start);\n            rule._endPeriod = endPeriodByFreq(start, rule);\n        }\n\n        durationMS = event.duration();\n        var allDayCompensation = event.isAllDay ? 86400000 : 0;\n        rule._startTime = startTime = kendoDate.toInvariantTime(start);\n\n        if (freq.setup) {\n            freq.setup(rule, eventStart, start);\n        }\n\n        freq.limit(start, end, rule);\n\n        while (start <= end) {\n            endDate = new Date(start);\n            setTime(endDate, durationMS);\n            var inPeriodCheckEndDate = new Date(start);\n            setTime(inPeriodCheckEndDate, durationMS + allDayCompensation);\n\n            inPeriod = start >= startPeriod || inPeriodCheckEndDate > startPeriod;\n\n            if (inPeriod && !isException(exceptionDates, start, zone) || positions) {\n                startTime = kendoDate.toUtcTime(kendoDate.getDate(start)) + getMilliseconds(rule._startTime);\n                endTime = startTime + durationMS;\n\n                if (eventStartMS !== start.getTime() || eventStartTime !== getMilliseconds(rule._startTime)) {\n                    var startZone = event.startTimezone || event.endTimezone;\n                    var endZone = event.endTimezone || event.startTimezone;\n\n                    if (!event.isAllDay) {\n                        if ((zone && startZone) || (!zone && !startZone)) {\n                            var startOffsetDiff = getZoneOffset(start, zone) - getZoneOffset(event.start, zone);\n                            var endOffsetDiff = getZoneOffset(endDate, zone) - getZoneOffset(event.end, zone);\n                            var startTZOffsetDiff = getZoneOffset(start, startZone) - getZoneOffset(event.start, startZone);\n                            var endTZOffsetDiff = getZoneOffset(endDate, endZone) - getZoneOffset(event.end, endZone);\n\n                            if (startOffsetDiff !== startTZOffsetDiff) {\n                                var offsetTicksStart = (startOffsetDiff - startTZOffsetDiff) * 60000;\n                                shiftedStart = new Date(start.getTime() - offsetTicksStart);\n                                shiftedStartTime = startTime - offsetTicksStart;\n                            }\n\n                            if (endOffsetDiff !== endTZOffsetDiff) {\n                                var offsetTicksEnd = (endOffsetDiff - endTZOffsetDiff) * 60000;\n                                shiftedEnd = new Date(endDate.getTime() - offsetTicksEnd);\n                                shifterEndTime = endTime - offsetTicksEnd;\n                            }\n                        }\n                    }\n\n\n                    events.push(event.toOccurrence({\n                        start: shiftedStart || new Date(start),\n                        end: shiftedEnd || endDate,\n                        _startTime: shiftedStartTime || startTime,\n                        _endTime: shifterEndTime || endTime\n                    }));\n\n                    shiftedStart = shiftedEnd = shiftedStartTime = shifterEndTime = null;\n                } else {\n                    event._startTime = startTime;\n                    event._endTime = endTime;\n                    events.push(event);\n                }\n            }\n\n            if (positions) {\n                freq.next(start, rule);\n                freq.limit(start, end, rule);\n\n                if (start > rule._endPeriod) {\n                    periodEvents = eventsByPosition(events.slice(currentIdx), eventStart, positions, rule.until);\n                    periodEvents = removeExceptionDates(periodEvents, exceptionDates, zone);\n                    events = events.slice(0, currentIdx).concat(periodEvents);\n\n                    rule._endPeriod = endPeriodByFreq(start, rule);\n\n                    currentIdx = events.length;\n                }\n\n                if (count && count === currentIdx) {\n                    break;\n                }\n\n            } else {\n                if (count && count === currentIdx) {\n                    break;\n                }\n\n                currentIdx += 1;\n\n                var isMissingDSTHour = isDSTMissingHour(start);\n                freq.next(start, rule);\n\n                if (isMissingDSTHour && rule.freq !== \"hourly\" && kendoDate.toInvariantTime(event.start).getTime() !== kendoDate.toInvariantTime(start).getTime()) {\n                    rule._startTime = startTime = new Date(start.getTime() - 3600000);\n                }\n\n                freq.limit(start, end, rule);\n            }\n        }\n\n        return events;\n    }\n\n    function isDSTMissingHour(date) {\n        var dateOffset = date.getTimezoneOffset();\n        var dateMinusHour = new Date(date.getTime() - 3600000);\n        var dateMinusHourOffset = dateMinusHour.getTimezoneOffset();\n\n        return dateOffset < dateMinusHourOffset;\n    }\n\n    function getZoneOffset(date, zone) {\n        return zone ? kendo.timezone.offset(date, zone) : date.getTimezoneOffset();\n    }\n\n    function parseUTCDate(value, zone) {\n        value = kendo.parseDate(value, DATE_FORMATS); //Parse UTC to local time\n\n        if (value && zone) {\n            value = timezone.apply(value, zone);\n        }\n\n        return value;\n    }\n\n    function parseDateRule(dateRule, zone) {\n        var pairs = dateRule.split(\";\");\n        var pair;\n        var property;\n        var value;\n        var tzid;\n        var valueIdx, valueLength;\n\n        for (var idx = 0, length = pairs.length; idx < length; idx++) {\n            pair = pairs[idx].split(\":\");\n            property = pair[0];\n            value = pair[1];\n\n            if (property.indexOf(\"TZID\") !== -1) {\n                tzid = property.substring(property.indexOf(\"TZID\")).split(\"=\")[1];\n            }\n\n            if (value) {\n                value = value.split(\",\");\n\n                for (valueIdx = 0, valueLength = value.length; valueIdx < valueLength; valueIdx++) {\n                    value[valueIdx] = parseUTCDate(value[valueIdx], tzid || zone);\n                }\n            }\n        }\n\n        if (value) {\n            return {\n                value: value,\n                tzid: tzid\n            };\n        }\n    }\n\n    function parseRule(recur, zone, offsets) {\n        var instance = {};\n        var splits, value;\n        var idx = 0, length;\n        var ruleValue = false;\n        var rule, part, parts;\n        var property, weekStart, weekDays;\n        var predicate = function(a, b) {\n            var day1 = a.day,\n                day2 = b.day;\n\n            if (day1 < weekStart) {\n               day1 += 7;\n            }\n\n            if (day2 < weekStart) {\n                day2 += 7;\n            }\n\n            return day1 - day2;\n        };\n\n        if (!recur) {\n            return null;\n        }\n\n        parts = recur.split(\"\\n\");\n\n        if (!parts[1] && (recur.indexOf(\"DTSTART\") !== -1 || recur.indexOf(\"DTEND\") !== -1 || recur.indexOf(\"EXDATE\") !== -1)) {\n            parts = recur.split(\" \");\n        }\n\n        for (idx = 0, length = parts.length; idx < length; idx++) {\n            part = kendo.trim(parts[idx]);\n\n            if (part.indexOf(\"DTSTART\") !== -1) {\n                instance.start = parseDateRule(part, zone);\n            } else if (part.indexOf(\"DTEND\") !== -1) {\n                instance.end = parseDateRule(part, zone);\n            } else if (part.indexOf(\"EXDATE\") !== -1) {\n                instance.exdates = parseDateRule(part, zone);\n            } else if (part.indexOf(\"RRULE\") !== -1) {\n                rule = part.substring(6);\n            } else if (kendo.trim(part)) {\n                rule = part;\n            }\n        }\n\n        rule = rule.split(\";\");\n\n        for (idx = 0, length = rule.length; idx < length; idx++) {\n            property = rule[idx];\n            splits = property.split(\"=\");\n            value = kendo.trim(splits[1]).split(\",\");\n\n            switch (kendo.trim(splits[0]).toUpperCase()) {\n                case \"FREQ\":\n                    instance.freq = value[0].toLowerCase();\n                    break;\n                case \"UNTIL\":\n                    instance.until = parseUTCDate(value[0], zone);\n                    break;\n                case \"COUNT\":\n                    instance.count = parseInt(value[0], 10);\n                    break;\n                case \"INTERVAL\":\n                    instance.interval = parseInt(value[0], 10);\n                    break;\n                case \"BYSECOND\":\n                    instance.seconds = parseArray(value, { start: 0, end: 60 });\n                    ruleValue = true;\n                    break;\n                case \"BYMINUTE\":\n                    instance.minutes = parseArray(value, { start: 0, end: 59 });\n                    ruleValue = true;\n                    break;\n                case \"BYHOUR\":\n                    instance.hours = parseArray(value, { start: 0, end: 23 });\n                    ruleValue = true;\n                    break;\n                case \"BYMONTHDAY\":\n                    instance.monthDays = parseArray(value, { start: -31, end: 31 });\n                    ruleValue = true;\n                    break;\n                case \"BYYEARDAY\":\n                    instance.yearDays = parseArray(value, { start: -366, end: 366 });\n                    ruleValue = true;\n                    break;\n                case \"BYMONTH\":\n                    instance.months = parseArray(value, { start: 1, end: 12 });\n                    ruleValue = true;\n                    break;\n                case \"BYDAY\":\n                    instance.weekDays = weekDays = parseWeekDayList(value);\n                    ruleValue = true;\n                    break;\n                case \"BYWEEKNO\":\n                    instance.weeks = parseArray(value, { start: -53, end: 53 });\n                    ruleValue = true;\n                    break;\n                case \"BYSETPOS\":\n                    instance.positions = parseArray(value, { start: -366, end: 366 });\n                    break;\n                case \"WKST\":\n                    instance.weekStart = weekStart = WEEK_DAYS_IDX[value[0]];\n                    break;\n            }\n        }\n\n        if (instance.freq === undefined$1 || (instance.count !== undefined$1 && instance.until)) {\n            return null;\n        }\n\n        if (!instance.interval) {\n            instance.interval = 1;\n        }\n\n        if (weekStart === undefined$1) {\n            instance.weekStart = weekStart = kendo.culture().calendar.firstDay;\n        }\n\n        if (weekDays) {\n            instance.weekDays = weekDays.sort(predicate);\n        }\n\n        if (instance.positions && !ruleValue) {\n            instance.positions = null;\n        }\n\n        instance._hasRuleValue = ruleValue;\n        instance.offsets = offsets;\n\n        return instance;\n    }\n\n    function serializeDateRule(dateRule, zone) {\n        var value = dateRule.value;\n        var tzid = dateRule.tzid || \"\";\n        var length = value.length;\n        var idx = 0;\n        var val;\n\n        for (; idx < length; idx++) {\n            val = value[idx];\n            val = timezone.convert(val, tzid || zone || val.getTimezoneOffset(), \"Etc/UTC\");\n            value[idx] = kendo.toString(val, \"yyyyMMddTHHmmssZ\");\n        }\n\n        if (tzid) {\n            tzid = \";TZID=\" + tzid;\n        }\n\n        return tzid + \":\" + value.join(\",\") + \" \";\n    }\n\n    function serialize(rule, zone) {\n        var weekStart = rule.weekStart;\n        var ruleString = \"FREQ=\" + rule.freq.toUpperCase();\n        var exdates = rule.exdates || \"\";\n        var start = rule.start || \"\";\n        var end = rule.end || \"\";\n        var until = rule.until;\n\n        if (weekStart === undefined$1) {\n            weekStart = kendo.culture().calendar.firstDay;\n        }\n\n        if (rule.interval > 1) {\n            ruleString += \";INTERVAL=\" + rule.interval;\n        }\n\n        if (rule.count) {\n            ruleString += \";COUNT=\" + rule.count;\n        }\n\n        if (until) {\n            until = timezone.convert(until, zone || until.getTimezoneOffset(), \"Etc/UTC\");\n\n            ruleString += \";UNTIL=\" + kendo.toString(until, \"yyyyMMddTHHmmssZ\");\n        }\n\n        if (rule.months) {\n            ruleString += \";BYMONTH=\" + rule.months;\n        }\n\n        if (rule.weeks) {\n            ruleString += \";BYWEEKNO=\" + rule.weeks;\n        }\n\n        if (rule.yearDays) {\n            ruleString += \";BYYEARDAY=\" + rule.yearDays;\n        }\n\n        if (rule.monthDays) {\n            ruleString += \";BYMONTHDAY=\" + rule.monthDays;\n        }\n\n        if (rule.weekDays) {\n            ruleString += \";BYDAY=\" + serializeWeekDayList(rule.weekDays);\n        }\n\n        if (rule.hours) {\n            ruleString += \";BYHOUR=\" + rule.hours;\n        }\n\n        if (rule.minutes) {\n            ruleString += \";BYMINUTE=\" + rule.minutes;\n        }\n\n        if (rule.seconds) {\n            ruleString += \";BYSECOND=\" + rule.seconds;\n        }\n\n        if (rule.positions) {\n            ruleString += \";BYSETPOS=\" + rule.positions;\n        }\n\n        if (weekStart !== undefined$1) {\n            ruleString += \";WKST=\" + WEEK_DAYS[weekStart];\n        }\n\n        if (start) {\n            start = \"DTSTART\" + serializeDateRule(start, zone);\n        }\n\n        if (end) {\n            end = \"DTEND\" + serializeDateRule(end, zone);\n        }\n\n        if (exdates) {\n            exdates = \"EXDATE\" + serializeDateRule(exdates, zone);\n        }\n\n        if (start || end || exdates) {\n            ruleString = start + end + exdates + \"RRULE:\" + ruleString;\n        }\n\n        return ruleString;\n    }\n\n    kendo.recurrence = {\n        rule: {\n            parse: parseRule,\n            serialize: serialize\n        },\n        expand: expand,\n        dayInYear: dayInYear,\n        weekInYear: weekInYear,\n        weekInMonth: weekInMonth,\n        numberOfWeeks: numberOfWeeks,\n        isException: isException,\n        toExceptionString: toExceptionString\n    };\n\n    var RECURRENCE_VIEW_TEMPLATE = kendo.template(({ frequency, messages, end }) =>\n       (frequency !== \"never\" ?\n            '<div class=\"k-form-field\">' +\n                `<label id=\"recur_interval_label\" class=\"k-label k-form-label\" for=\"recur_interval\">${encode(messages.repeatEvery)}</label>` +\n                '<div class=\"k-form-field-wrap\">' +\n                    `<input id=\"recur_interval\" class=\"k-recur-interval\" title=\"${encode(messages.repeatEvery)} ${encode(messages.interval)}\" aria-labelledby=\"recur_interval_label\">${encode(messages.interval)}` +\n                '</div>' +\n            '</div>' : ''\n       ) +\n       (frequency === \"weekly\" ?\n            '<div class=\"k-form-field\">' +\n                `<label class=\"k-label k-form-label\">${encode(messages.repeatOn)}</label>` +\n                '<div class=\"k-form-field-wrap\">' +\n                    `<div class=\"k-button-group-stretched k-recur-weekday-buttons\" title=\"${encode(messages.repeatOn)}\"></div></div>` +\n                '</div>' +\n            '</div>' : ''\n        ) +\n        (frequency === \"monthly\" ?\n            `<div class=\"k-form-field\"><label class=\"k-label k-form-label\">${encode(messages.repeatOn)}</label></div>` +\n                '<div class=\"k-form-field-wrap\">' +\n                    '<ul class=\"k-radio-list\">' +\n                        '<li class=\"k-radio-item\">' +\n                            `<label class=\"k-radio-label\"><input class=\"k-recur-month-radio k-radio k-radio-md\" type=\"radio\" name=\"month\" value=\"monthday\" title=\"${encode(messages.repeatOn)}\" />${encode(messages.date)}:</label>` +\n                            `<input class=\"k-recur-monthday\" aria-label=\"${encode(messages.date)}\" title=\"${encode(messages.date)}\" />` +\n                        '</li>' +\n                        '<li class=\"k-radio-item\">' +\n                            `<input class=\"k-recur-month-radio k-radio k-radio-md\" type=\"radio\" name=\"month\" value=\"weekday\" aria-label=\"${encode(messages.repeatOn)} ${encode(messages.day)}\" title=\"${encode(messages.repeatOn)} ${encode(messages.day)}\" />` +\n                            `<input class=\"k-recur-weekday-offset\" title=\"${encode(messages.repeatOn)}\" ${kendo.attr(\"style-width\")}=\"8em\" />` +\n                            `<input class=\"k-recur-weekday\" title=\"${encode(messages.day)}\" ${kendo.attr(\"style-width\")}=\"8em\" />` +\n                        '</li>' +\n                    '</ul>' +\n                '</div>' +\n            '</div>' : ''\n        ) +\n       (frequency === \"yearly\" ?\n            `<div class=\"k-form-field\"><label class=\"k-label k-form-label\">${encode(messages.repeatOn)}</label>` +\n                '<div class=\"k-form-field-wrap\">' +\n                    '<ul class=\"k-radio-list\">' +\n                        '<li class=\"k-radio-item\">' +\n                            `<input class=\"k-recur-year-radio k-radio k-radio-md\" type=\"radio\" name=\"year\" value=\"monthday\" title=\"${encode(messages.repeatOn)} ${encode(messages.month)}\" />` +\n                            `<input class=\"k-recur-month\" aria-label=\"${encode(messages.month)}\" title=\"${encode(messages.month)}\" ${kendo.attr(\"style-width\")}=\"8em\" />` +\n                            `<input class=\"k-recur-monthday\" aria-label=\"${encode(messages.date)}\" title=\"${encode(messages.date)}\" />` +\n                        '</li>' +\n                        '<li class=\"k-radio-item\">' +\n                            `<input class=\"k-recur-year-radio k-radio k-radio-md\" type=\"radio\" name=\"year\" value=\"weekday\" title=\"${encode(messages.repeatOn)} ${encode(messages.day)}\" />` +\n                            `<input class=\"k-recur-weekday-offset\" title=\"${encode(messages.repeatOn)}\" ${kendo.attr(\"style-width\")}=\"8em\"/><input class=\"k-recur-weekday\" title=\"${encode(messages.day)}\" ${kendo.attr(\"style-width\")}=\"8em\"/>${encode(messages.of)}<input class=\"k-recur-month\" title=\"${encode(messages.of + messages.month)}\" ${kendo.attr(\"style-width\")}=\"8em\"/>` +\n                        '</li>' +\n                    '</ul>' +\n                '</div>' +\n            '</div>' : ''\n       ) +\n       (frequency !== \"never\" ?\n            `<div class=\"k-form-field\"><label class=\"k-label k-form-label\">${encode(end.label)}</label>` +\n                '<div class=\"k-form-field-wrap\">' +\n                    '<ul class=\"k-radio-list\">' +\n                        '<li class=\"k-radio-item\">' +\n                            `<label class=\"k-radio-label\"><input class=\"k-recur-end-never k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"never\" title=\"${encode(end.label)}\" />${encode(end.never)}</label>` +\n                        '</li>' +\n                        '<li class=\"k-radio-item\">' +\n                            `<label class=\"k-radio-label\"><input class=\"k-recur-end-count k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"count\" title=\"${encode(end.label)}\" />${encode(end.after)}</label>` +\n                            `<input class=\"k-recur-count\" aria-label=\"${encode(end.occurrence)}\" title=\"${encode(end.occurrence)}\" />${encode(end.occurrence)}` +\n                        '</li>' +\n                        '<li class=\"k-radio-item\">' +\n                            `<label class=\"k-radio-label\"><input class=\"k-recur-end-until k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"until\" title=\"${encode(end.label)}\" />${encode(end.on)}</label>` +\n                            `<input class=\"k-recur-until\" title=\"${encode(end.on)}\" aria-label=\"${encode(end.on)}\" name=\"recur-until\" />` +\n                        '</li>' +\n                    '</ul>' +\n                '</div>' +\n            '</div>' : ''\n       )\n    );\n\n    var DAY_RULE = [\n        { day: 0, offset: 0 },\n        { day: 1, offset: 0 },\n        { day: 2, offset: 0 },\n        { day: 3, offset: 0 },\n        { day: 4, offset: 0 },\n        { day: 5, offset: 0 },\n        { day: 6, offset: 0 }\n    ];\n\n    var WEEKDAY_RULE = [\n        { day: 1, offset: 0 },\n        { day: 2, offset: 0 },\n        { day: 3, offset: 0 },\n        { day: 4, offset: 0 },\n        { day: 5, offset: 0 }\n    ];\n\n    var WEEKEND_RULE = [\n        { day: 0, offset: 0 },\n        { day: 6, offset: 0 }\n    ];\n\n    var BaseRecurrenceEditor = Widget.extend({\n        init: function(element, options) {\n            var start;\n            var that = this;\n            var frequencies = options && options.frequencies;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.wrapper = that.element;\n\n            options = that.options;\n            options.start = start = options.start || kendoDate.today();\n\n            if (frequencies) {\n                options.frequencies = frequencies;\n            }\n\n            if (typeof start === \"string\") {\n                options.start = kendo.parseDate(start, \"yyyyMMddTHHmmss\");\n            }\n\n            if (options.firstWeekDay === null) {\n                options.firstWeekDay = kendo.culture().calendar.firstDay;\n            }\n\n            that._namespace = \".\" + options.name;\n        },\n\n        options: {\n            value: \"\",\n            start: \"\",\n            timezone: \"\",\n            spinners: true,\n            firstWeekDay: null,\n            frequencies: [\n                \"never\",\n                \"daily\",\n                \"weekly\",\n                \"monthly\",\n                \"yearly\"\n            ],\n            mobile: false,\n            messages: {\n                repeat: \"Repeat\",\n                recurrenceEditorTitle: \"Recurrence editor\",\n                frequencies: {\n                    never: \"Never\",\n                    hourly: \"Hourly\",\n                    daily: \"Daily\",\n                    weekly: \"Weekly\",\n                    monthly: \"Monthly\",\n                    yearly: \"Yearly\"\n                },\n                hourly: {\n                    repeatEvery: \"Repeat every: \",\n                    interval: \" hour(s)\"\n                },\n                daily: {\n                    repeatEvery: \"Repeat every: \",\n                    interval: \" day(s)\"\n                },\n                weekly: {\n                    interval: \" week(s)\",\n                    repeatEvery: \"Repeat every: \",\n                    repeatOn: \"Repeat on: \"\n                },\n                monthly: {\n                    repeatEvery: \"Repeat every: \",\n                    repeatOn: \"Repeat on: \",\n                    interval: \" month(s)\",\n                    day: \"Day \",\n                    date: \"Date\"\n                },\n                yearly: {\n                    repeatEvery: \"Repeat every: \",\n                    repeatOn: \"Repeat on: \",\n                    interval: \" year(s)\",\n                    of: \" of \",\n                    month: \"month\",\n                    day: \"day\",\n                    date: \"Date\"\n                },\n                end: {\n                    label: \"End:\",\n                    mobileLabel: \"Ends\",\n                    never: \"Never\",\n                    after: \"After \",\n                    occurrence: \" occurrence(s)\",\n                    on: \"On \"\n                },\n                offsetPositions: {\n                    first: \"first\",\n                    second: \"second\",\n                    third: \"third\",\n                    fourth: \"fourth\",\n                    last: \"last\"\n                },\n                weekdays: {\n                    day: \"day\",\n                    weekday: \"weekday\",\n                    weekend: \"weekend day\"\n                }\n            }\n        },\n\n        events: [\"change\"],\n\n        _initInterval: function() {\n            var that = this;\n            var rule = that._value;\n\n            that._container\n                .find(\".k-recur-interval\")\n                .kendoNumericTextBox({\n                    spinners: that.options.spinners,\n                    value: rule.interval || 1,\n                    decimals: 0,\n                    format: \"#\",\n                    min: 1,\n                    change: function() {\n                        rule.interval = this.value();\n                        that._trigger();\n                    }\n                });\n        },\n\n        _weekDayButtons: function(firstDay) {\n            var that = this,\n                names = kendo.culture().calendar.days.names,\n                abbreviated = kendo.culture().calendar.days.namesAbbr,\n                repeatOn = that.options.messages.weekly.repeatOn,\n                length = names.length,\n                idx = 0,\n                values = [],\n                items = [];\n\n            for (; idx < length; idx++) {\n                values.push(idx);\n            }\n\n            names = names.slice(firstDay).concat(names.slice(0, firstDay));\n            abbreviated = abbreviated.slice(firstDay).concat(abbreviated.slice(0, firstDay));\n            values = values.slice(firstDay).concat(values.slice(0, firstDay));\n\n            for (idx = 0; idx < length; idx++) {\n                items.push({\n                    text: abbreviated[idx],\n                    attributes: {\n                        \"data-value\": values[idx],\n                        \"aria-label\": repeatOn + \" \" + names[idx]\n                    }\n                });\n            }\n\n            if (that._container.find(\".k-recur-weekday-buttons\").length > 0) {\n                that._weekDayButtonGroup = new ButtonGroup(that._container.find(\".k-recur-weekday-buttons\"), {\n                    items: items,\n                    selection: \"multiple\",\n                    select: function() {\n                        var rule = that._value,\n                            selectedDays = that._weekDayButtonGroup.current();\n\n                        rule.weekDays = selectedDays.map(function(i, day) {\n                            return {\n                                day: Number(day.getAttribute(\"data-value\")),\n                                offset: 0\n                            };\n                        });\n\n                        if (!that.options.mobile) {\n                            that._trigger();\n                        }\n                    }\n                });\n            }\n        },\n\n        _weekDayRule: function(clear) {\n            var that = this;\n            var weekday = (that._weekDay.element || that._weekDay).val();\n            var offset = Number((that._weekDayOffset.element || that._weekDayOffset).val());\n            var weekDays = null;\n            var positions = null;\n\n            if (!clear) {\n                if (weekday === \"day\") {\n                    weekDays = DAY_RULE;\n                    positions = offset;\n                } else if (weekday === \"weekday\") {\n                    weekDays = WEEKDAY_RULE;\n                    positions = offset;\n                } else if (weekday === \"weekend\") {\n                    weekDays = WEEKEND_RULE;\n                    positions = offset;\n                } else {\n                    weekDays = [{\n                        offset: offset,\n                        day: Number(weekday)\n                    }];\n                }\n            }\n\n            that._value.weekDays = weekDays;\n            that._value.positions = positions;\n        },\n\n        _weekDayView: function() {\n            var that = this;\n            var weekDays = that._value.weekDays;\n            var positions = that._value.positions;\n            var weekDayOffsetWidget = that._weekDayOffset;\n            var weekDayOffset;\n            var weekDayValue;\n            var length;\n            var method;\n\n            if (weekDays) {\n                length = weekDays.length;\n\n                if (positions) {\n                    if (length === 7) {\n                        weekDayValue = \"day\";\n                        weekDayOffset = positions;\n                    } else if (length === 5) {\n                        weekDayValue = \"weekday\";\n                        weekDayOffset = positions;\n                    } else if (length === 2) {\n                        weekDayValue = \"weekend\";\n                        weekDayOffset = positions;\n                    }\n                }\n\n                if (!weekDayValue) {\n                    weekDays = weekDays[0];\n                    weekDayValue = weekDays.day;\n                    weekDayOffset = weekDays.offset || \"\";\n                }\n\n                method = weekDayOffsetWidget.value ? \"value\" : \"val\";\n\n                weekDayOffsetWidget[method](weekDayOffset);\n                that._weekDay[method](weekDayValue);\n            }\n        },\n\n        _initWeekDay: function() {\n            var that = this, data;\n\n            var weekdayMessage = that.options.messages.weekdays;\n            var offsetMessage = that.options.messages.offsetPositions;\n\n            var weekDayInput = that._container.find(\".k-recur-weekday\");\n\n            var change = function() {\n                that._weekDayRule();\n                that._trigger();\n            };\n\n            if (weekDayInput[0]) {\n                that._weekDayOffset = new DropDownList(that._container.find(\".k-recur-weekday-offset\"), {\n                    autoWidth: true,\n                    change: change,\n                    dataTextField: \"text\",\n                    dataValueField: \"value\",\n                    dataSource: [\n                        { text: offsetMessage.first, value: \"1\" },\n                        { text: offsetMessage.second, value: \"2\" },\n                        { text: offsetMessage.third, value: \"3\" },\n                        { text: offsetMessage.fourth, value: \"4\" },\n                        { text: offsetMessage.last, value: \"-1\" }\n                    ]\n                });\n\n                data = [\n                    { text: weekdayMessage.day, value: \"day\" },\n                    { text: weekdayMessage.weekday, value: \"weekday\" },\n                    { text: weekdayMessage.weekend, value: \"weekend\" }\n                ];\n\n                that._weekDay = new DropDownList(weekDayInput, {\n                    autoWidth: true,\n                    value: that.options.start.getDay(),\n                    change: change,\n                    dataTextField: \"text\",\n                    dataValueField: \"value\",\n                    dataSource: data.concat($.map(kendo.culture().calendar.days.names, function(dayName, idx) {\n                        return {\n                            text: dayName,\n                            value: idx\n                        };\n                    }))\n                });\n\n                that._weekDayView();\n            }\n        },\n\n        _initWeekDays: function() {\n            var that = this;\n            var rule = that._value;\n            var weekDayButtonGroup = that._weekDayButtonGroup;\n\n            if (weekDayButtonGroup && rule.weekDays && rule.weekDays.length) {\n                var ruleDays = rule.weekDays,\n                    ruleDaysLength = ruleDays.length,\n                    selectors = [],\n                    i = 0,\n                    selectedWeekDayButtons;\n\n                for (; i < ruleDaysLength; i++) {\n                    selectors.push(\"[data-value='\" + ruleDays[i].day + \"']\");\n                }\n\n                selectedWeekDayButtons = weekDayButtonGroup.element.find(selectors.join(\",\"));\n                weekDayButtonGroup.select(selectedWeekDayButtons);\n            }\n        },\n\n        _initMonthDay: function() {\n            var that = this;\n            var rule = that._value;\n            var monthDayInput = that._container.find(\".k-recur-monthday\");\n\n            if (monthDayInput[0]) {\n                that._monthDay = new kendo.ui.NumericTextBox(monthDayInput, {\n                    spinners: that.options.spinners,\n                    min: 1,\n                    max: 31,\n                    decimals: 0,\n                    format: \"#\",\n                    value: rule.monthDays ? rule.monthDays[0] : that.options.start.getDate(),\n                    change: function() {\n                        var value = this.value();\n\n                        rule.monthDays = value ? [value] : value;\n                        that._trigger();\n                    }\n                });\n            }\n        },\n\n        _initCount: function() {\n            var that = this,\n                input = that._container.find(\".k-recur-count\"),\n                rule = that._value;\n\n            that._count = input.kendoNumericTextBox({\n                spinners: that.options.spinners,\n                value: rule.count || 1,\n                decimals: 0,\n                format: \"#\",\n                min: 1,\n                change: function() {\n                    rule.count = this.value();\n                    that._trigger();\n                }\n            }).data(\"kendoNumericTextBox\");\n        },\n\n        _initUntil: function() {\n            var that = this,\n                input = that._container.find(\".k-recur-until\"),\n                start = that.options.start,\n                rule = that._value,\n                until = rule.until,\n                min = until && until < start ? until : start,\n                startInput = that.wrapper.closest(\".k-scheduler-edit-form\").find(\"[name=start]:visible\"),\n                validDateValidationMessage = kendo.format(kendo.ui.Validator.prototype.options.messages.date, that.options.messages.end.on),\n                dateCompareValidationMessage = kendo.ui.Validator.prototype.options.messages.dateCompare,\n                initialValue = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 23, 59, 59);\n\n            input.attr(\"data-validDate-msg\", validDateValidationMessage);\n            input.attr(\"data-untilDateCompare-msg\", dateCompareValidationMessage);\n\n            if (startInput.length === 0) {\n                startInput = that.wrapper.closest(\".k-scheduler-edit-form\").find(\"[name=start]\");\n            }\n\n            if (startInput.length > 0 && startInput.val()) {\n                min = kendo.parseDate(startInput.val());\n\n                if (initialValue < min) {\n                    initialValue = min;\n                }\n            }\n\n            that._until = input.kendoDatePicker({\n                min: min,\n                value: until || initialValue,\n                change: function() {\n                    var date = this.value();\n                    if (date) {\n                        rule.until = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59);\n                    }\n                    that._trigger();\n                }\n            }).data(\"kendoDatePicker\");\n\n            if (startInput) {\n                startInput.on(\"change\", function() {\n                    var untilEl = that._until.element,\n                        readonly = Boolean(untilEl.attr(\"readonly\")),\n                        enable = !(Boolean(untilEl.is(\"[disabled]\") || untilEl.parents(\"fieldset\").is(':disabled')));\n\n                    that._until.setOptions({\n                        min: startInput.val(),\n                        readonly,\n                        enable\n                    });\n                });\n            }\n        },\n\n        _trigger: function() {\n            if (!this.options.mobile) {\n                this.trigger(\"change\");\n            }\n        }\n    });\n\n    var RecurrenceEditor = BaseRecurrenceEditor.extend({\n        init: function(element, options) {\n            var that = this;\n\n            BaseRecurrenceEditor.fn.init.call(that, element, options);\n\n            that._initFrequency();\n\n            that._initContainer();\n\n            that.value(that.options.value);\n        },\n\n        options: {\n            name: \"RecurrenceEditor\"\n        },\n\n        events: [ \"change\" ],\n\n        destroy: function() {\n            var that = this;\n\n            that._frequency.destroy();\n\n            if (this._weekDayButtonGroup) {\n                this._weekDayButtonGroup.destroy();\n            }\n\n            that._container.find(\"input[type=radio],input[type=checkbox]\").off(CLICK + that._namespace);\n\n            kendo.destroy(that._container);\n\n            BaseRecurrenceEditor.fn.destroy.call(that);\n        },\n\n        value: function(value) {\n            var that = this;\n            var timezone = that.options.timezone;\n            var freq, freqButton;\n\n            if (value === undefined$1) {\n                if (!that._value.freq) {\n                    return \"\";\n                }\n\n                return serialize(that._value, timezone);\n            }\n\n            that._value = parseRule(value, timezone) || {};\n\n            freq = that._value.freq;\n\n            if (freq) {\n                freqButton = that._frequency.element.find(\"[data-value='\" + freq + \"']\");\n                that._frequency.select(freqButton);\n            } else {\n                that._frequency.select(0);\n            }\n\n            that._initView(that._frequency.current().data(\"value\"));\n        },\n\n        _initContainer: function() {\n            var element = this.element,\n                container = $('<div class=\"k-recur-view\" />'),\n                editContainer = element.parent(\".k-edit-field\");\n\n            if (editContainer[0]) {\n                container.insertAfter(editContainer);\n            } else {\n                element.append(container);\n            }\n\n            this._container = container;\n        },\n\n        _initFrequency: function() {\n            var that = this,\n                options = that.options,\n                frequencies = options.frequencies,\n                messages = options.messages.frequencies,\n                buttonGroupElement = $('<div class=\"k-button-group-stretched k-flex-1\"/>').attr({ title: options.messages.recurrenceEditorTitle }),\n                frequency;\n\n            frequencies = $.map(frequencies, function(frequency) {\n                return {\n                    text: messages[frequency],\n                    attributes: { \"data-value\": frequency, \"aria-label\": options.messages.repeat + messages[frequency] }\n                };\n            });\n\n            frequency = frequencies[0];\n            if (frequency && frequency.attributes && frequency.attributes[\"data-value\"] === \"never\") {\n                frequency.attributes[\"data-value\"] = \"\";\n            }\n\n            that.element.append(buttonGroupElement);\n            that._frequency = new ButtonGroup(buttonGroupElement, {\n                items: frequencies,\n                select: function() {\n                    that._value = {};\n                    that._initView(that._frequency.current().data(\"value\"));\n                    that.trigger(\"change\");\n                }\n            });\n        },\n\n        _initView: function(frequency) {\n            var that = this;\n            var rule = that._value;\n            var options = that.options;\n            var recurrenceViewHtml;\n\n            var data = {\n                 frequency: frequency || \"never\",\n                 firstWeekDay: options.firstWeekDay,\n                 messages: options.messages[frequency],\n                 end: options.messages.end\n            };\n\n            if (that._weekDayButtonGroup) {\n                that._weekDayButtonGroup.destroy();\n                that._container.find(\".k-recur-weekday-buttons\").empty();\n                that._weekDayButtonGroup = null;\n            }\n\n            kendo.destroy(that._container);\n\n            recurrenceViewHtml = $(RECURRENCE_VIEW_TEMPLATE(data));\n            kendo.applyStylesFromKendoAttributes(recurrenceViewHtml, [\"width\"]);\n\n            that._container.html(recurrenceViewHtml);\n\n            if (!frequency) {\n                that._value = {};\n                return;\n            }\n\n            rule.freq = frequency;\n\n            if (frequency === \"weekly\" && !rule.weekDays) {\n                rule.weekDays = [{\n                    day: options.start.getDay(),\n                    offset: 0\n                }];\n            }\n\n            that._weekDayButtons(options.firstWeekDay);\n\n            that._initInterval();\n            that._initWeekDays();\n            that._initMonthDay();\n            that._initWeekDay();\n            that._initMonth();\n            that._initCount();\n            that._initUntil();\n\n            that._period();\n            that._end();\n        },\n\n        _initMonth: function() {\n            var that = this;\n            var rule = that._value;\n            var month = rule.months || [that.options.start.getMonth() + 1];\n            var monthInputs = that._container.find(\".k-recur-month\");\n            var options;\n\n            if (monthInputs[0]) {\n                options = {\n                    autoWidth: true,\n                    change: function() {\n                        rule.months = [Number(this.value())];\n                        that.trigger(\"change\");\n                    },\n                    dataTextField: \"text\",\n                    dataValueField: \"value\",\n                    dataSource: $.map(kendo.culture().calendar.months.names, function(monthName, idx) {\n                        return {\n                            text: monthName,\n                            value: idx + 1\n                        };\n                    })\n                };\n\n                that._month1 = new DropDownList(monthInputs[0], options);\n                that._month2 = new DropDownList(monthInputs[1], options);\n\n                if (month) {\n                    month = month[0];\n                    that._month1.value(month);\n                    that._month2.value(month);\n                }\n            }\n\n        },\n\n        _end: function() {\n            var that = this;\n            var rule = that._value;\n            var container = that._container;\n            var namespace = that._namespace;\n            var click = function(e) {\n                that._toggleEnd(e.currentTarget.value);\n                that.trigger(\"change\");\n            };\n            var endRule;\n\n            that._buttonNever = container.find(\".k-recur-end-never\").on(CLICK + namespace, click);\n            that._buttonCount = container.find(\".k-recur-end-count\").on(CLICK + namespace, click);\n            that._buttonUntil = container.find(\".k-recur-end-until\").on(CLICK + namespace, click);\n\n            if (rule.count) {\n                endRule = \"count\";\n            } else if (rule.until) {\n                endRule = \"until\";\n            }\n\n            that._toggleEnd(endRule);\n        },\n\n        _period: function() {\n            var that = this;\n            var rule = that._value;\n            var monthly = rule.freq === \"monthly\";\n\n            var toggleRule = monthly ? that._toggleMonthDay : that._toggleYear;\n\n            var selector = \".k-recur-\" + (monthly ? \"month\" : \"year\") + \"-radio\";\n            var radioButtons = that._container.find(selector);\n\n            if (!monthly && rule.freq !== \"yearly\") {\n                return;\n            }\n\n            radioButtons.on(CLICK + that._namespace, function(e) {\n                toggleRule.call(that, e.currentTarget.value);\n                that.trigger(\"change\");\n            });\n\n            that._buttonMonthDay = radioButtons.eq(0);\n            that._buttonWeekDay = radioButtons.eq(1);\n\n            toggleRule.call(that, rule.weekDays ? \"weekday\" : \"monthday\");\n        },\n\n        _toggleEnd: function(endRule) {\n            var that = this;\n            var count, until;\n            var enableCount, enableUntil;\n\n            if (endRule === \"count\") {\n                that._buttonCount.prop(\"checked\", true);\n\n                enableCount = true;\n                enableUntil = false;\n\n                count = that._count.value();\n                until = null;\n            } else if (endRule === \"until\") {\n                that._buttonUntil.prop(\"checked\", true);\n\n                enableCount = false;\n                enableUntil = true;\n\n                count = null;\n                until = that._until.value();\n            } else {\n                that._buttonNever.prop(\"checked\", true);\n\n                enableCount = enableUntil = false;\n                count = until = null;\n            }\n\n            if (that._count) {\n                that._count.enable(enableCount);\n            }\n\n            if (that._until) {\n                that._until.enable(enableUntil);\n            }\n\n            that._value.count = count;\n            that._value.until = until;\n        },\n\n        _toggleMonthDay: function(monthRule) {\n            var that = this;\n            var enableMonthDay = false;\n            var enableWeekDay = true;\n            var clear = false;\n            var monthDays;\n\n            if (monthRule === \"monthday\") {\n                that._buttonMonthDay.prop(\"checked\", true);\n\n                monthDays = [that._monthDay.value()];\n\n                enableMonthDay = true;\n                enableWeekDay = false;\n                clear = true;\n            } else {\n                that._buttonWeekDay.prop(\"checked\", true);\n                monthDays = null;\n            }\n\n            that._weekDay.enable(enableWeekDay);\n            that._weekDayOffset.enable(enableWeekDay);\n            that._monthDay.enable(enableMonthDay);\n\n            that._value.monthDays = monthDays;\n\n            that._weekDayRule(clear);\n        },\n\n        _toggleYear: function(yearRule) {\n            var that = this;\n            var enableMonth1 = false;\n            var enableMonth2 = true;\n            var month;\n\n            if (yearRule === \"monthday\") {\n                enableMonth1 = true;\n                enableMonth2 = false;\n\n                month = that._month1.value();\n            } else {\n                month = that._month2.value();\n            }\n\n            that._month1.enable(enableMonth1);\n            that._month2.enable(enableMonth2);\n\n            that._value.months = [month];\n            that._toggleMonthDay(yearRule);\n        }\n    });\n\n    ui.plugin(RecurrenceEditor);\n\n\n    var RECURRENCE_HEADER_TEMPLATE = kendo.template(({ headerTitle }) =>\n        '<div data-role=\"content\">' +\n            '<ul class=\"k-listgroup k-listgroup-flush\">' +\n                '<li class=\"k-item k-listgroup-item\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${headerTitle}</span>` +\n                        '<div class=\"k-recur-pattern k-listgroup-form-field-wrapper\"></div>' +\n                    '</label>' +\n                '</li>' +\n                '<li class=\"k-item k-listgroup-item k-recur-view\"></li>' +\n            '</ul>' +\n        '</div>'\n    );\n\n    var RECURRENCE_REPEAT_PATTERN_TEMPLATE = kendo.template(({ frequency, messages }) =>\n        (frequency !== \"never\" ?\n            '<label class=\"k-label k-listgroup-form-row\">' +\n                `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.repeatEvery)}</span>` +\n                '<div class=\"k-recur-editor-wrap k-listgroup-form-field-wrapper\">' +\n                    '<input class=\"k-recur-interval\" type=\"number\" pattern=\"\\\\d*\"/>' +\n                    (messages.interval.length ? `<span class=\"k-recur-editor-text\">${encode(messages.interval)}</span>` : '') +\n                '</div>' +\n            '</label>' : ''\n        ) +\n        (frequency === \"weekly\" ?\n            '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                '<li class=\"k-item k-listgroup-item k-no-click\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.repeatOn)}</span>` +\n                    '</label>' +\n                '</li>' +\n                `<div class=\"k-button-group-stretched k-recur-weekday-buttons\" title=\"${encode(messages.repeatOn)}\">` +\n            '</ul>' : '') +\n        (frequency === \"monthly\" ?\n            '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                '<li class=\"k-item k-listgroup-item\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.repeatBy)}</span>` +\n                        '<div class=\"k-repeat-rule k-listgroup-form-field-wrapper\"></div>' +\n                    '</label>' +\n                '</li>' +\n                `<li class=\"k-monthday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.day)}</span>` +\n                        `<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-monthday\" type=\"number\" aria-label=\"${encode(messages.date)}\" title=\"${encode(messages.day)}\" pattern=\"\\\\d*\"/></div>` +\n                    '</label>' +\n                '</li>' +\n                `<li class=\"k-weekday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.every)}</span>` +\n                        `<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday-offset\" title=\"${encode(messages.every)}\"></select></div>` +\n                    '</label>' +\n                '</li>' +\n                `<li class=\"k-weekday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.day)}</span>` +\n                        `<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday\" title=\"${encode(messages.day)}\"></select></div>` +\n                    '</label>' +\n                '</li>' +\n            '</ul>' : '') +\n        (frequency === \"yearly\" ?\n            '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                '<li class=\"k-item k-listgroup-item\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.repeatBy)}</span>` +\n                        '<div class=\"k-repeat-rule k-listgroup-form-field-wrapper\"></div>' +\n                    '</label>' +\n                '</li>' +\n                `<li class=\"k-monthday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.day)}</span>` +\n                        `<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-monthday\" type=\"number\" aria-label=\"${encode(messages.date)}\" title=\"${encode(messages.day)}\" pattern=\"\\\\d*\"/></div>` +\n                    '</label>' +\n                '</li>' +\n                `<li class=\"k-weekday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.every)}</span>` +\n                        `<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday-offset\" title=\"${encode(messages.every)}\"></select></div>` +\n                    '</label>' +\n                '</li>' +\n                `<li class=\"k-weekday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.day)}</span>` +\n                        `<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday\" title=\"${encode(messages.day)}\"></select></div>` +\n                    '</label>' +\n                '</li>' +\n                '<li class=\"k-item k-item k-listgroup-item\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.month)}</span>` +\n                        `<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-month\" title=\"${encode(messages.month)}\"></select></div>` +\n                    '</label>' +\n                '</li>' +\n           '</ul>' : '')\n    );\n\n    var RECURRENCE_END_PATTERN_TEMPLATE = kendo.template(({ endPattern, messages }) => {\n        if (endPattern === \"count\") {\n            return '<label class=\"k-label k-listgroup-form-row\">' +\n                `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.after)}</span>` +\n                `<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-count\" aria-label=\"${encode(messages.occurrence)}\" type=\"number\" pattern=\"\\\\d*\" /></div>` +\n            '</label>';\n        } else if (endPattern === \"until\") {\n            return '<label class=\"k-label k-listgroup-form-row\">' +\n                `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.on)}</span>` +\n                `<div class=\"k-listgroup-form-field-wrapper\"><input type=\"date\" class=\"k-recur-until\" aria-label=\"${encode(messages.on)}\" name=\"recur-until\"/></div>` +\n            '</label>';\n        }\n    });\n\n    var RECURRENCE_GROUP_BUTTON_TEMPLATE = kendo.template(({ dataSource, value }) =>\n        '<select class=\"k-scheduler-select\">' +\n            dataSource.map((item) => `<option value=\"${item.value}\" ${value === item.value ? 'selected' : ''}>${encode(item.text)}</option>`).join('') +\n        '</select>'\n    );\n\n    var MobileRecurrenceEditor = BaseRecurrenceEditor.extend({\n        init: function(element, options) {\n            var that = this;\n\n            BaseRecurrenceEditor.fn.init.call(that, element, options);\n\n            options = that.options;\n\n            that._optionTemplate = kendo.template(({ value, text }) => `<option value=\"${encode(value)}\">${encode(text)}</option>`);\n\n            that.value(options.value);\n\n            that._pane = options.pane || that.wrapper.closest(\"[data-role=pane]\").data(\"kendoPane\");\n\n            that._initRepeatButton();\n\n            that._initParentRepeatEnd();\n\n            that._defaultValue = that._value;\n        },\n\n        options: {\n            name: \"MobileRecurrenceEditor\",\n            animations: {\n                left: \"slide\",\n                right: \"slide:right\"\n            },\n            mobile: true,\n            messages: {\n                cancel: \"Cancel\",\n                update: \"Save\",\n                endTitle: \"Repeat ends\",\n                repeatTitle: \"Repeat pattern\",\n                headerTitle: \"Repeat event\",\n                end: {\n                    patterns: {\n                        never: \"Never\",\n                        after: \"After...\",\n                        on: \"On...\"\n                    },\n                    never: \"Never\",\n                    after: \"End repeat after\",\n                    on: \"End repeat on\"\n                },\n                daily: {\n                    interval: \"\"\n                },\n                hourly: {\n                    interval: \"\"\n                },\n                weekly: {\n                    interval: \"\"\n                },\n                monthly: {\n                    interval: \"\",\n                    repeatBy: \"Repeat by: \",\n                    dayOfMonth: \"Day of the month\",\n                    dayOfWeek: \"Day of the week\",\n                    repeatEvery: \"Repeat every\",\n                    every: \"Every\",\n                    day: \"Day \"\n                },\n                yearly: {\n                    interval: \"\",\n                    repeatBy: \"Repeat by: \",\n                    dayOfMonth: \"Day of the month\",\n                    dayOfWeek: \"Day of the week\",\n                    repeatEvery: \"Repeat every: \",\n                    every: \"Every\",\n                    month: \"Month\",\n                    day: \"Day\"\n                }\n            }\n        },\n\n        events: [ \"change\" ],\n\n        value: function(value) {\n            var that = this;\n            var timezone = that.options.timezone;\n\n            if (value === undefined$1) {\n                if (!that._value.freq) {\n                    return \"\";\n                }\n\n                return serialize(that._value, timezone);\n            }\n\n            that._value = parseRule(value, timezone) || {};\n        },\n\n        destroy: function() {\n            this._destroyView();\n\n            kendo.destroy(this._endFields);\n\n            this.element.off(CLICK + this._namespace);\n\n            BaseRecurrenceEditor.fn.destroy.call(this);\n        },\n\n        _initInterval: function() {\n            var that = this;\n            var rule = that._value;\n\n            that._container.find(\".k-recur-interval\")\n                .val(that._value.interval || 1)\n                .on(CHANGE + that._namespace, function(e) {\n                    rule.interval = e.target.value;\n                    that._trigger();\n                });\n        },\n\n        _initRepeatButton: function() {\n            var that = this;\n            var freq = that.options.messages.frequencies[this._value.freq || \"never\"];\n\n            that._chevronButton = $(kendo.ui.icon(\"chevron-right\"));\n            that._repeatValue = $('<span class=\"\">' + freq + '</span>');\n\n            that.element.append(that._repeatValue).append(that._chevronButton);\n\n            that.element.parents(\"li.k-item\").on(CLICK + that._namespace, function(e) {\n                e.preventDefault();\n                that._createView(\"repeat\");\n                that._pane.navigate(that._view, that.options.animations.left);\n            });\n        },\n\n        _endLiItem: function() {\n            var that = this;\n            return '<li class=\"k-item k-listgroup-item\"><label class=\"k-label k-listgroup-form-row\"><span class=\"k-item-title k-listgroup-form-field-label\">' + that.options.messages.end.mobileLabel + '</span></label></li>';\n        },\n\n        _initParentRepeatEnd: function() {\n            var that = this;\n\n            var endLabelField = $(that._endLiItem()).insertAfter(that.element.parents(\"li.k-item\"));\n\n            var endEditField = $('<div class=\"k-scheduler-recur-end-wrap k-listgroup-form-field-wrapper\"><span class=\"k-scheduler-recur-end\"></span></div>')\n                .appendTo(endLabelField.find(\".k-label\"));\n\n            endLabelField.on(CLICK + that._namespace, function(e) {\n                e.preventDefault();\n                that._navigateToView(\"repeat\");\n            });\n\n            that._endParentLabelField = endLabelField.toggle(!!that._value.freq);\n            that._endParentEndButton = endEditField.find(\".k-scheduler-recur-end\").text(that._endText());\n        },\n\n        _initRepeatEnd: function() {\n            var that = this;\n\n            var endLabelField = $(that._endLiItem()).insertAfter(that._container);\n\n            var endEditField = $(`<div class=\"k-scheduler-recur-end-wrap k-listgroup-form-field-wrapper\"><span class=\"k-scheduler-recur-end\"></span>${kendo.ui.icon(\"chevron-right\")}</div>`)\n                .appendTo(endLabelField.find(\".k-label\"));\n\n            endLabelField.on(CLICK + that._namespace, function(e) {\n                e.preventDefault();\n                that._navigateToView(\"end\");\n            });\n\n            that._endLabelField = endLabelField.toggleClass(\"k-disabled\", !that._value.freq);\n            that._endButton = endEditField.find(\".k-scheduler-recur-end\").text(that._endText());\n        },\n\n        _navigateToView: function(viewName) {\n            var that = this;\n            that._createView(viewName);\n            that._pane.navigate(that._view, that.options.animations.left);\n        },\n\n        _endText: function() {\n            var rule = this._value;\n            var messages = this.options.messages.end;\n\n            var text = messages.never;\n\n            if (rule.count) {\n                text = kendo.format(\"{0} {1}\", messages.after, rule.count);\n            } else if (rule.until) {\n                text = kendo.format(\"{0} {1:d}\", messages.on, rule.until);\n            }\n\n            return text;\n        },\n\n        _initFrequency: function() {\n            var that = this;\n            var frequencyMessages = that.options.messages.frequencies;\n\n            var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                dataSource: $.map(this.options.frequencies, function(frequency) {\n                    return {\n                        text: frequencyMessages[frequency],\n                        value: frequency !== \"never\" ? frequency : \"\"\n                    };\n                }),\n                value: that._value.freq || \"\",\n                ns: kendo.ns\n            });\n\n            that._view.element\n                .find(\".k-recur-pattern\")\n                .append(html);\n\n            that._view.element.find(\".k-scheduler-select\")\n                .on(CHANGE + that._namespace, function(e) {\n                    var value = e.target.value;\n                    that._value = { freq: value };\n                    that._defaultValue = $.extend({}, that._value);\n                    that._initRepeatView();\n                    that._endButton.text(that._endText());\n                    that._endParentEndButton.text(that._endText());\n                });\n        },\n\n        _initEndNavigation: function() {\n            var that = this;\n            var endMessages = that.options.messages.end.patterns;\n            var rule = that._value;\n            var value = \"\";\n\n            if (rule.count) {\n                value = \"count\";\n            } else if (rule.until) {\n                value = \"until\";\n            }\n\n            var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                dataSource: [\n                    { text: endMessages.never, value: \"\" },\n                    { text: endMessages.after, value: \"count\" },\n                    { text: endMessages.on, value: \"until\" }\n                ],\n                value: value,\n                ns: kendo.ns\n            });\n\n            that._view.element\n                .find(\".k-recur-pattern\")\n                .append(html);\n\n            that._view.element.find(\".k-scheduler-select\")\n                .on(CHANGE + that._namespace, function(e) {\n                    var value = e.target.value;\n                    var count = null;\n                    var until = null;\n\n                    that._initEndView(value);\n\n                    if (that._count.length) {\n                        count = that._count.val();\n                        until = null;\n                    } else if (that._until.length) {\n                        count = null;\n                        until = that._until.val ? kendo.parseDate(that._until.val(), \"yyyy-MM-dd\") : that._until.value();\n                    }\n\n                    rule.count = count;\n                    rule.until = until;\n                });\n        },\n\n        _createView: function(viewType) {\n            var that = this;\n            var options = that.options;\n            var messages = options.messages;\n            var headerTitle = messages[viewType === \"repeat\" ? \"repeatTitle\" : \"endTitle\"];\n\n            var html = '<div data-role=\"view\" class=\"k-popup-edit-form k-scheduler-edit-form\" id=\"recurrence\">' +\n                       '<div data-role=\"header\" class=\"k-header\">' +\n                           '<a href=\"#\" class=\"k-header-cancel k-scheduler-cancel k-link\" title=\"' + messages.cancel + '\"' +\n                           `aria-label=\"${messages.cancel}\">${kendo.ui.icon(\"chevron-left\")}</a>` +\n                               messages.headerTitle +\n                           '<a href=\"#\" class=\"k-header-done k-scheduler-update k-link\" title=\"' + messages.update + '\" ' +\n                           `aria-label=\"${messages.update}\">${kendo.ui.icon(\"check\")}</a>` +\n                       '</div>';\n\n            var returnViewId = that._pane.view().id;\n\n            that._view = that._pane.append(html + RECURRENCE_HEADER_TEMPLATE({ headerTitle: headerTitle }));\n\n            that._view.element.on(CLICK + that._namespace, \"a.k-scheduler-cancel, a.k-scheduler-update\", function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                if ($(this).hasClass(\"k-scheduler-update\")) {\n                    that.trigger(\"change\");\n                    that._defaultValue = $.extend({}, that._value);\n                } else {\n                    that._value = that._defaultValue;\n                }\n\n                var frequency = that._value.freq;\n\n                that._endParentEndButton.text(that._endText());\n                that._endParentLabelField.toggle(!!frequency && frequency !== \"never\");\n                that._endButton.text(that._endText());\n\n                that._repeatValue.text(messages.frequencies[frequency || \"never\"]);\n\n                that._pane.one(\"viewShow\", function() {\n                    that._destroyView();\n                });\n\n                that._pane.navigate(returnViewId, that.options.animations.right);\n            });\n\n            that._container = that._view.element.find(\".k-recur-view\");\n\n            if (viewType === \"repeat\") {\n                that._initFrequency();\n                that._initRepeatView();\n                that._initRepeatEnd();\n            } else {\n                that._initEndNavigation();\n                that._initEndView();\n            }\n        },\n\n        _destroyView: function() {\n            if (this._view) {\n\n                this._view.destroy();\n                this._view.element.remove();\n                this._container = null;\n            }\n\n\n            this._view = null;\n        },\n\n        _initRepeatView: function() {\n            var that = this;\n            var frequency = that._value.freq || \"never\";\n\n            var data = {\n                 frequency: frequency,\n                 firstWeekDay: that.options.firstWeekDay,\n                 messages: that.options.messages[frequency]\n            };\n\n            var html = RECURRENCE_REPEAT_PATTERN_TEMPLATE(data);\n            var $html = $(html);\n            kendo.applyStylesFromKendoAttributes($html, [\"display\"]);\n\n            var container = that._container = that._container || this._pane.view().content.find(\"li.k-recur-view\");\n            var rule = that._value;\n\n            if (that._endLabelField) {\n                that._endLabelField.toggleClass(\"k-disabled\", frequency === \"never\");\n            }\n\n            kendo.destroy(container);\n            container.html($html);\n\n            if (!html) {\n                that._value = {};\n                container.hide();\n                return;\n            } else {\n                container.show();\n            }\n\n            if (frequency === \"weekly\" && !rule.weekDays) {\n                 rule.weekDays = [{\n                    day: that.options.start.getDay(),\n                    offset: 0\n                 }];\n            }\n\n            that._weekDayButtons(that.options.firstWeekDay);\n\n            that._initInterval();\n            that._initMonthDay();\n            that._initWeekDays();\n            that._initWeekDay();\n            that._initMonth();\n\n            that._period();\n        },\n\n        _initMonthDay: function() {\n            var that = this;\n            var rule = that._value;\n            var monthDayInput = that._monthDay = that._container.find(\".k-recur-monthday\");\n\n            monthDayInput.attr({\n                min: 1,\n                max: 31\n            })\n            .val(rule.monthDays ? rule.monthDays[0] : that.options.start.getDate())\n            .on(CHANGE + that._namespace, function(e) {\n                rule.count = e.target.value;\n                that._trigger();\n            });\n        },\n\n        _initCount: function() {\n            var that = this,\n                input = that._count = that._container.find(\".k-recur-count\"),\n                rule = that._value;\n\n            input.val(rule.count || 1)\n                .on(CHANGE + that._namespace, function(ev) {\n                    rule.count = ev.target.value;\n                    that._trigger();\n                });\n        },\n\n        _initEndView: function(endPattern) {\n            var that = this;\n            var rule = that._value;\n\n            if (endPattern === undefined$1) {\n                if (rule.count) {\n                    endPattern = \"count\";\n                } else if (rule.until) {\n                    endPattern = \"until\";\n                }\n            }\n\n            var data = {\n                 endPattern: endPattern,\n                 messages: that.options.messages.end\n            };\n\n            kendo.destroy(that._container);\n            that._container.html(RECURRENCE_END_PATTERN_TEMPLATE(data));\n\n            that._initCount();\n            that._initUntil();\n        },\n\n        _initWeekDay: function() {\n            var that = this, data;\n\n            var weekdayMessage = that.options.messages.weekdays;\n            var offsetMessage = that.options.messages.offsetPositions;\n\n            var weekDaySelect = that._container.find(\".k-recur-weekday\");\n\n            var change = function() {\n                that._weekDayRule();\n                that.trigger(\"change\");\n            };\n\n            if (weekDaySelect[0]) {\n                that._weekDayOffset = that._container.find(\".k-recur-weekday-offset\")\n                                          .html(that._options([\n                                            { text: offsetMessage.first, value: \"1\" },\n                                            { text: offsetMessage.second, value: \"2\" },\n                                            { text: offsetMessage.third, value: \"3\" },\n                                            { text: offsetMessage.fourth, value: \"4\" },\n                                            { text: offsetMessage.last, value: \"-1\" }\n                                          ]))\n                                          .on(\"change\", change);\n\n                data = [\n                    { text: weekdayMessage.day, value: \"day\" },\n                    { text: weekdayMessage.weekday, value: \"weekday\" },\n                    { text: weekdayMessage.weekend, value: \"weekend\" }\n                ];\n\n                data = data.concat($.map(kendo.culture().calendar.days.names, function(dayName, idx) {\n                    return {\n                        text: dayName,\n                        value: idx\n                    };\n                }));\n\n                that._weekDay = weekDaySelect.html(that._options(data))\n                                             .on(\"change\", change)\n                                             .val(that.options.start.getDay());\n\n                that._weekDayView();\n            }\n        },\n\n        _initMonth: function() {\n            var that = this;\n            var rule = that._value;\n            var start = that.options.start;\n            var month = rule.months || [start.getMonth() + 1];\n            var monthSelect = that._container.find(\".k-recur-month\");\n            var monthNames = kendo.culture().calendar.months.names;\n\n            if (monthSelect[0]) {\n                var data = $.map(monthNames, function(monthName, idx) {\n                    return {\n                        text: monthName,\n                        value: idx + 1\n                    };\n                });\n\n                monthSelect.html(that._options(data))\n                           .on(\"change\", function() {\n                               rule.months = [Number(this.value)];\n                           });\n\n                that._monthSelect = monthSelect;\n\n                if (month) {\n                    monthSelect.val(month[0]);\n                }\n            }\n\n        },\n\n        _period: function() {\n            var that = this;\n            var rule = that._value;\n            var container = that._container;\n            var messages = that.options.messages[rule.freq];\n            var repeatRuleGroupButton = container.find(\".k-repeat-rule\");\n            var weekDayView = container.find(\".k-weekday-view\");\n            var monthDayView = container.find(\".k-monthday-view\");\n\n            if (repeatRuleGroupButton[0]) {\n                var currentValue = rule.weekDays ? \"weekday\" : \"monthday\";\n\n                var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                    value: currentValue,\n                    dataSource: [\n                        { text: messages.dayOfMonth, value: \"monthday\" },\n                        { text: messages.dayOfWeek, value: \"weekday\" }\n                    ],\n                    ns: kendo.ns\n                });\n\n                var init = function(val) {\n                    var weekDayName = that._weekDay.val();\n                    var weekDayOffset = that._weekDayOffset.val();\n                    var monthDay = that._monthDay.val();\n                    var month = that._monthSelect ? that._monthSelect.val() : null;\n\n                    if (val === \"monthday\") {\n                        rule.weekDays = null;\n                        rule.monthDays = monthDay ? [monthDay] : monthDay;\n                        rule.months = month ? [Number(month)] : month;\n\n                        weekDayView.hide();\n                        monthDayView.show();\n                    } else {\n                        rule.monthDays = null;\n                        rule.months = month ? [Number(month)] : month;\n\n                        rule.weekDays = [{\n                            offset: Number(weekDayOffset),\n                            day: Number(weekDayName)\n                        }];\n\n                        weekDayView.show();\n                        monthDayView.hide();\n                    }\n                };\n\n                repeatRuleGroupButton\n                    .append(html);\n\n                repeatRuleGroupButton.find(\".k-scheduler-select\")\n                    .on(CHANGE + that._namespace, function(e) {\n                        init(e.target.value);\n                    });\n\n                init(currentValue);\n            }\n        },\n\n        _initUntil: function() {\n            var that = this;\n            var input = that._container.find(\".k-recur-until\");\n            var start = that.options.start;\n            var rule = that._value;\n            var until = rule.until;\n            var min = until && until < start ? until : start;\n            var validDateValidationMessage = kendo.format(kendo.ui.Validator.prototype.options.messages.date, that.options.messages.end.on);\n            var dateCompareValidationMessage = kendo.ui.Validator.prototype.options.messages.dateCompare;\n\n            input.attr(\"data-validDate-msg\", validDateValidationMessage);\n            input.attr(\"data-untilDateCompare-msg\", dateCompareValidationMessage);\n\n            if (kendo.support.input.date) {\n                that._until = input.attr(\"min\", kendo.toString(min, \"yyyy-MM-dd\"))\n                                   .val(kendo.toString(until || start, \"yyyy-MM-dd\"))\n                                   .on(\"change\", function() {\n                                        var date = kendo.parseDate(this.value, \"yyyy-MM-dd\");\n                                        if (date) {\n                                            rule.until = date;\n                                        }\n                                        that._trigger();\n                                   });\n            } else {\n                that._until = input.kendoDatePicker({\n                    min: min,\n                    value: until || start,\n                    change: function() {\n                        var date = this.value();\n                        if (date) {\n                            rule.until = date;\n                        }\n                        that._trigger();\n                    }\n                }).data(\"kendoDatePicker\");\n            }\n        },\n\n        _options: function(data, optionLabel) {\n            var idx = 0;\n            var html = \"\";\n            var length = data.length;\n            var template = this._optionTemplate;\n\n            if (optionLabel) {\n                html += template({ value: \"\", text: optionLabel });\n            }\n\n            for (; idx < length; idx++) {\n                html += template(data[idx]);\n            }\n\n            return html;\n        }\n    });\n\n    ui.plugin(MobileRecurrenceEditor);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}