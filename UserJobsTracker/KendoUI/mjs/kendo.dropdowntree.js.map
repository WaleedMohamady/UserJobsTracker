{"version":3,"sources":["raw-mjs/kendo.dropdowntree.js"],"names":["$","undefined$1","subGroup","filter","kendo","window","ui","keys","DISABLED","SELECT","CHECKED","INDETERMINATE","TreeView","node","result","children","length","Tree","extend","init","element","options","dropdowntree","that","this","fn","call","_isMultipleSelection","wrapper","on","CLICK","_clickSelectedItem","bind","_checkOnSelect","e","isDefaultPrevented","dataItem","set","checked","_setCheckedValue","value","_click","one","currentTarget","_trigger","defaultrefresh","i","action","items","parentNode","loadOnDemand","checkChildren","checkboxes","_skip","field","level","_updateNodes","findByUid","uid","_progress","bubble","_appendItems","index","_remove","_refreshChildren","_refreshRoot","expanded","load","find","attr","trigger","_treeViewDataBound","sender","updateIndeterminate","_previousVisible","lastChild","prev","root","last","_expanded","parent","checkAll","is","filterInput","_keydown","target","key","keyCode","focused","current","checkbox","first","rtl","support","isRtl","RIGHT","LEFT","_nextVisible","hasClass","expand","collapse","_enabled","DOWN","UP","altKey","HOME","END","ENTER","SPACEBAR","prop","data","_checkboxChange","ESC","_closePopup","TAB","preventDefault","select","scrollTo","close","refresh","skipUpdateOnBind","_checkValue","selected","_selectValue","_dropdowntree","jQuery","valueMapperOptions","callback","selectable","success","response","__meta__","id","name","category","description","depends","html","encode","htmlEncode","mediaQuery","Widget","ObservableArray","ObservableObject","activeElement","_activeElement","ns","HIDDENCLASS","WIDTH","browser","outerWidth","_outerWidth","DOT","READONLY","STATEDISABLED","ARIA_DISABLED","FOCUSED","HOVEREVENTS","TABINDEX","OPEN","CLOSE","CHANGE","quotRegExp","CHIP","DropDownTree","_selection","_getSelection","_focusInputHandler","_focusInput","_initial","val","_values","_noInitialValue","_isNullorUndefined","_valueMethodCalled","_isArrayOfObjects","autoBind","map","x","dataValueField","Array","isArray","slice","bigScreenMQL","smallScreenMQL","adaptiveMode","onChange","popup","isFunction","fullscreen","mediaQueryList","matches","_inputTemplate","_accessors","_setTreeViewOptions","_dataSource","_initWrapper","_applyCssClasses","_placeholder","_tabindex","tree","tabIndex","list","append","_header","_noData","_footer","_reset","_popup","destroy","remove","treeview","_filterHeader","_treeview","_renderFooter","_checkAll","_enable","_toggleCloseVisibility","_aria","_clearButton","text","_textAccessor","placeholder","_preselect","parents","enable","label","_label","valueMapper","requireValueMapper","notify","labelOptions","isPlainObject","content","Label","widget","floatCheck","_floatCheck","_inputLabel","visible","_refreshFloatingLabel","floatingLabel","treeviewOptions","dataImageUrlField","dataSpriteCssClassField","dataTextField","dataUrlField","size","template","rootDataSource","dataSource","HierarchicalDataSource","create","_popupOpen","wrap","_altname","MultipleSelection","SingleSelection","setDataSource","_isDataSourceSet","_tags","setValue","empty","span","show","_multipleTags","includes","animation","autoClose","autoWidth","clearButton","delay","enabled","enforceMinLength","height","ignoreCase","messages","singleTag","clear","deleteTag","noData","minLength","noDataTemplate","checkAllTemplate","tagMode","valuePrimitive","footerTemplate","headerTemplate","valueTemplate","filterLabel","fillMode","rounded","events","focus","readonly","_editable","disable","toggle","open","_toggle","_isFilterEnabled","_search","fetch","_allowOpening","_hovered","search","word","clearTimeout","_typingTimeout","_getFilter","_filtering","_mapValuesToId","values","schema","model","Error","item","hasValue","_useValueMapper","deferred","Deferred","_deferred","_handleValueMapperData","done","_loadItem","get","resolve","operator","flatView","_renderNoData","setOptions","console","warn","css","_unwrapFloating","off","_clear","tagList","unbind","_form","_resetHandler","_useValueMapperWithValue","_setValue","_filter","loweredText","toLowerCase","_selectItemByText","role","_activeId","guid","_ariaLabel","header","prepend","hide","appendTo","instance","footer","disabled","_adjustListWidth","computedStyle","computedWidth","width","style","getComputedStyle","parseFloat","msie","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","fontFamily","minWidth","whiteSpace","formId","form","closest","setTimeout","_hasActionSheet","addClass","Popup","anchor","_openHandler","_closeHandler","autosize","deactivate","activate","document","body","ActionSheet","adaptive","hideOverflowContent","closeButton","renderButton","icon","focusOnActivate","toggleClass","_currentValue","currentValue","_value","indexOfValue","isMultiple","_level","indexOf","grep","_tagUid","itemToAdd","toJSON","push","itemToRemove","idx","_treeViewCheckAllCheck","splice","_preventChangeTrigger","position","_updateSelectedOptions","tagName","selectedItems","_option","_text","dataValue","dataText","option","replace","_accessor","_clearClick","stopPropagation","_clearTextAndValue","shouldTrigger","_clearValue","_clearInput","_clearText","_assignInstance","assign","split","removeClass","getter","textField","valueField","getterFunction","count","levels","d","Math","min","_accessorInput","clearTitle","insertAfter","isReadOnly","valueDoesNotEqualPlaceHolder","_hideClear","_showClear","_prev","_deselectItem","rootItem","subItems","_checkLoadedItems","rootItems","_valueComparer","_checkLoadedItem","_getAllChecked","_checkCheckAll","_uncheckCheckAll","checkAllCheckbox","_allItemsAreChecked","_allItemsAreUnchecked","filterTemplate","iconClass","_disableCheckChildren","title","_filterChange","insertBefore","renderCheckBox","_changeCheckAll","_keydownCheckAll","_disabledCheckedItems","_disabledUnCheckedItems","isChecked","_updateCheckAll","_toggleCheckAllItems","edge","_clickCheckAll","_dfs","_traverceChildren","_uncheckItemByUid","_uncheckItemEqualsUid","_itemEqualsText","_selectItemByValue","_itemEqualsValue","_checkItemByValue","dataItems","_checkItemEqualsValue","itemText","itemValue","newValue","_allCheckedItems","_getAllCheckedItems","_childrenOptions","_checkAllCheckItem","add","dropDownWrapper","removeAttr","_focusinHandler","_focusoutHandler","_toggleHover","_wrapperClick","_removeTagClick","_prevent","_focused","type","preventScroll","_ie11PreventScrollOnFocus","version","_toggleResize","isFilterInputActive","isWrapperActive","tagItem","isPopupVisible","_focusPrevTag","_focusNextTag","_focusFirstTag","_focusLastTag","DELETE","_removeTag","BACKSPACE","_clearFilter","activedescendant","next","_clearDisabledTag","firstTag","lastTag","fields","lastIndex","plugin","cssProperties","registerPrefix","registerValues","roundedValues","concat","Class","view","_wrapper","_span","DOMelement","cssText","className","accesskey","unselectable","SELECTOR","shape","_arrow","_arrowIcon","selectedNode","dropdowntreeHasValue","triggerChange","tempItem","_tagTemplate","_tagList","valueToSelect","tagTemplate","renderChip","themeColor","removable","removeIcon","removableAttr","tagCollection","renderChipList","viewModel","observable","multipleTag","tags","_refreshTagListAria","oldValues","_removeValues","removedValues","_getNewValues","j","tagsArray","_findTag","tempItemValue","kendo$1"],"mappings":";;;;;;;;MAAA,4BACA,yBACA,+BACA,0BACA,6BACA,iCACA,+BACA,8BACA,yBACA,oBAEA,SAAAA,EAAAC,GAEA,IAWAC,EAGAC,EAdAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAE,GACAC,EAAAH,EAAAG,KACAC,EAAA,aACAC,EAAA,SACAC,EAAA,UAIAC,EAAA,gBAGAC,EAAAN,EAAAM,SAEAT,EAYA,oBAAAD,EAXA,SAAAW,GACA,IAAAC,EAAAD,EAAAE,SAAA,0BAMA,OAJAD,EAAAE,SACAF,EAAAD,GAGAC,EAAAC,SAAAZ,EACA,EAKA,IAAAc,EAAAL,EAAAM,OAAA,CACAC,KAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAC,KAEAD,EAAAD,aAAAA,EAEAV,EAAAa,GAAAN,KAAAO,KAAAH,EAAAH,EAAAC,GACAE,EAAAD,aAAAK,wBACAJ,EAAAK,QAAAC,GAAAC,sBAAA,8BAAAP,EAAAQ,mBAAAC,KAAAT,GAEA,EAEAU,eAAA,SAAAC,GACA,IAAAA,EAAAC,qBAAA,CACA,IAAAC,EAAAZ,KAAAY,SAAAF,EAAArB,MAEAuB,EAAAC,IAAA,WAAAD,EAAAE,QACA,CACA,EAEAC,iBAAA,SAAA1B,EAAA2B,GACA3B,EAAAwB,IAAA3B,EAAA8B,EACA,EAEAC,OAAA,SAAAP,GACA,IAAAX,EAAAC,KAEAD,EAAAD,aAAAK,wBACAJ,EAAAmB,IAAA,SAAAnB,EAAAU,gBAEArB,EAAAa,GAAAgB,OAAAf,KAAAH,EAAAW,EACA,EAEAH,mBAAA,SAAAG,GACA,IAAAX,EAAAC,KACAX,EAAAb,EAAAkC,EAAAS,eAEApB,EAAAmB,IAAA,SAAAnB,EAAAU,gBACAV,EAAAqB,SAAAnC,EAAAI,IACAU,EAAAa,SAAAvB,GAAAwB,IAAA,YAAA,EAEA,EAEAQ,eAAA,SAAAX,GACA,IAQAY,EAPAjC,EAAAqB,EAAArB,KACAkC,EAAAb,EAAAa,OACAC,EAAAd,EAAAc,MACAC,EAAAzB,KAAAI,QACAP,EAAAG,KAAAH,QACA6B,EAAA7B,EAAA6B,aACAC,EAAA9B,EAAA+B,YAAA/B,EAAA+B,WAAAD,cAGA,IAAA3B,KAAA6B,MAAA,CAIA,GAAAnB,EAAAoB,MAAA,CACA,IAAAN,EAAA,KAAAA,EAAA,GAAAO,MACA,OAGA,OAAA/B,KAAAgC,aAAAR,EAAAd,EAAAoB,MACA,CAOA,GALAzC,IACAoC,EAAAzB,KAAAiC,UAAA5C,EAAA6C,KACAlC,KAAAmC,UAAAV,GAAA,IAGAE,GAAA,UAAAJ,EAAA,CACA,IAAAa,GAAA,EAEA,IAAAd,EAAA,EAAAA,EAAAE,EAAAhC,OAAA8B,IACA,GAAA,YAAAE,EAAAF,GAAA,CACAc,GAAA,EACA,KACA,CAGA,IAAAA,GAAA/C,GAAAA,EAAAyB,QACA,IAAAQ,EAAA,EAAAA,EAAAE,EAAAhC,OAAA8B,IACAE,EAAAF,GAAAR,SAAA,CAGA,CAcA,GAZA,OAAAS,EACAvB,KAAAqC,aAAA3B,EAAA4B,MAAAd,EAAAC,GACA,UAAAF,EACAvB,KAAAuC,QAAAvC,KAAAiC,UAAAT,EAAA,GAAAU,MAAA,GACA,cAAAX,EACAvB,KAAAgC,aAAAR,GACA,cAAAD,EACAvB,KAAAwC,iBAAAf,EAAAD,EAAAd,EAAA4B,OAEAtC,KAAAyC,aAAAjB,GAGA,UAAAD,EACA,IAAAD,EAAA,EAAAA,EAAAE,EAAAhC,OAAA8B,IACAI,IAAAF,EAAAF,GAAAoB,UACAlB,EAAAF,GAAAqB,OA3DA3C,KAgEAI,QAAAwC,KAAA,OAAAC,KAAA,OAAA,QAEA7C,KAAA8C,QApIA,YAoIA,CAAAzD,KAAAA,EAAAoC,EAAAhD,IACAuB,KAAAF,aAAAiD,mBAAA,CAAA1D,KAAAA,EAAAoC,EAAAhD,EAAAuE,OAAAhD,OACAA,KAAAH,QAAA+B,WAAAD,eACA3B,KAAAiD,qBAzDA,CA2DA,EAEAC,iBAAA,SAAA7D,GACA,IACA8D,EACA7D,EAFAS,EAAAC,KAIA,IAAAX,EAAAG,QAAAH,EAAA+D,OAAA5D,OAOA,IALAF,EADAD,EAAAG,OACAH,EAAA+D,OAEArD,EAAAsD,KAAA9D,WAAA+D,OAGAvD,EAAAwD,UAAAjE,KACA6D,EAAAzE,EAAAY,GAAAC,WAAA+D,QAEA9D,QAIAF,EAAA6D,OAGA7D,EAAAS,EAAAyD,OAAAnE,IAAAA,GAEAG,SACAO,EAAAD,aAAA2D,UAAA1D,EAAAD,aAAA2D,SAAAC,GAAA,YACA3D,EAAAD,aAAA2D,SAAAb,KAAA,eAAAE,QAAA,SACA/C,EAAAD,aAAA6D,YACA5D,EAAAD,aAAA6D,YAAAb,QAAA,SAEA/C,EAAAD,aAAAM,QAAA0C,QAAA,UAKA,OAAAxD,CACA,EAEAsE,SAAA,SAAAlD,GACA,IAEAmD,EAFA9D,EAAAC,KACA8D,EAAApD,EAAAqD,QAEAC,EAAAjE,EAAAkE,UACAvB,EAAA3C,EAAAwD,UAAAS,GACAE,EAAAF,EAAApB,KAAA,oBAAAuB,QAAAvB,KAAA,aACAwB,EAAAxF,EAAAyF,QAAAC,MAAAvE,EAAAH,SAEAc,EAAAmD,QAAAnD,EAAAS,iBAIAiD,GAAAN,GAAA/E,EAAAwF,OAAAH,GAAAN,GAAA/E,EAAAyF,KACA9B,EACAmB,EAAA9D,EAAA0E,aAAAT,GACAA,EAAApB,KAAA,oBAAAuB,QAAAO,SAAA1F,IACAe,EAAA4E,OAAAX,IAEAI,GAAAN,GAAA/E,EAAAyF,MAAAJ,GAAAN,GAAA/E,EAAAwF,MACA7B,IAAAsB,EAAApB,KAAA,oBAAAuB,QAAAO,SAAA1F,GACAe,EAAA6E,SAAAZ,IAEAH,EAAA9D,EAAAyD,OAAAQ,GAEAjE,EAAA8E,SAAAhB,KACAA,EAAApF,IAGAqF,GAAA/E,EAAA+F,KACAjB,EAAA9D,EAAA0E,aAAAT,GACAF,GAAA/E,EAAAgG,IAAArE,EAAAsE,OAEAlB,GAAA/E,EAAAkG,KACApB,EAAA9D,EAAA0E,aAAAjG,KACAsF,GAAA/E,EAAAmG,IACArB,EAAA9D,EAAAmD,iBAAA1E,KACAsF,GAAA/E,EAAAoG,OAAAnB,EAAApB,KAAA,oBAAAuB,QAAAO,SAAA1F,GAMA8E,GAAA/E,EAAAqG,UAAAlB,EAAA1E,SAAAwE,EAAApB,KAAA,oBAAAuB,QAAAO,SAAA1F,IACAkF,EAAAmB,KAAAnG,GAAAgF,EAAAmB,KAAAnG,IACAoG,KAAAnG,GAAA,GACAkG,KAAAlG,GAAA,GAEAY,EAAAwF,gBAAA,CAAA1B,OAAAK,IAEAL,EAAAG,GACAtD,EAAAsE,QAAAlB,IAAA/E,EAAAgG,IAAAjB,IAAA/E,EAAAyG,IACAzF,EAAA0F,cACA3B,IAAA/E,EAAA2G,MACAhF,EAAAiF,iBACA5F,EAAA0F,eAjBAzB,EAAApB,KAAA,oBAAAuB,QAAAO,SAAA,eACA3E,EAAAqB,SAAAnC,EAAA+E,IACAjE,EAAA6F,OAAA5B,GARAH,EAAA9D,EAAAmD,iBAAAc,GA0BAH,IACAnD,EAAAiF,iBAEA3B,EAAA,IAAAH,EAAA,KACA9D,EAAAqB,SA3OA,WA2OAyC,GACA9D,EAAAkE,QAAAJ,GACA9D,EAAA8F,SAAAhC,KAGA,EAEA4B,YAAA,WACAzF,KAAAF,aAAAgG,QACA9F,KAAAF,aAAAM,QAAA0C,QAAA,QACA,EAEAiD,QAAA,SAAArF,GACAV,KAAAqB,eAAAX,GAEAV,KAAAF,aAAAD,QAAAmG,mBAIA,eAAAtF,EAAAa,OACAvB,KAAAF,aAAAK,uBACA,YAAAO,EAAAoB,OACA9B,KAAAF,aAAAmG,YAAAvF,EAAAc,MAAA,IAGA,YAAAd,EAAAoB,OAAA,aAAApB,EAAAoB,OAAApB,EAAAc,MAAA,GAAA0E,UACAlG,KAAAF,aAAAqG,aAAAzF,EAAAc,MAAA,IAIAxB,KAAAF,aAAAiG,QAAArF,GAEA,IAIA9B,EAAAE,GAAAsH,cAAA3G,CAEA,CA7RA,CA6RAZ,OAAAD,MAAAyH,QAEA,IAAA7H,EAAAI,MAAAyH,OAEA,SAAAC,mBAAAzG,EAAAmB,EAAAuF,GACA,MAAA,CACAvF,MAAA,aAAAnB,EAAA2G,YAAA3G,EAAA+B,WAAAZ,EAAAA,EAAA,GACAyF,QAAA,SAAAC,GACAH,EAAAG,EACA,EAEA,CAEA,IAAAC,SAAA,CACAC,GAAA,eACAC,KAAA,eACAC,SAAA,MACAC,YAAA,8GACAC,QAAA,CAAA,WAAA,QAAA,SAAA,YAAA,gBAAA,cAAA,aAAA,QAAA,QAAA,iBAGA,SAAAxI,EAAAC,GACA,IAAAG,EAAAC,OAAAD,MACAE,EAAAF,EAAAE,GACAmI,EAAArI,EAAAqI,KACAC,EAAAtI,EAAAuI,WACAC,EAAAxI,EAAAwI,WACAC,EAAAvI,EAAAuI,OACAjI,EAAAN,EAAAsH,cACAkB,EAAA1I,EAAA0G,KAAAgC,gBACAC,EAAA3I,EAAA0G,KAAAiC,iBACA7H,EAAAlB,EAAAkB,OACA8H,EAAA5I,EAAA6I,eACAC,EAAA,qBACA3I,EAAAH,EAAAG,KACAsF,EAAAzF,EAAAyF,QACAsD,EAAA,WACAC,EAAA,QACAC,EAAAxD,EAAAwD,QACAC,EAAAlJ,EAAAmJ,YACAC,EAAA,IACAhJ,EAAA,WACAiJ,EAAA,WACAC,EAAA,aACAC,EAAA,gBAEAC,EAAA,UACAC,EAAA,aAAAX,EAAA,cAAAA,EACAY,EAAA,WACAhI,EAAA,QACAiI,EAAA,OACAC,EAAA,QACAC,EAAA,SACAC,EAAA,KAEAC,EAAA,UAEAC,EAAAhK,EAAAE,GAAAuI,OAAA3H,OAAA,CACAC,KAAA,SAAAC,EAAAC,GACA,IAAAE,EAAAC,KACAA,KAAA0H,GAAAA,EAEA9I,EAAAE,GAAAuI,OAAApH,GAAAN,KAAAO,KAAAF,KAAAJ,EAAAC,GACAG,KAAA6I,WAAA7I,KAAA8I,gBACA9I,KAAA+I,mBAAA/I,KAAAgJ,YAAAxI,KAAAR,MACAA,KAAAiJ,SAAAjJ,KAAAJ,QAAAsJ,MAEAlJ,KAAAmJ,QAAA,GAEA,IAAAnI,EAAAhB,KAAAH,QAAAmB,MA0FA,GAxFA,OAAAA,GAAAA,EAAAxB,SACAQ,KAAAoJ,iBAAA,GAGApJ,KAAAqJ,mBAAArI,KACAhB,KAAAsJ,oBAAA,EACAtI,EAAAhB,KAAAuJ,kBAAAvI,IAAAjB,EAAAF,QAAA2J,SAAAxI,EAAAyI,KAAAC,GAAAA,EAAA3J,EAAAF,QAAA8J,kBAAA3I,EACAhB,KAAAmJ,QAAAS,MAAAC,QAAA7I,GAAAA,EAAA8I,MAAA,GAAA,CAAA9I,IAGAjB,EAAAgK,aAAA3C,EAAA,SACArH,EAAAiK,eAAA5C,EAAA,SACA,QAAArH,EAAAF,QAAAoK,cACAlK,EAAAiK,eAAAE,UAAA,WACAnK,EAAAoK,OAAAvL,EAAAwL,WAAArK,EAAAoK,MAAAE,aACAtK,EAAAoK,MAAAE,WAAAtK,EAAAiK,eAAAM,eAAAC,QAEA,IAGAvK,KAAAwK,iBAEAxK,KAAAyK,aACAzK,KAAA0K,oBAAA1K,KAAAH,SACAG,KAAA2K,cACA3K,KAAA6I,WAAA+B,eACA5K,KAAA6K,mBACA7K,KAAA8K,cAAA,GACA9K,KAAA+K,YACA/K,KAAAI,QAAAkF,KAAAgD,EAAAtI,KAAAI,QAAAyC,KAAAyF,IAEAtI,KAAAgL,KAAAxM,EAAA,UACAqE,KAAA,CACAoI,UAAA,EACA,eAAA,IAGAjL,KAAAkL,KAAA1M,EAAA,UACA2M,OAAAnL,KAAAgL,MAEAhL,KAAAoL,UACApL,KAAAqL,UACArL,KAAAsL,UACAtL,KAAAuL,SACAvL,KAAAwL,SAEA,QAAAzL,EAAAF,QAAAoK,cACAlK,EAAAgK,aAAAG,UAAA,KACAnK,EAAAmL,KAAA1M,EAAA,mCACA2M,OAAApL,EAAAiL,MACAjL,EAAAqL,QAAA5K,KAAAT,EAAAA,GACAA,EAAAsL,QAAA7K,KAAAT,EAAAA,GACAA,EAAAuL,QAAA9K,KAAAT,EAAAA,GACAA,EAAAwL,OAAA/K,KAAAT,EAAAA,GAEAA,EAAAoK,QACApK,EAAAoK,MAAAsB,UACA1L,EAAAoK,MAAAvK,QAAA8L,SACA3L,EAAAoK,MAAA,MAEApK,EAAA4L,UACA5L,EAAA4L,SAAAF,UAGA1L,EAAAyL,OAAAhL,KAAAT,EAAAA,GACAA,EAAA6L,cAAApL,KAAAT,EAAAA,GACAA,EAAA8L,UAAArL,KAAAT,EAAAA,GAEAA,EAAA+L,cAAAtL,KAAAT,EAAAA,GAEAA,EAAAgM,UAAAvL,KAAAT,EAAAA,GACAA,EAAAiM,QAAAxL,KAAAT,EAAAA,GACAA,EAAAkM,uBAAAzL,KAAAT,EAAAA,GAEAA,EAAAmM,MAAA1L,KAAAT,EAAAA,EAAA,IAIAC,KAAAmM,eACAnM,KAAA4L,gBACA5L,KAAA6L,YAEA7L,KAAA8L,gBAEA9L,KAAA+L,YACA/L,KAAAgM,UACAhM,KAAAiM,0BAEAjM,KAAAH,QAAA2J,SAAA,CACA,IAAA4C,EAAAvM,EAAAuM,MAAA,GACApM,KAAAqJ,mBAAAxJ,EAAAmB,OAEAoL,EACApM,KAAAqM,cAAAD,GACAvM,EAAAyM,aACAtM,KAAA8K,cAAA,GAJA9K,KAAAuM,WAAA1M,EAAAmB,MAMA,CAEAxC,EAAAwB,KAAAJ,SAAA4M,QAAA,YAAA9I,GAAA,cAGA1D,KAAAyM,QAAA,GAEAzM,KAAAsJ,oBAAA,EAEAtJ,KAAAH,QAAA6M,OACA1M,KAAA2M,SAEA3M,KAAAH,QAAA6B,cAAA1B,KAAAH,QAAA6B,aAAAkL,aAAA5M,KAAAH,QAAAmB,OACAhB,KAAAkB,IAAA,aAAA,IAAAlB,KAAA6M,mBAAA7M,KAAAH,WAEAG,KAAAkM,QAEAtN,EAAAkO,OAAA9M,KACA,EAEA2M,OAAA,WACA,IAAA5M,EAAAC,KACAH,EAAAE,EAAAF,QACAkN,EAAAvO,EAAAwO,cAAAnN,EAAA6M,OAAA7M,EAAA6M,MAAA,CACAO,QAAApN,EAAA6M,OAGA3M,EAAA2M,MAAA,IAAA9N,EAAAE,GAAAoO,MAAA,KAAA1O,EAAAkB,OAAA,CAAA,EAAAqN,EAAA,CACAI,OAAApN,EACAqN,WAAArN,EAAAsN,YAAA7M,KAAAT,MAGAA,EAAAuN,YAAAvN,EAAA2M,MAAA9M,OACA,EAEAyN,YAAA,WAEA,QADArN,KAAAgB,UAAAhB,KAAAG,wBAAAH,KAAAgB,QAAAxB,QAAAQ,KAAAoM,UACApM,KAAAmK,MAAAoD,SACA,EAEAC,sBAAA,WACA,IAAAzN,EAAAC,KAEAD,EAAA2M,OAAA3M,EAAA2M,MAAAe,eACA1N,EAAA2M,MAAAe,cAAA1H,SAEA,EAEAwG,WAAA,SAAAjH,EAAAtE,GACAhB,KAAA6I,WAAA0D,WAAAjH,EAAAtE,EACA,EAEA0J,oBAAA,SAAA7K,GACA,IAAA6N,EAAA,CACAlE,SAAA3J,EAAA2J,SACA5H,WAAA/B,EAAA+B,WACA+L,kBAAA9N,EAAA8N,kBACAC,wBAAA/N,EAAA+N,wBACAC,cAAAhO,EAAAgO,cACAC,aAAAjO,EAAAiO,aACApM,aAAA7B,EAAA6B,aACAqM,KAAAlO,EAAAkO,MAGA/N,KAAAH,QAAA8L,SAAAnN,EAAAkB,OAAA,CAAA,EAAAgO,EAAA1N,KAAAH,QAAA8L,UAEA9L,EAAAmO,WACAhO,KAAAH,QAAA8L,SAAAqC,SAAAnO,EAAAmO,UAGAnO,EAAAkO,OACA/N,KAAAH,QAAA8L,SAAAoC,KAAAlO,EAAAkO,KAEA,EAEApD,YAAA,WACA,IAAAsD,EAAAjO,KAAAH,QAAAqO,WAEAlO,KAAAkO,WAAAtP,EAAA0G,KAAA6I,uBAAAC,OAAAH,GACAA,GACAzP,EAAAkB,OAAAM,KAAAH,QAAA8L,SAAA,CACAuC,WAAAlO,KAAAkO,YAGA,EAEAG,WAAA,WACA,IAAAlE,EAAAnK,KAAAmK,MACAA,EAAA/J,QAAAxB,EAAA0P,KAAAnE,EAAAvK,QACA,EAEAkJ,cAAA,WACA,OAAA9I,KAAAG,wBACAH,KAAAH,QAAA0O,SAAA,kBACA,IAAAzP,EAAA8J,aAAA4F,kBAAAxO,OAEA,IAAAlB,EAAA8J,aAAA6F,gBAAAzO,KAEA,EAEA0O,cAAA,SAAAR,GACAlO,KAAA2O,kBAAA,EACA3O,KAAA4O,QACA5O,KAAAoJ,iBAAA,EACApJ,KAAA6O,SAAA,IACA7O,KAAA4O,MAAAE,QACA9O,KAAA+O,KAAAC,OACAhP,KAAAiP,cAAAH,SAEA9O,KAAAkO,WAAAA,EACAlO,KAAA2L,SAAA+C,cAAAR,GACAlO,KAAA2O,kBAAA,CACA,EAEAxO,qBAAA,WACA,OAAAH,KAAAH,UAAAG,KAAAH,QAAA8L,SAAA/J,YAAA5B,KAAAH,QAAA+B,WACA,EAEA2H,kBAAA,SAAAvI,GACA,OAAA4I,MAAAC,QAAA7I,IAAAA,EAAAyI,KAAAC,GAAA,iBAAAA,IAAAwF,UAAA,EACA,EAEArP,QAAA,CACAgH,KAAA,eACAoD,aAAA,OACAkF,UAAA,CAAA,EACA3F,UAAA,EACA4F,WAAA,EACAC,WAAA,EACAC,aAAA,EACAzB,cAAA,GACAlE,eAAA,GACAgE,kBAAA,GACAC,wBAAA,GACAE,aAAA,GACAyB,MAAA,IACAC,SAAA,EACAC,kBAAA,EACA9Q,OAAA,OACA+Q,OAAA,IACAC,YAAA,EACArN,MAAA,EACAZ,cAAA,EACAkO,SAAA,CACAC,UAAA,mBACAC,MAAA,QACAC,UAAA,SACAC,OAAA,kBAEAC,UAAA,EACArO,YAAA,EACAsO,gBAAA,EACA5D,YAAA,GACA7I,UAAA,EACA0M,iBAAA,IAAA,YACAC,QAAA,WACApC,SAAA,KACA5B,KAAA,KACAT,SAAA,CAAA,EACA0E,gBAAA,EACAC,eAAA,IAAA,GACAC,eAAA,IAAA,GACAvP,MAAA,KACAwP,cAAA,KACArG,MAAA,KACAsG,YAAA,KACA1C,KAAA,SACA2C,SAAA,QACAC,QAAA,SACAjE,MAAA,MAGAkE,OAAA,CACA,OACA,QACA,YACAnI,EACA,SACA,aAGAoI,MAAA,WACA7Q,KAAAI,QAAA0C,QAAA,QACA,EAEAlC,SAAA,SAAAvB,GACA,OAAAW,KAAA2L,SAAA/K,SAAAvB,EACA,EAEAyR,SAAA,SAAAA,GACA9Q,KAAA+Q,UAAA,CACAD,SAAAA,IAAArS,GAAAqS,EACAE,SAAA,IAEAhR,KAAAiM,yBAEAjM,KAAA0M,OAAA1M,KAAA0M,MAAAe,eACAzN,KAAA0M,MAAAe,cAAAqD,SAAAA,IAAArS,GAAAqS,EAEA,EAEArE,OAAA,SAAAA,GACAzM,KAAA+Q,UAAA,CACAD,UAAA,EACAE,UAAAvE,EAAAA,IAAAhO,GAAAgO,KAEAzM,KAAAiM,yBAEAjM,KAAA0M,OAAA1M,KAAA0M,MAAAe,eACAzN,KAAA0M,MAAAe,cAAAhB,OAAAA,EAAAA,IAAAhO,GAAAgO,EAEA,EAEAwE,OAAA,SAAAC,GACAlR,KAAAmR,QAAAD,EACA,EAEAA,KAAA,WACA,IAAA/G,EAAAnK,KAAAmK,MAEAnK,KAAAH,QAAA2J,UAAAxJ,KAAAkO,WAAA5I,OAAA9F,SACAQ,KAAA2L,SAAAxJ,WAAA,GACAnC,KAAAoR,mBACApR,KAAAqR,UAEArR,KAAAkO,WAAAoD,UAIAnH,EAAAoD,WAAAvN,KAAAuR,kBAIApH,EAAAjJ,IAAA,WAAAlB,KAAA+I,oBACAoB,EAAAqH,UAAA,EACArH,EAAA+G,OACA,EAEApL,MAAA,WACA9F,KAAAmK,MAAArE,OACA,EAEA2L,OAAA,SAAAC,GACA,IACA/S,EADAkB,EAAAG,KAAAH,QAIA,GAFA8R,aAAA3R,KAAA4R,iBAEA/R,EAAA4P,mBAAAiC,EAAAlS,QAAAkS,EAAAlS,QAAAK,EAAAoQ,UAAA,CAEA,GADAtR,EAAAqB,KAAA6R,WAAAH,GACA1R,KAAA8C,QAAA,YAAA,CAAAnE,OAAAA,KACAiL,MAAAC,QAAA7J,KAAAH,QAAAgO,eACA,OAGA7N,KAAA8R,YAAA,EACA9R,KAAA2L,SAAAuC,WAAAvP,OAAAA,EACA,CACA,EAEAoT,eAAA,SAAAC,GAGA,GAAA,mBAFAhS,KAEAkO,WAAArO,QAAAoS,OAAAC,MACA,MAAA,IAAAC,MAAA,2CAEA,MAAArQ,EALA9B,KAKAkO,WAAArO,QAAAoS,OAAAC,MAAAtL,GAEA,OAAAoL,EAAAvI,KAAA2I,GAAAA,EAAAtQ,IACA,EAEA+K,mBAAA,SAAAhN,EAAAmB,GACA,MAAAjB,EAAAC,KACA,IAAAqS,EAAArR,GAAAnB,EAAAmB,MAGA,GAFAqR,EAAAA,IAAAA,aAAAzI,MAAAyI,EAAA,CAAAA,IAEAA,GAAAxS,EAAA6B,cAAA,mBAAA7B,EAAA6B,aAAAkL,YACA,MAAA,IAAAuF,MAAA,oKAGA,GAAAE,EAAA7S,OAAA,CACA,IAAA8C,EAAA,EACAvC,EAAAF,QAAA6B,aAAAkL,YAAAtG,mBAAAvG,EAAAF,QAAAwS,EAAAtS,EAAAuS,gBAAA9R,KAAAT,EAAAsS,EAAA/P,IAEA,CACA,EAEAgQ,gBAAA,SAAAhN,EAAAhD,EAAAoE,GACA,MAAA3G,EAAAC,KACAuS,EAAA/T,EAAAgU,WACAzS,EAAA0S,UAAAF,EAEAxS,EAAA2S,uBAAApQ,EAAAoE,GAEA6L,EAAAI,MAAA,OACArQ,EACAgD,EAAA9F,QACAO,EAAAuS,gBAAAhN,EAAAhD,EAAAoE,EACA,GAEA,EAEAgM,uBAAA,SAAApQ,EAAAgD,GACA,MAEAoB,EAAApB,EAAAhD,aAAAsH,MAAAtE,EAAAhD,GAAAgD,EACA,IAAAoB,IAAAA,EAAAlH,OACA,OAJAQ,KAQA4S,UAAAlM,EADA,EAEA,EAEAkM,UAAA,SAAAtN,EAAAhD,GACA,MAAAvC,EAAAC,KACAX,EAAAU,EAAAmO,WAAA2E,IAAAvN,EAAAhD,IACAjD,GACAA,EAAAsD,OAAAgQ,MAAA,OACArQ,EACAgD,EAAA9F,OAAA,EACAO,EAAA6S,UAAAtN,EAAAhD,GAEAvC,EAAA0S,UAAAK,SACA,GAGA,EAEAjB,WAAA,SAAAH,GACA,MAAA,CACA5P,MAAA9B,KAAAH,QAAAgO,cACAkF,SAAA/S,KAAAH,QAAAlB,OACAqC,MAAA0Q,EACA/B,WAAA3P,KAAAH,QAAA8P,WAEA,EAEA5J,QAAA,WACA,IAAAT,EAAAtF,KAAA2L,SAAAuC,WAAA8E,WACAhT,KAAA8L,gBACA9L,KAAAiT,gBACAjT,KAAA2D,aAAA3D,KAAAyD,UACAzD,KAAAyD,SAAAwN,QAAAjR,KAAA2D,YAAAuF,MAAA1J,QAGAQ,KAAAgL,KAAAiG,SAAA3L,EAAA9F,QACAhB,EAAAwB,KAAAgQ,QAAAiB,QAAA3L,EAAA9F,OACA,EAEA0T,WAAA,SAAArT,GACAG,KAAAH,QAAA+B,YAAA/B,EAAA+B,oBACA/B,EAAA+B,WACA/C,OAAAsU,QAAAC,KAAA,mFAGA/L,EAAApH,GAAAiT,WAAAhT,KAAAF,KAAAH,GAEAG,KAAA0K,oBAAA7K,GACAG,KAAA2K,eACA3K,KAAAH,QAAA8L,UAAA9L,EAAAkO,OACA/N,KAAA2L,SAAAuH,WAAAlT,KAAAH,QAAA8L,UAGA9L,EAAA6P,QAAA1P,KAAAgL,MACAhL,KAAAgL,KAAAqI,IAAA,aAAAxT,EAAA6P,QAGA1P,KAAAoL,UACApL,KAAAqL,UACArL,KAAAsL,UAEAtL,KAAA8L,gBACA9L,KAAAiT,gBACAjT,KAAA+O,OAAA/O,KAAAG,wBAAAH,KAAA+O,KAAArK,SAAA,gBACA1E,KAAA8K,cAAA,GAEA9K,KAAAwK,iBACAxK,KAAAyK,aACAzK,KAAA4L,gBACA5L,KAAA+L,YACA/L,KAAAgM,UACAnM,IAAAA,EAAA4M,QAAA5M,EAAA2P,UACAxP,KAAAyM,QAAA,GAEAzM,KAAAmM,eAEAtM,IAAApB,GAAA,OAAAoB,IACAA,EAAA,CAAA,GAGAA,EAAA6M,OAAA1M,KAAAsN,YACAtN,KAAA0M,MAAAwG,WAAArT,EAAA6M,QACA,IAAA7M,EAAA6M,OACA1M,KAAA0M,MAAA4G,kBACAtT,KAAAsN,YAAA5B,gBACA1L,KAAAsN,aACAzN,EAAA6M,OACA1M,KAAA2M,QAEA,EAEAlB,QAAA,WACA7M,EAAAE,GAAAuI,OAAApH,GAAAwL,QAAAvL,KAAAF,MACAA,KAAA2L,UACA3L,KAAA2L,SAAAF,UAEAzL,KAAAmK,MAAAsB,UAEAzL,KAAAI,QAAAmT,IAAA7L,GACA1H,KAAAwT,OAAAD,IAAA7L,GACA1H,KAAA2D,aACA3D,KAAA2D,YAAA4P,IAAA7L,GAGA1H,KAAAyT,SACAzT,KAAAyT,QAAAF,IAAA7L,GAGA1H,KAAA+J,cACA/J,KAAA+J,aAAA0B,UAGAzL,KAAAgK,gBACAhK,KAAAgK,eAAAyB,UAGA7M,EAAA8U,OAAA1T,KAAAyT,SACAzT,KAAAH,QAAA4D,UAAAzD,KAAAyD,UACAzD,KAAAyD,SAAA8P,IAAA7L,GAGA1H,KAAA2T,OACA3T,KAAA2T,MAAAJ,IAAA,QAAAvT,KAAA4T,eAGA5T,KAAA0M,OACA1M,KAAA0M,MAAAjB,SAEA,EAEAoD,SAAA,SAAA7N,GACAA,EAAA4I,MAAAC,QAAA7I,IAAAA,aAAAsG,EAAAtG,EAAA8I,MAAA,GAAA,CAAA9I,GAEAhB,KAAAmJ,QAAAnI,CACA,EAEAQ,MAAA,WACA,OAAAxB,KAAA2L,SAAAnK,OACA,EAEAqS,yBAAA,SAAA7S,GACA,MAAAjB,EAAAC,KACA,IAAAgS,EAAAhR,aAAA4I,MAAA5I,EAAA,CAAAA,GAEA,iBAAAgR,EAAA,KACAA,EAAAjS,EAAAgS,eAAAC,IAEAjS,EAAA8M,mBAAA7M,KAAAH,QAAAmS,GACAjS,EAAA0S,UAAAE,MAAA,KACA5S,EAAA8I,WAAAiL,UAAA9B,EAAA,GAEA,EAEAhR,MAAA,SAAAA,GACA,MAAAjB,EAAAC,KACA0B,EAAA3B,EAAAF,QAAA6B,aACA,GAAAV,EACA,GAAAjB,EAAA4D,aAAA5D,EAAAmO,WAAA6F,QACAhU,EAAA+R,YAAA,EACA/R,EAAAmO,WAAAvP,OAAA,CAAA,OACA,KAAAoB,EAAAmO,WAAA5I,OAAA9F,SAAAO,EAAA4L,SAAAuC,WAAA5I,OAAA9F,OAmBA,YAlBAkC,EAQAA,EAAAkL,YACA7M,EAAAmB,IAAA,aAAA,KACAnB,EAAA8T,yBAAA7S,EAAA,IAGAjB,EAAAmO,WAAAoD,OAAA,WACAvR,EAAA8I,WAAAiL,UAAA9S,EACA,KAdAjB,EAAA4L,SAAAzK,IAAA,iBAAA,WACAnB,EAAA8I,WAAAiL,UAAA9S,EACA,KAEAjB,EAAAF,QAAA2J,UAAAzJ,EAAAF,QAAAwQ,gBACAtQ,EAAAmO,WAAAoD,UAaA,GAAA5P,GAAAA,EAAAkL,YAEA,YADA7M,EAAA8T,yBAAA7S,EAEA,CAGA,OAAAjB,EAAA8I,WAAAiL,UAAA9S,EACA,EAEAoL,KAAA,SAAAA,GACA,IAAA4H,EACArE,EAAA3P,KAAAH,QAAA8P,WAIA,IAFAvD,EAAA,OAAAA,EAAA,GAAAA,KAEA3N,GAAAuB,KAAAG,uBAaA,OAAAH,KAAAqM,gBAZA,iBAAAD,GAKA4H,EAAArE,EAAAvD,EAAAA,EAAA6H,cAEAjU,KAAAkU,kBAAAF,GAEAhU,KAAAqM,cAAA2H,GACAhU,KAAAwN,yBATAxN,KAAAqM,cAAAD,EAcA,EAEAF,MAAA,WACAlM,KAAAI,QAAAwC,KAAA,sBAEA5C,KAAAI,QAAAyC,KAAA,CACA,gBAAA,OACA,iBAAA,EACA,gBAAA7C,KAAA2L,SAAA/L,QAAAiD,KAAA,MACAsR,KAAA,aAGAnU,KAAAoU,UAAAxV,EAAAyV,OACArU,KAAAsU,WAAAtU,KAAAI,SAEAJ,KAAA2D,aAAA3D,KAAAH,QAAA4Q,aACAzQ,KAAA2D,YAAAd,KAAA,aAAA7C,KAAAH,QAAA4Q,aAGAzQ,KAAAH,QAAA+B,aACA5B,KAAAI,QAAAyC,KAAA,CACA,mBAAA7C,KAAAyT,QAAA,GAAA7M,KAEA5G,KAAAyT,QAAA5Q,KAAA,CACAsR,KAAA,UACA,mBAAA,aACA,wBAAA,IAEAnU,KAAAsU,WAAAtU,KAAAyT,SAEA,EAEArI,QAAA,WACA,IAAAF,EAAAlL,KACAuU,EAAA/V,EAAA0M,EAAAqJ,QACAvG,EAAA9C,EAAArL,QAAA0Q,eAKA,GAHA3R,EAAA6M,QAAA8I,GACAA,EAAA7I,SAEAsC,EAAA,CAKA,IAAAuC,EAAA,mBAAAvC,EAAApP,EAAAoP,SAAAA,GAAAA,EACAuG,EAAA/V,EAAA+R,EAAA,CAAA,IAEArF,EAAAqJ,OAAAA,EAAA,GAAAA,EAAA,KACArJ,EAAAA,KAAAsJ,QAAAD,EANA,MAFArJ,EAAAqJ,OAAA,IASA,EAEAlJ,QAAA,WACA,IAAAH,EAAAlL,KACAgQ,EAAAxR,EAAA0M,EAAA8E,QACAhC,GAAA,IAAA9C,EAAArL,QAAAqQ,eAAAhJ,EAAAgE,EAAArL,QAAA+P,SAAAI,QAAA9E,EAAArL,QAAAqQ,eAEAtR,EAAA6M,QAAAuE,GACAA,EAAAtE,SAEAsC,GAKA9C,EAAA8E,OAAAxR,EAAA,iCAAAiW,OAAAC,SAAAxJ,EAAAA,MACAA,EAAAgF,eAAA,mBAAAlC,EAAApP,EAAAoP,UAAA,IAAAA,IAAAA,GALA9C,EAAA8E,OAAA,IAMA,EAEAiD,cAAA,WACA,IAAA/H,EAAAlL,KACAgQ,EAAA9E,EAAA8E,OAEAA,GAIAA,EAAA/I,KAAAiE,EAAAgF,eAAA,CAAAyE,SAAAzJ,IACA,EAEAI,QAAA,WACA,IAAAJ,EAAAlL,KACA4U,EAAApW,EAAA0M,EAAA0J,QACA5G,EAAA9C,EAAArL,QAAAyQ,eAEA1R,EAAA6M,QAAAmJ,GACAA,EAAAlJ,SAEAsC,GAKA9C,EAAA0J,OAAApW,EAAA,gCAAAkW,SAAAxJ,EAAAA,MACAA,EAAAoF,eAAA,mBAAAtC,EAAApP,EAAAoP,SAAAA,GAAAA,GALA9C,EAAA0J,OAAA,IAMA,EAEA9I,cAAA,WACA,IAAAZ,EAAAlL,KACA4U,EAAA1J,EAAA0J,OAEAA,GAIAA,EAAA3N,KAAAiE,EAAAoF,eAAA,CAAAqE,SAAAzJ,IACA,EAEAc,QAAA,WACA,IAAAjM,EAAAC,KACAH,EAAAE,EAAAF,QACAgV,EAAA9U,EAAAH,QAAA8D,GAAA,cAEA7D,EAAA4M,SAAAhO,IACAoB,EAAA2P,QAAA3P,EAAA4M,SAGA5M,EAAA2P,SAAAqF,EACA9U,EAAA0M,QAAA,GAEA1M,EAAA+Q,SAAA/Q,EAAAH,QAAA8D,GAAA,cAEA,EAEAoR,iBAAA,WACA,IAIAC,EAAAC,EAJAjV,EAAAC,KACAkL,EAAAnL,EAAAmL,KACA+J,EAAA/J,EAAA,GAAAgK,MAAAD,MACA7U,EAAAL,EAAAK,QAGA,GAAA8K,EAAA5F,KAAAsC,KAAAqN,EAyBA,OArBAF,EAAAlW,OAAAsW,iBAAAtW,OAAAsW,iBAAA/U,EAAA,GAAA,MAAA,EACA4U,EAAAI,WAAAL,GAAAA,EAAAE,QAAAnN,EAAA1H,GAEA2U,GAAAlN,EAAAwN,OACAL,GAAAI,WAAAL,EAAAO,aAAAF,WAAAL,EAAAQ,cAAAH,WAAAL,EAAAS,iBAAAJ,WAAAL,EAAAU,mBAIAR,EADA,eAAA/J,EAAAmI,IAAA,cACA2B,GAAAlN,EAAAoD,GAAAA,EAAA+J,SAEAD,EAGA9J,EAAAmI,IAAA,CACAqC,WAAAtV,EAAAiT,IAAA,eACA4B,MAAAlV,EAAAF,QAAAwP,UAAA,OAAA4F,EACAU,SAAAV,EACAW,WAAA7V,EAAAF,QAAAwP,UAAA,SAAA,WAEA/J,KAAAsC,EAAAqN,IAEA,CACA,EAEA1J,OAAA,WACA,IAAAxL,EAAAC,KACAJ,EAAAG,EAAAH,QACAiW,EAAAjW,EAAAiD,KAAA,QACAiT,EAAAD,EAAArX,EAAA,IAAAqX,GAAAjW,EAAAmW,QAAA,QAEAD,EAAA,KACA/V,EAAA6T,cAAA,WACAoC,YAAA,WACAjW,EAAAiB,MAAAjB,EAAAkJ,SACA,GACA,EAEAlJ,EAAA4T,MAAAmC,EAAAzV,GAAA,QAAAN,EAAA6T,eAEA,EAEAqC,gBAAA,WACA,MAAA,SAAAjW,KAAAH,QAAAoK,eAAAjK,KAAA+J,aAAAO,eAAAC,OACA,EAEAiB,OAAA,WACA,IAAAzL,EAAAC,KACAkL,EAAAlL,KAEAD,EAAAF,QAAA+B,YACA7B,EAAAF,QAAA4D,UACA1D,EAAAmL,KAAArI,KAAA,OAAA,eAGA9C,EAAAmL,KAAAgL,SAAA,4BAEAnW,EAAAmL,KAAAgL,SAAA,wBAGA,QAAAhL,EAAArL,QAAAoK,cAAAiB,EAAAnB,aAAAO,eAAAC,SAuCAW,EAAAf,MAAA,IAAArL,EAAAqX,MAAAjL,EAAAA,KAAAxL,EAAA,CAAA,EAAAwL,EAAArL,QAAAsK,MAAA,CACAiM,OAAAlL,EAAA9K,QACA8Q,KAAAhG,EAAAmL,aAAA7V,KAAA0K,GACApF,MAAAoF,EAAAoL,cAAA9V,KAAA0K,GACAiE,UAAAjE,EAAArL,QAAAsP,UACA7K,MAAAD,EAAAC,MAAA4G,EAAA9K,SACAmW,SAAArL,EAAArL,QAAAwP,UACAmH,WAAA,KACAxW,KAAAwN,uBAAA,EAEAiJ,SAAA,KACAzW,KAAAwN,uBAAA,KAIAtC,EAAAf,MAAAjJ,IAAA,OAAAgK,EAAAmD,WAAA7N,KAAA0K,MArDA1M,EAAAkY,SAAAC,MAAAxL,OAAAD,EAAAA,MACAA,EAAAf,MAAA,IAAArL,EAAA8X,YAAA1L,EAAAA,KAAA,CACA2L,UAAA,EACAC,qBAAA,EACAvG,eAAA1Q,GAIA,oKAAAqL,EAAAwB,MAAAxB,EAAAwB,MAAA9M,QAAAwM,OAAAlB,EAAArL,QAAA6M,OAAAxB,EAAArL,QAAAyM,aAAA,kBACApB,EAAArL,QAAAyM,cAAApB,EAAAwB,OAAAxB,EAAArL,QAAA6M,OAAA,qDAAAxB,EAAArL,QAAAyM,aAAA,WAAA,IACA,UACAzM,EAAAkX,YACA,sCACAnY,EAAAqI,KAAA+P,aAAA,yBAAApY,EAAAiE,KAAA,4CAAA,CAAAoU,KAAA,IAAAvG,SAAA,OAAA3C,KAAA,UACA,SACA,IACA,UACA/N,KAAAoR,mBAAA,wEAAA,IACA,SACA2F,aAAA,EACAG,iBAAA,EACA7M,WAAAa,EAAAlB,eAAAM,eAAAC,QACAJ,MAAAzK,EAAA,CAAA,EAAAwL,EAAArL,QAAAsK,MAAA,CACAiM,OAAAlL,EAAA9K,QACA8Q,KAAAhG,EAAAmL,aAAA7V,KAAA0K,GACApF,MAAAoF,EAAAoL,cAAA9V,KAAA0K,GACAiE,UAAAjE,EAAArL,QAAAsP,UACA7K,MAAAD,EAAAC,MAAA4G,EAAA9K,SACAmW,SAAArL,EAAArL,QAAAwP,YAEAmH,WAAA,KACAxW,KAAAwN,uBAAA,EAEAiJ,SAAA,KACAzW,KAAAwN,uBAAA,IAqBA,EAEA+D,cAAA,WACA,OAAAvR,KAAAH,QAAAqQ,gBAAAlQ,KAAA2L,SAAAuC,WAAA8E,WAAAxT,MACA,EAEAsL,aAAA,SAAAkE,GACAhP,KAAA+O,MACA/O,KAAA+O,KAAAoI,YAAA,aAAAnI,GAAA5C,KAAA4C,EAAAhP,KAAAH,QAAAyM,YAAA,GAEA,EAEA8K,cAAA,SAAAxW,GACA,IAAAyW,EAAArX,KAAAsX,OAAA1W,GAKA,OAJAyW,GAAA,IAAAA,IACAA,EAAAzW,GAGAyW,CACA,EAEApR,YAAA,SAAArF,GACA,IAAAI,EAAA,GACAuW,GAAA,EACAF,EAAArX,KAAAgB,QACAwW,EAAA,aAAAxX,KAAAH,QAAAuQ,QAYA,IAVAxP,GAAA,IAAAA,KACAA,EAAAmB,QACAnB,EAAA6W,OAAA7W,EAAAmB,SAGAf,EAAAhB,KAAAoX,cAAAxW,GAEA2W,EAAAF,EAAAK,QAAA1W,IAGAJ,EAAAE,QAAA,CAKA,GAJAtC,EAAAmZ,KAAA3X,KAAA4O,OAAA,SAAAwD,GACA,OAAAA,EAAAlQ,MAAAtB,EAAAgX,OACA,IAEApY,OACA,OAGA,IAAAqY,EAAA,IAAAtQ,EAAA3G,EAAAkX,UACAlX,EAAAgX,QAAAC,EAAA3V,IACAlC,KAAA4O,MAAAmJ,KAAAF,GAEA,IAAA7X,KAAA4O,MAAApP,SACAQ,KAAA+O,KAAA0F,OAEA+C,GACAxX,KAAAiP,cAAA8I,KAAAF,KAIA,IAAAN,IACAF,EAAAU,KAAA/W,GACAhB,KAAA6O,SAAAwI,GAEA,KAAA,CACA,IAAAW,EAAAhY,KAAA4O,MAAAhM,MAAA,SAAAwP,GACA,OAAAA,EAAAlQ,MAAAtB,EAAAgX,OACA,IAEAK,EAAAjY,KAAA4O,MAAA8I,QAAAM,GAEA,IAAA,IAAAC,EAIA,YADAjY,KAAAkY,uBAAAtX,GAFAZ,KAAA4O,MAAAuJ,OAAAF,EAAA,GAMA,IAAAjY,KAAA4O,MAAApP,SACAQ,KAAA+O,KAAAC,OACAwI,GACAxX,KAAAiP,cAAAkJ,OAAA,EAAA,KAGA,IAAAZ,IACAF,EAAAc,OAAAZ,EAAA,GACAvX,KAAA6O,SAAAwI,GAEA,CAEArX,KAAAkY,uBAAAtX,GACAZ,KAAAoY,uBAAApY,KAAAsJ,oBAAAtJ,KAAAoJ,iBACApJ,KAAA8C,QAAA2F,GAGAzI,KAAAH,QAAAuP,WAAApP,KAAAmK,MAAAoD,YACAvN,KAAA8F,QACA9F,KAAAI,QAAA0C,QAAA,UAGA9C,KAAAmK,MAAAkO,WACArY,KAAAiM,yBACAjM,KAAAsY,wBACA,EAEAA,uBAAA,WACA,GAAA,WAAAtY,KAAAJ,QAAA,GAAA2Y,QAAAtE,cAAA,CAIA,IAAAuE,EAAAxY,KAAA4O,MACA/O,EAAA,GACAe,EAAA,KACAI,EAAA,KAEA,GAAAwX,EAAAhZ,OACA,IAAA,IAAAyY,EAAA,EAAAA,EAAAO,EAAAhZ,OAAAyY,IACArX,EAAA4X,EAAAP,GAEAjX,EAAAhB,KAAAsX,OAAA1W,GACAf,GAAAG,KAAAyY,QAAAzX,EAAAhB,KAAA0Y,MAAA9X,IAAA,GAIAZ,KAAAJ,QAAAqH,KAAApH,EAhBA,CAiBA,EAEA4Y,QAAA,SAAAE,EAAAC,EAAA1S,GACA,IAAA2S,EAAA,UAsBA,OApBAF,IAAAla,KAGA,KAFAka,GAAA,IAEAjB,QAAA,OACAiB,EAAAA,EAAAG,QAAApQ,EAAA,WAGAmQ,GAAA,WAAAF,EAAA,KAGAzS,IACA2S,GAAA,aAGAA,GAAA,IAEAD,IAAAna,IACAoa,GAAAja,EAAAuI,WAAAyR,IAGAC,EAAA,WACA,EAEA1S,aAAA,SAAAvF,GACA,IAAAI,EAAA,GACAoL,EAAA,IAEAxL,GAAA,IAAAA,KACAA,EAAAmB,QACAnB,EAAA6W,OAAA7W,EAAAmB,SAEAqK,EAAApM,KAAA0Y,MAAA9X,IAAAA,EACAI,EAAAhB,KAAAoX,cAAAxW,IAGA,OAAAI,IACAA,EAAA,IAEAhB,KAAA6O,SAAA7N,GACAhB,KAAAqM,cAAAD,EAAAxL,GACAZ,KAAA+Y,UAAA/X,GAEAhB,KAAAoY,uBAAApY,KAAAsJ,oBACAtJ,KAAA8C,QAAA2F,GAEAzI,KAAAsJ,oBAAA,EAEAtJ,KAAAH,QAAAuP,WAAApP,KAAAmK,MAAAoD,YACAvN,KAAA8F,QACA9F,KAAAI,QAAA0C,QAAA,UAGA9C,KAAAmK,MAAAkO,WACArY,KAAAiM,wBACA,EAEA+M,YAAA,SAAAtY,GACAA,EAAAuY,kBACAjZ,KAAAI,QAAA0C,QAAA,SACA9C,KAAAkZ,oBACA,EAEAA,mBAAA,WACA,IAAAC,EAAAnZ,KAAA6I,WAAAuQ,cAEApZ,KAAA6O,SAAA,IACA7O,KAAAqZ,cACArZ,KAAAsZ,aACAtZ,KAAAmK,MAAAkO,WACArY,KAAAiM,yBACAjM,KAAAwN,wBAEA2L,GACAnZ,KAAA8C,QAAA2F,EAEA,EAEA6Q,WAAA,WACAtZ,KAAAH,QAAAyM,YACAtM,KAAA8K,cAAA,GAEA9K,KAAA+O,MACA/O,KAAA+O,KAAA9H,KAAA,GAGA,EAEAuD,eAAA,WACA,IAAAwD,EAAAhO,KAAAH,QAAA2Q,cAKAxC,EAHAA,EAGApP,EAAAoP,SAAAA,GAFA1I,GAAA4B,EAAAlH,KAAA0Y,MAAApT,IAKAtF,KAAAwQ,cAAAxC,CACA,EAEAuL,gBAAA,SAAAnN,EAAApL,GACA,IAAA6M,EAAA7N,KAAAH,QAAAgO,cACAjN,EAAA,CAAA,EAUA,OARAiN,GACA2L,EAAA5Y,EAAAiN,EAAA4L,MAAAzR,GAAAoE,GACAoN,EAAA5Y,EAAAZ,KAAAH,QAAA8J,eAAA8P,MAAAzR,GAAAhH,GACAJ,EAAA,IAAA2G,EAAA3G,IAEAA,EAAAwL,EAGAxL,CACA,EAEAyL,cAAA,SAAAD,EAAAxL,GACA,IAAA4P,EAAAxQ,KAAAwQ,cACAzB,EAAA/O,KAAA+O,KAEA,GAAA3C,IAAA3N,EACA,OAAAsQ,EAAA3C,OAGA2C,EAAA2K,YAAA,eAEA9Y,IAAApC,EAAAwO,cAAAZ,IAAAA,aAAA7E,KACA3G,EAAAwL,GAGAxL,IACAA,EAAAZ,KAAAuZ,gBAAAnN,EAAApM,KAAA+Y,cAUA,IACAhK,EAAA9H,KAAAuJ,EAAA5P,GACA,CAAA,MAAAF,GAEAqO,GACAA,EAAA9H,KAAA,GAEA,CACA,EAEAwD,WAAA,WACA,IAAA7K,EAAAI,KAAAJ,QACAC,EAAAG,KAAAH,QACA8Z,EAAA/a,EAAA+a,OACAC,EAAAha,EAAAiD,KAAAjE,EAAAiE,KAAA,eACAgX,EAAAja,EAAAiD,KAAAjE,EAAAiE,KAAA,gBAEAiX,EAAA,SAAAhY,GACA,GAAA8H,MAAAC,QAAA/H,GAAA,CACA,IAAAiY,EAAAjY,EAAAtC,OACAwa,EAAAxb,EAAAiL,IAAA3H,GAAA,SAAA4H,GACA,OAAA,SAAAuQ,GAAA,OAAAA,EAAAvQ,EAAA,CACA,IAEA,OAAA,SAAA9I,GACA,IAAAmB,EAAAnB,EAAA6W,OAEA,GAAA1V,GAAA,IAAAA,EAIA,OAAAiY,EAAAE,KAAAC,IAAApY,EAAAgY,EAAA,IAAAnZ,EACA,CACA,CACA,OAAA+Y,EAAA7X,EAEA,GAEAjC,EAAAgO,eAAA+L,IACA/Z,EAAAgO,cAAA+L,IAGA/Z,EAAA8J,gBAAAkQ,IACAha,EAAA8J,eAAAkQ,GAGAha,EAAAgO,cAAAhO,EAAAgO,eAAA,OACAhO,EAAA8J,eAAA9J,EAAA8J,gBAAA,QAEA3J,KAAA0Y,MAAAoB,EAAAja,EAAAgO,eACA7N,KAAAsX,OAAAwC,EAAAja,EAAA8J,eACA,EAEAoP,UAAA,SAAA/X,EAAAiX,GACA,OAAAjY,KAAAoa,eAAApZ,EAAAiX,EACA,EAEAmC,eAAA,SAAApZ,GACA,IAAApB,EAAAI,KAAAJ,QAAA,GAEA,GAAAoB,IAAAvC,EACA,OAAAmB,EAAAoB,MAEA,OAAAA,IACAA,EAAA,IAEApB,EAAAoB,MAAAA,CAEA,EAEAqY,YAAA,WACArZ,KAAAJ,QAAA,GACAoB,MAAA,EACA,EAEAmL,aAAA,WACA,IAAAkO,EAAAnT,EAAAlH,KAAAH,QAAA+P,SAAAE,OAEA9P,KAAAwT,SACAxT,KAAAwT,OAAAhV,EAAA,wDAAA6b,EAAA,KAAAzb,EAAAE,GAAAmY,KAAA,KAAA,WAAApU,KAAA,CACAoI,UAAA,KAIAjL,KAAAH,QAAAyP,YACAtP,KAAAwT,OAAA8G,YAAAta,KAAA+O,KAAAvL,UAEAxD,KAAAH,QAAAyP,aACAtP,KAAAwT,OAAA9H,QAGA,EAEAO,uBAAA,WACA,IAAAsO,EAAAva,KAAAJ,QAAAiD,KAAAoF,GACAoK,EAAArS,KAAAgB,UAAAhB,KAAAG,wBAAAH,KAAAgB,QAAAxB,OACAgb,EAAAxa,KAAAJ,QAAAsJ,OAAAlJ,KAAAJ,QAAAsJ,QAAAlJ,KAAAH,QAAAyM,YAEAiO,IAAAlI,IAAAmI,EAGAxa,KAAAya,aAFAza,KAAA0a,YAIA,EAEAA,WAAA,WACA1a,KAAAwT,QACAxT,KAAAwT,OAAAkG,YAAA/R,EAEA,EAEA8S,WAAA,WACAza,KAAAwT,QACAxT,KAAAwT,OAAA0C,SAAAvO,EAEA,EAEA0O,aAAA,SAAA3V,GACAV,KAAA8U,mBAEA9U,KAAA8C,QAAAyF,GACA7H,EAAAiF,kBAEA3F,KAAAI,QAAAyC,KAAA,iBAAA,GACA7C,KAAAgL,KAAAnI,KAAA,eAAA,GAEA,EAEAyT,cAAA,SAAA5V,GACAV,KAAA8C,QAAA0F,GACA9H,EAAAiF,kBAEA3F,KAAAI,QAAAyC,KAAA,iBAAA,GACA7C,KAAAgL,KAAAnI,KAAA,eAAA,GAEA,EAEAgJ,UAAA,WACA,IAAA9L,EAAAC,KAEA,QAAAD,EAAAF,QAAAoK,cAAAlK,EAAAF,QAAA6P,QACA3P,EAAAiL,KAAAqI,IAAA,aAAAtT,EAAAF,QAAA6P,QAEA3P,EAAAiL,KAAAnI,KAAA,KAAAjE,EAAAyV,QACAtU,EAAA4L,SAAA,IAAAvM,EAAAW,EAAAiL,KAAAtL,EAAA,CAAAqO,KAAAhO,EAAAF,QAAAkO,MAAAhO,EAAAF,QAAA8L,UAAA5L,GACAA,EAAAmO,WAAAnO,EAAA4L,SAAAuC,WAEAnO,EAAA4L,SAAAnL,KAAA,UAAA,SAAAE,GACAX,EAAA+C,QAAA,SAAApC,EACA,GACA,EAEAqC,mBAAA,SAAArC,GAKA,GAJAA,EAAArB,MAAAW,KAAA2a,OAAA3a,KAAA2a,MAAAnb,QACAkB,EAAAsC,OAAA2B,OAAAjE,EAAArB,MAGAW,KAAA8R,WAQA,OAPApR,EAAArB,OACAW,KAAA8R,YAAA,QAGA9R,KAAAG,wBACAH,KAAA4a,cAAAla,IASA,GAJAV,KAAA2L,WACA3L,KAAA2L,SAAAjL,EAAAsC,QAGAtC,EAAArB,KAOA,CACA,IAAAwb,EAAAna,EAAAsC,OAAApC,SAAAF,EAAArB,MACA,GAAAwb,EAAA,CACA,IAAAC,EAAAD,EAAAtb,SAAA+F,OACAtF,KAAA+a,kBAAAD,EACA,CACA,KAbA,CACA,IAAAE,EAAAta,EAAAsC,OAAAkL,WAAA5I,OAEAtF,KAAA+a,kBAAAC,GACAhb,KAAAoJ,kBACApJ,KAAAoJ,iBAAA,EAEA,CAOApJ,KAAA8C,QAAA,YAAApC,EACA,EAEAka,cAAA,SAAAla,GACA,IAAAc,EAAA,GACA,GAAAd,EAAArB,KAEA,CACA,IAAAwb,EAAAna,EAAAsC,OAAApC,SAAAF,EAAArB,MACAwb,IACArZ,EAAAqZ,EAAAtb,SAAA+F,OAEA,MANA9D,EAAAd,EAAAsC,OAAAkL,WAAA5I,OAQA,IAAA,IAAAhE,EAAA,EAAAA,EAAAE,EAAAhC,OAAA8B,IACAE,EAAAF,GAAA4E,WACAlG,KAAAib,eAAAzZ,EAAAF,GAAAtB,KAAAgB,UACAQ,EAAAF,GAAAT,IAAA,YAAA,EAGA,EAEAka,kBAAA,SAAAvZ,GACA,IAAAR,EAAAhB,KAAAgB,QAEA,GAAAQ,EAIA,IAAA,IAAAyW,EAAA,EAAAA,EAAAzW,EAAAhC,OAAAyY,IACAjY,KAAA6I,WAAAqS,iBAAA1Z,EAAAyW,GAAAjX,EAEA,EAEAkX,uBAAA,SAAAtX,GACAZ,KAAAH,QAAA4D,UAAAzD,KAAAyD,WACAzD,KAAAmb,iBAEAva,EAAAE,QACAd,KAAAob,iBAEApb,KAAAqb,mBAGA,EAEAD,eAAA,WACA,IAAAE,EAAAtb,KAAAyD,SAAAb,KAAA,eAEA5C,KAAAub,oBACAD,EAAAjW,KAAA,WAAA,GACAA,KAAA,iBAAA,GAEAiW,EAAAjW,KAAA,iBAAA,EAEA,EAEAgW,iBAAA,WACA,IAAAC,EAAAtb,KAAAyD,SAAAb,KAAA,eAEA5C,KAAAwb,sBACAF,EAAAjW,KAAA,WAAA,GACAA,KAAA,iBAAA,GAEAiW,EAAAjW,KAAA,iBAAA,EAEA,EAEAuG,cAAA,WACA,IAAA6P,EAAA,mIAEA7c,EAAAE,GAAAmY,KAAA,CAAAA,KAAA,SAAAyE,UAAA,iBAFA,gBAMA1b,KAAA2D,cACA3D,KAAA2D,YACA4P,IAAA7L,GACAlE,SACAkI,SAEA1L,KAAA2D,YAAA,MAGA3D,KAAAoR,qBACApR,KAAA2b,wBAEA3b,KAAA2D,YAAAnF,EAAA,+CACAqE,KAAA,CACAyJ,YAAAtM,KAAAJ,QAAAiD,KAAA,eACA+Y,MAAA5b,KAAAJ,QAAAiD,KAAA,SACAsR,KAAA,YACA,gBAAA,OACA,oBAAA,SAGAnU,KAAA2D,YAAAtD,GAAA,QAAAL,KAAA6b,cAAArb,KAAAR,OAEAA,KAAAiW,kBACAzX,EAAAid,GACA/G,SAAA1U,KAAAmK,MAAA/J,QAAAwC,KAAA,0BACAA,KAAA,cACAuI,OAAAnL,KAAA2D,aAEAnF,EAAAid,GACAK,aAAA9b,KAAAgL,MACApI,KAAA,cACAuI,OAAAnL,KAAA2D,aAGA,EAEAkY,cAAA,WACA7b,KAAA2D,aACA3D,KAAAqR,SAEA,EAEAsK,sBAAA,WACA3b,KAAAG,wBAAAH,KAAAH,QAAA8L,SAAA/J,YAAA5B,KAAAH,QAAA8L,SAAA/J,WAAAD,gBACA3B,KAAAH,QAAA8L,SAAA/J,WAAAD,eAAA,EAEA,EAEAoK,UAAA,WASA,GARA/L,KAAAyD,WACAzD,KAAAyD,SAAAb,KAAA,kCACA2Q,IAAA7L,GACA1H,KAAAyD,SAAAiI,SAEA1L,KAAAyD,SAAA,MAGAzD,KAAAG,wBAAAH,KAAAH,QAAA4D,SAAA,CACA,IAAA6X,EAAArU,EAAA8U,eAAArc,EAAA,CAAA,EAAAM,KAAAH,QAAA,CACA6M,MAAA,YACAiE,QAAA,YAEA3Q,KAAAyD,SAAAjF,EAAA,4BAAA8c,EAAA,UAAAQ,aAAA9b,KAAAgL,MACAhL,KAAAyD,SAAAb,KAAA,qBAAAqE,KAAArI,EAAAoP,SAAAhO,KAAAH,QAAAsQ,iBAAAvR,CAAA,CAAA+V,SAAA3U,QACAA,KAAAyD,SAAAb,KAAA,eACAvC,GAAA,SAAAqH,EAAA1H,KAAAgc,gBAAAxb,KAAAR,OACAK,GAAA,UAAAqH,EAAA1H,KAAAic,iBAAAzb,KAAAR,OACAA,KAAAkc,sBAAA,GACAlc,KAAAmc,wBAAA,GAEAnc,KAAAmb,iBAEAnb,KAAAwb,uBACAxb,KAAAob,gBAEA,CACA,EAEAY,gBAAA,WACA,IACAI,EADApc,KAAAyD,SAAAb,KAAA,eACAyC,KAAA,WAEArF,KAAAqc,gBAAAD,EACA,EAEAC,gBAAA,SAAAD,GACA,IAAAd,EAAAtb,KAAAyD,SAAAb,KAAA,eACA5C,KAAAsc,qBAAAF,GACAd,EAAAjW,KAAA,UAAA+W,GACApc,KAAAkc,sBAAA1c,QAAAQ,KAAAmc,wBAAA3c,OACA8b,EAAAjW,KAAA,iBAAA,GACArF,KAAAkc,sBAAA1c,OACA8b,EAAAjW,KAAA,iBAAA+W,GACApc,KAAAmc,wBAAA3c,OACA8b,EAAAjW,KAAA,gBAAA+W,GAEAd,EAAAjW,KAAA,iBAAA,GAEArF,KAAAkc,sBAAA,GACAlc,KAAAmc,wBAAA,EACA,EAEAF,iBAAA,SAAAvb,GACA,IAAAoD,EAAApD,EAAAqD,QAGA,GAFArD,EAAAsE,QAEAlB,IAAA/E,EAAAgG,IAAAjB,IAAA/E,EAAAyG,KAAA1B,IAAA/E,EAAA2G,IAIA,OAHA1F,KAAA8F,QACA9F,KAAAI,QAAA0C,QAAA,cACApC,EAAAiF,iBAIA7B,IAAA/E,EAAAgG,KACA/E,KAAA2D,YACA3D,KAAA2D,YAAAb,QAAA,SAEA9C,KAAAI,QAAA0C,QAAA,SAGApC,EAAAiF,kBAGA7B,IAAA/E,EAAA+F,OACA9E,KAAAgL,MAAAhL,KAAAgL,KAAAtH,GAAA,aACA1D,KAAAgL,KAAA6F,QAGAnQ,EAAAiF,kBAGA7B,IAAA/E,EAAAqG,WAAAyC,EAAAwN,MAAAxN,EAAA0U,QACAvc,KAAAwc,iBACA9b,EAAAiF,iBAEA,EAEA6W,eAAA,WACA,IAAAlB,EAAAtb,KAAAyD,SAAAb,KAAA,eACAwZ,EAAAd,EAAAjW,KAAA,WAEArF,KAAAqc,iBAAAD,GAEAd,EAAAxY,QAAA,QAEA,EAEA2Z,KAAA,SAAAjb,EAAAD,EAAA8D,GACA,IAAA,IAAA4S,EAAA,EAAAA,EAAAzW,EAAAhC,QACAQ,KAAAuB,GAAAC,EAAAyW,GAAA5S,GADA4S,IAIAjY,KAAA0c,kBAAAlb,EAAAyW,GAAA1W,EAAA8D,EAEA,EAEAsX,kBAAA,SAAAza,GACAlC,KAAAyc,KAAAzc,KAAAkO,WAAA5I,OAAA,wBAAApD,EACA,EAEA0a,sBAAA,SAAAxK,EAAAlQ,GACA,OAAA,IAAAkQ,EAAA5C,SAAA4C,EAAAwF,SAAA1V,IACAkQ,EAAAvR,IAAA,WAAA,IACA,EAGA,EAEAqT,kBAAA,SAAA9H,GACApM,KAAAyc,KAAAzc,KAAAkO,WAAA5I,OAAA,kBAAA8G,EACA,EAEAyQ,gBAAA,SAAAzK,EAAAhG,GACA,OAAA,IAAAgG,EAAA5C,SAAAxP,KAAA0Y,MAAAtG,KAAAhG,IACApM,KAAA2L,SAAA/F,OAAA5F,KAAA2L,SAAA1J,UAAAmQ,EAAAlQ,MACAlC,KAAAmG,aAAAiM,IACA,EAGA,EAEA0K,mBAAA,SAAA9b,GACAhB,KAAAyc,KAAAzc,KAAAkO,WAAA5I,OAAA,mBAAAtE,EACA,EAEA+b,iBAAA,SAAA3K,EAAApR,GACA,OAAA,IAAAoR,EAAA5C,UAAAxP,KAAAib,eAAA7I,EAAApR,KAEAhB,KAAA2L,SAAA/F,OAAA5F,KAAA2L,SAAA1J,UAAAmQ,EAAAlQ,OAEA,EAGA,EAEA8a,kBAAA,SAAAhc,GAEA,IADA,IAAAQ,EAAAxB,KAAA2L,SAAAsR,YACAhF,EAAA,EAAAA,EAAAjX,EAAAxB,OAAAyY,IACAjY,KAAAyc,KAAAjb,EAAA,wBAAAR,EAAAiX,GAEA,EAEAiF,sBAAA,SAAA9K,EAAApR,GACA,OAAA,IAAAoR,EAAA5C,UAAAxP,KAAAib,eAAA7I,EAAApR,KACAoR,EAAAvR,IAAA,WAAA,IACA,EAGA,EAEAoa,eAAA,SAAA7I,EAAApR,GACA,IACAmc,EADAC,EAAApd,KAAAsX,OAAAlF,GAGA,IAAApS,KAAAqJ,mBAAA+T,GAAA,CACA,GAAApd,KAAAqJ,mBAAArI,GACA,OAAA,EAGA,IAAAqc,EAAArd,KAAAsX,OAAAtW,GAEA,OAAAqc,EACAD,GAAAC,EAEAD,GAAApc,CAEA,CAGA,SADAmc,EAAAnd,KAAA0Y,MAAAtG,MAEApS,KAAA0Y,MAAA1X,GACAmc,GAAAnd,KAAA0Y,MAAA1X,GAEAmc,GAAAnc,EAKA,EAEAqI,mBAAA,SAAArI,GACA,OAAAA,IAAAvC,GAAA,OAAAuC,CACA,EAEAma,eAAA,WAOA,OANAnb,KAAAsd,iBAAA,GACAtd,KAAAub,qBAAA,EACAvb,KAAAwb,uBAAA,EAEAxb,KAAAyc,KAAAzc,KAAAkO,WAAA5I,OAAA,uBAEAtF,KAAAsd,gBACA,EAEAC,oBAAA,SAAAnL,GAYA,OAXApS,KAAAub,sBACAvb,KAAAub,oBAAAnJ,EAAAtR,SAGAd,KAAAwb,wBACAxb,KAAAwb,uBAAApJ,EAAAtR,SAGAsR,EAAAtR,SACAd,KAAAsd,iBAAAvF,KAAA3F,IAEA,CACA,EAEAsK,kBAAA,SAAAtK,EAAA7Q,EAAA8D,GACA,IACAyV,EAAA1I,EADAA,EAAAoL,kBAAApL,EAAAoL,iBAAAvL,OAAAG,EAAAoL,iBAAAvL,OAAA3M,KAAA,OACA8M,EAAA5Q,OAAA4Q,EAAA7S,SAEAub,GAIA9a,KAAAyc,KAAA3B,EAAAvZ,EAAA8D,EACA,EAEAiX,qBAAA,SAAAxb,GACAd,KAAAyc,KAAAzc,KAAAkO,WAAA5I,OAAA,qBAAAxE,EACA,EAEA2c,mBAAA,SAAArL,EAAAtR,GAUA,OATA,IAAAsR,EAAA5C,QACA4C,EAAAtR,QACAd,KAAAkc,sBAAAnE,KAAA3F,GAEApS,KAAAmc,wBAAApE,KAAA3F,GAGAA,EAAAvR,IAAA,UAAAC,IAEA,CACA,EAEAsQ,iBAAA,WACA,IAAAzS,EAAAqB,KAAAH,QAAAlB,OACA,OAAAA,GAAA,SAAAA,CACA,EAEAoS,UAAA,SAAAlR,GACA,IAAAE,EAAAC,KACAJ,EAAAG,EAAAH,QACAoR,EAAAnR,EAAAmR,QACAF,EAAAjR,EAAAiR,SACA1Q,EAAAL,EAAAK,QAAAsd,IAAA3d,EAAA4D,aAAA4P,IAAA7L,GACAiW,EAAA5d,EAAAK,QAAAmT,IAAAlL,GACAtI,EAAAI,wBACAJ,EAAA0T,QAAAF,IAAAjT,EAAAoH,GAEAoJ,GAAAE,EA0BAA,GACA5Q,EAAAwd,WAAAtV,GACAqV,EACAzH,SAAAhO,KAEA9H,EACAyC,KAAAyF,EAAAlI,EAAAkF,KAAAgD,IAEAqV,EACAjE,YAAAxR,GAEA9H,EACAC,GAAA,UAAAqH,EAAA3H,EAAA8d,gBAAArd,KAAAT,IACAM,GAAA,WAAAqH,EAAA3H,EAAA+d,iBAAAtd,KAAAT,MAtCAH,EAAAyF,KAAArG,GAAA,GAAAqG,KAAA4C,GAAA,GAEA0V,EACAjE,YAAAxR,GACA7H,GAAAgI,EAAAtI,EAAAge,cAEAhe,EAAAyT,OAAAnT,GAAA,QAAAqH,EAAA3H,EAAAiZ,YAAAxY,KAAAT,IACAK,EACAyC,KAAAyF,EAAAlI,EAAAkF,KAAAgD,IACAzF,KAAAsF,GAAA,GACA9H,GAAA,UAAAqH,EAAA3H,EAAA6D,SAAApD,KAAAT,IACAM,GAAA,UAAAqH,EAAA3H,EAAA8d,gBAAArd,KAAAT,IACAM,GAAA,WAAAqH,EAAA3H,EAAA+d,iBAAAtd,KAAAT,IAEAA,EAAAK,QAAAC,GAAAC,EAAAoH,EAAA3H,EAAAie,cAAAxd,KAAAT,IAEAC,KAAAG,yBACAJ,EAAA0T,QAAApT,GAAAC,EAAAoH,EAAA,cAAA,SAAAhH,GACAlC,EAAAkC,EAAAS,eAAA+U,SAAA9N,EACA,IAEArI,EAAA0T,QAAApT,GAAAC,EAAAoH,EAAA,iCAAA,SAAAhH,GACAX,EAAAke,gBAAAvd,EACA,MAkBAd,EAAAiD,KAAA7D,EAAAgS,GACAnO,KAAAoF,EAAA6I,GAEA1Q,EAAAyC,KAAAsF,EAAA6I,EACA,EAEA6M,gBAAA,WACA7d,KAAAI,QAAA8V,SAAA9N,GACApI,KAAAke,UAAA,CACA,EAEAJ,iBAAA,WACA,IAAA/d,EAAAC,KAEAA,KAAAG,wBACAH,KAAAyT,QAAA7Q,KAAAoF,EAAAI,GAAAsR,YAAAtR,GAEArI,EAAAme,WACAle,KAAAI,QAAAsZ,YAAAtR,GACArI,EAAAme,UAAA,EACAne,EAAAH,QAAAkD,QAAA,QAEA,EAEAqO,QAAA,SAAAD,GAGAlR,MAFAkR,EAAAA,IAAAzS,EAAAyS,GAAAlR,KAAAmK,MAAAoD,WAEAhF,EAAAC,IACA,EAEAwV,cAAA,SAAAtd,GACAA,EAAAiF,iBAEA3F,KAAAmK,MAAAuJ,OAAA,WAAA1T,KAAA+I,oBACA/I,KAAAme,SAAAne,KAAAI,QACAJ,KAAAke,UAAA,EACAle,KAAAmR,SACA,EAEA4M,aAAA,SAAArd,GACAlC,EAAAkC,EAAAS,eAAAgW,YAzxDA,UAyxDA,eAAAzW,EAAA0d,KACA,EAEApV,YAAA,WACAhJ,KAAA2D,YACA3D,KAAA2D,YAAAb,QAAA,SACA9C,KAAAyD,SACAzD,KAAAyD,SAAAb,KAAA,eAAAE,QAAA,SACA9C,KAAAgL,KAAAtH,GAAA,cACA1D,KAAAgL,KAAA,GAAA6F,MAAA,CAAAwN,eAAA,IACAre,KAAAse,4BAEA,EAEAA,0BAAA,WACA,GAAAzW,EAAAwN,MAAA,IAAAxN,EAAA0W,QAAA,CACA,IAAApU,EAAAnK,KAAAmK,MACAA,EAAAqU,eAAA,GACAxI,YAAA,WACA7L,EAAAqU,eAAA,EACA,GAAA,GACA,CACA,EAEA5a,SAAA,SAAAlD,GACA,IAEA+d,EACAC,EACA1a,EAAA2a,EAJA7a,EAAApD,EAAAqD,QACAiB,EAAAtE,EAAAsE,OAKA4Z,EAAA5e,KAAAmK,MAAAoD,UAUA,GARAvN,KAAA2D,cACA8a,EAAAze,KAAA2D,YAAA,KAAA6D,KAGAxH,KAAAI,UACAse,EAAA1e,KAAAI,QAAA,KAAAoH,KAGAkX,EAAA,CACA,GAAA5a,IAAA/E,EAAAyG,IAGA,OAFAxF,KAAAkZ,0BACAxY,EAAAiF,iBAIA,GAAA3F,KAAAG,uBAAA,CACA,GAAA2D,IAAA/E,EAAAyF,KAGA,OAFAxE,KAAA6e,qBACAne,EAAAiF,iBAIA,GAAA7B,IAAA/E,EAAAwF,MAGA,OAFAvE,KAAA8e,qBACApe,EAAAiF,iBAIA,GAAA7B,IAAA/E,EAAAkG,KAGA,OAFAjF,KAAA+e,sBACAre,EAAAiF,iBAIA,GAAA7B,IAAA/E,EAAAmG,IAGA,OAFAlF,KAAAgf,qBACAte,EAAAiF,iBAIA,GAAA7B,IAAA/E,EAAAkgB,OAOA,OANAjb,EAAAhE,KAAAyT,QAAA7Q,KAAAoF,EAAAI,GAAAjE,SACA3E,SACAmf,EAAA3e,KAAA4O,MAAA5K,EAAA1B,SACAtC,KAAAkf,WAAAP,SAEAje,EAAAiF,iBAIA,GAAA7B,IAAA/E,EAAAogB,UAaA,QAZAnb,EAAAhE,KAAAyT,QAAA7Q,KAAAoF,EAAAI,GAAAjE,SACA3E,SAIAwE,EAAAhE,KAAAgf,iBACAxf,UAJAmf,EAAA3e,KAAA4O,MAAA5K,EAAA1B,SACAtC,KAAAkf,WAAAP,SAQAje,EAAAiF,gBAGA,CACA,CAGA,OAAA8Y,IACA3a,IAAA/E,EAAAyG,KACAxF,KAAAof,eAGAtb,IAAA/E,EAAAgG,IAAAC,IACAhF,KAAAI,QAAA0C,QAAA,SACApC,EAAAiF,kBAGAkC,EAAAwN,MAAAxN,EAAA0W,QAAA,KACAza,IAAA/E,EAAAogB,WAAArb,IAAA/E,EAAAkgB,QACAjf,KAAAqR,WAIAvN,IAAA/E,EAAA2G,MAQAV,GAAAlB,IAAA/E,EAAAgG,IAAAjB,IAAA/E,EAAAyG,KAPAxF,KAAA8F,QACA9F,KAAAI,QAAA0C,QAAA,cACApC,EAAAiF,uBAYA7B,IAAA/E,EAAAoG,OAAAnF,KAAA4R,gBAAA5R,KAAA2D,aAAAib,EACAle,EAAAiF,kBAIA7B,IAAA/E,EAAAqG,UAAAqZ,IACAze,KAAAmR,SAAAyN,GACAle,EAAAiF,kBAGAX,GAAAlB,IAAA/E,EAAA+F,OAAA8Z,IACA5e,KAAAkR,OACAxQ,EAAAiF,kBAGA7B,IAAA/E,EAAA+F,MAAA8Z,IACA5e,KAAA2D,cAAA8a,EACAze,KAAA2D,YAAAb,QAAA,SACA9C,KAAAyD,UAAAzD,KAAAyD,SAAAC,GAAA,YACA1D,KAAAyD,SAAAb,KAAA,SAAAE,QAAA,SACA9C,KAAAgL,KAAAtH,GAAA,cACA1D,KAAAgL,KAAA,GAAA6F,MAAA,CAAAwN,eAAA,IACAre,KAAAse,6BAEA5d,EAAAiF,kBAGA7B,IAAA/E,EAAA2G,KAAAkZ,IACA5e,KAAA8F,QACA9F,KAAAI,QAAA0C,QAAA,SACApC,EAAAiF,mBAEA,EAEAkZ,cAAA,WACA,IAAA7a,EAAAhE,KAAAyT,QAAA7Q,KAAAoF,EAAAI,GACA,GAAApE,EAAAxE,OAAA,CACA,IAAA6f,EAAArf,KAAAoU,UAEApQ,EAAAG,QACAuV,YAAAtR,GACAwV,WAAA,MACAxa,KAAAuF,GACAuN,SAAA9N,GACAvF,KAAA,KAAAwc,GAEArf,KAAAI,QAAAyC,KAAA,wBAAAwc,EACA,MACArf,KAAAgf,eAEA,EAEAF,cAAA,WACA,IAAA9a,EAAAhE,KAAAyT,QAAA7Q,KAAAoF,EAAAI,GAEA,GAAApE,EAAAxE,OAAA,CACA,IAAA6f,EAAArf,KAAAoU,UAEApQ,EAAAG,QACAuV,YAAAtR,GACAwV,WAAA,MACA0B,KAAA3W,GACAuN,SAAA9N,GACAvF,KAAA,KAAAwc,GAEArf,KAAAI,QAAAyC,KAAA,wBAAAwc,EACA,MACArf,KAAA+e,gBAEA,EAEAA,eAAA,WACA,IAAAM,EAAArf,KAAAoU,UAEApU,KAAAuf,oBAEA,IAAAC,EAAAxf,KAAAyT,QAAAlU,SAAAoJ,GAAAxE,QACA+R,SAAA9N,GACAvF,KAAA,KAAAwc,GAIA,OAFArf,KAAAI,QAAAyC,KAAA,wBAAAwc,GAEAG,CACA,EAEAR,cAAA,WACA,IAAAK,EAAArf,KAAAoU,UAEApU,KAAAuf,oBAEA,IAAAE,EAAAzf,KAAAyT,QAAAlU,SAAAoJ,GAAArF,OACA4S,SAAA9N,GACAvF,KAAA,KAAAwc,GAIA,OAFArf,KAAAI,QAAAyC,KAAA,wBAAAwc,GAEAI,CACA,EAEAF,kBAAA,WACAvf,KAAAyT,QAAA7Q,KAAAoF,EAAAI,GAAAsR,YAAAtR,GAAAwV,WAAA,KACA,EAEAvM,QAAA,WACA,IAAAtR,EAAAC,KACA2R,aAAA5R,EAAA6R,gBAEA7R,EAAA6R,eAAAoE,YAAA,WACA,IAAAhV,EAAAjB,EAAA4D,YAAAuF,MAEAnJ,EAAA4a,QAAA3Z,IACAjB,EAAA4a,MAAA3Z,EACAjB,EAAA0R,OAAAzQ,IAGAjB,EAAA6R,eAAA,IACA,GAAA7R,EAAAF,QAAA0P,MACA,EAEA6P,aAAA,WACApf,KAAA2D,YAAAuF,MAAA1J,SACAQ,KAAA2D,YAAAuF,IAAA,IACAlJ,KAAA2a,MAAA,GACA3a,KAAA8R,YAAA,EACA9R,KAAA2L,SAAAuC,WAAAvP,OAAA,CAAA,GAEA,EAEAsf,gBAAA,SAAAvd,GACAA,EAAAuY,kBACA,IAAA0F,EAAA3e,KAAA4O,MAAApQ,EAAAkC,EAAAS,cAAA4U,QAAApN,IAAArG,SACAtC,KAAAkf,WAAAP,EACA,EAEAO,WAAA,SAAAP,GACA,GAAAA,EAAA,CAIA,IAAAzc,EAAAyc,EAAAzc,IACAlC,KAAA2c,kBAAAza,EAHA,CAIA,IAGA,SAAAsX,EAAA7E,EAAA+K,EAAA1e,GAKA,IAJA,IAEAc,EAFAmW,EAAA,EACA0H,EAAAD,EAAAlgB,OAAA,EAGAyY,EAAA0H,IAAA1H,GACAnW,EAAA4d,EAAAzH,MAEAtD,IACAA,EAAA7S,GAAA,CAAA,GAGA6S,EAAAA,EAAA7S,GAGA6S,EAAA+K,EAAAC,IAAA3e,CACA,CAEAlC,EAAA8gB,OAAAhX,GAEAhK,EAAAihB,cAAAC,eAAA,eAAA,aAEAlhB,EAAAihB,cAAAE,eAAA,eAAA,CAAA,CACA1a,KAAA,UACA2M,OAAApT,EAAAihB,cAAAG,cAAAC,OAAA,CAAA,CAAA,OAAA,aAGArhB,EAAAihB,cAAAC,eAAA,kBAAA,YAEAlhB,EAAAihB,cAAAE,eAAA,kBAAA,CAAA,CACA1a,KAAA,UACA2M,OAAApT,EAAAihB,cAAAG,cAAAC,OAAA,CAAA,CAAA,OAAA,aAGA,IAAAxR,EAAA7P,EAAAshB,MAAAxgB,OAAA,CACAC,KAAA,SAAAwgB,GACAngB,KAAAoG,cAAA+Z,CACA,EAEAvV,aAAA,WACA5K,KAAAogB,WACApgB,KAAAqgB,OACA,EAEA9T,WAAA,SAAAjH,GACAtF,KAAAoG,cAEAD,aAAAb,EACA,EAEA8a,SAAA,WACA,IAGAhgB,EAHAN,EAAAE,KAAAoG,cACAxG,EAAAE,EAAAF,QACA0gB,EAAA1gB,EAAA,IAGAQ,EAAAR,EAAA4D,UAEAE,GAAA,0BACAtD,EAAAR,EAAA0O,KAAA,YAAA9K,UACA,GAAA0R,MAAAqL,QAAAD,EAAApL,MAAAqL,QACAngB,EAAA,GAAAwb,MAAA0E,EAAA1E,OAGA9b,EAAAqe,SAAAre,EAAAM,QAAAA,EACA8V,SAAA,2BACAA,SAAAoK,EAAAE,WACA9G,YAAA,0BACAA,YAAA,aACArG,IAAA,UAAA,IACAxQ,KAAA,CACA4d,UAAA7gB,EAAAiD,KAAA,aACA6d,aAAA,OAGA9gB,EAAA6U,OAAAmJ,WAAA,YACA,EAEAyC,MAAA,WACA,IAGAtR,EAHAjP,EAAAE,KAAAoG,cACAhG,EAAAN,EAAAM,QACAugB,EAAA,2BAGA5R,EAAA3O,EAAAwC,KAAA+d,IAEA,KACAvgB,EAAA+K,OAAA,gGACAlE,EAAA+P,aAAA,+FAAAtX,EAAA,CAAA,EAAAI,EAAAD,QAAA,CACAoX,KAAA,iBACA2J,MAAA,OACAjQ,QAAA,WAEAxF,OAAArL,EAAAF,SAEAmP,EAAA3O,EAAAwC,KAAA+d,IAGA7gB,EAAAiP,KAAAA,EACAjP,EAAA+gB,OAAAzgB,EAAAwC,KAAA,mBACA9C,EAAAghB,WAAAhhB,EAAA+gB,OAAAje,KAAA,sBACA,EAEAkR,UAAA,SAAA9S,GACA,IACAqW,EADAvX,EAAAE,KAAAoG,cAGA,OAAApF,IAAAvC,GAAA,OAAAuC,GAEAA,EAAA,iBADAqW,EAAAvX,EAAAqJ,QAAAW,QAAA,IACAuN,EAAAvX,EAAAiZ,aAAA1B,KACA5Y,GAAA,OAAAuC,EAAA,GAAAA,GAEAlB,EAAAwJ,oBAAA,EACA,IAAAtI,EAAAxB,QACAM,EAAAoZ,0BACApZ,EAAAwJ,oBAAA,KAIAxJ,EAAAgd,mBAAA9b,GACAlB,EAAAmM,8BACAnM,EAAA0N,yBACA,EAEA4L,YAAA,WACA,IAAAtZ,EAAAE,KAAAoG,cACA2a,EAAAjhB,EAAA6L,SAAA/F,SACAob,EAAAlhB,EAAAqJ,QAAA3J,OACAyhB,GAAA,EAQA,OAPAnhB,EAAA6L,SAAA/K,SAAAmgB,IACAjhB,EAAA6L,SAAA/K,SAAAmgB,GAAAlgB,IAAA,YAAA,GACAogB,GAAA,GACAD,EAAA,IACAC,GAAA,KAGAnhB,EAAAwJ,qBAAA2X,EAKA,EAEA/F,iBAAA,SAAAgG,EAAAlgB,GACA,IAAAlB,EAAAE,KAAAoG,cAEAtG,EAAAuJ,mBAAArI,IAAA,KAAAA,GASAA,GAAAkgB,EAAAhb,UACApG,EAAA6L,SAAA/F,OAAA9F,EAAA6L,SAAA1J,UAAAif,EAAAhf,MATApC,EAAAmb,eAAAiG,EAAAlgB,IACAlB,EAAAsY,uBAAA,EACA8I,EAAArgB,IAAA,YAAA,GACAf,EAAAsY,uBAAA,GACA8I,EAAAhb,UACApG,EAAA6L,SAAA/F,OAAA9F,EAAA6L,SAAA1J,UAAAif,EAAAhf,KAMA,IAGAsM,EAAA5P,EAAAshB,MAAAxgB,OAAA,CACAC,KAAA,SAAAwgB,GACAngB,KAAAoG,cAAA+Z,CACA,EAEAvV,aAAA,WACA,IAAA9K,EAAAE,KAAAoG,cAEApG,KAAAmhB,eACArhB,EAAAF,QAAAiD,KAAA,WAAA,YAAA4R,OACAzU,KAAAogB,WACAtgB,EAAA8O,MAAA,IAAAtH,EAAA,IACAxH,EAAAmP,cAAA,IAAA3H,EAAA,IACAtH,KAAAohB,WACAthB,EAAAiP,KAAAvQ,EAAA,iGAAAkW,SAAA5U,EAAAM,SAAAwC,KAAA,sBACA,EAEA2J,WAAA,SAAAjH,EAAAtE,GACA,IAAAlB,EAAAE,KAAAoG,cACAib,EAAArgB,GAAAlB,EAAAD,QAAAmB,MAEA4I,MAAAC,QAAAvE,IAAAA,aAAA1G,EAAA0G,KAAAgC,kBACAhC,EAAA,CAAAA,KAGA9G,EAAAwO,cAAA1H,EAAA,KAAAA,EAAA,aAAA1G,EAAA0G,KAAAiC,mBAAAzH,EAAAD,QAAA8J,kBACA7J,EAAAoO,WAAA5I,KAAAA,GAEAxF,EAAAkB,MAAAqgB,GAEA,EAEAF,aAAA,WACA,IAAArhB,EAAAE,KAAAoG,cACAvG,EAAAC,EAAAD,QACAyhB,EAAAzhB,EAAA2Q,cACAgH,EAAA,aAAA3X,EAAAuQ,QACAP,EAAA3I,EAAArH,EAAA+P,SAAAC,WAEAyR,EAAAA,EAAA1iB,EAAAoP,SAAAsT,GAAAxhB,EAAA0Q,cAEA1Q,EAAA0Q,cAAA,SAAAlL,GACA,OAAA2B,EAAAsa,WAAA,kBACA,IAAAjc,EAAAkK,QAAA,aAAA,IAAA,MACA,IAAAlK,EAAAkK,QAAA,uBAAA,IAFA,WAIAhR,EAAAkB,OAAA,CAAA,EAAAG,EAAA,CACA6Q,SAAA,QACA8Q,WAAA,OACA7Q,QAAA,SACA9N,KAAA,CACA6d,aAAA,KACA,oBAAA,eACAvM,KAAA,UAEA/H,KAAAoL,EAAA8J,EAAAhc,GAAA,8FACAuK,EAAA,UACA4R,UAAAjK,EACAkK,WAAA,WACAC,cAAA,CACAjB,aAAA,KACA,eAAA,EACA,aAAA5gB,EAAAD,QAAA+P,SAAAG,UACA6L,MAAA9b,EAAAD,QAAA+P,SAAAG,aAGA,CACA,EAEAqQ,SAAA,WACA,IAAAtgB,EAAAE,KAAAoG,cACAxG,EAAAE,EAAAF,QACAQ,EAAAR,EAAA4D,OAAA,sBAEApD,EAAA,MACAA,EAAAR,EAAA0O,KAAA,gEAAA9K,UACA,GAAA0R,MAAAqL,QAAA3gB,EAAA,GAAAsV,MAAAqL,QACAngB,EAAA,GAAAwb,MAAAhc,EAAA,GAAAgc,OAGA9b,EAAAM,QAAAA,EAAA8V,SAAAtW,EAAA,GAAA4gB,WAAAnN,IAAA,UAAA,GACA,EAEA+N,SAAA,WACA,IAAAthB,EAAAE,KAAAoG,cACAqN,EAAA3T,EAAAM,QAAAb,SAAA,sBAEA,IAAAkU,EAAA,GAAA,CACA,IACAmO,EADA,aAAA9hB,EAAAD,QAAAuQ,QACA,OAAA,cAEAqD,EAAAjV,EAAAyI,EAAA4a,eAAA,qHAAAD,EAAA,OAAApjB,EAAAkB,OAAA,CAAA8G,WAAA,QAAA1G,EAAAD,WAAA6U,SAAA5U,EAAAM,QACA,CAEAN,EAAA2T,QAAAA,EACA3T,EAAA2T,QAAA5Q,KAAA,KAAAjE,EAAAyV,OAAA,YACAvU,EAAAM,QAAAyC,KAAA,gBAAA/C,EAAA2T,QAAA5Q,KAAA,OACA,IAAAif,EAAAljB,EAAAmjB,WAAA,CACAC,YAAAliB,EAAAmP,cACAgT,KAAAniB,EAAA8O,MACA0S,YAAAxhB,EAAA0Q,gBAEA5R,EAAA4B,KAAAV,EAAA2T,QAAAqO,GACAhiB,EAAA2T,QAAA5Q,KAAA,aAAA,EACA,EAEAqf,oBAAA,WACA,IAAAniB,EAAAC,KACAD,EAAA0T,SACAxM,EAAA4a,eAAA9hB,EAAA0T,QAAAjV,EAAAkB,OAAA,CAAA8G,WAAA,IAAAzG,EAAA0T,QAAAjS,QAAAhC,OAAA,OAAA,YAAAO,EAAAF,SAEA,EAEAiU,UAAA,SAAA9S,GACA,IACAlB,EAAAE,KAAAoG,cACA+b,EAAAriB,EAAAqJ,QACA,GAAAnI,IAAAvC,GAAA,OAAAuC,EACA,OAAAlB,EAAAqJ,QAAAW,QAGAhK,EAAA+O,SAAA7N,GACAlB,EAAAwJ,oBAAA,EACAtI,EAAAxB,QACAQ,KAAAoiB,cAAAD,EAAAnhB,GAEAlB,EAAAkd,kBAAAhc,IAEAlB,EAAAoZ,qBAGApZ,EAAAwJ,oBAAA,EACAxJ,EAAAmM,yBAlBAjM,KAmBAkiB,sBACApiB,EAAA0N,uBACA,EAEA4U,cAAA,SAAAD,EAAAnhB,GAIA,IAHA,IAAAlB,EAAAE,KAAAoG,cACAic,EAAAriB,KAAAsiB,cAAAH,EAAAnhB,GAEAiX,EAAA,EAAAA,EAAAoK,EAAA7iB,OAAAyY,IACA,IAAA,IAAAsK,EAAA,EAAAA,EAAAziB,EAAA8O,MAAApP,OAAA+iB,IACAziB,EAAAmb,eAAAnb,EAAA8O,MAAA2T,GAAAF,EAAApK,KACAnY,EAAA6c,kBAAA7c,EAAA8O,MAAA2T,GAAArgB,IAIA,EAEAogB,cAAA,SAAAH,EAAAnhB,GAGA,IAFA,IAAAqhB,EAAA,GAEApK,EAAA,EAAAA,EAAAkK,EAAA3iB,OAAAyY,KACA,IAAAjX,EAAA0W,QAAAyK,EAAAlK,KACAoK,EAAAtK,KAAAoK,EAAAlK,IAIA,OAAAoK,CACA,EAEAjJ,YAAA,WAIA,IAHA,IAAAtZ,EAAAE,KAAAoG,cACAoc,EAAA1iB,EAAA8O,MAAA9E,QAEAmO,EAAA,EAAAA,EAAAuK,EAAAhjB,OAAAyY,IAAA,CACA,IAAA/V,EAAAsgB,EAAAvK,GAAA/V,IACApC,EAAAsY,uBAAA,EACAtY,EAAA6c,kBAAAza,EACA,CAEA,SAAAsgB,EAAAhjB,SACAM,EAAAsY,uBAAA,EACAtY,EAAAwJ,oBAMA,EAEA4R,iBAAA,SAAAgG,EAAAlgB,GACA,IAAAlB,EAAAE,KAAAoG,cAEAtG,EAAAsJ,iBAAA8X,EAAApgB,QACAhB,EAAAmG,YAAAib,IAIAlgB,EAAAxB,SAAAQ,KAAA2O,mBACA,MAAA,IAAA3N,EAAA0W,QAAA5X,EAAAsX,cAAA8J,KAAAlgB,EAAA0W,QAAAwJ,KACAlhB,KAAAyiB,SAAA3iB,EAAAsX,cAAA8J,MACAA,EAAApgB,QACAhB,EAAAmG,YAAAib,IAEAphB,EAAAsY,uBAAA,EACA8I,EAAArgB,IAAA,WAAA,GACAf,EAAAsY,uBAAA,GAGA,EAEAqK,SAAA,SAAAC,GACA,IAAA5iB,EAAAE,KAAAoG,cAEA,OAAAtG,EAAA8O,MAAAhM,MAAA,SAAAwP,GACA,OAAAtS,EAAAmb,eAAA7I,EAAAsQ,EACA,GACA,IAGA9jB,EAAAE,GAAA8J,aAAA6F,gBAAAA,EACA7P,EAAAE,GAAA8J,aAAA4F,kBAAAA,CAEA,CA97EA,CA87EA3P,OAAAD,MAAAyH,QACA,IAAAsc,QAAA/jB,aAEA+jB","file":"kendo.dropdowntree.js","sourcesContent":["import './kendo.treeview.js';\nimport './kendo.popup.js';\nimport './kendo.actionsheet.js';\nimport './kendo.binder.js';\nimport './kendo.html.chip.js';\nimport './kendo.html.chiplist.js';\nimport './kendo.html.button.js';\nimport './kendo.html.input.js';\nimport './kendo.label.js';\nimport './kendo.icons.js';\n\n(function($, undefined$1) {\n\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        keys = kendo.keys,\n        DISABLED = \"k-disabled\",\n        SELECT = \"select\",\n        CHECKED = \"checked\",\n        DATABOUND = \"dataBound\",\n        CLICK = \"click\",\n        NS = \".kendoTreeView\",\n        INDETERMINATE = \"indeterminate\",\n        NAVIGATE = \"navigate\",\n        subGroup,\n        TreeView = ui.TreeView;\n\n        function contentChild(filter) {\n            return function(node) {\n                var result = node.children(\".k-animation-container\");\n\n                if (!result.length) {\n                    result = node;\n                }\n\n                return result.children(filter);\n            };\n        }\n\n        subGroup = contentChild(\".k-treeview-group\");\n\n    var Tree = TreeView.extend({\n        init: function(element, options, dropdowntree) {\n            var that = this;\n\n            that.dropdowntree = dropdowntree;\n\n            TreeView.fn.init.call(that, element, options);\n            if (that.dropdowntree._isMultipleSelection()) {\n                that.wrapper.on(CLICK + NS, '.k-treeview-leaf.k-selected', that._clickSelectedItem.bind(that));\n            }\n        },\n\n        _checkOnSelect: function(e) {\n            if (!e.isDefaultPrevented()) {\n                var dataItem = this.dataItem(e.node);\n\n                dataItem.set(\"checked\", !dataItem.checked);\n            }\n        },\n\n        _setCheckedValue: function(node, value) {\n            node.set(CHECKED, value);\n        },\n\n        _click: function(e) {\n            var that = this;\n\n            if (that.dropdowntree._isMultipleSelection()) {\n                that.one(\"select\", that._checkOnSelect);\n            }\n            TreeView.fn._click.call(that, e);\n        },\n\n        _clickSelectedItem: function(e) {\n            var that = this,\n            node = $(e.currentTarget);\n\n            that.one(\"select\", that._checkOnSelect);\n            if (!that._trigger(SELECT, node)) {\n                that.dataItem(node).set(\"selected\", false);\n            }\n        },\n\n        defaultrefresh: function(e) {\n            var that = this;\n            var node = e.node;\n            var action = e.action;\n            var items = e.items;\n            var parentNode = this.wrapper;\n            var options = this.options;\n            var loadOnDemand = options.loadOnDemand;\n            var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n            var i;\n\n            if (this._skip) {\n                return;\n            }\n\n            if (e.field) {\n                if (!items[0] || !items[0].level) {\n                    return;\n                }\n\n                return this._updateNodes(items, e.field);\n            }\n\n            if (node) {\n                parentNode = this.findByUid(node.uid);\n                this._progress(parentNode, false);\n            }\n\n            if (checkChildren && action != \"remove\") {\n                var bubble = false;\n\n                for (i = 0; i < items.length; i++) {\n                    if (\"checked\" in items[i]) {\n                        bubble = true;\n                        break;\n                    }\n                }\n\n                if (!bubble && node && node.checked) {\n                    for (i = 0; i < items.length; i++) {\n                        items[i].checked = true;\n                    }\n                }\n            }\n\n            if (action == \"add\") {\n                this._appendItems(e.index, items, parentNode);\n            } else if (action == \"remove\") {\n                this._remove(this.findByUid(items[0].uid), false);\n            } else if (action == \"itemchange\") {\n                this._updateNodes(items);\n            } else if (action == \"itemloaded\") {\n                this._refreshChildren(parentNode, items, e.index);\n            } else {\n                this._refreshRoot(items);\n            }\n\n            if (action != \"remove\") {\n                for (i = 0; i < items.length; i++) {\n                    if (!loadOnDemand || items[i].expanded) {\n                        items[i].load();\n                    }\n                }\n            }\n\n            that.wrapper.find(\">ul\").attr(\"role\", \"tree\");\n\n            this.trigger(DATABOUND, { node: node ? parentNode : undefined$1 });\n            this.dropdowntree._treeViewDataBound({ node: node ? parentNode : undefined$1, sender: this });\n            if (this.options.checkboxes.checkChildren) {\n                this.updateIndeterminate();\n            }\n        },\n\n        _previousVisible: function(node) {\n            var that = this,\n                lastChild,\n                result;\n\n            if (!node.length || node.prev().length) {\n                if (node.length) {\n                    result = node.prev();\n                } else {\n                    result = that.root.children().last();\n                }\n\n                while (that._expanded(result)) {\n                    lastChild = subGroup(result).children().last();\n\n                    if (!lastChild.length) {\n                        break;\n                    }\n\n                    result = lastChild;\n                }\n            } else {\n                result = that.parent(node) || node;\n\n                if (!result.length) {\n                    if (that.dropdowntree.checkAll && that.dropdowntree.checkAll.is(\":visible\")) {\n                        that.dropdowntree.checkAll.find(\".k-checkbox\").trigger(\"focus\");\n                    } else if (that.dropdowntree.filterInput) {\n                        that.dropdowntree.filterInput.trigger(\"focus\");\n                    } else {\n                        that.dropdowntree.wrapper.trigger(\"focus\");\n                    }\n                }\n            }\n\n            return result;\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                target,\n                focused = that.current(),\n                expanded = that._expanded(focused),\n                checkbox = focused.find(\".k-checkbox-wrap\").first().find(\":checkbox\"),\n                rtl = kendo.support.isRtl(that.element);\n\n            if (e.target != e.currentTarget) {\n                return;\n            }\n\n            if ((!rtl && key == keys.RIGHT) || (rtl && key == keys.LEFT)) {\n                if (expanded) {\n                    target = that._nextVisible(focused);\n                } else if (!focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                    that.expand(focused);\n                }\n            } else if ((!rtl && key == keys.LEFT) || (rtl && key == keys.RIGHT)) {\n                if (expanded && !focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                    that.collapse(focused);\n                } else {\n                    target = that.parent(focused);\n\n                    if (!that._enabled(target)) {\n                        target = undefined$1;\n                    }\n                }\n            } else if (key == keys.DOWN) {\n                target = that._nextVisible(focused);\n            } else if (key == keys.UP && !e.altKey) {\n                target = that._previousVisible(focused);\n            } else if (key == keys.HOME) {\n                target = that._nextVisible($());\n            } else if (key == keys.END) {\n                target = that._previousVisible($());\n            } else if (key == keys.ENTER && !focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                if (!focused.find(\".k-treeview-leaf\").first().hasClass(\"k-selected\")) {\n                    if (!that._trigger(SELECT, focused)) {\n                        that.select(focused);\n                    }\n                }\n            } else if (key == keys.SPACEBAR && checkbox.length && !focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                checkbox.prop(CHECKED, !checkbox.prop(CHECKED))\n                    .data(INDETERMINATE, false)\n                    .prop(INDETERMINATE, false);\n\n                that._checkboxChange({ target: checkbox });\n\n                target = focused;\n            } else if ((e.altKey && key === keys.UP) || key === keys.ESC) {\n                that._closePopup();\n            } else if ( key === keys.TAB) {\n                e.preventDefault();\n                that._closePopup();\n            }\n\n            if (target) {\n                e.preventDefault();\n\n                if (focused[0] != target[0]) {\n                    that._trigger(NAVIGATE, target);\n                    that.current(target);\n                    that.scrollTo(target);\n                }\n            }\n        },\n\n        _closePopup: function() {\n            this.dropdowntree.close();\n            this.dropdowntree.wrapper.trigger(\"focus\");\n        },\n\n        refresh: function(e) {\n            this.defaultrefresh(e);\n\n            if (this.dropdowntree.options.skipUpdateOnBind) {\n                return;\n            }\n\n            if (e.action === \"itemchange\") {\n                if (this.dropdowntree._isMultipleSelection()) {\n                    if (e.field === \"checked\") {\n                        this.dropdowntree._checkValue(e.items[0]);\n                    }\n                } else {\n                    if (e.field !== \"checked\" && e.field !== \"expanded\" && e.items[0].selected) {\n                        this.dropdowntree._selectValue(e.items[0]);\n                    }\n                }\n            } else {\n                this.dropdowntree.refresh(e);\n            }\n        }\n\n    });\n\n    kendo.ui._dropdowntree = Tree;\n\n})(window.kendo.jQuery);\n\nlet $ = kendo.jQuery;\n\nfunction valueMapperOptions(options, value, callback) {\n    return {\n        value: (options.selectable === \"multiple\" || options.checkboxes) ? value : value[0],\n        success: function(response) {\n            callback(response);\n        }\n    };\n}\n\nvar __meta__ = {\n    id: \"dropdowntree\",\n    name: \"DropDownTree\",\n    category: \"web\",\n    description: \"The DropDownTree widget displays a hierarchy of items and allows the selection of single or multiple items.\",\n    depends: [ \"treeview\", \"popup\", \"binder\", \"html.chip\", \"html.chiplist\", \"html.button\", \"html.input\", \"label\", \"icons\", \"actionsheet\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        html = kendo.html,\n        encode = kendo.htmlEncode,\n        mediaQuery = kendo.mediaQuery,\n        Widget = ui.Widget,\n        TreeView = ui._dropdowntree,\n        ObservableArray = kendo.data.ObservableArray,\n        ObservableObject = kendo.data.ObservableObject,\n        extend = $.extend,\n        activeElement = kendo._activeElement,\n        ns = \".kendoDropDownTree\",\n        keys = kendo.keys,\n        support = kendo.support,\n        HIDDENCLASS = \"k-hidden\",\n        WIDTH = \"width\",\n        browser = support.browser,\n        outerWidth = kendo._outerWidth,\n        DOT = \".\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        STATEDISABLED = \"k-disabled\",\n        ARIA_DISABLED = \"aria-disabled\",\n        HOVER = \"k-hover\",\n        FOCUSED = \"k-focus\",\n        HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        TABINDEX = \"tabindex\",\n        CLICK = \"click\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CHANGE = \"change\",\n        quotRegExp = /\"/g,\n\n        CHIP = \".k-chip\";\n\n    var DropDownTree = kendo.ui.Widget.extend( {\n        init: function(element, options) {\n            var that = this;\n            this.ns = ns;\n\n            kendo.ui.Widget.fn.init.call(this, element, options);\n            this._selection = this._getSelection();\n            this._focusInputHandler = this._focusInput.bind(this);\n            this._initial = this.element.val();\n\n            this._values = [];\n\n            var value = this.options.value;\n\n            if (value === null || !value.length) {\n                this._noInitialValue = true;\n            }\n\n            if (!this._isNullorUndefined(value)) {\n                this._valueMethodCalled = true;\n                value = this._isArrayOfObjects(value) && that.options.autoBind ? value.map(x=>x[that.options.dataValueField]) : value;\n                this._values = Array.isArray(value) ? value.slice(0) : [value];\n            }\n\n            that.bigScreenMQL = mediaQuery(\"large\");\n            that.smallScreenMQL = mediaQuery(\"small\");\n            if (that.options.adaptiveMode == \"auto\") {\n                that.smallScreenMQL.onChange(function() {\n                    if (that.popup && kendo.isFunction(that.popup.fullscreen)) {\n                        that.popup.fullscreen(that.smallScreenMQL.mediaQueryList.matches);\n                    }\n                });\n            }\n\n            this._inputTemplate();\n\n            this._accessors();\n            this._setTreeViewOptions(this.options);\n            this._dataSource();\n            this._selection._initWrapper();\n            this._applyCssClasses();\n            this._placeholder(true);\n            this._tabindex();\n            this.wrapper.data(TABINDEX, this.wrapper.attr(TABINDEX));\n\n            this.tree = $('<div/>')\n            .attr({\n                tabIndex: -1,\n                \"aria-hidden\": true\n            });\n\n            this.list = $(\"<div/>\")\n                .append(this.tree);\n\n            this._header();\n            this._noData();\n            this._footer();\n            this._reset();\n            this._popup();\n\n            if (that.options.adaptiveMode == \"auto\") {\n                that.bigScreenMQL.onChange(() => {\n                    that.list = $(\"<div class='k-list-container'/>\")\n                        .append(that.tree);\n                    that._header.bind(that)();\n                    that._noData.bind(that)();\n                    that._footer.bind(that)();\n                    that._reset.bind(that)();\n\n                    if (that.popup) {\n                        that.popup.destroy();\n                        that.popup.element.remove();\n                        that.popup = null;\n                    }\n                    if (that.treeview) {\n                        that.treeview.destroy();\n                    }\n\n                    that._popup.bind(that)();\n                    that._filterHeader.bind(that)();\n                    that._treeview.bind(that)();\n\n                    that._renderFooter.bind(that)();\n\n                    that._checkAll.bind(that)();\n                    that._enable.bind(that)();\n                    that._toggleCloseVisibility.bind(that)();\n\n                    that._aria.bind(that)();\n                });\n            }\n\n            this._clearButton();\n            this._filterHeader();\n            this._treeview();\n\n            this._renderFooter();\n\n            this._checkAll();\n            this._enable();\n            this._toggleCloseVisibility();\n\n            if (!this.options.autoBind) {\n                var text = options.text || \"\";\n                if (!this._isNullorUndefined(options.value)) {\n                    this._preselect(options.value);\n                } else if (text) {\n                    this._textAccessor(text);\n                } else if (options.placeholder) {\n                    this._placeholder(true);\n                }\n            }\n\n            var disabled = $(this.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                this.enable(false);\n            }\n            this._valueMethodCalled = false;\n\n            if (this.options.label) {\n                this._label();\n            }\n            if (this.options.loadOnDemand && this.options.loadOnDemand.valueMapper && this.options.value) {\n                this.one('dataBound', () => this.requireValueMapper(this.options));\n            }\n            this._aria();\n\n            kendo.notify(this);\n        },\n\n        _label: function() {\n            var that = this;\n            var options = that.options;\n            var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                content: options.label\n            };\n\n            that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                widget: that,\n                floatCheck: that._floatCheck.bind(that)\n            }));\n\n            that._inputLabel = that.label.element;\n        },\n\n        _floatCheck: function() {\n            var hasValue = (this.value() && !this._isMultipleSelection()) || this.value().length || this.text();\n            return !hasValue && !this.popup.visible();\n        },\n\n        _refreshFloatingLabel: function() {\n            var that = this;\n\n            if (that.label && that.label.floatingLabel) {\n                that.label.floatingLabel.refresh();\n            }\n        },\n\n        _preselect: function(data, value) {\n            this._selection._preselect(data, value);\n        },\n\n        _setTreeViewOptions: function(options) {\n            var treeviewOptions = {\n                autoBind: options.autoBind,\n                checkboxes: options.checkboxes,\n                dataImageUrlField: options.dataImageUrlField,\n                dataSpriteCssClassField: options.dataSpriteCssClassField,\n                dataTextField: options.dataTextField,\n                dataUrlField: options.dataUrlField,\n                loadOnDemand: options.loadOnDemand,\n                size: options.size\n            };\n\n            this.options.treeview = $.extend({}, treeviewOptions, this.options.treeview);\n\n            if (options.template) {\n                this.options.treeview.template = options.template;\n            }\n\n            if (options.size) {\n                this.options.treeview.size = options.size;\n            }\n        },\n\n        _dataSource: function() {\n            var rootDataSource = this.options.dataSource;\n\n            this.dataSource = kendo.data.HierarchicalDataSource.create(rootDataSource);\n            if (rootDataSource) {\n                $.extend(this.options.treeview,{\n                    dataSource: this.dataSource\n                });\n            }\n        },\n\n        _popupOpen: function() {\n            var popup = this.popup;\n            popup.wrapper = kendo.wrap(popup.element);\n        },\n\n        _getSelection: function() {\n            if (this._isMultipleSelection()) {\n                this.options._altname = \"MultiSelectTree\";\n                return new ui.DropDownTree.MultipleSelection(this);\n            } else {\n                return new ui.DropDownTree.SingleSelection(this);\n            }\n        },\n\n        setDataSource: function(dataSource) {\n            this._isDataSourceSet = true;\n            if (this._tags) {\n                this._noInitialValue = true;\n                this.setValue([]);\n                this._tags.empty();\n                this.span.show();\n                this._multipleTags.empty();\n            }\n            this.dataSource = dataSource;\n            this.treeview.setDataSource(dataSource);\n            this._isDataSourceSet = false;\n        },\n\n        _isMultipleSelection: function() {\n            return this.options && (this.options.treeview.checkboxes || this.options.checkboxes);\n        },\n\n        _isArrayOfObjects: function(value) {\n            return Array.isArray(value) && value.map(x=> typeof x == \"object\").includes(true);\n        },\n\n        options: {\n            name: \"DropDownTree\",\n            adaptiveMode: \"none\",\n            animation: {},\n            autoBind: true,\n            autoClose: true,\n            autoWidth: false,\n            clearButton: true,\n            dataTextField: \"\",\n            dataValueField: \"\",\n            dataImageUrlField: \"\",\n            dataSpriteCssClassField: \"\",\n            dataUrlField: \"\",\n            delay: 500,\n            enabled: true,\n            enforceMinLength: false,\n            filter: \"none\",\n            height: 200,\n            ignoreCase: true,\n            index: 0,\n            loadOnDemand: false,\n            messages: {\n                \"singleTag\": \"item(s) selected\",\n                \"clear\": \"clear\",\n                \"deleteTag\": \"delete\",\n                \"noData\": \"No data found.\"\n            },\n            minLength: 1,\n            checkboxes: false,\n            noDataTemplate: true,\n            placeholder: \"\",\n            checkAll: false,\n            checkAllTemplate: () => \"Check all\",\n            tagMode: \"multiple\",\n            template: null,\n            text: null,\n            treeview: {},\n            valuePrimitive: false,\n            footerTemplate: () => \"\",\n            headerTemplate: () => \"\",\n            value: null,\n            valueTemplate: null,\n            popup: null,\n            filterLabel: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null\n        },\n\n        events: [\n            \"open\",\n            \"close\",\n            \"dataBound\",\n            CHANGE,\n            \"select\",\n            \"filtering\"\n        ],\n\n        focus: function() {\n            this.wrapper.trigger(\"focus\");\n        },\n\n        dataItem: function(node) {\n            return this.treeview.dataItem(node);\n        },\n\n        readonly: function(readonly) {\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n            this._toggleCloseVisibility();\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n            this._toggleCloseVisibility();\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        toggle: function(open) {\n            this._toggle(open);\n        },\n\n        open: function() {\n            var popup = this.popup;\n\n            if (!this.options.autoBind && !this.dataSource.data().length) {\n                this.treeview._progress(true);\n                if (this._isFilterEnabled()) {\n                    this._search();\n                } else {\n                    this.dataSource.fetch();\n                }\n            }\n\n            if (popup.visible() || !this._allowOpening()) {\n                return;\n            }\n\n            popup.one(\"activate\", this._focusInputHandler);\n            popup._hovered = true;\n            popup.open();\n        },\n\n        close: function() {\n            this.popup.close();\n        },\n\n        search: function(word) {\n            var options = this.options;\n            var filter;\n            clearTimeout(this._typingTimeout);\n\n            if ((!options.enforceMinLength && !word.length) || word.length >= options.minLength) {\n                filter = this._getFilter(word);\n                if (this.trigger(\"filtering\", { filter: filter }) ||\n                 Array.isArray(this.options.dataTextField)) {\n                    return;\n                }\n\n                this._filtering = true;\n                this.treeview.dataSource.filter(filter);\n            }\n        },\n\n        _mapValuesToId: function(values) {\n            const that = this;\n\n            if (typeof that.dataSource.options.schema.model === 'function') {\n                throw new Error(\"The valueMapper needs dataSource.schema\");\n            }\n            const field = that.dataSource.options.schema.model.id;\n\n            return values.map((item) => item[field]);\n        },\n\n        requireValueMapper: function(options, value) {\n            const that = this;\n            let hasValue = value ? value : options.value;\n            hasValue = hasValue && (hasValue instanceof Array ? hasValue : [hasValue]);\n\n            if (hasValue && options.loadOnDemand && typeof options.loadOnDemand.valueMapper !== \"function\") {\n                throw new Error(\"ValueMapper is not provided while the value is being set. See http://docs.telerik.com/kendo-ui/controls/editors/combobox/virtualization#the-valuemapper-function\");\n            }\n\n            if (hasValue.length) {\n                let index = 0;\n                that.options.loadOnDemand.valueMapper(valueMapperOptions(that.options, hasValue, that._useValueMapper.bind(that, hasValue, index)));\n\n            }\n        },\n\n        _useValueMapper: function(data, index, response) {\n            const that = this;\n            const deferred = $.Deferred();\n            that._deferred = deferred;\n\n            that._handleValueMapperData(index, response);\n\n            deferred.done(() => {\n                index++;\n                if (index < data.length) {\n                    that._useValueMapper(data, index, response);\n                }\n            });\n        },\n\n        _handleValueMapperData: function(index, data) {\n            const that = this;\n\n            const response = data[index] instanceof Array ? data[index] : data;\n            if (!response || !response.length) {\n                return;\n            }\n\n                let idIndex = 0;\n                that._loadItem(response, idIndex);\n        },\n\n        _loadItem: function(data, index) {\n            const that = this;\n            const node = that.dataSource.get(data[index]);\n                if (node) {\n                    node.load().done(() => {\n                        index++;\n                        if (index < data.length - 1) {\n                            that._loadItem(data, index);\n                        } else {\n                            that._deferred.resolve();\n                        }\n                    });\n                }\n        },\n\n        _getFilter: function(word) {\n            return {\n                field: this.options.dataTextField,\n                operator: this.options.filter,\n                value: word,\n                ignoreCase: this.options.ignoreCase\n              };\n        },\n\n        refresh: function() {\n            var data = this.treeview.dataSource.flatView();\n            this._renderFooter();\n            this._renderNoData();\n            if (this.filterInput && this.checkAll) {\n                this.checkAll.toggle(!this.filterInput.val().length);\n            }\n\n            this.tree.toggle(!!data.length);\n            $(this.noData).toggle(!data.length);\n        },\n\n        setOptions: function(options) {\n            if (this.options.checkboxes != options.checkboxes) {\n                delete options.checkboxes;\n                window.console.warn('setOptions method can not be used to set the checkboxes option in DropDownTree');\n            }\n\n            Widget.fn.setOptions.call(this, options);\n\n            this._setTreeViewOptions(options);\n            this._dataSource();\n            if (this.options.treeview || options.size) {\n                this.treeview.setOptions(this.options.treeview);\n            }\n\n            if (options.height && this.tree) {\n                this.tree.css('max-height', options.height);\n            }\n\n            this._header();\n            this._noData();\n            this._footer();\n\n            this._renderFooter();\n            this._renderNoData();\n            if (this.span && (this._isMultipleSelection() || this.span.hasClass(\"k-readonly\"))) {\n                this._placeholder(true);\n            }\n            this._inputTemplate();\n            this._accessors();\n            this._filterHeader();\n            this._checkAll();\n            this._enable();\n            if (options && (options.enable || options.enabled)) {\n                this.enable(true);\n            }\n            this._clearButton();\n\n            if (options === undefined$1 || options === null) {\n                options = {};\n            }\n\n            if (options.label && this._inputLabel) {\n                this.label.setOptions(options.label);\n            } else if (options.label === false) {\n                this.label._unwrapFloating();\n                this._inputLabel.remove();\n                delete this._inputLabel;\n            } else if (options.label) {\n                this._label();\n            }\n        },\n\n        destroy: function() {\n            kendo.ui.Widget.fn.destroy.call(this);\n            if (this.treeview) {\n                this.treeview.destroy();\n            }\n            this.popup.destroy();\n\n            this.wrapper.off(ns);\n            this._clear.off(ns);\n            if (this.filterInput) {\n                this.filterInput.off(ns);\n            }\n\n            if (this.tagList) {\n                this.tagList.off(ns);\n            }\n\n            if (this.bigScreenMQL) {\n                this.bigScreenMQL.destroy();\n            }\n\n            if (this.smallScreenMQL) {\n                this.smallScreenMQL.destroy();\n            }\n\n            kendo.unbind(this.tagList);\n            if (this.options.checkAll && this.checkAll) {\n                this.checkAll.off(ns);\n            }\n\n            if (this._form) {\n                this._form.off(\"reset\", this._resetHandler);\n            }\n\n            if (this.label) {\n                this.label.destroy();\n            }\n        },\n\n        setValue: function(value) {\n            value = Array.isArray(value) || value instanceof ObservableArray ? value.slice(0) : [value];\n\n            this._values = value;\n        },\n\n        items: function() {\n            return this.treeview.items();\n        },\n\n        _useValueMapperWithValue: function(value) {\n            const that = this;\n            let values = value instanceof Array ? value : [value];\n\n            if (typeof values[0] === 'object') {\n                values = that._mapValuesToId(values);\n            }\n            that.requireValueMapper(this.options, values);\n            that._deferred.done(() => {\n                that._selection._setValue(values);\n            });\n        },\n\n        value: function(value) {\n            const that = this;\n            const loadOnDemand = that.options.loadOnDemand;\n            if (value) {\n                if (that.filterInput && that.dataSource._filter) {\n                    that._filtering = true;\n                    that.dataSource.filter({});\n                } else if (!that.dataSource.data().length || !that.treeview.dataSource.data().length) {\n                    if (!loadOnDemand) {\n                        that.treeview.one('loadCompleted', function() {\n                            that._selection._setValue(value);\n                        });\n\n                        if (!that.options.autoBind && that.options.valuePrimitive) {\n                            that.dataSource.fetch();\n                        }\n                    } else if (loadOnDemand.valueMapper) {\n                        that.one('dataBound', () => {\n                            that._useValueMapperWithValue(value);\n                        });\n                    } else {\n                        that.dataSource.fetch(function() {\n                            that._selection._setValue(value);\n                        });\n                    }\n\n                    return;\n                } else if (loadOnDemand && loadOnDemand.valueMapper) {\n                    that._useValueMapperWithValue(value);\n                return;\n                }\n            }\n\n            return that._selection._setValue(value);\n        },\n\n        text: function(text) {\n            var loweredText;\n            var ignoreCase = this.options.ignoreCase;\n\n            text = text === null ? \"\" : text;\n\n            if (text !== undefined$1 && !this._isMultipleSelection()) {\n                if (typeof text !== \"string\") {\n                    this._textAccessor(text);\n                    return;\n                }\n\n                loweredText = ignoreCase ? text : text.toLowerCase();\n\n                this._selectItemByText(loweredText);\n\n                this._textAccessor(loweredText);\n                this._refreshFloatingLabel();\n            } else {\n                return this._textAccessor();\n            }\n\n        },\n\n        _aria: function() {\n            var input = this.wrapper.find(\"span.k-input-inner\");\n\n            this.wrapper.attr({\n                \"aria-haspopup\": \"tree\",\n                \"aria-expanded\": false,\n                \"aria-controls\": this.treeview.element.attr(\"id\"),\n                \"role\": \"combobox\"\n            });\n\n            this._activeId = kendo.guid();\n            this._ariaLabel(this.wrapper);\n\n            if (this.filterInput && this.options.filterLabel) {\n                this.filterInput.attr(\"aria-label\", this.options.filterLabel);\n            }\n\n            if (this.options.checkboxes) {\n                this.wrapper.attr({\n                    \"aria-describedby\": this.tagList[0].id\n                });\n                this.tagList.attr({\n                    \"role\": \"listbox\",\n                    \"aria-orientation\": \"horizontal\",\n                    \"aria-multiselectable\": true\n                });\n                this._ariaLabel(this.tagList);\n            }\n        },\n\n        _header: function() {\n            var list = this;\n            var header = $(list.header);\n            var template = list.options.headerTemplate;\n\n            kendo.destroy(header);\n            header.remove();\n\n            if (!template) {\n                list.header = null;\n                return;\n            }\n\n            var headerTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n            header = $(headerTemplate({}));\n\n            list.header = header[0] ? header : null;\n            list.list.prepend(header);\n        },\n\n        _noData: function() {\n            var list = this;\n            var noData = $(list.noData);\n            var template = list.options.noDataTemplate === true ? encode(list.options.messages.noData) : list.options.noDataTemplate;\n\n            kendo.destroy(noData);\n            noData.remove();\n\n            if (!template) {\n                list.noData = null;\n                return;\n            }\n\n            list.noData = $('<div class=\"k-no-data\"></div>').hide().appendTo(list.list);\n            list.noDataTemplate = typeof template !== \"function\" ? kendo.template(() => template) : template;\n        },\n\n        _renderNoData: function() {\n            var list = this;\n            var noData = list.noData;\n\n            if (!noData) {\n                return;\n            }\n\n            noData.html(list.noDataTemplate({ instance: list }));\n        },\n\n        _footer: function() {\n            var list = this;\n            var footer = $(list.footer);\n            var template = list.options.footerTemplate;\n\n            kendo.destroy(footer);\n            footer.remove();\n\n            if (!template) {\n                list.footer = null;\n                return;\n            }\n\n            list.footer = $('<div class=\"k-footer\"></div>').appendTo(list.list);\n            list.footerTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n        },\n\n        _renderFooter: function() {\n            var list = this;\n            var footer = list.footer;\n\n            if (!footer) {\n                return;\n            }\n\n            footer.html(list.footerTemplate({ instance: list }));\n        },\n\n        _enable: function() {\n            var that = this,\n                options = that.options,\n                disabled = that.element.is(\"[disabled]\");\n\n            if (options.enable !== undefined$1) {\n                options.enabled = options.enable;\n            }\n\n            if (!options.enabled || disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(that.element.is(\"[readonly]\"));\n            }\n        },\n\n        _adjustListWidth: function() {\n            var that = this,\n                list = that.list,\n                width = list[0].style.width,\n                wrapper = that.wrapper,\n                computedStyle, computedWidth;\n\n            if (!list.data(WIDTH) && width) {\n                return;\n            }\n\n            computedStyle = window.getComputedStyle ? window.getComputedStyle(wrapper[0], null) : 0;\n            computedWidth = parseFloat(computedStyle && computedStyle.width) || outerWidth(wrapper);\n\n            if (computedStyle && browser.msie) { // getComputedStyle returns different box in IE.\n                computedWidth += parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight) + parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth);\n            }\n\n            if (list.css(\"box-sizing\") !== \"border-box\") {\n                width = computedWidth - (outerWidth(list) - list.width());\n            } else {\n                width = computedWidth;\n            }\n\n            list.css({\n                fontFamily: wrapper.css(\"font-family\"),\n                width: that.options.autoWidth ? \"auto\" : width,\n                minWidth: width,\n                whiteSpace: that.options.autoWidth ? \"nowrap\" : \"normal\"\n            })\n            .data(WIDTH, width);\n\n            return true;\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(that._initial);\n                    });\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _hasActionSheet: function() {\n            return this.options.adaptiveMode === \"auto\" && !this.bigScreenMQL.mediaQueryList.matches;\n        },\n\n        _popup: function() {\n            var that = this;\n            var list = this;\n\n            if (that.options.checkboxes) {\n                if (that.options.checkAll) {\n                    that.list.attr(\"role\", \"application\");\n                }\n\n                that.list.addClass(\"k-multiselecttree-popup\");\n            } else {\n                that.list.addClass(\"k-dropdowntree-popup\");\n            }\n\n            if (list.options.adaptiveMode == \"auto\" && !list.bigScreenMQL.mediaQueryList.matches) {\n                $(document.body).append(list.list);\n                list.popup = new ui.ActionSheet(list.list, {\n                    adaptive: true,\n                    hideOverflowContent: true,\n                    headerTemplate: (options) =>\n                        `<div class=\"k-text-center k-actionsheet-titlebar\" >` +\n                            '<div class=\"k-actionsheet-titlebar-group k-hbox\">' +\n                                `<div  class=\"k-actionsheet-title\">` +\n                                    `<div class=\"k-text-center\">${list.label ? list.label.element.text() : list.options.label || list.options.placeholder || \"Select\"}</div>` +\n                                    (list.options.placeholder && (list.label || list.options.label) ? `<div class=\"k-actionsheet-subtitle k-text-center\">${list.options.placeholder || \"\"}</div>` : \"\") +\n                                '</div>' +\n                                (options.closeButton ?\n                                '<div class=\"k-actionsheet-actions\">' +\n                                    kendo.html.renderButton(`<button tabindex=\"-1\" ${kendo.attr(\"ref-actionsheet-close-button\")}></button>`, { icon: \"x\", fillMode: \"flat\", size: \"large\" }) +\n                                '</div>'\n                                : \"\") +\n                                '</div>' +\n                            (this._isFilterEnabled() ? `<div class=\"k-actionsheet-titlebar-group k-actionsheet-filter\"></div>` : '') +\n                        '</div>',\n                    closeButton: true,\n                    focusOnActivate: false,\n                    fullscreen: list.smallScreenMQL.mediaQueryList.matches,\n                    popup: extend({}, list.options.popup, {\n                        anchor: list.wrapper,\n                        open: list._openHandler.bind(list),\n                        close: list._closeHandler.bind(list),\n                        animation: list.options.animation,\n                        isRtl: support.isRtl(list.wrapper),\n                        autosize: list.options.autoWidth,\n                    }),\n                    deactivate: () => {\n                        this._refreshFloatingLabel();\n                    },\n                    activate: () => {\n                        this._refreshFloatingLabel();\n                    }\n                });\n            } else {\n                list.popup = new ui.Popup(list.list, extend({}, list.options.popup, {\n                    anchor: list.wrapper,\n                    open: list._openHandler.bind(list),\n                    close: list._closeHandler.bind(list),\n                    animation: list.options.animation,\n                    isRtl: support.isRtl(list.wrapper),\n                    autosize: list.options.autoWidth,\n                    deactivate: () => {\n                        this._refreshFloatingLabel();\n                    },\n                    activate: () => {\n                        this._refreshFloatingLabel();\n                    }\n                }));\n\n                list.popup.one(\"open\", list._popupOpen.bind(list));\n            }\n        },\n\n        _allowOpening: function() {\n            return this.options.noDataTemplate || this.treeview.dataSource.flatView().length;\n        },\n\n        _placeholder: function(show) {\n            if (this.span) {\n                this.span.toggleClass(\"k-readonly\", show).text(show ? this.options.placeholder : \"\");\n            }\n        },\n\n        _currentValue: function(dataItem) {\n            var currentValue = this._value(dataItem);\n            if (!currentValue && currentValue !== 0) {\n                currentValue = dataItem;\n            }\n\n            return currentValue;\n        },\n\n        _checkValue: function(dataItem) {\n            var value = \"\";\n            var indexOfValue = -1;\n            var currentValue = this.value();\n            var isMultiple = this.options.tagMode === \"multiple\";\n\n            if (dataItem || dataItem === 0) {\n                if (dataItem.level) {\n                    dataItem._level = dataItem.level();\n                }\n\n                value = this._currentValue(dataItem);\n\n                indexOfValue = currentValue.indexOf(value);\n            }\n\n            if (dataItem.checked) {\n                var alreadyAddedTag = $.grep(this._tags, function( item ) {\n                    return item.uid === dataItem._tagUid;\n                });\n\n                if (alreadyAddedTag.length) {\n                    return;\n                }\n\n                var itemToAdd = new ObservableObject(dataItem.toJSON());\n                dataItem._tagUid = itemToAdd.uid;\n                this._tags.push(itemToAdd);\n\n                if (this._tags.length === 1) {\n                    this.span.hide();\n\n                    if (!isMultiple) {\n                        this._multipleTags.push(itemToAdd);\n                    }\n                }\n\n                if (indexOfValue === -1) {\n                    currentValue.push(value);\n                    this.setValue(currentValue);\n                }\n            } else {\n                var itemToRemove = this._tags.find(function(item) {\n                    return item.uid === dataItem._tagUid;\n                });\n\n                var idx = this._tags.indexOf(itemToRemove);\n\n                if (idx !== -1) {\n                    this._tags.splice(idx, 1);\n                } else {\n                    this._treeViewCheckAllCheck(dataItem);\n                    return;\n                }\n\n                if (this._tags.length === 0) {\n                    this.span.show();\n                    if (!isMultiple) {\n                        this._multipleTags.splice(0, 1);\n                    }\n                }\n                if (indexOfValue !== -1) {\n                    currentValue.splice(indexOfValue, 1);\n                    this.setValue(currentValue);\n                }\n            }\n\n            this._treeViewCheckAllCheck(dataItem);\n            if (!this._preventChangeTrigger && !this._valueMethodCalled && !this._noInitialValue) {\n                this.trigger(CHANGE);\n            }\n\n            if (this.options.autoClose && this.popup.visible()) {\n                this.close();\n                this.wrapper.trigger(\"focus\");\n            }\n\n            this.popup.position();\n            this._toggleCloseVisibility();\n            this._updateSelectedOptions();\n        },\n\n        _updateSelectedOptions: function() {\n            if (this.element[0].tagName.toLowerCase() !== 'select') {\n                return;\n            }\n\n            var selectedItems = this._tags;\n            var options = '';\n            var dataItem = null;\n            var value = null;\n\n            if (selectedItems.length) {\n                for (var idx = 0; idx < selectedItems.length; idx++) {\n                    dataItem = selectedItems[idx];\n\n                    value = this._value(dataItem);\n                    options += this._option(value, this._text(dataItem), true);\n                }\n            }\n\n            this.element.html(options);\n        },\n\n        _option: function(dataValue, dataText, selected) {\n            var option = \"<option\";\n\n            if (dataValue !== undefined$1) {\n                dataValue += \"\";\n\n                if (dataValue.indexOf('\"') !== -1) {\n                    dataValue = dataValue.replace(quotRegExp, \"&quot;\");\n                }\n\n                option += ' value=\"' + dataValue + '\"';\n            }\n\n            if (selected) {\n                option += ' selected';\n            }\n\n            option += \">\";\n\n            if (dataText !== undefined$1) {\n                option += kendo.htmlEncode(dataText);\n            }\n\n            return option += \"</option>\";\n        },\n\n        _selectValue: function(dataItem) {\n            var value = \"\";\n            var text = \"\";\n\n            if (dataItem || dataItem === 0) {\n                if (dataItem.level) {\n                    dataItem._level = dataItem.level();\n                }\n                text = this._text(dataItem) || dataItem;\n                value = this._currentValue(dataItem);\n            }\n\n            if (value === null) {\n                value = \"\";\n            }\n            this.setValue(value);\n            this._textAccessor(text, dataItem);\n            this._accessor(value);\n\n            if (!this._preventChangeTrigger && !this._valueMethodCalled) {\n                this.trigger(CHANGE);\n            }\n            this._valueMethodCalled = false;\n\n            if (this.options.autoClose && this.popup.visible()) {\n                this.close();\n                this.wrapper.trigger(\"focus\");\n            }\n\n            this.popup.position();\n            this._toggleCloseVisibility();\n        },\n\n        _clearClick: function(e) {\n            e.stopPropagation();\n            this.wrapper.trigger(\"focus\");\n            this._clearTextAndValue();\n        },\n\n        _clearTextAndValue: function() {\n            var shouldTrigger = this._selection._clearValue();\n\n            this.setValue([]);\n            this._clearInput();\n            this._clearText();\n            this.popup.position();\n            this._toggleCloseVisibility();\n            this._refreshFloatingLabel();\n\n            if (shouldTrigger) {\n                this.trigger(CHANGE);\n            }\n        },\n\n        _clearText: function() {\n            if (this.options.placeholder) {\n                this._placeholder(true);\n            } else {\n                if (this.span) {\n                    this.span.html(\"\");\n                }\n            }\n        },\n\n        _inputTemplate: function() {\n            var template = this.options.valueTemplate;\n\n            if (!template) {\n                template = (data) => encode(this._text(data));\n            } else {\n                template = kendo.template(template);\n            }\n\n            this.valueTemplate = template;\n        },\n\n        _assignInstance: function(text, value) {\n            var dataTextField = this.options.dataTextField;\n            var dataItem = {};\n\n            if (dataTextField) {\n                assign(dataItem, dataTextField.split(DOT), text);\n                assign(dataItem, this.options.dataValueField.split(DOT), value);\n                dataItem = new ObservableObject(dataItem);\n            } else {\n                dataItem = text;\n            }\n\n            return dataItem;\n        },\n\n        _textAccessor: function(text, dataItem) {\n            var valueTemplate = this.valueTemplate;\n            var span = this.span;\n\n            if (text === undefined$1) {\n                return span.text();\n            }\n\n            span.removeClass(\"k-readonly\");\n\n            if (!dataItem && ($.isPlainObject(text) || text instanceof ObservableObject)) {\n                dataItem = text;\n            }\n\n            if (!dataItem) {\n                dataItem = this._assignInstance(text, this._accessor());\n            }\n\n            var getElements = function() {\n                return {\n                    elements: span.get(),\n                    data: [ { dataItem: dataItem } ]\n                };\n            };\n\n            try {\n                span.html(valueTemplate(dataItem));\n            } catch (e) {\n                //dataItem has missing fields required in custom template\n                if (span) {\n                    span.html(\"\");\n                }\n            }\n        },\n\n        _accessors: function() {\n            var element = this.element;\n            var options = this.options;\n            var getter = kendo.getter;\n            var textField = element.attr(kendo.attr(\"text-field\"));\n            var valueField = element.attr(kendo.attr(\"value-field\"));\n\n            var getterFunction = function(field) {\n                if (Array.isArray(field)) {\n                    var count = field.length;\n                    var levels = $.map(field, function(x) {\n                        return function(d) { return d[x];};\n                    });\n\n                    return function(dataItem) {\n                        var level = dataItem._level;\n\n                        if (!level && level !== 0) {\n                            return;\n                        }\n\n                        return levels[Math.min(level, count - 1)](dataItem);\n                    };\n                } else {\n                    return getter(field);\n                }\n            };\n\n            if (!options.dataTextField && textField) {\n                options.dataTextField = textField;\n            }\n\n            if (!options.dataValueField && valueField) {\n                options.dataValueField = valueField;\n            }\n\n            options.dataTextField = options.dataTextField || \"text\";\n            options.dataValueField = options.dataValueField || \"value\";\n\n            this._text = getterFunction(options.dataTextField);\n            this._value = getterFunction(options.dataValueField);\n        },\n\n        _accessor: function(value, idx) {\n            return this._accessorInput(value, idx);\n        },\n\n        _accessorInput: function(value) {\n            var element = this.element[0];\n\n            if (value === undefined$1) {\n                return element.value;\n            } else {\n                if (value === null) {\n                    value = \"\";\n                }\n                element.value = value;\n            }\n        },\n\n        _clearInput: function() {\n            var element = this.element[0];\n            element.value = \"\";\n        },\n\n        _clearButton: function() {\n            var clearTitle = encode(this.options.messages.clear);\n\n            if (!this._clear) {\n                this._clear = $('<span unselectable=\"on\" class=\"k-clear-value\" title=\"' + clearTitle + '\">' + kendo.ui.icon(\"x\") + '</span>').attr({\n                    \"tabIndex\": -1\n                });\n            }\n\n            if (this.options.clearButton) {\n                this._clear.insertAfter(this.span.parent());\n            } else {\n                if (!this.options.clearButton) {\n                    this._clear.remove();\n                }\n            }\n        },\n\n        _toggleCloseVisibility: function() {\n            var isReadOnly = this.element.attr(READONLY);\n            var hasValue = (this.value() && !this._isMultipleSelection()) || this.value().length;\n            var valueDoesNotEqualPlaceHolder = this.element.val() && this.element.val() !== this.options.placeholder;\n\n            if ((!isReadOnly && (hasValue || valueDoesNotEqualPlaceHolder))) {\n                this._showClear();\n            } else {\n                this._hideClear();\n            }\n        },\n\n        _showClear: function() {\n            if (this._clear) {\n                this._clear.removeClass(HIDDENCLASS);\n            }\n        },\n\n        _hideClear: function() {\n            if (this._clear) {\n                this._clear.addClass(HIDDENCLASS);\n            }\n        },\n\n        _openHandler: function(e) {\n            this._adjustListWidth();\n\n            if (this.trigger(OPEN)) {\n                e.preventDefault();\n            } else {\n                 this.wrapper.attr(\"aria-expanded\", true);\n                 this.tree.attr(\"aria-hidden\", false);\n            }\n        },\n\n        _closeHandler: function(e) {\n            if (this.trigger(CLOSE)) {\n                e.preventDefault();\n            } else {\n                 this.wrapper.attr(\"aria-expanded\", false);\n                 this.tree.attr(\"aria-hidden\", true);\n            }\n        },\n\n        _treeview: function() {\n            var that = this;\n\n            if (that.options.adaptiveMode != \"auto\" && that.options.height) {\n                that.tree.css('max-height',that.options.height);\n            }\n            that.tree.attr('id', kendo.guid());\n            that.treeview = new TreeView(that.tree, extend({ size: that.options.size }, that.options.treeview), that);\n            that.dataSource = that.treeview.dataSource;\n\n            that.treeview.bind(\"select\",function(e) {\n                that.trigger(\"select\", e);\n            });\n        },\n\n        _treeViewDataBound: function(e) {\n            if (e.node && this._prev && this._prev.length) {\n                e.sender.expand(e.node);\n            }\n\n            if (this._filtering) {\n                if (!e.node) {\n                    this._filtering = false;\n                }\n\n                if (!this._isMultipleSelection()) {\n                    this._deselectItem(e);\n                }\n                return;\n            }\n\n            if (!this.treeview) {\n                this.treeview = e.sender;\n            }\n\n            if (!e.node) {\n                var rootItems = e.sender.dataSource.data();\n\n                this._checkLoadedItems(rootItems);\n                if (this._noInitialValue) {\n                    this._noInitialValue = false;\n                }\n            } else {\n                var rootItem = e.sender.dataItem(e.node);\n                if (rootItem) {\n                    var subItems = rootItem.children.data();\n                    this._checkLoadedItems(subItems);\n                }\n            }\n                this.trigger(\"dataBound\", e);\n        },\n\n        _deselectItem: function(e) {\n            var items = [];\n            if (!e.node) {\n                items = e.sender.dataSource.data();\n            } else {\n                var rootItem = e.sender.dataItem(e.node);\n                if (rootItem) {\n                    items = rootItem.children.data();\n                }\n            }\n\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].selected &&\n                    !this._valueComparer(items[i], this.value())) {\n                    items[i].set(\"selected\", false);\n                }\n            }\n        },\n\n        _checkLoadedItems: function(items) {\n            var value = this.value();\n\n            if (!items) {\n                return;\n            }\n\n            for (var idx = 0; idx < items.length; idx++) {\n                this._selection._checkLoadedItem(items[idx], value);\n            }\n        },\n\n        _treeViewCheckAllCheck: function(dataItem) {\n            if (this.options.checkAll && this.checkAll) {\n                this._getAllChecked();\n\n                if (dataItem.checked) {\n                    this._checkCheckAll();\n                } else {\n                    this._uncheckCheckAll();\n                }\n            }\n        },\n\n        _checkCheckAll: function() {\n            var checkAllCheckbox = this.checkAll.find('.k-checkbox');\n\n            if (this._allItemsAreChecked) {\n                checkAllCheckbox.prop('checked', true)\n                                .prop('indeterminate', false);\n            } else {\n                checkAllCheckbox.prop('indeterminate', true);\n            }\n        },\n\n        _uncheckCheckAll: function() {\n            var checkAllCheckbox = this.checkAll.find('.k-checkbox');\n\n            if (this._allItemsAreUnchecked) {\n                checkAllCheckbox.prop('checked', false)\n                                .prop('indeterminate', false);\n            } else {\n                checkAllCheckbox.prop('indeterminate', true);\n            }\n        },\n\n        _filterHeader: function() {\n            var filterTemplate = '<div class=\"k-list-filter\">' +\n                '<span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\" type=\"text\" autocomplete=\"off\">' +\n                    kendo.ui.icon({ icon: \"search\", iconClass: \"k-input-icon\" }) +\n                '</span>' +\n            '</div>';\n\n            if (this.filterInput) {\n                this.filterInput\n                    .off(ns)\n                    .parent()\n                    .remove();\n\n                this.filterInput = null;\n            }\n\n            if (this._isFilterEnabled()) {\n                this._disableCheckChildren();\n\n                this.filterInput = $('<input class=\"k-input-inner\" type=\"text\" />')\n                    .attr({\n                        placeholder: this.element.attr(\"placeholder\"),\n                        title: this.element.attr(\"title\"),\n                        role: \"searchbox\",\n                        \"aria-haspopup\": \"tree\",\n                        \"aria-autocomplete\": \"list\"\n                    });\n\n                this.filterInput.on(\"input\" , this._filterChange.bind(this));\n\n                if (this._hasActionSheet()) {\n                    $(filterTemplate)\n                    .appendTo(this.popup.wrapper.find(\".k-actionsheet-filter\"))\n                    .find(\".k-textbox\")\n                    .append(this.filterInput);\n                } else {\n                    $(filterTemplate)\n                    .insertBefore(this.tree)\n                    .find(\".k-textbox\")\n                    .append(this.filterInput);\n                }\n            }\n        },\n\n        _filterChange: function() {\n            if (this.filterInput) {\n                this._search();\n            }\n        },\n\n        _disableCheckChildren: function() {\n            if (this._isMultipleSelection() && this.options.treeview.checkboxes && this.options.treeview.checkboxes.checkChildren) {\n                this.options.treeview.checkboxes.checkChildren = false;\n            }\n        },\n\n        _checkAll: function() {\n            if (this.checkAll) {\n                this.checkAll.find(\".k-checkbox-label, .k-checkbox\")\n                    .off(ns);\n                this.checkAll.remove();\n\n                this.checkAll = null;\n            }\n\n            if (this._isMultipleSelection() && this.options.checkAll) {\n                var checkAllCheckbox = html.renderCheckBox(extend({}, this.options, {\n                    label: \"Check All\",\n                    rounded: \"medium\"\n                }));\n                this.checkAll = $('<div class=\"k-check-all\">' + checkAllCheckbox + '</div>').insertBefore(this.tree);\n                this.checkAll.find(\".k-checkbox-label\").html(kendo.template(this.options.checkAllTemplate)({ instance: this }));\n                this.checkAll.find(\".k-checkbox\")\n                                .on(\"change\" + ns, this._changeCheckAll.bind(this))\n                                .on(\"keydown\" + ns, this._keydownCheckAll.bind(this));\n                this._disabledCheckedItems = [];\n                this._disabledUnCheckedItems = [];\n\n                this._getAllChecked();\n\n                if (!this._allItemsAreUnchecked) {\n                    this._checkCheckAll();\n                }\n            }\n        },\n\n        _changeCheckAll: function() {\n            var checkAllCheckbox = this.checkAll.find('.k-checkbox');\n            var isChecked = checkAllCheckbox.prop('checked');\n\n            this._updateCheckAll(isChecked);\n        },\n\n        _updateCheckAll: function(isChecked) {\n            var checkAllCheckbox = this.checkAll.find('.k-checkbox');\n            this._toggleCheckAllItems(isChecked);\n            checkAllCheckbox.prop('checked', isChecked);\n            if (this._disabledCheckedItems.length && this._disabledUnCheckedItems.length) {\n                checkAllCheckbox.prop('indeterminate', true);\n            } else if (this._disabledCheckedItems.length) {\n                checkAllCheckbox.prop('indeterminate', !isChecked);\n            } else if (this._disabledUnCheckedItems.length) {\n                checkAllCheckbox.prop('indeterminate', isChecked);\n            } else {\n                checkAllCheckbox.prop('indeterminate', false);\n            }\n            this._disabledCheckedItems = [];\n            this._disabledUnCheckedItems = [];\n        },\n\n        _keydownCheckAll: function(e) {\n            var key = e.keyCode;\n            var altKey = e.altKey;\n\n            if ((altKey && key === keys.UP) || key === keys.ESC || key === keys.TAB) {\n                this.close();\n                this.wrapper.trigger(\"focus\");\n                e.preventDefault();\n                return;\n            }\n\n            if (key === keys.UP) {\n                if (this.filterInput) {\n                    this.filterInput.trigger(\"focus\");\n                } else {\n                    this.wrapper.trigger(\"focus\");\n                }\n\n                e.preventDefault();\n            }\n\n            if (key === keys.DOWN) {\n                if (this.tree && this.tree.is(\":visible\")) {\n                    this.tree.focus();\n                }\n\n                e.preventDefault();\n            }\n\n            if (key === keys.SPACEBAR && (browser.msie || browser.edge)) {\n                this._clickCheckAll();\n                e.preventDefault();\n            }\n        },\n\n        _clickCheckAll: function() {\n            var checkAllCheckbox = this.checkAll.find('.k-checkbox');\n            var isChecked = checkAllCheckbox.prop('checked');\n\n            this._updateCheckAll(!isChecked);\n\n            checkAllCheckbox.trigger(\"focus\");\n\n        },\n        //treeview\n        _dfs: function(items, action, prop) {\n            for (var idx = 0; idx < items.length; idx++) {\n                if (!this[action](items[idx], prop)) {\n                    break;\n                }\n                this._traverceChildren(items[idx], action, prop);\n            }\n        },\n\n        _uncheckItemByUid: function(uid) {\n            this._dfs(this.dataSource.data(), '_uncheckItemEqualsUid', uid);\n        },\n\n        _uncheckItemEqualsUid: function(item, uid) {\n            if (item.enabled !== false && item._tagUid == uid) {\n                item.set(\"checked\", false);\n                return false;\n            }\n            return true;\n        },\n\n        _selectItemByText: function(text) {\n            this._dfs(this.dataSource.data(), '_itemEqualsText', text);\n        },\n\n        _itemEqualsText: function(item, text) {\n            if (item.enabled !== false && this._text(item) === text) {\n                this.treeview.select(this.treeview.findByUid(item.uid));\n                this._selectValue(item);\n                return false;\n            }\n            return true;\n        },\n\n        _selectItemByValue: function(value) {\n            this._dfs(this.dataSource.data(), '_itemEqualsValue', value);\n        },\n\n        _itemEqualsValue: function(item, value) {\n            if (item.enabled !== false && this._valueComparer(item, value)) {\n\n                this.treeview.select(this.treeview.findByUid(item.uid));\n\n                return false;\n            }\n            return true;\n        },\n\n        _checkItemByValue: function(value) {\n            var items = this.treeview.dataItems();\n            for (var idx = 0; idx < value.length; idx++) {\n                this._dfs(items, '_checkItemEqualsValue', value[idx]);\n            }\n        },\n\n        _checkItemEqualsValue: function(item, value) {\n            if (item.enabled !== false && this._valueComparer(item, value)) {\n                    item.set(\"checked\", true);\n                return false;\n            }\n            return true;\n        },\n\n        _valueComparer: function(item, value) {\n            var itemValue = this._value(item);\n            var itemText;\n\n            if (!this._isNullorUndefined(itemValue)) {\n                if (this._isNullorUndefined(value)) {\n                    return false;\n                }\n\n                var newValue = this._value(value);\n\n                if (newValue) {\n                    return itemValue == newValue;\n                } else {\n                    return itemValue == value;\n                }\n            }\n\n            itemText = this._text(item);\n            if (itemText) {\n                if (this._text(value)) {\n                    return itemText == this._text(value);\n                } else {\n                    return itemText == value;\n                }\n            }\n\n            return false;\n        },\n\n        _isNullorUndefined: function(value) {\n            return value === undefined$1 || value === null;\n        },\n\n        _getAllChecked: function() {\n            this._allCheckedItems = [];\n            this._allItemsAreChecked = true;\n            this._allItemsAreUnchecked = true;\n\n            this._dfs(this.dataSource.data(), '_getAllCheckedItems');\n\n            return this._allCheckedItems;\n        },\n\n        _getAllCheckedItems: function(item) {\n            if (this._allItemsAreChecked) {\n                this._allItemsAreChecked = item.checked;\n            }\n\n            if (this._allItemsAreUnchecked) {\n                this._allItemsAreUnchecked = !item.checked;\n            }\n\n            if (item.checked) {\n                this._allCheckedItems.push(item);\n            }\n            return true;\n        },\n\n        _traverceChildren: function(item, action, prop) {\n            var childrenField = (item._childrenOptions && item._childrenOptions.schema) ? item._childrenOptions.schema.data : null;\n            var subItems = item[childrenField] || item.items || item.children;\n\n            if (!subItems) {\n                return;\n            }\n\n            this._dfs(subItems, action, prop);\n        },\n\n        _toggleCheckAllItems: function(checked) {\n            this._dfs(this.dataSource.data(), '_checkAllCheckItem', checked);\n        },\n\n        _checkAllCheckItem: function(item, checked) {\n            if (item.enabled === false) {\n                if (item.checked) {\n                    this._disabledCheckedItems.push(item);\n                } else {\n                    this._disabledUnCheckedItems.push(item);\n                }\n            } else {\n                item.set(\"checked\", checked);\n            }\n            return true;\n        },\n\n        _isFilterEnabled: function() {\n            var filter = this.options.filter;\n            return filter && filter !== \"none\";\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var disable = options.disable;\n            var readonly = options.readonly;\n            var wrapper = that.wrapper.add(that.filterInput).off(ns);\n            var dropDownWrapper = that.wrapper.off(HOVEREVENTS);\n            if (that._isMultipleSelection()) {\n                that.tagList.off(CLICK + ns);\n            }\n            if (!readonly && !disable) {\n                element.prop(DISABLED, false).prop(READONLY, false);\n\n                dropDownWrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                that._clear.on(\"click\" + ns, that._clearClick.bind(that));\n                wrapper\n                    .attr(TABINDEX, wrapper.data(TABINDEX))\n                    .attr(ARIA_DISABLED, false)\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"focusin\" + ns, that._focusinHandler.bind(that))\n                    .on(\"focusout\" + ns, that._focusoutHandler.bind(that));\n\n                that.wrapper.on(CLICK + ns, that._wrapperClick.bind(that));\n\n                if (this._isMultipleSelection()) {\n                    that.tagList.on(CLICK + ns, \"div.k-chip\", function(e) {\n                        $(e.currentTarget).addClass(FOCUSED);\n                    });\n\n                    that.tagList.on(CLICK + ns, \".k-chip-remove-action .k-icon\", function(e) {\n                        that._removeTagClick(e);\n                    });\n                }\n            } else if (disable) {\n                wrapper.removeAttr(TABINDEX);\n                dropDownWrapper\n                    .addClass(STATEDISABLED);\n            } else {\n                wrapper\n                    .attr(TABINDEX, wrapper.data(TABINDEX));\n\n                dropDownWrapper\n                    .removeClass(STATEDISABLED);\n\n                wrapper\n                    .on(\"focusin\" + ns, that._focusinHandler.bind(that))\n                    .on(\"focusout\" + ns, that._focusoutHandler.bind(that));\n            }\n\n            element.attr(DISABLED, disable)\n                   .attr(READONLY, readonly);\n\n            wrapper.attr(ARIA_DISABLED, disable);\n        },\n\n        _focusinHandler: function() {\n            this.wrapper.addClass(FOCUSED);\n            this._prevent = false;\n        },\n\n        _focusoutHandler: function() {\n            var that = this;\n\n            if (this._isMultipleSelection()) {\n                this.tagList.find(DOT + FOCUSED).removeClass(FOCUSED);\n            }\n            if (!that._prevent) {\n                this.wrapper.removeClass(FOCUSED);\n                that._prevent = true;\n                that.element.trigger(\"blur\");\n            }\n        },\n\n        _toggle: function(open) {\n            open = open !== undefined$1 ? open : !this.popup.visible();\n\n            this[open ? OPEN : CLOSE]();\n        },\n\n        _wrapperClick: function(e) {\n            e.preventDefault();\n\n            this.popup.unbind(\"activate\", this._focusInputHandler);\n            this._focused = this.wrapper;\n            this._prevent = false;\n            this._toggle();\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _focusInput: function() {\n            if (this.filterInput) {\n                this.filterInput.trigger(\"focus\");\n            } else if (this.checkAll) {\n                this.checkAll.find(\".k-checkbox\").trigger(\"focus\");\n            } else if (this.tree.is(\":visible\")) {\n                this.tree[0].focus({ preventScroll: true });\n                this._ie11PreventScrollOnFocus();\n            }\n        },\n\n        _ie11PreventScrollOnFocus: function() {\n            if (browser.msie && browser.version == 11) {\n                var popup = this.popup;\n                popup._toggleResize(false);\n                setTimeout(function() {\n                    popup._toggleResize(true);\n                },50);\n            }\n        },\n\n        _keydown: function(e) {\n            var key = e.keyCode;\n            var altKey = e.altKey;\n            var isFilterInputActive;\n            var isWrapperActive;\n            var focused, tagItem;\n\n            var isPopupVisible = this.popup.visible();\n\n            if (this.filterInput) {\n                isFilterInputActive = this.filterInput[0] === activeElement();\n            }\n\n            if (this.wrapper) {\n                isWrapperActive = this.wrapper[0] === activeElement();\n            }\n\n            if (isWrapperActive) {\n                if (key === keys.ESC) {\n                    this._clearTextAndValue();\n                    e.preventDefault();\n                    return;\n                }\n\n                if (this._isMultipleSelection()) {\n                    if (key === keys.LEFT) {\n                        this._focusPrevTag();\n                        e.preventDefault();\n                        return;\n                    }\n\n                    if (key === keys.RIGHT) {\n                        this._focusNextTag();\n                          e.preventDefault();\n                        return;\n                    }\n\n                    if (key === keys.HOME) {\n                        this._focusFirstTag();\n                        e.preventDefault();\n                        return;\n                    }\n\n                    if (key === keys.END) {\n                        this._focusLastTag();\n                        e.preventDefault();\n                        return;\n                    }\n\n                    if (key === keys.DELETE) {\n                        focused = this.tagList.find(DOT + FOCUSED).first();\n                        if (focused.length) {\n                            tagItem = this._tags[focused.index()];\n                            this._removeTag(tagItem);\n                        }\n                        e.preventDefault();\n                        return;\n                    }\n\n                    if (key === keys.BACKSPACE) {\n                        focused = this.tagList.find(DOT + FOCUSED).first();\n                        if (focused.length) {\n                            tagItem = this._tags[focused.index()];\n                            this._removeTag(tagItem);\n                        } else {\n                            focused = this._focusLastTag();\n                            if (focused.length) {\n                                tagItem = this._tags[focused.index()];\n                                this._removeTag(tagItem);\n                            }\n                        }\n                        e.preventDefault();\n                        return;\n                    }\n                }\n            }\n\n\n            if (isFilterInputActive) {\n                if (key === keys.ESC) {\n                    this._clearFilter();\n                }\n\n                if ((key === keys.UP) && !altKey) {\n                    this.wrapper.trigger(\"focus\");\n                    e.preventDefault();\n                }\n\n                if (browser.msie && browser.version < 10) {\n                    if (key === keys.BACKSPACE || key === keys.DELETE) {\n                        this._search();\n                    }\n                }\n\n                if (key === keys.TAB) {\n                    this.close();\n                    this.wrapper.trigger(\"focus\");\n                    e.preventDefault();\n                    return;\n                }\n            }\n\n            if ((altKey && key === keys.UP) || key === keys.ESC) {\n                this.close();\n                this.wrapper.trigger(\"focus\");\n                e.preventDefault();\n                return;\n            }\n\n            if (key === keys.ENTER && this._typingTimeout && this.filterInput && isPopupVisible) {\n                e.preventDefault();\n                return;\n            }\n\n            if (key === keys.SPACEBAR && !isFilterInputActive) {\n                this._toggle(!isPopupVisible);\n                e.preventDefault();\n            }\n\n            if ((altKey && key === keys.DOWN) && !isPopupVisible) {\n                this.open();\n                e.preventDefault();\n            }\n\n            if ((key === keys.DOWN) && isPopupVisible) {\n                if (this.filterInput && !isFilterInputActive) {\n                    this.filterInput.trigger(\"focus\");\n                } else if (this.checkAll && this.checkAll.is(\":visible\")) {\n                    this.checkAll.find('input').trigger(\"focus\");\n                } else if (this.tree.is(\":visible\")) {\n                    this.tree[0].focus({ preventScroll: true });\n                    this._ie11PreventScrollOnFocus();\n                }\n                e.preventDefault();\n            }\n\n            if (key === keys.TAB && isPopupVisible) {\n                this.close();\n                this.wrapper.trigger(\"focus\");\n                e.preventDefault();\n            }\n        },\n\n        _focusPrevTag: function() {\n            var focused = this.tagList.find(DOT + FOCUSED);\n            if (focused.length) {\n                var activedescendant = this._activeId;\n\n                focused.first()\n                    .removeClass(FOCUSED)\n                    .removeAttr(\"id\")\n                    .prev(CHIP)\n                    .addClass(FOCUSED)\n                    .attr(\"id\", activedescendant);\n\n                this.wrapper.attr(\"aria-activedescendant\", activedescendant);\n            } else {\n                this._focusLastTag();\n            }\n        },\n\n        _focusNextTag: function() {\n            var focused = this.tagList.find(DOT + FOCUSED);\n\n            if (focused.length) {\n                var activedescendant = this._activeId;\n\n                focused.first()\n                    .removeClass(FOCUSED)\n                    .removeAttr(\"id\")\n                    .next(CHIP)\n                    .addClass(FOCUSED)\n                    .attr(\"id\", activedescendant);\n\n                this.wrapper.attr(\"aria-activedescendant\", activedescendant);\n            } else {\n                this._focusFirstTag();\n            }\n        },\n\n        _focusFirstTag: function() {\n            var activedescendant = this._activeId;\n\n            this._clearDisabledTag();\n\n            var firstTag = this.tagList.children(CHIP).first()\n                .addClass(FOCUSED)\n                .attr(\"id\", activedescendant);\n\n            this.wrapper.attr(\"aria-activedescendant\", activedescendant);\n\n            return firstTag;\n        },\n\n        _focusLastTag: function() {\n            var activedescendant = this._activeId;\n\n            this._clearDisabledTag();\n\n            var lastTag = this.tagList.children(CHIP).last()\n                .addClass(FOCUSED)\n                .attr(\"id\", activedescendant);\n\n            this.wrapper.attr(\"aria-activedescendant\", activedescendant);\n\n            return lastTag;\n        },\n\n        _clearDisabledTag: function() {\n            this.tagList.find(DOT + FOCUSED).removeClass(FOCUSED).removeAttr(\"id\");\n        },\n\n        _search: function() {\n            var that = this;\n            clearTimeout(that._typingTimeout);\n\n            that._typingTimeout = setTimeout(function() {\n                var value = that.filterInput.val();\n\n                if (that._prev !== value) {\n                    that._prev = value;\n                    that.search(value);\n                }\n\n                that._typingTimeout = null;\n            }, that.options.delay);\n        },\n\n        _clearFilter: function() {\n            if (this.filterInput.val().length) {\n                this.filterInput.val(\"\");\n                this._prev = \"\";\n                this._filtering = true;\n                this.treeview.dataSource.filter({});\n            }\n        },\n\n        _removeTagClick: function(e) {\n            e.stopPropagation();\n            var tagItem = this._tags[$(e.currentTarget.closest(CHIP)).index()];\n            this._removeTag(tagItem);\n        },\n\n        _removeTag: function(tagItem) {\n           if (!tagItem) {\n                return;\n           }\n\n           var uid = tagItem.uid;\n           this._uncheckItemByUid(uid);\n        }\n    });\n\n    function assign(instance, fields, value) {\n        var idx = 0,\n            lastIndex = fields.length - 1,\n            field;\n\n        for (; idx < lastIndex; ++idx) {\n            field = fields[idx];\n\n            if (!(field in instance)) {\n                instance[field] = {};\n            }\n\n            instance = instance[field];\n        }\n\n        instance[fields[lastIndex]] = value;\n    }\n\n    ui.plugin(DropDownTree);\n\n    kendo.cssProperties.registerPrefix(\"DropDownTree\", \"k-picker-\");\n\n    kendo.cssProperties.registerValues(\"DropDownTree\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    kendo.cssProperties.registerPrefix(\"MultiSelectTree\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"MultiSelectTree\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    var SingleSelection = kendo.Class.extend({\n        init: function(view) {\n            this._dropdowntree = view;\n        },\n\n        _initWrapper: function() {\n            this._wrapper();\n            this._span();\n        },\n\n        _preselect: function(data) {\n            var dropdowntree = this._dropdowntree;\n\n            dropdowntree._selectValue(data);\n        },\n\n        _wrapper: function() {\n            var dropdowntree = this._dropdowntree,\n                element = dropdowntree.element,\n                DOMelement = element[0],\n                wrapper;\n\n            wrapper = element.parent();\n\n            if (!wrapper.is(\"span.k-dropdowntree\")) {\n                wrapper = element.wrap(\"<span />\").parent();\n                wrapper[0].style.cssText = DOMelement.style.cssText;\n                wrapper[0].title = DOMelement.title;\n            }\n\n            dropdowntree._focused = dropdowntree.wrapper = wrapper\n                .addClass(\"k-dropdowntree k-picker\")\n                .addClass(DOMelement.className)\n                .removeClass('input-validation-error')\n                .removeClass('k-invalid')\n                .css(\"display\", \"\")\n                .attr({\n                    accesskey: element.attr(\"accesskey\"),\n                    unselectable: \"on\"\n                });\n\n            element.hide().removeAttr(\"accesskey\");\n        },\n\n        _span: function() {\n            var dropdowntree = this._dropdowntree,\n                wrapper = dropdowntree.wrapper,\n                SELECTOR = \"span.k-input-value-text\",\n                span;\n\n            span = wrapper.find(SELECTOR);\n\n            if (!span[0]) {\n                wrapper.append('<span unselectable=\"on\" class=\"k-input-inner\"><span class=\"k-input-value-text\"></span></span>' +\n                                html.renderButton('<button unselectable=\"on\" class=\"k-input-button\" aria-label=\"select\" tabindex=\"-1\"></button>', extend({}, dropdowntree.options, {\n                                    icon: \"caret-alt-down\",\n                                    shape: \"none\",\n                                    rounded: \"none\"\n                                })))\n                       .append(dropdowntree.element);\n\n                span = wrapper.find(SELECTOR);\n            }\n\n            dropdowntree.span = span;\n            dropdowntree._arrow = wrapper.find(\".k-input-button\");\n            dropdowntree._arrowIcon = dropdowntree._arrow.find(\".k-icon,.k-svg-icon\");\n        },\n\n        _setValue: function(value) {\n            var dropdowntree = this._dropdowntree;\n            var currentValue;\n\n            if (value === undefined$1 || value === null) {\n                currentValue = dropdowntree._values.slice()[0];\n                value = (typeof currentValue === \"object\") ? currentValue : dropdowntree._accessor() || currentValue;\n                return value === undefined$1 || value === null ? \"\" : value;\n            }\n            dropdowntree._valueMethodCalled = true;\n            if (value.length === 0) {\n                dropdowntree._clearTextAndValue();\n                dropdowntree._valueMethodCalled = false;\n                return;\n            }\n\n            dropdowntree._selectItemByValue(value);\n            dropdowntree._toggleCloseVisibility();\n            dropdowntree._refreshFloatingLabel();\n        },\n\n        _clearValue: function() {\n            var dropdowntree = this._dropdowntree;\n            var selectedNode = dropdowntree.treeview.select();\n            var dropdowntreeHasValue = dropdowntree._values.length;\n            var triggerChange = false;\n            if (dropdowntree.treeview.dataItem(selectedNode)) {\n                dropdowntree.treeview.dataItem(selectedNode).set('selected', false);\n                triggerChange = true;\n            } else if (dropdowntreeHasValue > 0) {\n                triggerChange = true;\n            }\n\n            if (!dropdowntree._valueMethodCalled && triggerChange) {\n                return true;\n            }\n\n            return false;\n        },\n\n        _checkLoadedItem: function(tempItem, value) {\n            var dropdowntree = this._dropdowntree;\n\n            if (!dropdowntree._isNullorUndefined(value) && value !== \"\") {\n                if (dropdowntree._valueComparer(tempItem, value)) {\n                    dropdowntree._preventChangeTrigger = true;\n                    tempItem.set(\"selected\", true);\n                    dropdowntree._preventChangeTrigger = false;\n                } else if (tempItem.selected) {\n                    dropdowntree.treeview.select(dropdowntree.treeview.findByUid(tempItem.uid));\n                }\n\n            } else if (!value && tempItem.selected) {\n                dropdowntree.treeview.select(dropdowntree.treeview.findByUid(tempItem.uid));\n            }\n        }\n    });\n\n    var MultipleSelection = kendo.Class.extend({\n        init: function(view) {\n            this._dropdowntree = view;\n        },\n\n        _initWrapper: function() {\n            var dropdowntree = this._dropdowntree;\n\n            this._tagTemplate();\n            dropdowntree.element.attr(\"multiple\", \"multiple\").hide();\n            this._wrapper();\n            dropdowntree._tags = new ObservableArray([]);\n            dropdowntree._multipleTags = new ObservableArray([]);\n            this._tagList();\n            dropdowntree.span = $('<span unselectable=\"on\" class=\"k-input-inner\"><span class=\"k-input-value-text\"></span></span>').appendTo(dropdowntree.wrapper).find(\".k-input-value-text\");\n        },\n\n        _preselect: function(data, value) {\n            var dropdowntree = this._dropdowntree;\n            var valueToSelect = value || dropdowntree.options.value;\n\n            if (!Array.isArray(data) && !(data instanceof kendo.data.ObservableArray)) {\n                data = [data];\n            }\n\n            if ($.isPlainObject(data[0]) || data[0] instanceof kendo.data.ObservableObject || !dropdowntree.options.dataValueField) {\n                dropdowntree.dataSource.data(data);\n\n                dropdowntree.value(valueToSelect);\n            }\n        },\n\n        _tagTemplate: function() {\n            var dropdowntree = this._dropdowntree;\n            var options = dropdowntree.options;\n            var tagTemplate = options.valueTemplate;\n            var isMultiple = options.tagMode === \"multiple\";\n            var singleTag = encode(options.messages.singleTag);\n\n            tagTemplate = tagTemplate ? kendo.template(tagTemplate) : dropdowntree.valueTemplate;\n\n            dropdowntree.valueTemplate = function(data) {\n                return html.renderChip('<span ' +\n                    'class=\"' + ((data.enabled === false) ? \"k-disabled\" : \"\") + '\"' +\n                    ((data.enabled === false) ? 'aria-disabled=\"true\"' : '') +\n                    '>' +\n                    '</span>', $.extend({}, options, {\n                            fillMode: \"solid\",\n                            themeColor: \"base\",\n                            rounded: \"medium\",\n                            attr: {\n                                unselectable: \"on\",\n                                \"aria-keyshortcuts\": \"Enter Delete\",\n                                role: \"option\"\n                            },\n                            text: (isMultiple ? tagTemplate(data) : ('<span unselectable=\"on\" data-bind=\"text: tags.length\"></span>' +\n                            '<span unselectable=\"on\">&nbsp;' + singleTag + '</span>' )),\n                            removable: isMultiple,\n                            removeIcon: \"x-circle\",\n                            removableAttr: {\n                                unselectable: \"on\",\n                                \"aria-hidden\": true,\n                                \"aria-label\": dropdowntree.options.messages.deleteTag,\n                                title: dropdowntree.options.messages.deleteTag\n                            }\n                        }));\n            };\n        },\n\n        _wrapper: function() {\n            var dropdowntree = this._dropdowntree,\n                element = dropdowntree.element,\n                wrapper = element.parent(\".k-multiselecttree\");\n\n            if (!wrapper[0]) {\n                wrapper = element.wrap('<span class=\"k-multiselecttree k-input\" unselectable=\"on\" />').parent();\n                wrapper[0].style.cssText = element[0].style.cssText;\n                wrapper[0].title = element[0].title;\n            }\n\n            dropdowntree.wrapper = wrapper.addClass(element[0].className).css(\"display\", \"\");\n        },\n\n        _tagList: function() {\n            var dropdowntree = this._dropdowntree,\n                tagList = dropdowntree.wrapper.children(\"div.k-input-values\");\n\n            if (!tagList[0]) {\n                var isMultiple = dropdowntree.options.tagMode === \"multiple\";\n                var tagCollection = isMultiple ? \"tags\" : \"multipleTag\";\n\n                tagList = $(html.renderChipList('<div unselectable=\"on\" class=\"k-input-values k-selection-multiple\" data-template=\"tagTemplate\" data-bind=\"source: ' + tagCollection + '\" />', $.extend({ selectable: \"none\" }, dropdowntree.options))).appendTo(dropdowntree.wrapper);\n            }\n\n            dropdowntree.tagList = tagList;\n            dropdowntree.tagList.attr('id', kendo.guid() + \"_tagList\");\n            dropdowntree.wrapper.attr(\"aria-controls\", dropdowntree.tagList.attr('id'));\n            var viewModel = kendo.observable({\n                multipleTag: dropdowntree._multipleTags,\n                tags: dropdowntree._tags,\n                tagTemplate: dropdowntree.valueTemplate\n            });\n            kendo.bind(dropdowntree.tagList, viewModel);\n            dropdowntree.tagList.attr(\"data-stop\", true);\n        },\n\n        _refreshTagListAria: function() {\n            var that = this;\n            if (that.tagList) {\n                html.renderChipList(that.tagList, $.extend({ selectable: that.tagList.items().length === 0 ? \"none\" : \"multiple\" }, that.options));\n            }\n        },\n\n        _setValue: function(value) {\n            var that = this;\n            var dropdowntree = this._dropdowntree;\n            var oldValues = dropdowntree._values;\n            if (value === undefined$1 || value === null) {\n                return dropdowntree._values.slice();\n            }\n\n            dropdowntree.setValue(value);\n            dropdowntree._valueMethodCalled = true;\n            if (value.length) {\n                this._removeValues(oldValues, value);\n\n                dropdowntree._checkItemByValue(value);\n            } else {\n                dropdowntree._clearTextAndValue();\n            }\n\n            dropdowntree._valueMethodCalled = false;\n            dropdowntree._toggleCloseVisibility();\n            that._refreshTagListAria();\n            dropdowntree._refreshFloatingLabel();\n        },\n\n        _removeValues: function(oldValues, value) {\n            var dropdowntree = this._dropdowntree;\n            var removedValues = this._getNewValues(oldValues, value);\n\n            for (var idx = 0; idx < removedValues.length; idx++) {\n                for (var j = 0; j < dropdowntree._tags.length; j++) {\n                    if (dropdowntree._valueComparer(dropdowntree._tags[j],removedValues[idx])) {\n                        dropdowntree._uncheckItemByUid(dropdowntree._tags[j].uid);\n                    }\n                }\n            }\n        },\n\n        _getNewValues: function(oldValues, value) {\n            var removedValues = [];\n\n            for (var idx = 0; idx < oldValues.length; idx++) {\n                if (value.indexOf(oldValues[idx]) === -1) {\n                    removedValues.push(oldValues[idx]);\n                }\n            }\n\n            return removedValues;\n        },\n\n        _clearValue: function() {\n            var dropdowntree = this._dropdowntree;\n            var tagsArray = dropdowntree._tags.slice();\n\n            for (var idx = 0; idx < tagsArray.length; idx++) {\n                var uid = tagsArray[idx].uid;\n                dropdowntree._preventChangeTrigger = true;\n                dropdowntree._uncheckItemByUid(uid);\n            }\n\n            if (tagsArray.length) {\n                dropdowntree._preventChangeTrigger = false;\n                if (!dropdowntree._valueMethodCalled) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _checkLoadedItem: function(tempItem, value) {\n            var dropdowntree = this._dropdowntree;\n\n            if (dropdowntree._noInitialValue && tempItem.checked) {\n                dropdowntree._checkValue(tempItem);\n                return;\n            }\n\n            if ((value.length || this._isDataSourceSet) &&\n                (value.indexOf(dropdowntree._currentValue(tempItem)) !== -1 || value.indexOf(tempItem)) !== -1 &&\n                !this._findTag(dropdowntree._currentValue(tempItem))) {\n                if (tempItem.checked) {\n                    dropdowntree._checkValue(tempItem);\n                } else {\n                    dropdowntree._preventChangeTrigger = true;\n                    tempItem.set(\"checked\", true);\n                    dropdowntree._preventChangeTrigger = false;\n                }\n            }\n        },\n\n        _findTag: function(tempItemValue) {\n            var dropdowntree = this._dropdowntree;\n\n            return dropdowntree._tags.find(function(item) {\n                return dropdowntree._valueComparer(item, tempItemValue);\n            });\n        }\n    });\n\n    kendo.ui.DropDownTree.SingleSelection = SingleSelection;\n    kendo.ui.DropDownTree.MultipleSelection = MultipleSelection;\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}