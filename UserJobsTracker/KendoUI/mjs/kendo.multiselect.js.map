{"version":3,"sources":["raw-mjs/kendo.multiselect.js"],"names":["$","kendo","jQuery","addInputPrefixSuffixContainers","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefixContainer","suffixContainer","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","__meta__","id","name","category","description","depends","features","undefined$1","window","ui","List","encode","htmlEncode","keys","extend","A","activeElement","_activeElement","ObservableArray","data","ID","CHIP","ACCEPT","FILTER","REBIND","OPEN","CLOSE","CHANGE","SELECT","DESELECT","ARIA_DISABLED","ARIA_READONLY","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_ACTIVEDESCENDANT","ARIA_BUSY","FOCUSEDCLASS","SELECTEDCLASS","HIDDENCLASS","HOVERCLASS","STATEDISABLED","NOCLICKCLASS","DISABLED","READONLY","ns","CLICK","KEYDOWN","MOUSEENTER","MOUSELEAVE","HOVEREVENTS","quotRegExp","isArray","Array","styles","MultiSelect","init","element","that","this","fn","call","_optionsMap","_customOptions","_wrapper","_inputValuesContainer","_tagList","_input","_textContainer","_loader","_clearButton","_arrowButton","_tabindex","input","attr","hide","placeholder","guid","_tagID","tagList","_initialOpen","label","_label","_aria","_dataSource","_ignoreCase","_popup","_tagTemplate","requireValueMapper","_initList","_reset","_enable","_placeholder","autoBind","dataSource","fetch","value","_preselect","parents","is","enable","_toggleCloseVisibility","_applyCssClasses","_loading","floatingLabel","refresh","notify","tagMode","enabled","autoClose","highlightFirst","dataTextField","dataValueField","filter","ignoreCase","minLength","messages","singleTag","clear","deleteTag","noData","downArrow","enforceMinLength","delay","maxSelectedItems","height","animation","virtual","itemTemplate","tagTemplate","groupTemplate","fixedGroupTemplate","clearButton","autoWidth","popup","size","fillMode","rounded","events","setDataSource","_state","persistTagList","listView","setOptions","listOptions","_listOptions","_accessors","currentTag","candidate","_currentTag","removeClass","removeAttr","find","addClass","dataItems","selectedDataItems","destroy","clearTimeout","_busy","_typingTimeout","filterInput","off","_clear","_onActionSheetCreate","on","_keydown","bind","_search","role","val","trigger","ul","autocomplete","tagListId","_ariaLabel","_focused","_activateItem","visible","selectedItemChange","_selectedItemChange","selectable","getter","_setListValue","_initialValues","slice","_listChange","e","flatView","optionsMap","valueGetter","_value","i","added","length","dataItem","_render","_selectValue","removed","context","idx","items","eq","index","first","tagTextTemplate","item","_wrapperMousedown","notInput","target","nodeName","toLowerCase","closeButton","closest","removeButton","support","mobileOS","cancelable","preventDefault","toggle","open","_inputFocus","_inputFocusout","relatedTarget","close","skipUpdate","bound","isFiltered","_clearFilter","_removeTag","tag","shouldTrigger","option","state","position","customIndex","listViewChildren","_close","done","_change","_refreshTagListAria","select","selected","removeAt","_removedAddedIndexes","splice","classList","remove","_updateTagListHTML","_tagListClick","stopPropagation","currentTarget","_clearValue","_clearSingleTagValue","each","focus","_hideClear","tags","_focusHandler","active","_editable","disable","readonly","toggleClass","prop","_toggleHover","_filterSource","force","_retrieveData","_activeItem","filterValue","listViewFilter","listViewFilterValue","filters","toString","_request","_open","_focusItem","_allowOpening","isPlainObject","_hovered","altTarget","add","_floatCheck","_listBound","_renderFooter","_renderNoData","_toggleNoData","_resizePopup","_updateItemFocus","_touchScroller","reset","_hideBusy","skip","isFirstPage","focusFirst","_inputValue","inputValue","oldValue","clearFilters","_normalizeValues","_old","_valueBeforeCascade","_fetchData","ObservableObject","_setOption","hasItems","view","_fetch","read","_isBound","fields","field","_refreshHandler","_unbindDataSource","_progressHandler","_showBusy","_errorHandler","DataSource","create","formId","form","_resetHandler","setTimeout","_form","_initValue","map","a","b","compare","_click","_select","_getActiveItem","_getSelectedIndices","_selectedIndices","_selectedIndexes","activeItemIdx","key","keyCode","hasValue","isRtl","dir","handled","ENTER","_multipleSelection","DOWN","shiftKey","getElementIndex","focusNext","_selectRange","focusLast","UP","focusPrev","LEFT","RIGHT","prev","last","next","ctrlKey","altKey","hasClass","SPACEBAR","activeIndex","currentIndex","ESC","HOME","END","DELETE","BACKSPACE","PAGEDOWN","PAGEUP","direction","scrollWith","screenHeight","_showBusyHandler","show","skipCaret","isActive","caretPos","_prev","caret","_option","dataValue","dataText","indexOf","replace","selectedIndex","selectedItems","values","_buildSelectedItems","custom","_selectedItemIndex","_text","valueField","textField","result","push","noDelay","_performSearch","search","_showClear","_allowSelection","max","updatePersistTagList","removedItem","addedItem","total","removeChild","append","applyStylesFromKendoAttributes","_maxTotal","_refreshFloatingLabel","renderChipList","maxTotal","currentTotal","resolved","Deferred","resolve","dataItemByIndex","isSelected","startIndex","endIndex","indices","indicesToSelect","selectIndices","forEach","accessKey","title","inputValuesContainer","defaultTemplate","hasDataSource","isMultiple","renderChip","themeColor","text","unselectable","removable","removableAttr","iconAttr","arrowTitle","arrow","renderButton","_arrow","tabIndex","computedStyles","getComputedStyles","visibility","top","left","_span","css","parent","wrap","style","cssText","className","_closeHandler","_openHandler","_adjustListWidth","plugin","cssProperties","registerPrefix","registerValues","roundedValues","concat","kendo$1"],"mappings":"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","file":"kendo.multiselect.js","sourcesContent":["import './kendo.list.js';\nimport './kendo.mobile.scroller.js';\nimport './kendo.virtuallist.js';\nimport './kendo.html.chip.js';\nimport './kendo.html.chiplist.js';\nimport './kendo.html.button.js';\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"multiselect\",\n    name: \"MultiSelect\",\n    category: \"web\",\n    description: \"The MultiSelect widget allows the selection from pre-defined values.\",\n    depends: [ \"list\", \"html.chip\", \"html.chiplist\", \"html.button\" ],\n    features: [ {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }, {\n        id: \"virtualization\",\n        name: \"VirtualList\",\n        description: \"Support for virtualization\",\n        depends: [ \"virtuallist\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        List = ui.List,\n        encode = kendo.htmlEncode,\n        html = kendo.html,\n        keys = $.extend({ A: 65 }, kendo.keys),\n        activeElement = kendo._activeElement,\n        ObservableArray = kendo.data.ObservableArray,\n        ID = \"id\",\n        CHIP = \".k-chip\",\n        ACCEPT = \"accept\",\n        FILTER = \"filter\",\n        REBIND = \"rebind\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CHANGE = \"change\",\n        PROGRESS = \"progress\",\n        SELECT = \"select\",\n        DESELECT = \"deselect\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        ARIA_BUSY = \"aria-busy\",\n        FOCUSEDCLASS = \"k-focus\",\n        SELECTEDCLASS = \"k-selected\",\n        HIDDENCLASS = \"k-hidden\",\n        HOVERCLASS = \"k-hover\",\n        STATEDISABLED = \"k-disabled\",\n        NOCLICKCLASS = \"k-no-click\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        AUTOCOMPLETEVALUE = \"off\",\n        ns = \".kendoMultiSelect\",\n        CLICK = \"click\" + ns,\n        KEYDOWN = \"keydown\" + ns,\n        MOUSEENTER = \"mouseenter\" + ns,\n        MOUSELEAVE = \"mouseleave\" + ns,\n        HOVEREVENTS = MOUSEENTER + \" \" + MOUSELEAVE,\n        quotRegExp = /\"/g,\n        isArray = Array.isArray,\n        styles = [\"font-family\",\n                  \"font-size\",\n                  \"font-stretch\",\n                  \"font-style\",\n                  \"font-weight\",\n                  \"letter-spacing\",\n                  \"text-transform\",\n                  \"line-height\"];\n\n    var MultiSelect = List.extend({\n        init: function(element, options) {\n            var that = this, id, disabled;\n\n            that.ns = ns;\n            List.fn.init.call(that, element, options);\n\n            that._optionsMap = {};\n            that._customOptions = {};\n\n            that._wrapper();\n            that._inputValuesContainer();\n            that._tagList();\n            that._input();\n            that._textContainer();\n            that._loader();\n            that._clearButton();\n            that._arrowButton();\n\n            that._tabindex(that.input);\n\n            element = that.element.attr(\"multiple\", \"multiple\").hide();\n            options = that.options;\n\n            if (!options.placeholder) {\n                options.placeholder = element.data(\"placeholder\");\n            }\n\n            id = element.attr(ID);\n\n            if (!id) {\n                id = kendo.guid();\n            }\n\n            if (id) {\n                that._tagID = id + \"_tag_active\";\n                id = id + \"_taglist\";\n                that.tagList.attr(ID, id);\n            }\n\n            that._initialOpen = true;\n\n            if (options.label) {\n                this._label();\n            }\n\n            that._aria();\n\n            that._dataSource();\n            that._ignoreCase();\n            that._popup();\n\n            that._tagTemplate();\n            that.requireValueMapper(that.options);\n            that._initList();\n\n            that._reset();\n            that._enable();\n            that._placeholder();\n\n            if (options.autoBind) {\n                that.dataSource.fetch();\n            } else if (options.value) {\n                that._preselect(options.value);\n            }\n\n            disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            }\n\n            that._toggleCloseVisibility();\n            that._applyCssClasses();\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._inputValuesContainer, suffixInsertAfter: that._loading });\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"MultiSelect\",\n            tagMode: \"multiple\",\n            enabled: true,\n            autoBind: true,\n            autoClose: true,\n            highlightFirst: true,\n            dataTextField: \"\",\n            dataValueField: \"\",\n            filter: \"startswith\",\n            ignoreCase: true,\n            minLength: 1,\n            messages: {\n                \"singleTag\": \"item(s) selected\",\n                \"clear\": \"clear\",\n                \"deleteTag\": \"delete\",\n                \"noData\": \"No data found.\",\n                \"downArrow\": \"select\"\n            },\n            enforceMinLength: false,\n            delay: 100,\n            value: null,\n            maxSelectedItems: null,\n            placeholder: \"\",\n            height: 200,\n            animation: {},\n            virtual: false,\n            itemTemplate: \"\",\n            tagTemplate: \"\",\n            groupTemplate: (data) => encode(data),\n            fixedGroupTemplate: (data) => encode(data),\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            },\n            clearButton: true,\n            autoWidth: false,\n            popup: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null\n        },\n\n        events: [\n            OPEN,\n            CLOSE,\n            CHANGE,\n            SELECT,\n            DESELECT,\n            \"filtering\",\n            \"dataBinding\",\n            \"dataBound\"\n        ],\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._state = \"\";\n            this._dataSource();\n\n            this.persistTagList = false;\n            this.listView.setDataSource(this.dataSource);\n\n            if (this.options.autoBind) {\n                this.dataSource.fetch();\n            }\n        },\n\n        setOptions: function(options) {\n            var listOptions = this._listOptions(options);\n\n            List.fn.setOptions.call(this, options);\n\n            this.listView.setOptions(listOptions);\n\n\n            this._accessors();\n            this._aria();\n            this._tagTemplate();\n            this._placeholder();\n            this._clearButton();\n            this._arrowButton();\n        },\n\n        currentTag: function(candidate) {\n            var that = this;\n\n            if (candidate !== undefined$1) {\n                if (that._currentTag) {\n                    that._currentTag\n                        .removeClass(FOCUSEDCLASS)\n                        .removeAttr(ID);\n\n                    that._currentTag.find(\".k-chip-action\").attr(ARIA_HIDDEN, true);\n\n                    that.input.removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n\n                if (candidate) {\n                    candidate.addClass(FOCUSEDCLASS).attr(ID, that._tagID);\n\n                    candidate.find(\".k-chip-action\").removeAttr(ARIA_HIDDEN);\n\n                    that.input.attr(ARIA_ACTIVEDESCENDANT, that._tagID);\n                }\n\n                that._currentTag = candidate;\n            } else {\n                return that._currentTag;\n            }\n        },\n\n        dataItems: function() {\n            return this.listView.selectedDataItems();\n        },\n\n        destroy: function() {\n            var that = this,\n                ns = that.ns;\n\n            clearTimeout(that._busy);\n            clearTimeout(that._typingTimeout);\n\n            if (that.filterInput) {\n                that.filterInput.off(ns);\n            }\n\n            that.wrapper.off(ns);\n            that.tagList.off(ns);\n            that.input.off(ns);\n            that._clear.off(ns);\n\n            List.fn.destroy.call(that);\n        },\n\n        _onActionSheetCreate: function() {\n            var that = this;\n\n            that.filterInput\n                .on(\"keydown\" + ns, that._keydown.bind(that))\n                .on(\"input\" + ns, that._search.bind(that))\n                .on(\"paste\" + ns, that._search.bind(that))\n                .attr({\n                    \"role\": \"combobox\",\n                    \"aria-expanded\": false,\n                    \"aria-controls\": that.input.attr(\"aria-controls\"),\n                    \"aria-autocomplete\": that.input.attr(\"aria-autocomplete\"),\n                    \"aria-describedby\": that.input.attr(\"aria-describedby\")\n                });\n\n            that.popup.bind(\"activate\", () => {\n                that.filterInput.val(that.input.val());\n                that.filterInput.trigger(\"focus\");\n            });\n\n            that.popup.bind(\"close\", () => {\n                that.input.trigger(\"focus\");\n            });\n        },\n\n        _aria: function() {\n            var that = this,\n                id = that.ul[0].id,\n                autocomplete = this.options.filter === \"none\" ? \"none\" : \"list\",\n                tagListId = that.tagList.attr(ID);\n\n            that.input.attr({\n                \"role\": \"combobox\",\n                \"aria-expanded\": false,\n                \"aria-controls\": id,\n                \"aria-autocomplete\": autocomplete,\n                \"aria-describedby\": tagListId\n            });\n\n            that._ariaLabel(that._focused);\n        },\n\n        _activateItem: function() {\n            if (this.popup.visible()) {\n                List.fn._activateItem.call(this);\n            }\n            this.currentTag(null);\n        },\n\n        _listOptions: function(options) {\n            var that = this;\n            var listOptions = List.fn._listOptions.call(that, $.extend(options, {\n                selectedItemChange: that._selectedItemChange.bind(that),\n                selectable: \"multiple\"\n            }));\n\n            var itemTemplate = this.options.itemTemplate || this.options.template;\n            var template = listOptions.itemTemplate || itemTemplate || listOptions.template;\n\n            if (!template) {\n                template = data => encode(kendo.getter(listOptions.dataTextField)(data));\n            }\n\n            listOptions.template = template;\n\n            return listOptions;\n        },\n\n        _setListValue: function() {\n            List.fn._setListValue.call(this, this._initialValues.slice(0));\n        },\n\n        _listChange: function(e) {\n            var data = this.dataSource.flatView();\n            var optionsMap = this._optionsMap;\n            var valueGetter = this._value;\n\n            if (this._state === REBIND) {\n                this._state = \"\";\n            }\n\n            for (var i = 0; i < e.added.length; i++) {\n                if (optionsMap[valueGetter(e.added[i].dataItem)] === undefined$1) {\n                    this._render(data); //render select element <option> tags if the item does not persist in the current data view\n                    break;\n                }\n            }\n\n            this._selectValue(e.added, e.removed);\n        },\n\n        _selectedItemChange: function(e) {\n            var items = e.items;\n            var context;\n            var idx;\n\n            for (idx = 0; idx < items.length; idx++) {\n                context = items[idx];\n                this.tagList.children(CHIP).eq(context.index).children(\"span\").first().html(this.tagTextTemplate(context.item));\n            }\n        },\n\n        _wrapperMousedown: function(e) {\n            var that = this;\n            var notInput = e.target.nodeName.toLowerCase() !== \"input\";\n            var target = $(e.target);\n            var closeButton = target.closest(\".k-input-button, .k-chip\").children(\"[class*='-i-caret-alt-down']\")[0];\n            var removeButton = target.closest(\"[class*='-i-x']\")[0];\n\n            if (notInput && !(removeButton && kendo.support.mobileOS) && e.cancelable) {\n                e.preventDefault();\n            }\n\n            if (!removeButton) {\n                if (closeButton && that.popup.visible()) {\n                    that.toggle(false);\n                } else {\n                    if (that.input[0] !== activeElement() && notInput) {\n                        that.input.trigger(\"focus\");\n                    }\n\n                    if (that.options.minLength === 1 && !that.popup.visible()) {\n                        that.open();\n                    }\n                }\n            }\n\n        },\n\n        _inputFocus: function() {\n            this._placeholder(false, true);\n            this.wrapper.addClass(FOCUSEDCLASS);\n        },\n\n        _inputFocusout: function(e) {\n            var that = this;\n\n            if (that.filterInput && e.relatedTarget === that.filterInput[0]) {\n                return;\n            }\n\n            clearTimeout(that._typingTimeout);\n\n            that.wrapper.removeClass(FOCUSEDCLASS);\n\n            that._placeholder(!that.listView.selectedDataItems()[0], true);\n            that.close();\n\n            if (that._state === FILTER) {\n                that._state = ACCEPT;\n                that.listView.skipUpdate(true);\n            }\n\n            if (that.listView.bound() && that.listView.isFiltered()) {\n                that.persistTagList = true;\n                that._clearFilter();\n            }\n\n            that.element.trigger(\"blur\");\n        },\n\n        _removeTag: function(tag, shouldTrigger) {\n            var that = this;\n            var state = that._state;\n            var position = tag.index();\n            var listView = that.listView;\n            var value = listView.value()[position];\n            var dataItem = that.listView.selectedDataItems()[position];\n            var customIndex = that._customOptions[value];\n            var listViewChildren = listView.element[0].children;\n            var option;\n            var listViewChild;\n\n            if (that.trigger(DESELECT, { dataItem: dataItem, item: tag })) {\n                that._close();\n                return;\n            }\n\n            if (customIndex === undefined$1 && (state === ACCEPT || state === FILTER)) {\n                customIndex = that._optionsMap[value];\n            }\n\n            var done = function() {\n                that.currentTag(null);\n                if (shouldTrigger) {\n                    that._change();\n                }\n\n                that._refreshTagListAria();\n                that._close();\n            };\n\n            if (customIndex === undefined$1 && listView.select().length) {\n                that.persistTagList = false;\n                listView.select(listView.select()[position]).done(done);\n            } else {\n                option = that.element[0].children[customIndex];\n                if (option) {\n                    option.selected = false;\n                }\n\n                listView.removeAt(position);\n\n                if (listView._removedAddedIndexes) {\n                    listView._removedAddedIndexes.splice(position, 1);\n                }\n\n                listViewChild = listViewChildren[customIndex];\n                if (listViewChild) {\n                    listViewChildren[customIndex].classList.remove(\"k-selected\");\n                }\n                if (that.options.tagMode !== \"single\") {\n                    tag.remove();\n                } else {\n                    that._updateTagListHTML();\n                }\n                done();\n            }\n        },\n\n        _tagListClick: function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var target = $(e.currentTarget);\n\n            if (target.is(\"[class*='-i-x-circle']\")) {\n                this._removeTag(target.closest(CHIP), true);\n            }\n        },\n\n        _clearValue: function() {\n            var that = this;\n\n            if (that.options.tagMode === \"single\") {\n                that._clearSingleTagValue();\n            } else {\n                that.tagList.children(CHIP).each(function(index, tag) {\n                    that._removeTag($(tag), false);\n                });\n            }\n\n            that.input.val(\"\");\n            that._search(true);\n            that._change();\n            that.focus();\n            that._hideClear();\n\n            if (that._state === FILTER) {\n                that._state = ACCEPT;\n            }\n        },\n\n        _clearSingleTagValue: function() {\n            var that = this;\n            var items = that.dataItems();\n            var tags = that.tagList.children(CHIP);\n            var persistTagList = that.persistTagList;\n\n            for (var i = 0; i < items.length; i += 1) {\n                if (that.trigger(DESELECT, { dataItem: items[i], item: tags.first() })) {\n                    that._close();\n                    return;\n                }\n            }\n\n            if (persistTagList) {\n                that.persistTagList = false;\n            }\n\n            that.listView.value([]);\n            that.persistTagList = persistTagList;\n        },\n\n        _focusHandler: function() {\n            var input = this.input;\n            var active = activeElement();\n            var isActive = input[0] === active;\n\n            if (!isActive) {\n                this.input.trigger(\"focus\");\n            }\n        },\n\n        _editable: function(options) {\n            var that = this,\n                disable = options.disable,\n                readonly = options.readonly,\n                wrapper = that.wrapper.off(ns),\n                tagList = that.tagList.off(ns),\n                input = that.input.off(ns);\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .removeClass(NOCLICKCLASS)\n                    .on(HOVEREVENTS, that._toggleHover)\n                    .on(\"mousedown\" + ns + \" touchend\" + ns, that._wrapperMousedown.bind(that))\n                    .on(CLICK, that._focusHandler.bind(that));\n\n                that.input.on(KEYDOWN, that._keydown.bind(that))\n                    .on(\"paste\" + ns, that._search.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"focus\" + ns, that._inputFocus.bind(that))\n                    .on(\"focusout\" + ns, that._inputFocusout.bind(that));\n\n                that._clear.on(CLICK + \" touchend\" + ns, that._clearValue.bind(that));\n\n                input.prop(DISABLED, false)\n                     .prop(READONLY, false)\n                     .attr(ARIA_DISABLED, false)\n                     .attr(ARIA_READONLY, false);\n\n                that.element.prop(DISABLED, false);\n\n                tagList\n                    .on(MOUSEENTER, CHIP, function() { $(this).addClass(HOVERCLASS); })\n                    .on(MOUSELEAVE, CHIP, function() { $(this).removeClass(HOVERCLASS); })\n                    .on(CLICK + \" touchend\" + ns, \".k-chip .k-icon,.k-chip .k-svg-icon\", that._tagListClick.bind(that));\n            } else {\n\n                wrapper.toggleClass(STATEDISABLED, disable)\n                       .toggleClass(NOCLICKCLASS, readonly);\n\n                input.attr(DISABLED, disable)\n                     .attr(READONLY, readonly)\n                     .attr(ARIA_DISABLED, disable)\n                     .attr(ARIA_READONLY, readonly);\n\n                that.element.prop(DISABLED, disable);\n            }\n        },\n\n        _close: function() {\n            var that = this;\n            if (that.options.autoClose) {\n                that.close();\n            } else {\n                that.popup.position();\n            }\n        },\n\n        _filterSource: function(filter, force) {\n            if (!force) {\n                force = this._retrieveData;\n            }\n            this._retrieveData = false;\n            List.fn._filterSource.call(this, filter, force);\n        },\n\n        close: function() {\n            this._activeItem = null;\n            this.input.removeAttr(ARIA_ACTIVEDESCENDANT);\n\n            this.popup.close();\n        },\n\n        open: function() {\n            var that = this,\n                filterValue = that.input.val().toLowerCase(),\n                listViewFilter = that.listView.dataSource.filter(),\n                listViewFilterValue = \"\";\n\n            if (listViewFilter && listViewFilter.filters.length > 0) {\n                listViewFilterValue = (listViewFilter.filters[0].value || \"\").toString().toLowerCase();\n            }\n\n            if (that._request) {\n                that._retrieveData = false;\n            }\n\n            if (that._retrieveData || !that.listView.bound() || (that._state === ACCEPT && filterValue !== listViewFilterValue)) {\n                that._open = true;\n                that._state = REBIND;\n\n                that.listView.skipUpdate(true);\n\n                that.persistTagList = that._initialOpen && !that.listView.bound() ? false : true;\n                that._filterSource();\n                that._focusItem();\n            } else if (that._allowOpening()) {\n\n                //selects values in autoBind false and non virtual scenario on initial load\n                if (that._initialOpen && !that.options.autoBind && !that.options.virtual && that.options.value && !$.isPlainObject(that.options.value[0])) {\n                    that.value(that.value() || that._initialValues);\n                }\n\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                that.popup._hovered = true;\n                that._initialOpen = false;\n                that.popup.open({ altTarget: that.wrapper.add(that.element).add(that.input) });\n                that._focusItem();\n            }\n        },\n\n        toggle: function(toggle) {\n            toggle = toggle !== undefined$1 ? toggle : !this.popup.visible();\n\n            this[toggle ? OPEN : CLOSE]();\n        },\n\n        refresh: function() {\n            this.listView.refresh();\n        },\n\n        _floatCheck: function() {\n            if (this.listView) {\n                var hasValue = (this.value() && this.value().length);\n                return !hasValue && !this.popup.visible();\n            }\n\n            return true;\n        },\n\n        _listBound: function() {\n            var that = this;\n            var data = that.dataSource.flatView();\n\n            that._render(data);\n            that._renderFooter();\n            that._renderNoData();\n            that._toggleNoData(!data.length);\n            that._resizePopup();\n\n            if (that._open) {\n                that._open = false;\n                that.toggle(that._allowOpening());\n            }\n\n            that.popup.position();\n            that._updateItemFocus();\n\n            if (that._touchScroller) {\n                that._touchScroller.reset();\n            }\n\n            that._hideBusy();\n\n            that.trigger(\"dataBound\");\n        },\n\n        _updateItemFocus: function() {\n            var that = this,\n                data = that.dataSource.flatView(),\n                skip = that.listView.skip(),\n                isFirstPage = skip === undefined$1 || skip === 0;\n\n            if (data.length && isFirstPage) {\n                if (!that.options.highlightFirst) {\n                    that.listView.focus(-1);\n                } else {\n                    that.listView.focusFirst();\n                }\n            }\n        },\n\n        _inputValue: function() {\n            var that = this;\n            var inputValue = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput.val() : that.input.val();\n\n            if (that.options.placeholder === inputValue) {\n                inputValue = \"\";\n            }\n            return inputValue;\n        },\n\n        value: function(value) {\n            var that = this;\n            var listView = that.listView;\n            var oldValue = listView.value().slice();\n            var maxSelectedItems = that.options.maxSelectedItems;\n            var clearFilters = listView.bound() && listView.isFiltered();\n\n            if (value === undefined$1) {\n                return oldValue;\n            }\n\n            that.persistTagList = false;\n            that.requireValueMapper(that.options, value);\n\n            value = that._normalizeValues(value);\n\n            if (maxSelectedItems !== null && value.length > maxSelectedItems) {\n                value = value.slice(0, maxSelectedItems);\n            }\n\n            if (clearFilters) {\n                that._clearFilter();\n            }\n\n            listView.value(value);\n            that._old = that._valueBeforeCascade = value.slice(); //get a new array reference\n\n            if (!clearFilters) {\n                that._fetchData();\n            }\n\n            that._toggleCloseVisibility();\n        },\n\n        _preselect: function(data, value) {\n            var that = this;\n\n            if (!isArray(data) && !(data instanceof kendo.data.ObservableArray)) {\n                data = [data];\n            }\n\n            if ($.isPlainObject(data[0]) || data[0] instanceof kendo.data.ObservableObject || !that.options.dataValueField) {\n                that.dataSource.data(data);\n                that.value(value || that._initialValues);\n                that._retrieveData = true;\n            }\n        },\n\n        _setOption: function(value, selected) {\n            var option = this.element[0].children[this._optionsMap[value]];\n\n            if (option) {\n                option.selected = selected;\n            }\n        },\n\n        _fetchData: function() {\n            var that = this;\n            var hasItems = !!that.dataSource.view().length;\n            var isEmptyArray = that.listView.value().length === 0;\n\n            if (isEmptyArray || that._request) {\n                return;\n            }\n\n            if (that._retrieveData || (!that._fetch && !hasItems)) {\n                that._fetch = true;\n                that._retrieveData = false;\n                that.dataSource.read().done(function() {\n                    that._fetch = false;\n                });\n            }\n        },\n\n        _isBound: function() {\n            return this.listView.bound() && !this._retrieveData;\n        },\n\n        _dataSource: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                dataSource = options.dataSource || {};\n\n            dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            dataSource.select = element;\n            dataSource.fields = [{ field: options.dataTextField },\n                                 { field: options.dataValueField }];\n\n            if (that.dataSource && that._refreshHandler) {\n                that._unbindDataSource();\n            } else {\n                that._progressHandler = that._showBusy.bind(that);\n                that._errorHandler = that._hideBusy.bind(that);\n            }\n\n            that.dataSource = kendo.data.DataSource.create(dataSource)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(\"error\", that._errorHandler);\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(that._initialValues);\n                        that._placeholder();\n                    });\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _initValue: function() {\n            var value = this.options.value || this.element.val();\n\n            this._old = this._initialValues = this._normalizeValues(value);\n        },\n\n        _normalizeValues: function(value) {\n            var that = this;\n\n            if (value === null) {\n                value = [];\n            } else if (value && $.isPlainObject(value)) {\n                value = [that._value(value)];\n            } else if (value && $.isPlainObject(value[0])) {\n                value = $.map(value, function(dataItem) { return that._value(dataItem); });\n            } else if (!isArray(value) && !(value instanceof ObservableArray)) {\n                value = [value];\n            } else if (isArray(value)) {\n                value = value.slice();\n            }\n\n            return value;\n        },\n\n        _change: function() {\n            var that = this,\n                value = that.value();\n\n            if (!compare(value, that._old)) {\n                that._old = value.slice();\n\n                that.trigger(CHANGE);\n\n                // trigger the DOM change event so any subscriber gets notified\n                that.element.trigger(CHANGE);\n            }\n            that.popup.position();\n\n            that._toggleCloseVisibility();\n        },\n\n        _click: function(e) {\n            var that = this;\n            var item = e.item;\n\n            e.preventDefault();\n\n            that._select(item).done(function() {\n                that._activeItem = item;\n                that._change();\n                that._close();\n            });\n        },\n\n        _getActiveItem: function() {\n            return this._activeItem || $(this.listView.items()[this._getSelectedIndices().length - 1]) || this.listView.focus();\n        },\n\n        _getSelectedIndices: function() {\n            return this.listView._selectedIndices || this.listView._selectedIndexes;\n        },\n\n        _keydown: function(e) {\n            var that = this;\n            var key = e.keyCode;\n            var tag = that._currentTag;\n            var listView = that.listView;\n            var hasValue = that.input.val();\n            var isRtl = kendo.support.isRtl(that.wrapper);\n            var visible = that.popup.visible();\n            var dir = 0;\n            var activeItemIdx;\n            var handled = false;\n\n            if (key !== keys.ENTER) {\n                this._multipleSelection = false;\n            }\n\n            if (key === keys.DOWN) {\n                e.preventDefault();\n\n                if (!visible) {\n                    that.open();\n\n                    if (!listView.focus()) {\n                        listView.focusFirst();\n                    }\n                    e.stopPropagation();\n                    return;\n                }\n\n                if (listView.focus()) {\n                    if (!that._activeItem && e.shiftKey) {\n                        that._activeItem = listView.focus();\n                        dir = -1;\n                    }\n                    activeItemIdx = listView.getElementIndex(that._getActiveItem().first());\n\n                    listView.focusNext();\n                    if (!listView.focus()) {\n                        listView.focusLast();\n                    } else {\n                        if (e.shiftKey && !that.options.virtual) {\n                            this._multipleSelection = true;\n                            that._selectRange(activeItemIdx, listView.getElementIndex(listView.focus().first()) + dir);\n                        }\n                    }\n                } else {\n                    listView.focusFirst();\n                }\n                handled = true;\n\n            } else if (key === keys.UP) {\n                if (visible) {\n                    if (!that._activeItem && e.shiftKey) {\n                        that._activeItem = listView.focus();\n                        dir = 1;\n                    }\n                    activeItemIdx = listView.getElementIndex(that._getActiveItem().first());\n                    listView.focusPrev();\n                    if (!listView.focus()) {\n                        that.close();\n                    } else {\n                        if (e.shiftKey && !that.options.virtual) {\n                            this._multipleSelection = true;\n                            that._selectRange(activeItemIdx, listView.getElementIndex(listView.focus().first()) + dir);\n                        }\n                    }\n                }\n                handled = true;\n                e.preventDefault();\n            } else if ((key === keys.LEFT && !isRtl) || (key === keys.RIGHT && isRtl)) {\n                if (!hasValue) {\n                    tag = tag ? tag.prev(CHIP) : that.tagList.children(CHIP).last();\n                    if (tag[0]) {\n                        that.currentTag(tag);\n                    }\n                }\n                handled = true;\n            } else if ((key === keys.RIGHT && !isRtl) || (key === keys.LEFT && isRtl)) {\n                if (!hasValue && tag) {\n                    tag = tag.next(CHIP);\n                    that.currentTag(tag[0] ? tag : null);\n                }\n                handled = true;\n            } else if (e.ctrlKey && !e.altKey && key === keys.A && visible && !that.options.virtual) {\n                this._multipleSelection = true;\n                if (this._getSelectedIndices().length === listView.items().length) {\n                    that._activeItem = null;\n                }\n\n                if (listView.items().length) {\n                    that._selectRange(0, listView.items().length - 1);\n                }\n                handled = true;\n            } else if (key === keys.ENTER && visible) {\n                if (!listView.focus()) {\n                    e.stopPropagation();\n                    return;\n                }\n\n                e.preventDefault();\n\n                if (this._multipleSelection) {\n                    this._multipleSelection = false;\n                     if (listView.focus().hasClass(SELECTEDCLASS)) {\n                        that._close();\n                        e.stopPropagation();\n                        return;\n                    }\n                }\n\n                that._select(listView.focus()).done(function() {\n                    that._change();\n                    that._close();\n                });\n                handled = true;\n            } else if (key === keys.SPACEBAR && e.ctrlKey && visible) {\n                if (that._activeItem && listView.focus() && listView.focus()[0] === that._activeItem[0]) {\n                    that._activeItem = null;\n                }\n                if (!$(listView.focus()).hasClass(SELECTEDCLASS)) {\n                    that._activeItem = listView.focus();\n                }\n                that._select(listView.focus()).done(function() {\n                    that._change();\n                });\n                handled = true;\n                e.preventDefault();\n            } else if (key === keys.SPACEBAR && e.shiftKey && visible && !that.options.virtual) {\n                var activeIndex = listView.getElementIndex(that._getActiveItem());\n                var currentIndex = listView.getElementIndex(listView.focus());\n\n                if (activeIndex !== undefined$1 && currentIndex !== undefined$1) {\n                    that._selectRange(activeIndex, currentIndex);\n                }\n                handled = true;\n                e.preventDefault();\n            } else if (key === keys.ESC) {\n                if (visible) {\n                    e.preventDefault();\n                } else {\n                    that.tagList.children(CHIP).each(function(index, tag) {\n                        that._removeTag($(tag), false);\n                    });\n                    that._change();\n                }\n\n                that.close();\n                handled = true;\n            } else if (key === keys.HOME) {\n                if (visible) {\n                    if (!listView.focus()) {\n                        that.close();\n                    } else {\n                        if (e.ctrlKey && e.shiftKey && !that.options.virtual) {\n                            that._selectRange(listView.getElementIndex(listView.focus()[0]), 0);\n                        }\n                        listView.focusFirst();\n                    }\n                } else if (!hasValue) {\n                    tag = that.tagList.children(CHIP).first()[0];\n\n                    if (tag) {\n                        that.currentTag($(tag));\n                    }\n                }\n                handled = true;\n            } else if (key === keys.END) {\n                if (visible) {\n                    if (!listView.focus()) {\n                        that.close();\n                    } else {\n                        if (e.ctrlKey && e.shiftKey && !that.options.virtual) {\n                            that._selectRange(\n                                listView.getElementIndex(listView.focus()[0]),\n                                listView.element.children().length - 1\n                            );\n                        }\n                        listView.focusLast();\n                    }\n                } else if (!hasValue) {\n                    tag = that.tagList.children(CHIP).last()[0];\n\n                    if (tag) {\n                        that.currentTag($(tag));\n                    }\n                }\n                handled = true;\n            } else if ((key === keys.DELETE || key === keys.BACKSPACE) && !hasValue) {\n                that._state = ACCEPT;\n\n                if (that.options.tagMode === \"single\") {\n                    that._clearSingleTagValue();\n\n                    that._change();\n                    that._close();\n                    e.stopPropagation();\n                    return;\n                }\n\n                if (key === keys.BACKSPACE && !tag) {\n                    tag = that.tagList.children(CHIP).last();\n                }\n\n                if (tag && tag[0]) {\n                    that._removeTag(tag, true);\n                }\n                handled = true;\n            } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                e.preventDefault();\n\n                var direction = key === keys.PAGEDOWN ? 1 : -1;\n                listView.scrollWith(direction * listView.screenHeight());\n                handled = true;\n            } else {\n                clearTimeout(that._typingTimeout);\n                that._search();\n                handled = true;\n            }\n\n            if (handled) {\n                e.stopPropagation();\n            }\n        },\n\n        _hideBusy: function() {\n            var that = this;\n            clearTimeout(that._busy);\n            that.input.attr(ARIA_BUSY, false);\n            that._loading.addClass(HIDDENCLASS);\n            that._request = false;\n            that._busy = null;\n\n            that._toggleCloseVisibility();\n        },\n\n        _showBusyHandler: function() {\n            this.input.attr(ARIA_BUSY, true);\n            this._loading.removeClass(HIDDENCLASS);\n            this._hideClear();\n        },\n\n        _showBusy: function() {\n            var that = this;\n\n            that._request = true;\n\n            if (that._busy) {\n                return;\n            }\n\n            that._busy = setTimeout(that._showBusyHandler.bind(that), 100);\n        },\n\n        _placeholder: function(show, skipCaret) {\n            var that = this;\n            var input = that.input;\n            var active = activeElement();\n            var placeholder = that.options.placeholder;\n            var inputValue = input.val();\n            var isActive = input[0] === active;\n            var caretPos = inputValue.length;\n\n            if (!isActive || that.options.autoClose || inputValue === placeholder) {\n                caretPos = 0;\n                inputValue = \"\";\n            }\n\n            if (show === undefined$1) {\n                show = false;\n                if (input[0] !== active) {\n                    show = !that.listView.selectedDataItems()[0];\n                }\n            }\n\n            that._prev = inputValue;\n            input.toggleClass(\"k-readonly\", show).val(show ? placeholder : inputValue);\n\n            if (isActive && !skipCaret) {\n                kendo.caret(input[0], caretPos, caretPos);\n            }\n        },\n\n        _option: function(dataValue, dataText, selected) {\n            var option = \"<option\";\n\n            if (dataValue !== undefined$1) {\n                dataValue += \"\";\n\n                if (dataValue.indexOf('\"') !== -1) {\n                    dataValue = dataValue.replace(quotRegExp, \"&quot;\");\n                }\n\n                option += ' value=\"' + dataValue + '\"';\n            }\n\n            if (selected) {\n                option += ' selected';\n            }\n\n            option += \">\";\n\n            if (dataText !== undefined$1) {\n                option += kendo.htmlEncode(dataText);\n            }\n\n            return option += \"</option>\";\n        },\n\n        _render: function(data) {\n            var selectedItems = this.listView.selectedDataItems();\n            var values = this.listView.value();\n            var length = data.length;\n            var selectedIndex;\n            var options = \"\";\n            var dataItem;\n            var value;\n            var idx;\n\n            if (values.length !== selectedItems.length) {\n                selectedItems = this._buildSelectedItems(values);\n            }\n\n            var custom = {};\n            var optionsMap = {};\n\n            for (idx = 0; idx < length; idx++) {\n                dataItem = data[idx];\n                value = this._value(dataItem);\n\n                selectedIndex = this._selectedItemIndex(value, selectedItems);\n                if (selectedIndex !== -1) {\n                    selectedItems.splice(selectedIndex, 1);\n                }\n\n                optionsMap[value] = idx;\n                options += this._option(value, this._text(dataItem), selectedIndex !== -1);\n            }\n\n            if (selectedItems.length) {\n                for (idx = 0; idx < selectedItems.length; idx++) {\n                    dataItem = selectedItems[idx];\n\n                    value = this._value(dataItem);\n                    custom[value] = length;\n                    optionsMap[value] = length;\n\n                    length += 1;\n                    options += this._option(value, this._text(dataItem), true);\n                }\n            }\n\n            this._customOptions = custom;\n            this._optionsMap = optionsMap;\n\n            this.element.html(options);\n        },\n\n        _buildSelectedItems: function(values) {\n            var valueField = this.options.dataValueField;\n            var textField = this.options.dataTextField;\n            var result = [];\n            var item;\n\n            for (var idx = 0; idx < values.length; idx++) {\n                item = {};\n                item[valueField] = values[idx];\n                item[textField] = values[idx];\n\n                result.push(item);\n            }\n\n            return result;\n        },\n\n        _selectedItemIndex: function(value, selectedItems) {\n            var valueGetter = this._value;\n            var idx = 0;\n\n            for (; idx < selectedItems.length; idx++) {\n                if (value === valueGetter(selectedItems[idx])) {\n                    return idx;\n                }\n            }\n\n            return -1;\n        },\n\n        _search: function(noDelay) {\n            var that = this;\n\n            if (noDelay) {\n                that._performSearch();\n                return;\n            }\n\n            clearTimeout(that._typingTimeout);\n\n            that._typingTimeout = setTimeout(function() {\n                that._performSearch();\n            }, that.options.delay);\n        },\n\n        _performSearch: function() {\n            var that = this,\n                value = that._inputValue();\n\n            if (that._prev !== value) {\n                that._prev = value;\n                that.search(value);\n                that._toggleCloseVisibility();\n            }\n        },\n\n        _toggleCloseVisibility: function() {\n            if (this.value().length || (this.input.val() && this.input.val() !== this.options.placeholder)) {\n                this._showClear();\n            } else {\n                this._hideClear();\n            }\n        },\n\n        _allowOpening: function() {\n            return this._allowSelection() && List.fn._allowOpening.call(this);\n        },\n\n        _allowSelection: function() {\n            var max = this.options.maxSelectedItems;\n            return max === null || max > this.listView.value().length;\n        },\n\n        updatePersistTagList: function(added, removed) {\n            if (this.persistTagList.added &&\n                this.persistTagList.added.length === removed.length &&\n                this.persistTagList.removed &&\n                this.persistTagList.removed.length === added.length) {\n                    this.persistTagList = false;\n             } else {\n                 this.listView._removedAddedIndexes = this._old.slice();\n                 this.persistTagList = {\n                     added: added,\n                     removed: removed\n                 };\n             }\n        },\n\n        _selectValue: function(added, removed) {\n            var that = this;\n            var total = that.dataSource.total();\n            var tagList = that.tagList;\n            var getter = that._value;\n            var removedItem;\n            var addedItem;\n            var idx;\n\n            if (this.persistTagList) {\n                this.updatePersistTagList(added, removed);\n                that._refreshTagListAria();\n\n                return;\n            }\n\n            if (that.options.tagMode === \"multiple\") {\n                for (idx = removed.length - 1; idx > -1; idx--) {\n                    removedItem = removed[idx];\n\n                    if (tagList.children(CHIP).length) {\n                        tagList[0].removeChild(tagList[0].children[removedItem.position]);\n                        that._setOption(getter(removedItem.dataItem), false);\n                    }\n                }\n\n                for (idx = 0; idx < added.length; idx++) {\n                    addedItem = added[idx];\n\n                    that.tagList.append(that.tagTemplate(addedItem.dataItem));\n\n                    that._setOption(getter(addedItem.dataItem), true);\n                }\n\n                kendo.applyStylesFromKendoAttributes(that.tagList, [\"background-color\"]);\n            } else {\n                if (!that._maxTotal || that._maxTotal < total) {\n                    that._maxTotal = total;\n                }\n\n                this._updateTagListHTML();\n\n                for (idx = removed.length - 1; idx > -1; idx--) {\n                    that._setOption(getter(removed[idx].dataItem), false);\n                }\n\n                for (idx = 0; idx < added.length; idx++) {\n                    that._setOption(getter(added[idx].dataItem), true);\n                }\n            }\n\n            that._refreshTagListAria();\n            that._refreshFloatingLabel();\n\n            that._placeholder();\n        },\n\n        _refreshTagListAria: function() {\n            var that = this;\n            html.renderChipList(that.tagList, $.extend({ selectable: that.value().length === 0 ? \"none\" : \"multiple\" }, that.options));\n        },\n\n        _updateTagListHTML: function() {\n            var that = this;\n            var values = that.value();\n            var total = that.dataSource.total();\n            var tagList = that.tagList;\n\n            tagList.children(CHIP).each(function(index, tag) {\n                $(tag).remove();\n            });\n\n            if (values.length) {\n                that.tagList.append(that.tagTemplate({\n                    values: values,\n                    dataItems: that.dataItems(),\n                    maxTotal: that._maxTotal,\n                    currentTotal: total\n                }));\n\n                kendo.applyStylesFromKendoAttributes(that.tagList, [\"background-color\"]);\n            }\n\n            that._refreshTagListAria();\n        },\n\n        _select: function(candidate) {\n            var resolved = $.Deferred().resolve();\n\n            if (!candidate) {\n                return resolved;\n            }\n\n            var that = this;\n            var listView = that.listView;\n            var dataItem = listView.dataItemByIndex(listView.getElementIndex(candidate));\n            var isSelected = candidate.hasClass(\"k-selected\");\n\n            if (that._state === REBIND) {\n                that._state = \"\";\n            }\n\n            if (!that._allowSelection() && !isSelected) {\n                return resolved;\n            }\n\n            if (that.trigger(isSelected ? DESELECT : SELECT, { dataItem: dataItem, item: candidate })) {\n                that._close();\n                return resolved;\n            }\n\n            that.persistTagList = false;\n            return listView.select(candidate).done(function() {\n                that._placeholder();\n\n                if (that._state === FILTER) {\n                    that._state = ACCEPT;\n                    listView.skipUpdate(true);\n                }\n            });\n        },\n\n        _selectRange: function(startIndex, endIndex) {\n            var that = this;\n            var listView = this.listView;\n            var maxSelectedItems = this.options.maxSelectedItems;\n            var indices = this._getSelectedIndices().slice();\n            var indicesToSelect = [];\n            var i;\n\n            var selectIndices = function(indices) {\n                listView.select(indices).done(function() {\n                    indices.forEach(function(index) {\n                        var dataItem = listView.dataItemByIndex(index);\n                        var candidate = listView.element.children()[index];\n                        var isSelected = $(candidate).hasClass(\"k-selected\");\n\n                        that.trigger(isSelected ? SELECT : DESELECT, { dataItem: dataItem, item: $(candidate) });\n                    });\n                    that._change();\n                });\n            };\n\n            if (indices.length - 1 === endIndex - startIndex) {\n                return selectIndices(indices);\n            }\n\n            if (startIndex < endIndex) {\n                for (i = startIndex; i <= endIndex; i++) {\n                    indicesToSelect.push(i);\n                }\n            } else {\n                for (i = startIndex; i >= endIndex; i--) {\n                    indicesToSelect.push(i);\n                }\n            }\n\n            if (maxSelectedItems !== null && indicesToSelect.length > maxSelectedItems) {\n                indicesToSelect = indicesToSelect.slice(0, maxSelectedItems);\n            }\n\n            for (i = 0; i < indicesToSelect.length; i++) {\n                var index = indicesToSelect[i];\n\n                if (this._getSelectedIndices().indexOf(index) == -1) {\n                    indices.push(index);\n                } else {\n                    indices.splice(indices.indexOf(index), 1);\n                }\n            }\n\n            if (!indices.length) {\n                return;\n            }\n\n            that.persistTagList = false;\n            return selectIndices(indices);\n        },\n\n        _input: function() {\n            var that = this;\n            var element = that.element;\n            var accessKey = element[0].accessKey;\n            var input = that._inputValuesContainer.children(\"input.k-input-inner\");\n\n            if (!input[0]) {\n                input = $('<input class=\"k-input-inner\" />').appendTo(that._inputValuesContainer);\n            }\n\n            element.removeAttr(\"accesskey\");\n            input.attr(\"data-validate\", false);\n\n            that._focused = that.input = input.attr({\n                \"autocomplete\": AUTOCOMPLETEVALUE,\n                \"title\": element[0].title\n            });\n\n            if (accessKey) {\n                that._focused.attr(\"accesskey\", accessKey);\n            }\n        },\n\n        _inputValuesContainer: function() {\n            var that = this,\n                inputValuesContainer = that.wrapper.children(\".k-input-values\");\n\n            if (!inputValuesContainer[0]) {\n                inputValuesContainer = $('<div class=\"k-input-values\"></div>').appendTo(that.wrapper);\n            }\n\n            that._inputValuesContainer = inputValuesContainer;\n        },\n\n        _tagList: function() {\n            var that = this,\n                options = that.options,\n                tagList = that._inputValuesContainer.children(\".k-chip-list\");\n\n            if (!tagList[0]) {\n                tagList = $(html.renderChipList('<div unselectable=\"on\" class=\"k-selection-multiple\" />', $.extend({ selectable: \"none\" }, options))).appendTo(that._inputValuesContainer);\n            }\n\n            that.tagList = tagList;\n        },\n\n        _tagTemplate: function() {\n            var that = this;\n            var options = that.options;\n            var tagTemplate = options.tagTemplate;\n            var hasDataSource = options.dataSource;\n            var isMultiple = options.tagMode === \"multiple\";\n            var singleTag = options.messages.singleTag;\n            var defaultTemplate;\n            var multipleTemplateFunc;\n            var singleTemplateFunc;\n\n            if (that.element[0].length && !hasDataSource) {\n                options.dataTextField = options.dataTextField || \"text\";\n                options.dataValueField = options.dataValueField || \"value\";\n            }\n\n            multipleTemplateFunc = data => encode(kendo.getter(options.dataTextField)(data));\n            singleTemplateFunc = ({ values }) => `${values.length} ${encode(singleTag)}`;\n\n            defaultTemplate = isMultiple ? multipleTemplateFunc : singleTemplateFunc;\n\n            that.tagTextTemplate = tagTemplate = tagTemplate ? kendo.template(tagTemplate) : defaultTemplate;\n\n            that.tagTemplate = function(data) {\n                return html.renderChip('<span unselectable=\"on\">' +\n                '</span>', $.extend({}, options, {\n                        fillMode: \"solid\",\n                        rounded: \"medium\",\n                        enabled: true,\n                        themeColor: \"base\",\n                        text: tagTemplate(data),\n                        attr: {\n                            unselectable: \"on\",\n                            \"aria-selected\": true,\n                            role: \"option\",\n                            \"aria-keyshortcuts\": isMultiple ? \"Enter Delete\" : \"Enter\"\n                        },\n                        removable: isMultiple,\n                        removableAttr: {\n                            unselectable: \"on\",\n                            \"aria-hidden\": true,\n                            \"aria-label\": that.options.messages.deleteTag,\n                            title: that.options.messages.deleteTag\n                        },\n                        icon: !isMultiple ? \"caret-alt-down\" : \"\",\n                        iconAttr: {\n                            unselectable: \"on\",\n                            \"aria-hidden\": true,\n                            \"aria-label\": 'open'\n                        }\n                    })\n                );\n            };\n        },\n\n        _loader: function() {\n            this._loading = $('<span class=\"k-icon k-i-loading k-input-loading-icon ' + HIDDENCLASS + '\"></span>').insertAfter(this._inputValuesContainer);\n        },\n\n        _popup: function() {\n            List.fn._popup.call(this);\n            this.popup.element.addClass(\"k-multiselect-popup\");\n        },\n\n        _clearButton: function() {\n            List.fn._clearButton.call(this);\n\n            if (this.options.clearButton) {\n                this._clear.insertAfter(this._inputValuesContainer);\n            }\n        },\n\n        _arrowButton: function() {\n            var arrowTitle = encode(this.options.messages.downArrow),\n                arrow = $(html.renderButton('<button type=\"button\" aria-label=\"' + arrowTitle + '\" class=\"k-input-button\"></button>', $.extend({}, this.options, {\n                    icon: \"caret-alt-down\",\n                    rounded: null\n                })));\n\n            if (this._arrow) {\n                this._arrow.remove();\n                this._arrow = null;\n            }\n\n            if (this.options.downArrow) {\n                this._arrow = arrow.attr({\n                    \"tabIndex\": -1\n                });\n\n                this._arrow.appendTo(this.wrapper);\n            }\n        },\n\n        _textContainer: function() {\n            var computedStyles = kendo.getComputedStyles(this.input[0], styles);\n\n            computedStyles.position = \"absolute\";\n            computedStyles.visibility = \"hidden\";\n            computedStyles.top = -3333;\n            computedStyles.left = -3333;\n\n            this._span = $(\"<span/>\").css(computedStyles).appendTo(this.wrapper);\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper = element.parent(\"span.k-multiselect\");\n\n            if (!wrapper[0]) {\n                wrapper = element.wrap('<span class=\"k-multiselect k-input\" unselectable=\"on\" />').parent();\n                wrapper[0].style.cssText = element[0].style.cssText;\n            }\n\n            that.wrapper = wrapper\n                            .addClass(element[0].className)\n                            .removeClass('input-validation-error').css(\"display\", \"\");\n        },\n\n        _closeHandler: function(e) {\n            if (this.trigger(CLOSE)) {\n                e.preventDefault();\n            } else {\n                this.input.attr(ARIA_EXPANDED, false);\n                this.ul.attr(ARIA_HIDDEN, true);\n            }\n        },\n\n        _openHandler: function(e) {\n            this._adjustListWidth();\n\n            if (this.trigger(OPEN)) {\n                e.preventDefault();\n            } else {\n                this.input.attr(ARIA_EXPANDED, true);\n                this.ul.attr(ARIA_HIDDEN, false);\n            }\n        }\n    });\n\n    function compare(a, b) {\n        var length;\n\n        if ((a === null && b !== null) || (a !== null && b === null)) {\n            return false;\n        }\n\n        length = a.length;\n        if (length !== b.length) {\n            return false;\n        }\n\n        while (length--) {\n            if (a[length] !== b[length]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    ui.plugin(MultiSelect);\n\n    kendo.cssProperties.registerPrefix(\"MultiSelect\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"MultiSelect\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}