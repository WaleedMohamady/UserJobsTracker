{"version":3,"sources":["raw-mjs/kendo.toolbar.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","isFunction","keys","outerWidth","_outerWidth","ns","TOOLBAR","KBUTTON","BUTTON_GROUP","SPLIT_BUTTON","MENU_BUTTON","SPACER_CLASS","STATE_SELECTED","STATE_HIDDEN","FORCE_HIDDEN","GROUP_START","GROUP_END","MENU_LINK","MENU_ITEM","OVERFLOW_ANCHOR","TEMPLATE_ITEM","TOOLBAR_TOOL","MENU_LINK_TOGGLE","DROPDOWNLIST","INPUT_BUTTON","KFOCUS","TABINDEX_MINUS_1","ARIA_CHECKED","ARIA_LABEL","CHANGE","CLICK","TOGGLE","OPEN","CLOSE","FOCUS","KEYDOWN","SPACER","ROLE","SEPARATOR","OVERFLOW","TABINDEX","INPUT","SELECT","GROUP","DATA_UID","DATA_ROLE_SELECTOR","DATA_TOGGLE_SELECTOR","DATA_ROLE_BUTTONMENU","KENDO_FOCUSABLE","OVERFLOW_OPEN","OVERFLOW_CLOSE","OVERFLOW_NEVER","OVERFLOW_AUTO","OVERFLOW_ALWAYS","KENDO_UID_ATTR","attr","NOTHING","DASH","EMPTY","DOT","COMMA","ID","UID","K_DROP_DOWN_BUTTON","K_SPLIT_BUTTON","K_TOGGLE_BUTTON","K_BUTTON_GROUP","toolbar","WIDGET_TYPES","button","splitButton","dropDownButton","buttonGroup","popupButton","open","TOOLBAR_TOOLS_CLASSES","Button","ToggleButton","SplitButton","DropDownButton","ButtonGroup","ColorPicker","Switch","SAFE_COMPONENTS","POPUP_BUTTON_TEMPLATE","icon","ToolBar","extend","init","element","options","fn","call","this","_isRtl","support","isRtl","uid","guid","wrapper","addClass","resizable","_resizable","tools","length","items","_extendToolsOptions","_items","_attachEvents","_tabIndex","_applyCssClasses","_shrink","innerWidth","overflowAnchor","appendTo","_toggleOverflowAnchor","notify","events","navigateOnTab","evaluateTemplates","size","destroy","that","unbindResize","_resizeHandler","overflowMenu","find","each","i","el","popup","popupWrapper","chooser","getKendoButton","remove","children","add","_add","resize","enable","candidate","focused","_getUid","item","_getItem","component","hasClass","is","removeAttr","trigger","buttonsPopupItem","widgetInstance","closest","menuItem","getSelectedFromGroup","groupName","filter","hide","elements","parentGroupEl","templateEl","toolbarEl","parent","data","_groupVisibleButtons","addBack","_resetTabIndex","_getAllItems","first","siblings","show","removeClass","toggle","checked","parentGroup","group","_toggleIndex","index","toggleClass","toggleTools","conditions","focusable","not","elm","tool","widget","condition","toToggle","processed","_processOptions","template","overflowTemplate","type","_addTemplate","_addCustomWidget","_addDefaultTool","_addSpacer","_addSeparator","insertBefore","_addAttributes","attributes","classes","hidden","align","class","overflow","result","overflowComponent","_addMenuItem","componentOptions","indexOf","wrap","op","_addToolbarTool","menuitem","selected","showIcon","imageUrl","showText","text","encoded","append","last","prepend","togglable","menuButtons","forEach","buttons","click","bind","e","_onMenuItemSelect","_addPopupButton","widgetElement","popupComponent","kendoPopup","anchor","on","preventDefault","commandOn","target","value","close","separator","overflowSeparator","spacer","inputsInTemplate","html","popupRef","hasButtons","primary","themeColor","url","preventKeyNav","_attachWidgetEvents","_resetOpen","extensions","_keydown","_focusIn","_focusOut","_onClick","_onToggle","_onSelect","_onOpen","_onClose","$el","originalEvent","event","_childrenWidth","gap","parseInt","css","childrenWidth","Math","ceil","flatMap","_mapTool","parentMessages","defaultTools","style","visibility","knownUid","uidSelector","buttonsPopups","_getNextElement","direction","itemIndex","parentElement","focusableItem","visibleBtns","_hideItem","eq","menu","list","_showMenuItem","_hideMenuItem","keyCode","templateItem","isOverflowAnchor","ESC","stopPropagation","_keyDeactivateTemplate","ENTER","_keyActivateTemplate","altKey","DOWN","SPACEBAR","_keyOpenOverflow","HOME","_keyFocusFirst","END","_keyFocusLast","RIGHT","LEFT","_keyFocusNext","innerFocusable","innerWidget","visible","width","next","_mapAttributes","toolOptions","messages","property","title","command","dialog","toggleCondition","_mapComponent","componentMessages","componentPlaceholder","placeholder","dataSource","default","Object","JSON","stringify","key","ev","sender","map","Array","isArray","t","isPlainObject","deepExtend","_menuItemSelect","shouldSelect","twin","replace","current","select","setTimeout","menuEl","overflowItem","_processInner","parentUid","rootUid","every","b","selection","enabled","_renderOverflow","horizontalDirection","kendoButton","fillMode","ContextMenu","showOn","origin","position","alignToAnchor","uploadWrapper","input","one","files","off","toFocus","onResize","_resize","containerWidth","popupBtnElements","_stretch","commandElement","visibleCommands","activeElement","_showItem","itemOuterWidth","hiddenCommands","focusableItems","firstFocusable","Item","Class","OverflowButton","TemplateItem","ToolBarButton","registerComponent","cssProperties","registerPrefix","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.toolbar.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.splitbutton.js';\nimport './kendo.dropdownbutton.js';\nimport './kendo.buttongroup.js';\nimport './kendo.menu.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"toolbar\",\n    name: \"ToolBar\",\n    category: \"web\",\n    description: \"The ToolBar widget displays one or more command buttons divided into groups.\",\n    depends: [ \"core\", \"splitbutton\", \"dropdownbutton\", \"buttongroup\", \"menu\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        isFunction = kendo.isFunction,\n        keys = kendo.keys,\n        outerWidth = kendo._outerWidth,\n        ns = \".kendoToolBar\",\n        TOOLBAR = \"toolbar\",\n        KTOOLBAR = \"k-toolbar\",\n        KBUTTON = \"k-button\",\n        BUTTON_GROUP = \"k-button-group\",\n        SPLIT_BUTTON = \"k-split-button\",\n        MENU_BUTTON = \"k-menu-button\",\n        POPUP_BUTTON = \"k-popup-button\",\n        KSEPARATOR = \"k-separator\",\n        SPACER_CLASS = \"k-spacer\",\n        UPLOAD_BUTTON = \"k-upload-button\",\n        POPUP = \"k-popup\",\n        RESIZABLE_TOOLBAR = \"k-toolbar-resizable\",\n        STATE_SELECTED = \"k-selected\",\n        STATE_DISABLED = \"k-disabled\",\n        STATE_HIDDEN = \"k-hidden\",\n        FORCE_HIDDEN = \"k-force-hidden\",\n        GROUP_START = \"k-group-start\",\n        GROUP_END = \"k-group-end\",\n        MENU_LINK = \"k-menu-link\",\n        MENU_ITEM = \"k-menu-item\",\n        OVERFLOW_ANCHOR = \"k-toolbar-overflow-button\",\n        TEMPLATE_ITEM = \"k-toolbar-item\",\n        TOOLBAR_TOOL = \"k-toolbar-tool\",\n        MENU_LINK_TOGGLE = \"k-menu-link-toggle\",\n        DROPDOWNLIST = \"k-dropdownlist\",\n        INPUT_BUTTON = \"k-input-button\",\n        MENU_POPUP = \"k-menu-popup\",\n        KFOCUS = \"k-focus\",\n        SINGLE = \"single\",\n        MULTIPLE = \"multiple\",\n        NONE = \"none\",\n        TABINDEX_MINUS_1 = \"[tabindex=-1]\",\n\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_CHECKED = \"aria-checked\",\n        ARIA_LABEL = \"aria-label\",\n\n        CHANGE = \"change\",\n        CLICK = \"click\",\n        TOGGLE = \"toggle\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        FOCUS = \"focus\",\n        FOCUSIN = \"focusin\",\n        FOCUSOUT = \"focusout\",\n        KEYDOWN = \"keydown\",\n\n        SPACER = \"spacer\",\n        PRIMARY = \"primary\",\n        ROLE = \"role\",\n        SEPARATOR = \"separator\",\n        OVERFLOW = \"overflow\",\n        TABINDEX = \"tabindex\",\n        INPUT = \"input\",\n        SELECT = \"select\",\n        HIDDEN = \"hidden\",\n        GROUP = \"group\",\n        DATA_UID = \"data-uid\",\n        DATA_PARENTUID = \"data-parentuid\",\n        DATA_ROLE_SELECTOR = \"[data-role]\",\n        DATA_TOGGLE_SELECTOR = \"[data-toggle]\",\n        DATA_ROLE_BUTTONMENU = \"[data-role=buttonmenu]\",\n\n        KENDO_FOCUSABLE = \":kendoFocusable\",\n\n        OVERFLOW_OPEN = \"overflowOpen\",\n        OVERFLOW_CLOSE = \"overflowClose\",\n        OVERFLOW_NEVER = \"never\",\n        OVERFLOW_AUTO = \"auto\",\n        OVERFLOW_ALWAYS = \"always\",\n\n        KENDO_UID_ATTR = kendo.attr(\"uid\"),\n\n        NOTHING = \"\",\n        DASH = \"_\",\n        EMPTY = \" \",\n        DOT = \".\",\n        COMMA = \",\",\n        ID = \"id\",\n        UID = \"uid\",\n        NBSP = \"&nbsp;\",\n\n        K_DROP_DOWN_BUTTON = \"kendoDropDownButton\",\n        K_SPLIT_BUTTON = \"kendoSplitButton\",\n        K_TOGGLE_BUTTON = \"kendoToggleButton\",\n        K_BUTTON_GROUP = \"kendoButtonGroup\";\n\n        kendo.toolbar = {};\n\n    var WIDGET_TYPES = {\n        button: \"Button\",\n        splitButton: \"SplitButton\",\n        dropDownButton: \"DropDownButton\",\n        buttonGroup: \"ButtonGroup\",\n        popupButton: \"Button\",\n        open: \"Button\"\n    };\n\n    var TOOLBAR_TOOLS_CLASSES = {\n        Button: \"k-toolbar-button\",\n        ToggleButton: \"k-toolbar-toggle-button\",\n        SplitButton: \"k-toolbar-split-button\",\n        DropDownButton: \"k-toolbar-menu-button\",\n        ButtonGroup: \"k-toolbar-button-group\",\n        ColorPicker: \"k-toolbar-color-picker\",\n        Switch: \"k-toolbar-switch\"\n    };\n\n    var SAFE_COMPONENTS = [ \"Button\", \"SplitButton\", \"DropDownButton\", \"ButtonGroup\", \"Switch\", \"ColorPicker\" ];\n\n    var POPUP_BUTTON_TEMPLATE = `<button class=\"k-popup-button\"><span class=\"k-button-icon k-icon\"></span><span class=\"k-button-text\">${kendo.ui.icon(\"caret-alt-down\")}</span></button>`;\n    var TEMPLATE_WRAPPER = \"<div class='k-toolbar-item' aria-keyshortcuts='Enter'></div>\";\n    var CUSTOM_WIDGET_WRAP = \"<span class='k-toolbar-tool k-toolbar-item' tabindex='0'>\";\n    var SEPARATOR_OVERFLOW_EL = \"<li role='separator' class='k-separator k-menu-separator k-hidden'></li>\";\n    var SEPARATOR_EL = '<div role=\"separator\">&nbsp;</div>';\n    var SPACER_EL = '<div>&nbsp;</div>';\n\n    var ToolBar = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            options = this.options;\n\n            this._isRtl = kendo.support.isRtl(element);\n            this.uid = kendo.guid();\n\n            element = this.wrapper = this.element;\n            element.attr(KENDO_UID_ATTR, this.uid);\n            element.addClass(KTOOLBAR);\n            element.attr(ROLE, TOOLBAR);\n\n            if (options.resizable) {\n                this._resizable();\n            }\n\n            if (options.tools && options.tools.length > 0) {\n                options.items = this._extendToolsOptions();\n            }\n\n            if (options.items && options.items.length) {\n                this._items();\n            }\n\n            this._attachEvents();\n            this._tabIndex();\n            this._applyCssClasses();\n\n            if (options.resizable) {\n                this._shrink(this.element.innerWidth());\n                this.overflowAnchor.appendTo(this.wrapper);\n                this._toggleOverflowAnchor();\n            }\n\n            kendo.notify(this);\n        },\n\n        events: [\n            CLICK,\n            TOGGLE,\n            OPEN,\n            CLOSE,\n            OVERFLOW_OPEN,\n            OVERFLOW_CLOSE,\n            CHANGE\n        ],\n\n        options: {\n            name: \"ToolBar\",\n            items: [],\n            resizable: true,\n            navigateOnTab: false,\n            evaluateTemplates: false,\n            size: \"medium\"\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.options.resizable) {\n                kendo.unbindResize(that._resizeHandler);\n                that.overflowMenu.destroy();\n            }\n\n            that.element.find(DOT + POPUP_BUTTON).each((i, el) => {\n                var button = $(el).getKendoButton(),\n                    popup, popupWrapper, chooser;\n\n                if (button) {\n                    chooser = button.chooser;\n                    popup = button.popup;\n                    popupWrapper = popup.wrapper;\n\n                    chooser.destroy();\n                    popup.destroy();\n                    popupWrapper.remove();\n                }\n            });\n\n            kendo.destroy(that.element.children());\n\n            Widget.fn.destroy.call(that);\n        },\n\n        add: function(options) {\n            this._add(options);\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        enable: function(candidate, enable) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                component = item.component,\n                buttonPopup, children, focused, wrapper;\n\n            if (typeof enable == \"undefined\") {\n                enable = true;\n            }\n\n            if (item.component) {\n                wrapper = component.wrapper;\n                focused = wrapper.hasClass(KFOCUS) || wrapper.is(\":focus\");\n                component.enable(enable);\n                wrapper.find(\"[disabled]\").removeAttr(\"disabled\");\n                wrapper.removeAttr(\"disabled\");\n\n                if (focused) {\n                    wrapper.addClass(KFOCUS).trigger(FOCUS);\n                }\n            } else if (item.buttonsPopupItem.length > 0) {\n                buttonPopup = kendo.widgetInstance(item.buttonsPopupItem.closest(DOT + MENU_POPUP));\n                buttonPopup.enable(enable, item.buttonsPopupItem);\n            }\n\n            if (this.overflowMenu) {\n                this.overflowMenu.enable(item.menuItem, enable);\n\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    that.overflowMenu.enable($(el), enable);\n                });\n            }\n        },\n\n        getSelectedFromGroup: function(groupName) {\n            return this.element.find(\"[data-group='\" + groupName + \"']\").filter(DOT + STATE_SELECTED);\n        },\n\n        hide: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = that._getItem(candidate, uid),\n                elements, parentButtonGroup, children, parentGroupEl;\n\n            if (!item) {\n                return;\n            }\n\n            elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem).add(item.menuItem);\n\n            elements.addClass(STATE_HIDDEN);\n            elements.addClass(FORCE_HIDDEN);\n\n            if (this.overflowMenu) {\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    $(el).addClass(FORCE_HIDDEN);\n                    $(el).addClass(STATE_HIDDEN);\n                });\n            }\n\n            parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n            parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n            if (parentButtonGroup) {\n                if (parentGroupEl.children(\":not(.k-hidden)\").length === 0) {\n                    that.hide(parentGroupEl);\n                } else {\n                    that._groupVisibleButtons(parentGroupEl);\n                }\n            }\n\n            if (elements.find(\"[tabindex=0]\").addBack(\"[tabindex=0]\").length > 0) {\n                this._resetTabIndex(that._getAllItems().first());\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        remove: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                buttonGroup, children;\n\n            if (!item) {\n                return;\n            }\n\n            if (item.component) {\n                buttonGroup = item.toolbarEl.closest('[data-role=\"buttongroup\"]');\n                if (buttonGroup.length > 0 && item.toolbarEl.siblings().length === 0) {\n                    buttonGroup.data(K_BUTTON_GROUP).destroy();\n                    buttonGroup.remove();\n\n                    item.toolbarEl = $(NOTHING);\n                } else {\n                    item.component.destroy();\n                }\n            }\n\n            if (item.templateEl.length > 0) {\n                item.templateEl.remove();\n            } else if (item.toolbarEl.length > 0) {\n                item.toolbarEl.remove();\n            }\n\n            if (item.buttonsPopupItem.length > 0) {\n                item.buttonsPopupItem.remove();\n            }\n\n            if (this.overflowMenu) {\n                this.overflowMenu.remove(item.menuItem);\n\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    that.overflowMenu.remove($(el));\n                });\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        show: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                elements, parentButtonGroup, children, parentGroupEl;\n\n            if (!item) {\n                return;\n            }\n\n            elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem);\n            elements.removeClass(FORCE_HIDDEN);\n            elements.removeClass(STATE_HIDDEN);\n\n            item.menuItem.removeClass(FORCE_HIDDEN);\n\n            if (this.overflowMenu) {\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    $(el).removeClass(FORCE_HIDDEN);\n                });\n            }\n\n            parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n            parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n            if (parentButtonGroup) {\n                if (parentGroupEl.hasClass(\"k-hidden\") && parentGroupEl.children(\":not(.k-hidden)\").length > 0) {\n                    that.show(parentGroupEl);\n                } else {\n                    that._groupVisibleButtons(parentGroupEl);\n                }\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        toggle: function(candidate, checked) {\n            var item = this._getItem(candidate),\n                element = item.toolbarEl,\n                menuItem = item.menuItem,\n                button, parentGroup, group, groupButtons;\n\n            if (checked === undefined$1) {\n                checked = true;\n            }\n\n            button = element.data(K_TOGGLE_BUTTON);\n\n            if (!item.component && menuItem.find(DOT + MENU_LINK_TOGGLE).length === 0) {\n                return;\n            }\n\n            group = element.data(GROUP);\n\n            if (item.component) {\n                parentGroup = element.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n\n                if (parentGroup) {\n                    if (element.hasClass(STATE_SELECTED) !== checked) {\n                        parentGroup._toggleIndex(element.index());\n                    }\n                }\n\n                button.toggle(checked);\n\n                if (checked) {\n                    groupButtons = this.element.find(\"[data-group=\" + group + \"]\");\n\n                    groupButtons.each((i, el) => {\n                        if (el !== element[0]) {\n                            $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                        }\n                    });\n                }\n            }\n\n            if (menuItem) {\n                menuItem\n                    .attr(ARIA_CHECKED, checked)\n                    .find(DOT + MENU_LINK_TOGGLE)\n                    .toggleClass(STATE_SELECTED, checked);\n\n                if (checked && this.overflowMenu) {\n                    groupButtons = this.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                    groupButtons.each((i, el) => {\n                        if (el !== menuItem[0]) {\n                            $(el)\n                                .attr(ARIA_CHECKED, false)\n                                .find(DOT + MENU_LINK_TOGGLE)\n                                .removeClass(STATE_SELECTED);\n                        }\n                    });\n                }\n            }\n        },\n\n        toggleTools: function(conditions) {\n            var that = this,\n                tools = that.element.find(DATA_TOGGLE_SELECTOR),\n                focusable = that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1);\n\n            tools.each(function(index, elm) {\n                var tool = $(elm),\n                    widget = null,\n                    condition = tool.data(TOGGLE),\n                    toToggle = conditions && conditions[condition];\n\n                if (tool.is(DATA_ROLE_SELECTOR)) {\n                    widget = kendo.widgetInstance(tool);\n                }\n\n                if (widget && widget.enable) {\n                    widget.enable(toToggle || false);\n                } else {\n                    that.enable(tool, toToggle);\n                }\n            });\n\n            that.element.find(DATA_TOGGLE_SELECTOR + \"[disabled]\").removeAttr(\"disabled\");\n\n            that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1).attr(\"tabindex\", -1);\n            focusable.attr(TABINDEX, 0);\n        },\n\n        _add: function(options) {\n            var processed = this._processOptions(options),\n                template = processed.template,\n                overflowTemplate = processed.overflowTemplate,\n                type = WIDGET_TYPES[processed.type],\n                element;\n\n            if (template || overflowTemplate) {\n                element = this._addTemplate(processed);\n            } else if (kendo.ui[processed.component]) {\n                element = this._addCustomWidget(processed);\n            } else if (type) {\n                element = this._addDefaultTool(type, processed);\n            } else if (processed.type === SPACER) {\n                this._addSpacer();\n            } else if (processed.type === SEPARATOR) {\n                this._addSeparator(processed);\n            }\n\n            if (element) {\n                if (this.overflowAnchor) {\n                    element.insertBefore(this.overflowAnchor);\n                } else {\n                    element.appendTo(this.element);\n                }\n\n                element.find(\"[disabled]\").removeAttr(\"disabled\");\n\n                if (element.is(\"[disabled]\")) {\n                    element.removeAttr(\"disabled\");\n                }\n            }\n        },\n\n        _addAttributes: function(options, element) {\n            var attributes = options.attributes,\n                classes = NOTHING;\n\n            if (!attributes) {\n                attributes = {};\n            }\n\n            if (options.hidden) {\n                classes = STATE_HIDDEN + EMPTY + FORCE_HIDDEN;\n            }\n\n            if (options.align) {\n                classes = classes + \" k-align-\" + options.align;\n            }\n\n            if (attributes) {\n                if (attributes.class) {\n                    classes = classes + EMPTY + attributes.class;\n                    delete attributes.class;\n                }\n\n                element.attr(attributes);\n            }\n\n            element.addClass(classes);\n            element.attr(KENDO_UID_ATTR, options.uid);\n\n            if (options.id) {\n                element.attr(ID, options.id);\n            }\n            if (options.overflow === OVERFLOW_NEVER) {\n                element.attr(\"data-overflow\", OVERFLOW_NEVER);\n            }\n        },\n\n        _addCustomWidget: function(options) {\n            var element = $(options.element || \"<input>\"),\n                widget, result, classes;\n\n            if (options.overflowComponent) {\n                this._addMenuItem(options.overflowComponent.type, $.extend({}, options, options.overflowComponent));\n            }\n\n            if (options.attributes) {\n                classes = options.attributes.class;\n                delete options.attributes[\"class\"];\n                element.attr(options.attributes);\n                delete options.attributes[ARIA_LABEL];\n            }\n\n            if (!options.componentOptions) {\n                options.componentOptions = {};\n            }\n\n            options.componentOptions.size = this.options.size;\n\n            widget = new kendo.ui[options.component](element, options.componentOptions);\n\n            if (SAFE_COMPONENTS.indexOf(options.component) > -1) {\n                widget.wrapper.addClass(TOOLBAR_TOOL + \" \" + TOOLBAR_TOOLS_CLASSES[options.component]);\n                result = widget.wrapper;\n            } else {\n                result = (widget.wrapper || widget.element).wrap(CUSTOM_WIDGET_WRAP).parent();\n            }\n\n            if (options.attributes) {\n                options.attributes.class = classes;\n            }\n\n            this._addAttributes(options, result);\n\n            return result;\n        },\n\n        _addDefaultTool: function(component, options) {\n            var element, op;\n\n            if (options.overflow !== OVERFLOW_ALWAYS) {\n                element = this._addToolbarTool(component, $.extend(true, {}, options));\n            }\n\n            if (this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                if (options.overflowComponent) {\n                    op = $.extend(true, {}, options, options.overflowComponent);\n                    delete op[\"data-command\"];\n                    this._addMenuItem(\"Button\", op);\n                } else {\n                    this._addMenuItem(component, $.extend(true, {}, options));\n                }\n            }\n\n            return element;\n        },\n\n        _addMenuItem: function(component, options) {\n            var that = this,\n                selected = options.selected,\n                menuitem;\n\n            delete options.selected;\n\n            if (options.id) {\n                options.id = options.id + DASH + OVERFLOW;\n            }\n            if (options.showIcon === TOOLBAR) {\n                delete options.imageUrl;\n                delete options.icon;\n            }\n\n            if (options.showText === TOOLBAR) {\n                if (!options.attributes) {\n                    options.attributes = {};\n                }\n\n                options.attributes[ARIA_LABEL] = options.text;\n\n                options.text = NOTHING;\n            } else if (options.text === undefined$1 || options.text === NOTHING) {\n                options.text = NBSP;\n                options.encoded = false;\n            }\n\n            that.overflowMenu.append(options);\n            menuitem = that.overflowMenu.element.find(DOT + MENU_ITEM).last();\n\n            if (options.icon) {\n                menuitem.find(DOT + MENU_LINK).prepend(kendo.ui.icon(options.icon));\n            }\n\n            if (component === \"ToggleButton\" || (component === \"Button\" && options.togglable === true)) {\n                menuitem.find(DOT + MENU_LINK).addClass(MENU_LINK_TOGGLE);\n\n                if (selected) {\n                    menuitem.find(DOT + MENU_LINK).addClass(STATE_SELECTED);\n                }\n\n                if (options.group) {\n                    menuitem.attr(\"data-group\", options.group);\n                }\n            } else if (options.menuButtons) {\n                options.menuButtons.forEach((i) => {\n                    i.overflow = options.overflow;\n                    that._addMenuItem(null, i);\n                });\n            } else if (options.buttons) {\n                menuitem.remove();\n                menuitem = null;\n\n                options.buttons.forEach((i) => {\n                    var attributes = i.attributes;\n                    i.overflow = options.overflow;\n                    i.attributes = $.extend(attributes, options.attributes);\n\n                    that._addMenuItem(\"Button\", i);\n                });\n            }\n\n            if (component === \"DropDownButton\") {\n                menuitem.addClass(STATE_DISABLED);\n                menuitem.attr(ARIA_DISABLED, true);\n            }\n\n            if (menuitem) {\n                that._addAttributes(options, menuitem);\n\n                if (options.overflow === OVERFLOW_AUTO) {\n                    menuitem.addClass(STATE_HIDDEN);\n                }\n\n                if (options.click || options.toggle) {\n                    that.overflowMenu.bind(SELECT, (e) => {\n                        if (e.item === menuitem[0]) {\n                            this._onMenuItemSelect(e, options.click, options.toggle);\n                        }\n                    });\n                }\n            }\n\n            return menuitem;\n        },\n\n        _addPopupButton: function(options) {\n            var that = this,\n                widgetElement = $(POPUP_BUTTON_TEMPLATE),\n                component = options.popupComponent,\n                popup, chooser;\n\n            widgetElement.attr(ARIA_LABEL, options.text);\n\n            popup = $(\"<div/>\").appendTo($(\"<body>\")).kendoPopup({\n                anchor: widgetElement\n            }).data(\"kendoPopup\");\n\n            widgetElement.on(CLICK + \" touchend\", (e) => {\n                popup.toggle();\n                e.preventDefault();\n            });\n\n            chooser = new component(popup.element);\n\n            chooser.bind(options.commandOn, (e) => {\n                that.trigger(CHANGE, { target: widgetElement, value: e.value || e });\n                popup.close();\n            });\n\n            return { widgetElement, chooser, popup };\n        },\n\n        _addSeparator: function(options) {\n            var separator = $(SEPARATOR_EL),\n                overflowSeparator = $(SEPARATOR_OVERFLOW_EL);\n\n            separator.addClass(KSEPARATOR);\n            separator.attr(ROLE, SEPARATOR);\n\n            if (this.overflowAnchor) {\n                separator.insertBefore(this.overflowAnchor);\n            } else {\n                separator.appendTo(this.element);\n            }\n\n            this._addAttributes(options, separator);\n\n            if (options.id) {\n                options.id = options.id + DASH + OVERFLOW;\n            }\n\n            this._addAttributes(options, overflowSeparator);\n\n            if (this.overflowMenu) {\n                this.overflowMenu.element.append(overflowSeparator);\n            }\n        },\n\n        _addSpacer: function() {\n            var spacer = $(SPACER_EL);\n            spacer.addClass(SPACER_CLASS);\n\n            if (this.overflowAnchor) {\n                spacer.insertBefore(this.overflowAnchor);\n            } else {\n                spacer.appendTo(this.element);\n            }\n        },\n\n        _addTemplate: function(options) {\n            var template = options.template,\n                overflowTemplate = options.overflowTemplate,\n                element, menuitem, inputsInTemplate = $(NOTHING);\n\n            if (overflowTemplate && this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                overflowTemplate = isFunction(overflowTemplate) ? overflowTemplate(options)[0] : overflowTemplate;\n                this.overflowMenu.append({});\n                menuitem = this.overflowMenu.element\n                    .find(DOT + MENU_ITEM)\n                    .last()\n                    .find(DOT + MENU_LINK)\n                    .html(overflowTemplate)\n                    .parent();\n            }\n\n            if (template && options.overflow !== OVERFLOW_ALWAYS) {\n                if (this.options.evaluateTemplates) {\n                    template = kendo.template(template);\n                }\n\n                template = isFunction(template) ? template(options) : template;\n\n                element = $(TEMPLATE_WRAPPER);\n                element.html(template);\n\n                if (menuitem) {\n                    menuitem.addClass(STATE_HIDDEN);\n                }\n            }\n\n            if (element) {\n                inputsInTemplate = element.find(INPUT + COMMA + SELECT);\n                this._addAttributes(options, element);\n            }\n\n            if (menuitem) {\n                inputsInTemplate.add(menuitem.find(INPUT + COMMA + SELECT));\n                this._addAttributes(options, menuitem);\n            }\n\n            if (!this.options.navigateOnTab && inputsInTemplate.length > 0) {\n                element.attr(TABINDEX, 0);\n                element.addClass(TOOLBAR_TOOL);\n                inputsInTemplate.attr(TABINDEX, -1);\n            }\n\n            return element;\n        },\n\n        _addToolbarTool: function(component, options) {\n            var widgetElement = $(\"<button>\"),\n                hasButtons = false,\n                widget, element, popupRef;\n\n            if (options.primary === true) {\n                options.themeColor = PRIMARY;\n            }\n            if (options.url) {\n                widgetElement = $(\"<a href='\" + options.url + \"'>\");\n            }\n            if (options.showIcon === OVERFLOW) {\n                delete options.imageUrl;\n                delete options.icon;\n            }\n            if (options.showText !== OVERFLOW) {\n                widgetElement.text(options.text);\n            } else {\n                widgetElement.attr(ARIA_LABEL, options.text);\n            }\n\n            if (options.type === \"popupButton\") {\n                popupRef = this._addPopupButton(options);\n                widgetElement = popupRef.widgetElement;\n            } else if (component === \"Button\" && options.togglable === true) {\n                component = \"ToggleButton\";\n            } else if (options.menuButtons) {\n                options.items = options.menuButtons;\n                delete options.menuButtons;\n\n                if (options.attributes && options.attributes.class) {\n                    widgetElement.addClass(options.attributes.class);\n                }\n\n                widgetElement.attr(DATA_UID, options.uid);\n                delete options.uid;\n            } else if (options.buttons) {\n                widgetElement = $(\"<span></span>\");\n                hasButtons = true;\n                options.items = options.buttons;\n                delete options.buttons;\n\n                options.preventKeyNav = true;\n\n                options.items.forEach(i => {\n                    if (i.showIcon === OVERFLOW) {\n                        delete i.imageUrl;\n                        delete i.icon;\n                    }\n\n                    if (i.showText === OVERFLOW) {\n                        if (!i.attributes) {\n                            i.attributes = {};\n                        }\n\n                        i.attributes[ARIA_LABEL] = i.text;\n\n                        delete i.text;\n                    }\n                });\n            }\n\n            if (options.id) {\n                widgetElement.attr(ID, options.id);\n                delete options.id;\n            }\n\n            options.size = this.options.size;\n\n            widget = new kendo.ui[component]($(widgetElement), options);\n            element = widget.wrapper || widget.element;\n            element.addClass(TOOLBAR_TOOLS_CLASSES[component]);\n            this._addAttributes(options, element);\n\n            if (options.url) {\n                widgetElement.removeAttr(ROLE);\n            }\n\n            if (hasButtons) {\n                element.find(DOT + KBUTTON).addClass(TOOLBAR_TOOL);\n                this._groupVisibleButtons(element);\n            } else {\n                widget.element.addClass(TOOLBAR_TOOL);\n            }\n\n            if (options.type !== \"popupButton\" && options.type !== \"open\") {\n                this._attachWidgetEvents(widget);\n            } else if (options.type === \"open\") {\n                widgetElement.addClass(UPLOAD_BUTTON);\n                this._resetOpen(widgetElement, options.extensions);\n                element = widgetElement.parent();\n            } else {\n                widget.chooser = popupRef.chooser;\n                widget.popup = popupRef.popup;\n            }\n\n            return element;\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.element.on(KEYDOWN + ns, that._keydown.bind(that))\n                .on(FOCUSIN + ns, that._focusIn.bind(that))\n                .on(FOCUSOUT + ns, that._focusOut.bind(that));\n        },\n\n        _attachWidgetEvents: function(widget) {\n            var that = this;\n\n            widget.bind(CLICK, that._onClick.bind(that));\n            widget.bind(TOGGLE, that._onToggle.bind(that));\n            widget.bind(SELECT, that._onSelect.bind(that));\n            widget.bind(OPEN, that._onOpen.bind(that));\n            widget.bind(CLOSE, that._onClose.bind(that));\n\n            widget.wrapper.find(DOT + KBUTTON).each((i, el) => {\n                var $el = $(el);\n\n                if ($el.data(\"kendoButton\")) {\n                    $el.data(\"kendoButton\").bind(CLICK, (e) => {\n                        that.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n                    });\n                }\n            });\n        },\n\n        _childrenWidth: function() {\n            var gap = parseInt(this.element.css('gap'), 10) || 0;\n            var childrenWidth = gap;\n\n            this.element.children(\":visible:not(\" + DOT + SPACER_CLASS + \")\").each(function() {\n                childrenWidth += outerWidth($(this), false) + gap;\n            });\n\n            return Math.ceil(childrenWidth);\n        },\n\n        _extendToolsOptions: function() {\n            var options = this.options,\n                items = options.tools.flatMap((tool) => this._mapTool(tool, options.parentMessages, options.defaultTools));\n\n            this.options.items = items;\n\n            return items;\n        },\n\n        _focusIn: function(e) {\n            var target = $(e.target),\n                button = target.closest(DOT + KBUTTON);\n\n            if (button.length > 0) {\n                this._resetTabIndex(button);\n                button.addClass(KFOCUS);\n            }\n        },\n\n        _focusOut: function(e) {\n            this.wrapper.find(DOT + KBUTTON + DOT + KFOCUS).removeClass(KFOCUS);\n        },\n\n        _getAllItems: function() {\n            return this.wrapper.find(DOT + TOOLBAR_TOOL)\n                .filter(\":visible\")\n                .filter((i, el) => {\n                    if (el.style.visibility === HIDDEN) {\n                        return false;\n                    }\n\n                    return true;\n                });\n        },\n\n        _getItem: function(candidate, knownUid) {\n            var uid = knownUid || this._getUid(candidate),\n                buttonsPopups = $(DATA_ROLE_BUTTONMENU),\n                uidSelector, toolbarEl;\n\n            if (!uid) {\n                return {\n                    toolbarEl: this.element.find(candidate),\n                    templateEl: $(NOTHING),\n                    menuItem: this.overflowMenu ? this.overflowMenu.element.find(candidate) : $(NOTHING),\n                    buttonsPopupItem: $(NOTHING)\n                };\n            }\n\n            uidSelector = \"[data-uid=\" + uid + \"]\";\n            toolbarEl = this.element.find(uidSelector);\n\n            return {\n                toolbarEl: toolbarEl,\n                templateEl: toolbarEl.closest(DOT + TEMPLATE_ITEM + COMMA + DOT + SPLIT_BUTTON),\n                component: kendo.widgetInstance(toolbarEl),\n                menuItem: this.overflowMenu ? this.overflowMenu.element.find(uidSelector) : $(NOTHING),\n                buttonsPopupItem: buttonsPopups.find(uidSelector)\n            };\n        },\n\n        _getNextElement: function(item, direction) {\n            var items = this._getAllItems(),\n                itemIndex = items.index(item) === -1 ? items.index(item.parentElement) : items.index(item),\n                focusableItem = items[itemIndex + direction];\n\n            if (!focusableItem) {\n                if (direction === -1) {\n                    focusableItem = items.last();\n                } else {\n                    focusableItem = items.first();\n                }\n            }\n\n            return focusableItem;\n        },\n\n        _getUid: function(candidate) {\n            var element;\n\n            // find toolbar item by jQuery selector\n            element = this.element.find(candidate);\n\n            // if not found find in in the DropDown-/SplitButton popups\n            if (!element.length) {\n                element = $(DATA_ROLE_BUTTONMENU).find(candidate);\n            }\n\n            // if not, find it in the OverflowMenu\n            if (!element.length && this.overflowMenu) {\n                element = this.overflowMenu.element.find(candidate);\n            }\n\n            if (!element.length) {\n                return null;\n            } else {\n                return element.data(UID) || element.closest(DOT + TOOLBAR_TOOL).data(UID);\n            }\n        },\n\n        _groupVisibleButtons: function(el) {\n            var buttons = el.children(),\n                visibleBtns;\n\n            buttons.removeClass(GROUP_END).removeClass(GROUP_START);\n            visibleBtns = buttons.filter(\":not('.\" + STATE_HIDDEN + \"')\");\n            visibleBtns.first().addClass(GROUP_START);\n            visibleBtns.last().addClass(GROUP_END);\n        },\n\n        _hideItem: function(item) {\n            var that = this,\n                widget;\n\n            item.addClass(STATE_HIDDEN);\n\n            if (that.overflowMenu) {\n                if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                    if (item.hasClass(SPLIT_BUTTON)) {\n                        item = item.children().eq(0);\n                        widget = item.data(K_SPLIT_BUTTON);\n                    } else {\n                        widget = item.data(K_DROP_DOWN_BUTTON);\n                    }\n\n                    widget.menu.list.children().each((i, el) => {\n                        that._showMenuItem($(el));\n                    });\n\n                    that._showMenuItem(item);\n                } else if (item.hasClass(BUTTON_GROUP)) {\n                    item.children().each((i, el) => {\n                        that._showMenuItem($(el));\n                    });\n                } else {\n                    that._showMenuItem(item);\n                }\n            }\n        },\n\n        _hideMenuItem: function(item) {\n            this.overflowMenu.element\n                .find(\">li[data-uid='\" + item.data(UID) + \"']\")\n                .addClass(STATE_HIDDEN);\n        },\n\n        _items: function() {\n            let options = this.options;\n\n            for (var i = 0; i < options.items.length; i++) {\n                this._add(options.items[i]);\n            }\n        },\n\n        _keydown: function(e) {\n            var target = $(e.target),\n                keyCode = e.keyCode,\n                templateItem = target.closest(DOT + TEMPLATE_ITEM),\n                isOverflowAnchor = target.is(DOT + OVERFLOW_ANCHOR);\n\n            if (!this.options.navigateOnTab && !target.is(\".k-toolbar-tool\") && keyCode === keys.ESC && templateItem.length > 0) {\n                e.stopPropagation();\n                this._keyDeactivateTemplate(templateItem);\n                return;\n            }\n\n            if (!target.hasClass(TOOLBAR_TOOL)) {\n                return;\n            }\n\n            if (!this.options.navigateOnTab && keyCode === keys.ENTER && target.hasClass(TEMPLATE_ITEM)) {\n                this._keyActivateTemplate(target);\n            } else if (isOverflowAnchor && (e.altKey && keyCode === keys.DOWN || keyCode === keys.ENTER || keyCode === keys.SPACEBAR)) {\n                this._keyOpenOverflow(e, keyCode);\n            } else if (keyCode === keys.HOME) {\n                this._keyFocusFirst(target, e);\n            } else if (keyCode === keys.END) {\n                this._keyFocusLast(target, e);\n            } else if (!this.options.navigateOnTab && (keyCode === keys.RIGHT || keyCode === keys.LEFT)) {\n                this._keyFocusNext(keyCode, e);\n            }\n        },\n\n        _keyActivateTemplate: function(target) {\n            var innerFocusable = target.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST);\n\n            if (innerFocusable.length > 0) {\n                target.attr(TABINDEX, -1);\n\n                innerFocusable.attr(TABINDEX, 0);\n                innerFocusable.first().trigger(FOCUS);\n            }\n        },\n\n        _keyDeactivateTemplate: function(templateItem) {\n            var innerWidget = templateItem.find(DATA_ROLE_SELECTOR),\n                innerFocusable = templateItem.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST),\n                widgetInstance;\n\n            if (innerWidget.length > 0) {\n                widgetInstance = kendo.widgetInstance(innerWidget);\n\n                if (widgetInstance) {\n                    if (widgetInstance.overflowMenu && widgetInstance.overflowMenu.visible()) {\n                        return;\n                    } else {\n                        templateItem.attr(TABINDEX, 0);\n                        templateItem.trigger(FOCUS);\n                        templateItem.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                    }\n                }\n            }\n\n            if (innerFocusable.length > 0) {\n                templateItem.attr(TABINDEX, 0);\n                templateItem.trigger(FOCUS);\n                innerFocusable.attr(TABINDEX, -1);\n            }\n        },\n\n        _keyFocusFirst: function(target, e) {\n            var items = this._getAllItems();\n\n            if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                return;\n            }\n\n            this._resetTabIndex(items.first());\n            items.first().trigger(FOCUS);\n            e.preventDefault();\n        },\n\n        _keyFocusLast: function(target, e) {\n            var items = this._getAllItems(),\n                last;\n\n            if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                return;\n            }\n\n            last = items.last();\n\n            if (last.width() === 0) {\n                last = items.eq(items.length - 2);\n            }\n\n            this._resetTabIndex(last);\n            last.trigger(FOCUS);\n            e.preventDefault();\n        },\n\n        _keyFocusNext: function(keyCode, e) {\n            var direction = this._isRtl ? -1 : 1,\n                next;\n\n            if (keyCode === keys.LEFT) {\n                direction = -1 * direction;\n            }\n\n            next = $(this._getNextElement(e.target, direction));\n            this._resetTabIndex(next);\n            next.trigger(FOCUS);\n\n            e.preventDefault();\n        },\n\n        _keyOpenOverflow: function(e, keyCode) {\n            if (keyCode === keys.SPACEBAR) {\n                e.preventDefault();\n            }\n\n            this.overflowMenu.open();\n        },\n\n        _mapAttributes: function(toolOptions, messages) {\n            return {\n                \"aria-label\": messages[toolOptions.name || toolOptions.property],\n                \"title\": messages[toolOptions.name || toolOptions.property],\n                \"data-command\": toolOptions.command,\n                \"data-options\": toolOptions.options,\n                \"data-dialog\": toolOptions.dialog,\n                \"data-property\": toolOptions.property,\n                \"data-value\": toolOptions.value,\n                \"data-toggle\": toolOptions.toggleCondition\n            };\n        },\n\n        _mapComponent: function(component, messages) {\n            var that = this,\n                componentOptions = component.componentOptions,\n                componentMessages = componentOptions.messages,\n                componentPlaceholder = componentOptions.placeholder,\n                attributes = $.extend({}, that._mapAttributes(component, messages), component.attributes),\n                options;\n\n            if (component.overflowComponent) {\n                options = component.options || {};\n\n                if (component.componentOptions.dataSource) {\n                    options.options = component.componentOptions.dataSource;\n                }\n                if (component.componentOptions.value) {\n                    options.default = component.componentOptions.value;\n                }\n\n                if (Object.keys(options).length > 0) {\n                    component.overflowComponent.options = JSON.stringify(options);\n                }\n\n                component.overflowComponent = that._mapTool(component.overflowComponent, messages);\n            }\n\n            if (componentMessages) {\n                Object.keys(componentMessages).forEach((key) => {\n                    component.componentOptions.messages[key] = messages[componentMessages[key]] || componentMessages[key];\n                });\n            }\n\n            if (componentPlaceholder) {\n                component.componentOptions.placeholder = messages[componentPlaceholder] || componentPlaceholder;\n            }\n\n            Object.keys(componentOptions).forEach((key) => {\n                if (key === \"commandOn\") {\n                    component.componentOptions[componentOptions[key]] = (ev) => {\n                        that.trigger(CHANGE, { target: ev.target || ev.sender.element });\n                    };\n                }\n            });\n\n            if (componentOptions.dataSource && componentOptions.dataSource.length) {\n                component.componentOptions.dataSource = componentOptions.dataSource.map(i => {\n                    if (i.name && messages[i.name]) {\n                        i.text = messages[i.name];\n                    }\n\n                    return i;\n                });\n            }\n\n            component.attributes = attributes;\n\n            return component;\n        },\n\n        _mapTool: function(tool, messages, defaultTools) {\n            var that = this,\n                isArray = Array.isArray(tool),\n                isBuiltInTool, toolOptions, attributes;\n\n            if (isArray) {\n                return {\n                    type: \"buttonGroup\",\n                    buttons: tool.map(t => that._mapTool(t, messages, defaultTools))\n                };\n            }\n\n            isBuiltInTool = $.isPlainObject(tool) && Object.keys(tool).length === 1 && tool.name;\n            tool = isBuiltInTool ? tool.name : tool;\n            toolOptions = $.isPlainObject(tool) ? tool : $.extend({}, defaultTools[tool]);\n\n            attributes = $.extend({}, that._mapAttributes(toolOptions, messages), toolOptions.attributes);\n\n            kendo.deepExtend(toolOptions, {\n                text: messages[toolOptions.name || toolOptions.property],\n                attributes: attributes,\n            });\n\n            if (toolOptions.type === \"component\") {\n                if (toolOptions.items) {\n                    return toolOptions.items.map(t => that._mapComponent(t, messages));\n                } else {\n                    return that._mapComponent(toolOptions, messages);\n                }\n            } else if (toolOptions.type === \"buttonGroup\") {\n                delete toolOptions.attributes[ARIA_LABEL];\n                toolOptions.buttons = toolOptions.buttons.map(t => that._mapTool(t, messages, defaultTools));\n            } else if (toolOptions.type === \"splitButton\") {\n                delete toolOptions.attributes[ARIA_LABEL];\n                toolOptions.menuButtons = toolOptions.menuButtons.flatMap(t => that._mapTool(t, messages, defaultTools));\n            } else if (toolOptions.type === \"popupButton\" && toolOptions.overflowComponent) {\n                toolOptions.overflowComponent = that._mapTool(toolOptions.overflowComponent, messages);\n            }\n\n            delete toolOptions.name;\n\n            return toolOptions;\n        },\n\n        _menuItemSelect: function(e) {\n            var item = $(e.item),\n                id = item.attr(ID),\n                togglable = item.find(DOT + MENU_LINK_TOGGLE),\n                groupName = item.data(GROUP),\n                shouldSelect, twin, group;\n\n            if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                id = id.replace(DASH + OVERFLOW, NOTHING);\n            }\n\n            if (togglable.length) {\n                if (groupName) {\n                    this.overflowMenu.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                        var current = $(el);\n\n                        current.attr(ARIA_CHECKED, false);\n                        current.find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                    });\n                }\n\n                shouldSelect = groupName ? true : !togglable.hasClass(STATE_SELECTED);\n\n                togglable.toggleClass(STATE_SELECTED, shouldSelect);\n                item.attr(ARIA_CHECKED, shouldSelect);\n\n                twin = this.element.find(\"[data-uid=\" + item.data(UID) + \"]\");\n\n                if (twin.length) {\n                    if (twin.closest(DOT + BUTTON_GROUP).length) {\n                        group = twin.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n                        group.select(twin);\n                    } else {\n                        if (groupName) {\n                            this.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                                $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                            });\n                        }\n\n                        twin.data(K_TOGGLE_BUTTON).toggle(true);\n                    }\n                }\n\n                this.trigger(TOGGLE, {\n                    id: item.attr(ID),\n                    target: item,\n                    checked: shouldSelect\n                });\n            } else {\n                this.trigger(CLICK, {\n                    id: id,\n                    target: item,\n                });\n            }\n        },\n\n        _onClick: function(e) {\n            var el = e.target,\n                togglable = el.hasClass(\"k-toolbar-toggle-button\"),\n                group = el.data(GROUP);\n\n            if (!togglable) {\n                this.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n            }\n\n            if (group && this.element.find(\"[data-group=\" + group + \"]\").length > 1) {\n                if (el.hasClass(STATE_SELECTED)) {\n                    e.preventDefault();\n                }\n            }\n        },\n\n        _onClose: function(e) {\n            if (this.trigger(CLOSE, { widget: e.sender })) {\n                e.preventDefault();\n            }\n        },\n\n        _onMenuItemSelect: function(e, click, toggle) {\n            var item = $(e.item),\n                togglable = item.find(DOT + MENU_LINK_TOGGLE).length > 0,\n                id = item.attr(ID);\n\n            if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                id = id.replace(DASH + OVERFLOW, NOTHING);\n            }\n\n            if (click) {\n                click.bind(this)({\n                    event: e.event,\n                    id: id,\n                    target: item\n                });\n            }\n\n            if (togglable && toggle) {\n                setTimeout(() => {\n                    toggle.bind(this)({\n                        event: e.event,\n                        id: id,\n                        target: item,\n                        checked: item.find(DOT + STATE_SELECTED).length > 0\n                    });\n                });\n            }\n        },\n\n        _onOpen: function(e) {\n            if (this.trigger(OPEN, { widget: e.sender })) {\n                e.preventDefault();\n            }\n        },\n\n        _onSelect: function(e) {\n            var menuEl = this.overflowMenu ? this.overflowMenu.element : $(NOTHING);\n\n            e.sender.element.children().each((i, el) => {\n                var current = $(el),\n                    uid = current.data(UID),\n                    selected = current.hasClass(STATE_SELECTED);\n\n                menuEl\n                    .find(\"[data-uid=\" + uid + \"]\")\n                    .attr(ARIA_CHECKED, selected)\n                    .find(DOT + MENU_LINK_TOGGLE)\n                    .toggleClass(STATE_SELECTED, selected);\n            });\n\n            this.trigger(TOGGLE, {\n                id: e.target.attr(ID),\n                target: e.target,\n                checked: e.target.hasClass(STATE_SELECTED)\n            });\n        },\n\n        _onToggle: function(e) {\n            var that = this,\n                el = e.target,\n                group = el.data(GROUP),\n                overflowItem,\n                overflowGroup;\n\n            if (that.overflowMenu) {\n                overflowItem = that.overflowMenu.element.find(\"[data-uid=\" + el.attr(DATA_UID) + \"]\");\n                overflowGroup = that.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                overflowGroup.attr(ARIA_CHECKED, false).find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                overflowItem.attr(ARIA_CHECKED, true).find(DOT + MENU_LINK_TOGGLE).addClass(STATE_SELECTED);\n            }\n\n            if (group) {\n                that.element.find(\"[data-group=\" + group + \"]\").each((i, item) => {\n                    if (item !== el[0]) {\n                        $(item).data(K_TOGGLE_BUTTON).toggle(false);\n                    }\n                });\n            }\n\n            this.trigger(TOGGLE, { id: e.id, target: e.target, checked: e.checked, originalEvent: e.originalEvent || e.event });\n        },\n\n        _processInner(items, parentUid) {\n            var attributes, current;\n\n            for (var i = 0; i < items.length; i++) {\n                current = items[i];\n                attributes = current.attributes;\n\n                if (!attributes) {\n                    items[i].attributes = {};\n                }\n\n                items[i].attributes[DATA_UID] = kendo.guid();\n                items[i].attributes[DATA_PARENTUID] = parentUid;\n\n                if (current.id) {\n                    items[i].attributes[ID] = items[i].id;\n                }\n\n                if (current.hidden) {\n                    if (!items[i].attributes.class) {\n                        items[i].attributes.class = NOTHING;\n                    }\n\n                    items[i].attributes.class += (EMPTY + STATE_HIDDEN + EMPTY + FORCE_HIDDEN);\n                }\n            }\n\n            return items;\n        },\n\n        _processOptions: function(options) {\n            var template = options.template,\n                overflowTemplate = options.overflowTemplate,\n                uid = kendo.guid(),\n                groupName;\n\n            $.extend(options, {\n                uid: uid,\n                rootUid: this.uid\n            });\n\n            if (options.menuButtons) {\n                options.menuButtons = this._processInner(options.menuButtons, uid);\n            } else if (options.buttons && options.buttons.length) {\n                options.buttons = this._processInner(options.buttons, uid);\n\n                if (options.buttons.every(b => b.togglable)) {\n                    groupName = options.buttons[0].group;\n\n                    if (!!groupName && options.buttons.every(b => b.group === groupName)) {\n                        options.selection = SINGLE;\n                    } else {\n                        options.selection = MULTIPLE;\n                    }\n                } else {\n                    options.selection = NONE;\n                }\n            }\n\n            if ((template && !overflowTemplate) || options.type === SPACER) {\n                options.overflow = OVERFLOW_NEVER;\n            } else if (!options.overflow) {\n                options.overflow = OVERFLOW_AUTO;\n            }\n\n            if (options.enable !== undefined$1) {\n                options.enabled = options.enable;\n            }\n\n            return options;\n        },\n\n        _renderOverflow: function() {\n            var that = this,\n                isRtl = that._isRtl,\n                horizontalDirection = isRtl ? \"left\" : \"right\";\n\n            that.overflowAnchor = $(\"<button class='k-toolbar-overflow-button k-toolbar-tool' title='More tools'>\");\n            that.element.append(that.overflowAnchor);\n            that.overflowAnchor.kendoButton({\n                icon: \"more-vertical\",\n                fillMode: \"flat\",\n                size: that.options.size\n            });\n\n            if (!that.options.navigateOnTab) {\n                that.overflowAnchor.attr(TABINDEX, -1);\n            }\n\n            that.overflowMenu = new kendo.ui.ContextMenu($(\"<ul>\"), {\n                size: that.options.size,\n                showOn: \"click tap\",\n                origin: \"bottom \" + horizontalDirection,\n                position: \"top \" + horizontalDirection,\n                alignToAnchor: true,\n                target: that.overflowAnchor,\n                open: function(e) {\n                    if (that.trigger(OVERFLOW_OPEN)) {\n                        e.preventDefault();\n                    }\n                },\n                close: function(e) {\n                    if (that.trigger(OVERFLOW_CLOSE)) {\n                        e.preventDefault();\n                    } else {\n                        that._resetTabIndex(that.overflowAnchor);\n                        that.overflowAnchor.trigger(FOCUS);\n                    }\n                }\n            });\n\n            that.overflowMenu.element.attr(KENDO_UID_ATTR, this.uid);\n\n            setTimeout(() => {\n                that.overflowMenu.bind(SELECT, that._menuItemSelect.bind(that));\n            });\n        },\n\n        _resetOpen: function(element, extensions) {\n            var that = this,\n                uploadWrapper,\n                input;\n\n            element.closest(\".k-upload-button-wrap\").find(\"input\").remove();\n            uploadWrapper = element.wrap(\"<div class='k-upload-button-wrap'></span>\").parent();\n\n            input = $(\"<input type='file' autocomplete='off' accept='\" + extensions + \"'/>\")\n                .attr(\"aria-hidden\", true)\n                .one(\"change\", (e) => {\n                    that.trigger(CHANGE, {\n                        target: element,\n                        value: e.target.files[0]\n                    });\n\n                    that._resetOpen(element, extensions);\n                })\n                .appendTo(uploadWrapper);\n\n            element.off(KEYDOWN).on(KEYDOWN, (e) => {\n                if (e.keyCode === kendo.keys.ENTER) {\n                    input.trigger(CLICK);\n                }\n            });\n        },\n\n        _resetTabIndex: function(toFocus) {\n            if (this.options.navigateOnTab !== true) {\n                this.wrapper.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                toFocus.attr(TABINDEX, 0);\n            }\n        },\n\n        _resizable: function() {\n            var that = this,\n                element = that.element;\n\n            that._renderOverflow();\n            element.addClass(RESIZABLE_TOOLBAR);\n\n            that._resizeHandler = kendo.onResize(function() {\n                that.resize();\n            });\n        },\n\n        _resize: function(e) {\n            var containerWidth = e.width,\n                wrapper = this.element,\n                popupBtnElements = wrapper.find('[data-role=\"splitbutton\"]').add(wrapper.find('[data-role=\"dropdownbutton\"]'));\n\n            if (!this.options.resizable) {\n                return;\n            }\n\n            this.overflowMenu.close();\n\n            if (popupBtnElements.length > 0) {\n                popupBtnElements.each((i, el) => {\n                    kendo.widgetInstance($(el)).close();\n                });\n            }\n\n            this._shrink(containerWidth);\n            this._stretch(containerWidth);\n            this._toggleOverflowAnchor();\n        },\n\n        _shrink: function(containerWidth) {\n            var commandElement,\n                visibleCommands,\n                activeElement;\n\n            if (containerWidth < this._childrenWidth()) {\n                visibleCommands = this.element.children(\":visible:not([data-overflow='never'], .\" + OVERFLOW_ANCHOR + \")\");\n\n                for (var i = visibleCommands.length - 1; i >= 0; i--) {\n                    commandElement = visibleCommands.eq(i);\n\n                    if (containerWidth > this._childrenWidth()) {\n                        break;\n                    } else {\n                        activeElement = commandElement.find(\"[tabindex=0]\") || commandElement.is(\"[tabindex=0]\") ? commandElement : $(NOTHING);\n\n                        if (activeElement.length > 0) {\n                            activeElement.attr(TABINDEX, -1);\n                            this.element.children(DOT + OVERFLOW_ANCHOR).attr(TABINDEX, 0);\n                        }\n\n                        this._hideItem(commandElement);\n                    }\n                }\n            }\n        },\n\n        _showItem: function(item, containerWidth) {\n            var that = this,\n                gap = parseInt(this.element.css('gap'), 10) || 0,\n                widget;\n\n            item.removeClass(STATE_HIDDEN);\n            var itemOuterWidth = outerWidth(item, true) + gap;\n            item.addClass(STATE_HIDDEN);\n\n            if (item.length && (item.hasClass(SPACER_CLASS) || containerWidth > this._childrenWidth() + itemOuterWidth)) {\n                item.removeClass(STATE_HIDDEN);\n\n                if (this.options.navigateOnTab !== true) {\n                    item.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                } else {\n                    if (item.is(\"[tabindex=-1]\")) {\n                        item.removeAttr(TABINDEX);\n                    }\n                }\n\n                if (this.overflowMenu) {\n                    if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                        if (item.hasClass(SPLIT_BUTTON)) {\n                            item = item.children().eq(0);\n                            widget = item.data(K_SPLIT_BUTTON);\n                        } else {\n                            widget = item.data(K_DROP_DOWN_BUTTON);\n                        }\n\n                        widget.menu.list.children().each((i, el) => {\n                            that._hideMenuItem($(el));\n                        });\n\n                        that._hideMenuItem(item);\n                    } else if (item.hasClass(BUTTON_GROUP)) {\n                        item.children().each((i, el) => {\n                            that._hideMenuItem($(el));\n                        });\n                    } else {\n                        that._hideMenuItem(item);\n                    }\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        _showMenuItem: function(item) {\n            var menuItem = this.overflowMenu.element.find(\">li[data-uid='\" + item.data(UID) + \"']\");\n\n            if (!menuItem.hasClass(FORCE_HIDDEN)) {\n                menuItem.removeClass(STATE_HIDDEN);\n            }\n        },\n\n        _stretch: function(containerWidth) {\n            var overflowAnchor = this.element.children(DOT + OVERFLOW_ANCHOR),\n                commandElement,\n                hiddenCommands;\n\n            if (containerWidth > this._childrenWidth()) {\n                hiddenCommands = this.element.children(DOT + STATE_HIDDEN + \":not(\" + DOT + FORCE_HIDDEN + \")\");\n\n                for (var i = 0; i < hiddenCommands.length; i++) {\n                    commandElement = hiddenCommands.eq(i);\n\n                    if (containerWidth < this._childrenWidth() || !this._showItem(commandElement, containerWidth)) {\n                        break;\n                    }\n                }\n            }\n\n            if (!this.options.navigateOnTab && overflowAnchor.is(\"[tabindex=0]\")) {\n                overflowAnchor.attr(TABINDEX, -1);\n                this._resetTabIndex(this._getAllItems().first());\n            }\n        },\n\n        _tabIndex: function() {\n            var focusableItems = this.wrapper.find(KENDO_FOCUSABLE + \":not('\" + TABINDEX_MINUS_1 + \"')\"),\n                firstFocusable = focusableItems.first();\n\n            if (this.options.navigateOnTab !== true) {\n                focusableItems.attr(TABINDEX, -1);\n                firstFocusable.attr(TABINDEX, 0);\n            } else {\n                this.wrapper.find(\".k-toolbar-item.k-toolbar-tool\").removeAttr(TABINDEX);\n            }\n        },\n\n        _toggleOverflowAnchor: function() {\n            var hasVisibleChildren = false;\n\n            hasVisibleChildren = this.overflowMenu.element.children(\":not(.\" + STATE_HIDDEN + \", .\" + POPUP + \")\").length > 0;\n\n            if (hasVisibleChildren) {\n                this.overflowAnchor.removeClass(STATE_HIDDEN);\n            } else {\n                this.overflowAnchor.addClass(STATE_HIDDEN);\n            }\n        }\n    });\n\n    kendo.toolbar = {\n        Item: kendo.Class,\n        OverflowButton: kendo.Class,\n        TemplateItem: kendo.Class,\n        ToolBarButton: kendo.Class,\n        registerComponent: () => null\n    };\n\n    kendo.cssProperties.registerPrefix(\"ToolBar\", \"k-toolbar-\");\n\n    kendo.ui.plugin(ToolBar);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}