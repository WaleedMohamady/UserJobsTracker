{"version":3,"sources":["raw-mjs/kendo.button.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","html","keys","CLICK","MOUSEDOWN","support","mousedown","MOUSEUP","mouseup","NS","DISABLED","FOCUSEDSTATE","ACTIVESTATE","setDefaults","icon","iconClass","spriteCssClass","imageUrl","badge","Button","extend","init","element","options","that","this","fn","call","wrapper","renderButton","attr","enable","enabled","_tabindex","_badge","on","_click","bind","_focus","_blur","_keydown","_removeActive","_addActive","notify","destroy","off","events","size","shape","rounded","fillMode","themeColor","_isNativeButton","prop","toLowerCase","e","trigger","event","target","preventDefault","addClass","removeClass","setTimeout","keyCode","ENTER","SPACEBAR","toggleClass","err","badgeEelement","badgeOptions","constructor","Object","text","position","align","_classNames","appendTo","Badge","hasOwnProperty","defineProperty","get","defaults","button","cssProperties","registerPrefix","registerValues","values","fillModeValues","concat","roundedValues","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.button.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.badge.js';\nimport './kendo.html.button.js';\n\nvar __meta__ = {\n        id: \"button\",\n        name: \"Button\",\n        category: \"web\",\n        description: \"The Button widget displays styled buttons.\",\n        depends: [\"core\", \"badge\", \"html.button\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            html = kendo.html,\n            ui = kendo.ui,\n            keys = kendo.keys,\n            CLICK = \"click\",\n            MOUSEDOWN = kendo.support.mousedown,\n            MOUSEUP = kendo.support.mouseup,\n            MOUSEOUT = \"mouseout\",\n            NS = \".kendoButton\",\n            DISABLED = \"disabled\",\n            DISABLEDSTATE = \"k-disabled\",\n            FOCUSEDSTATE = \"k-focus\",\n            ACTIVESTATE = \"k-active\";\n\n        var BUTTON_DEFAULTS = {\n            icon: \"\",\n            iconClass: \"\",\n            spriteCssClass: \"\",\n            imageUrl: \"\",\n            badge: null\n        };\n        kendo.setDefaults(\"button\", BUTTON_DEFAULTS);\n\n        var Button = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n                options = that.options;\n\n                html.renderButton(element, $.extend({}, options));\n\n                element.attr(\"role\", \"button\");\n\n                options.enable = options.enable && options.enabled && !element.attr(DISABLED);\n                that.enable(options.enable);\n\n                if (options.enable) {\n                    that._tabindex();\n                }\n\n                that._badge();\n\n                element\n                    .on(CLICK + NS, that._click.bind(that))\n                    .on(\"focus\" + NS, that._focus.bind(that))\n                    .on(\"blur\" + NS, that._blur.bind(that))\n                    .on(\"keydown\" + NS, that._keydown.bind(that))\n                    .on(\"keyup\" + NS, that._removeActive.bind(that))\n                    .on(MOUSEDOWN + NS, that._addActive.bind(that))\n                    .on(MOUSEUP + NS + \" \" + MOUSEOUT + NS, that._removeActive.bind(that));\n\n                kendo.notify(that);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n\n                if (that.badge) {\n                    that.badge.destroy();\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            events: [\n                CLICK\n            ],\n\n            options: {\n                name: \"Button\",\n                enable: true,\n                enabled: true,\n                icon: \"\",\n                iconClass: \"\",\n                spriteCssClass: \"\",\n                imageUrl: \"\",\n                badge: null,\n                size: \"medium\",\n                shape: \"rectangle\",\n                rounded: \"medium\",\n                fillMode: \"solid\",\n                themeColor: \"base\"\n            },\n\n            _isNativeButton: function() {\n                return this.element.prop(\"tagName\").toLowerCase() == \"button\";\n            },\n\n            _click: function(e) {\n                if (this.options.enable) {\n                    if (this.trigger(CLICK, {\n                        event: e,\n                        id: this.element.attr(\"id\"),\n                        target: this.element\n                    })) {\n                        e.preventDefault();\n                    }\n                }\n            },\n\n            _focus: function() {\n                if (this.options.enable) {\n                    this.element.addClass(FOCUSEDSTATE);\n                }\n            },\n\n            _blur: function() {\n                var that = this;\n                that.element.removeClass(FOCUSEDSTATE);\n                setTimeout(function() {\n                    that.element.removeClass(ACTIVESTATE);\n                });\n            },\n\n            _keydown: function(e) {\n                var that = this;\n                if (e.keyCode == keys.ENTER || e.keyCode == keys.SPACEBAR) {\n                    that._addActive();\n\n                    if (!that._isNativeButton()) {\n                        if (e.keyCode == keys.SPACEBAR) {\n                            e.preventDefault();\n                        }\n                        that._click(e);\n                    }\n                }\n            },\n\n            _removeActive: function() {\n                this.element.removeClass(ACTIVESTATE);\n            },\n\n            _addActive: function() {\n                if (this.options.enable) {\n                    this.element.addClass(ACTIVESTATE);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this,\n                    element = that.element;\n\n                if (enable === undefined$1) {\n                    enable = true;\n                }\n\n                enable = !!enable;\n                that.options.enable = enable;\n                element.toggleClass(DISABLEDSTATE, !enable)\n                    .attr(\"aria-disabled\", !enable)\n                    .attr(DISABLED, !enable);\n\n                if (enable) {\n                    that._tabindex();\n                }\n\n                // prevent 'Unspecified error' in IE when inside iframe\n                try {\n                    element.trigger(\"blur\");\n                } catch (err) {}\n            },\n\n            _badge: function(options) {\n                var that = this;\n                var badgeOptions = options || that.options.badge;\n                var badgeEelement;\n\n                if (badgeOptions === null || badgeOptions === undefined$1) {\n                    return;\n                }\n\n                if (badgeOptions.constructor !== Object) {\n                    badgeOptions = { text: badgeOptions };\n                }\n\n                if (badgeOptions.position === undefined$1 || badgeOptions.position === \"\") {\n                    badgeOptions.position = \"edge\";\n\n                    if (badgeOptions.align === undefined$1 || badgeOptions.align === \"\") {\n                        badgeOptions.align = \"top end\";\n                    }\n                }\n\n                badgeOptions._classNames = [\"k-button-badge\"];\n\n                that.element.addClass(\"k-badge-container\");\n\n                badgeEelement = $('<span />').appendTo(that.element);\n                that.badge = new ui.Badge(badgeEelement, badgeOptions);\n            }\n        });\n\n        if (Button.fn.hasOwnProperty(\"defaults\") === false) {\n            Object.defineProperty(Button.fn, \"defaults\", {\n                get: function() {\n                    return kendo.defaults.button;\n                }\n            });\n        }\n\n        kendo.cssProperties.registerPrefix(\"Button\", \"k-button-\");\n\n        kendo.cssProperties.registerValues(\"Button\", [{\n            prop: \"fillMode\",\n            values: kendo.cssProperties.fillModeValues.concat([\"link\", \"clear\"])\n        }, {\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        kendo.ui.plugin(Button);\n\n    })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}