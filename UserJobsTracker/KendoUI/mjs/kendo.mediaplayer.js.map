{"version":3,"sources":["raw-mjs/kendo.mediaplayer.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","END","PAUSE","PLAY","READY","TIMECHANGE","VOLUMECHANGE","FULLSCREEN_ENTER","FULLSCREEN_EXIT","MUTE","LOW_VOLUME","HIGH_VOLUME","VIDEO_QUALITY","STATE_PLAY","STATE_PAUSE","TITLEBAR","TOOLBAR","SLIDER","VOLUME_SLIDER","MEDIA","OVERLAY","YTPLAYER","DOT","STATE_PLAY_SELECTOR","FULLSCREEN_ENTER_SELECTOR","FULLSCREEN_EXIT_SELECTOR","MUTE_SELECTOR","LOW_VOLUME_SELECTOR","HIGH_VOLUME_SELECTOR","ui","ns","baseTime","Date","timeZoneSec","getTimezoneOffset","Widget","isArray","Array","timeFormats","template","keys","templates","htmlPlayer","titleBar","toolBar","youtubePlayer","toolBarTime","slider","volumeSlider","qualityDropDown","toolTip","value","toString","MediaPlayer","extend","init","element","options","this","wrapper","fn","call","addClass","_currentIndex","_createTitlebar","_createToolbar","_createDropDown","_createSlider","_createVolumeSlider","_timers","_aria","_navigatable","fullScreen","media","notify","events","autoPlay","autoRepeat","volume","mute","navigatable","forwardSeek","messages","pause","play","unmute","quality","fullscreen","_msToTime","ms","time","getTime","setSeconds","_timeToSec","_titleBar","find","length","append","sliderElement","_slider","_sliderDragChangeHandler","_sliderDragChange","bind","_sliderDraggingHandler","_sliderDragging","Slider","smallStep","tickPlacement","showButtons","change","slide","tooltip","dragHandleTitle","volumeSliderElement","_volumeSlider","_volumeDraggingHandler","_volumeDragging","_volumeChangeHandler","_volumeChange","width","min","max","enabled","_resetTime","_youTubeVideo","_ytmedia","seekTo","_media","currentTime","_mediaTimeUpdate","grep","_toolBar","items","e","_currentUrl","source","url","_isYouTubeUrl","match","_setPlayerUrl","oldPlayer","stop","toggle","initialized","_initializePlayer","_videoOverlay","hide","loadVideoById","_getMediaId","_playStateToggle","cueVideoById","show","remove","attr","toolBarElement","_toolbarClickHandler","_toolbarClick","ToolBar","click","resizable","type","attributes","class","icon","fillMode","off","before","_volumeButton","_fullscreenButton","_currentTimeElement","_durationElement","_playButton","_playButtonSpan","support","cssFlexbox","wrapAll","hdIcon","dropDownElement","data","_dropDownSelectHandler","_dropDownSelect","_dropDown","DropDownList","dataTextField","dataValueField","popup","position","origin","appendTo","animation","open","effects","duration","select","setDataSource","replaceWith","list","item","index","target","children","first","isPaused","is","_isInFullScreen","muted","_isDragging","that","sender","tzOffset","_sliderChangeFired","_seekBarLastPosition","setTimeout","trigger","_preventPlay","_changeVolumeButtonImage","volumeButton","volumeElement","getCurrentTime","timeInMs","text","_timeFormat","isPlaying","_mediaEnded","_mediaPlay","_mediaReady","_mediaDurationChange","durationTime","getDuration","getHours","setOptions","_isFirstRun","_createYoutubePlayer","_mediaTimeUpdateHandler","_mediaDurationChangeHandler","prepend","_ytPlayer","css","height","YT","Player","_configurePlayer","onYouTubeIframeAPIReadyRegister","getScript","onYouTubeIframeAPIReady","i","_youtubeApiReady","_poll","callback","interval","context","clearTimeout","callLater","vars","autoplay","wmode","controls","rel","showinfo","_onYouTubePlayerReady","onYouTubePlayerReady","_onPlayerStateChangeHandler","_onPlayerStateChange","onPlayerStateChange","videoId","playerVars","onReady","onStateChange","event","getIframe","style","_updateTitle","titlebar","title","_paused","setVolume","_uiDisplay","result","_mouseClick","_mouseMoveHandler","_mouseMove","_mouseInHandler","_mouseIn","_mouseOutHandler","_mouseOut","on","_createHtmlPlayer","_mouseClickHanlder","_mediaEndedHandler","_mediaCanPlayHandler","_mediaPlayHandler","after","ontimeupdate","ondurationchange","oncanplay","onplay","onended","loop","_mouseIdle","state","animationSpeed","uiElements","add","parent","fadeIn","fadeOut","destroy","_keyDownHandler","_fullscreenHandler","_youtubeApiReadyHandler","src","_mouseMoveTimer","seek","seconds","playVideo","mobileOS","stopVideo","pauseVideo","toolbar","dropdown","enterFullScreen","get","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","document","cancelFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msCancelFullscreen","exitFullscreen","msExitFullscreen","removeClass","resize","_volume","currentState","isMuted","unMute","getVolume","isEnded","getPlayerState","ended","_mediaData","_fullscreen","_keyDown","isFullScreen","mozFullScreen","webkitIsFullScreen","fullscreenSpan","preventDefault","fsButton","keyCode","SPACEBAR","ENTER","ESC","_error","_progress","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.mediaplayer.js","sourcesContent":["import './kendo.slider.js';\nimport './kendo.toolbar.js';\nimport './kendo.dropdownlist.js';\nimport './kendo.tooltip.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n        id: \"mediaplayer\",\n        name: \"MediaPlayer\",\n        category: \"web\",\n        description: \"\",\n        depends: [\"slider\", \"toolbar\", \"dropdownlist\", \"tooltip\", \"icons\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            END = \"end\",\n            PAUSE = \"pause\",\n            PLAY = \"play\",\n            READY = \"ready\",\n            TIMECHANGE = \"timeChange\",\n            VOLUMECHANGE = \"volumeChange\",\n            FULLSCREEN_ENTER = \"fullscreen\",\n            FULLSCREEN_EXIT = \"fullscreen-exit\",\n            MUTE = \"volume-mute\",\n            LOW_VOLUME = \"volume-down\",\n            HIGH_VOLUME = \"volume-up\",\n            VIDEO_QUALITY = \"k-mediaplayer-quality\",\n            STATE_PLAY = \"play\",\n            STATE_PAUSE = \"pause\",\n            TITLEBAR = \"k-mediaplayer-titlebar\",\n            TITLE = \"k-title\",\n            TOOLBARWRAP = \"k-mediaplayer-toolbar-wrap\",\n            TOOLBAR = \"k-mediaplayer-toolbar\",\n            SLIDER = \"k-mediaplayer-seekbar\",\n            VOLUME_SLIDER = \"k-mediaplayer-volume\",\n            MEDIA = \"k-mediaplayer-media\",\n            OVERLAY = \"k-mediaplayer-overlay\",\n            YTPLAYER = \"k-mediaplayer-yt\",\n            DOT = \".\",\n            STATE_PLAY_SELECTOR = 'span[class*=\"i-' + STATE_PLAY + '\"]',\n            STATE_PAUSE_SELECTOR = 'span[class*=\"i-' + STATE_PAUSE + '\"]',\n            FULLSCREEN_ENTER_SELECTOR = 'span[class*=\"i-' + FULLSCREEN_ENTER + '\"]',\n            FULLSCREEN_EXIT_SELECTOR = 'span[class*=\"i-' + FULLSCREEN_EXIT + '\"]',\n            MUTE_SELECTOR = 'span[class*=\"i-' + MUTE + '\"]',\n            LOW_VOLUME_SELECTOR = 'span[class*=\"i-' + LOW_VOLUME + '\"]',\n            HIGH_VOLUME_SELECTOR = 'span[class*=\"i-' + HIGH_VOLUME + '\"]',\n            ui = kendo.ui,\n            ns = \".kendoMediaPlayer\",\n            baseTime = new Date(1970, 0, 1),\n            timeZoneSec = baseTime.getTimezoneOffset() * 60,\n            Widget = kendo.ui.Widget,\n            isArray = Array.isArray,\n            timeFormats = {\n                shortTime: \"mm:ss\",\n                longTime: \"HH:mm:ss\"\n            },\n            template = kendo.template,\n            keys = kendo.keys,\n            templates = {\n                htmlPlayer: () => \"<video class='\" + MEDIA + \"'> </video>\",\n                titleBar: template(() => \"<div class='\" + TITLEBAR + \"'><span class='\" + TITLE + \"'>Video Title</span></div>\"),\n                toolBar: () => \"<div class='\" + TOOLBARWRAP + \"'><div class='\" + TOOLBAR + \"'></div></div>\",\n                youtubePlayer: () => \"<div class='\" + YTPLAYER + \"'> </div>\",\n                toolBarTime: () => \"<span class='k-mediaplayer-currenttime'>00:00:00</span> / <span class='k-mediaplayer-duration'>00:00:00</span>\",\n                slider: () => \"<input class='\" + SLIDER + \"' value='0' title='seekbar' />\",\n                volumeSlider: () => \"<input class='\" + VOLUME_SLIDER + \"' title='volume'/>\",\n                qualityDropDown: () => \"<input class='\" + VIDEO_QUALITY + \"' title='video quality' />\",\n                toolTip: ({ value }) => `${kendo.toString(new Date(value), 'HH:mm:ss')}`\n            };\n\n        var MediaPlayer = Widget.extend({\n            init: function(element, options) {\n                this.wrapper = $(element);\n\n                Widget.fn.init.call(this, element, options);\n\n                this.wrapper.addClass(\"k-mediaplayer k-widget\");\n\n                options = this.options;\n\n                this._currentIndex = 0;\n\n                this._createTitlebar();\n\n                this._createToolbar();\n\n                this._createDropDown();\n\n                this._createSlider();\n\n                this._createVolumeSlider();\n\n                this._timers = {};\n\n                this._aria();\n\n                this._navigatable();\n\n                if (options.fullScreen) {\n                    this.fullScreen(true);\n                }\n\n                if (options.media) {\n                    this.media(this.options.media);\n                }\n\n                kendo.notify(this);\n            },\n\n            events: [\n                END,\n                PAUSE,\n                PLAY,\n                READY,\n                TIMECHANGE,\n                VOLUMECHANGE\n            ],\n\n            options: {\n                name: \"MediaPlayer\",\n                autoPlay: false,\n                autoRepeat: false,\n                volume: 100,\n                fullScreen: false,\n                mute: false,\n                navigatable: false,\n                forwardSeek: true,\n                media: null,\n                messages: {\n                    \"pause\": \"Pause\",\n                    \"play\": \"Play\",\n                    \"mute\": \"Mute\",\n                    \"unmute\": \"Unmute\",\n                    \"quality\": \"Quality\",\n                    \"fullscreen\": \"Full Screen\"\n                }\n            },\n\n            _msToTime: function(ms) {\n                var time = new Date(baseTime.getTime());\n                time.setSeconds(ms);\n                return time;\n            },\n\n            _timeToSec: function(time) {\n                var curTime = new Date(time).getTime();\n                return curTime / 1000;\n            },\n\n            _createTitlebar: function() {\n                this._titleBar = this.wrapper.find(DOT + TITLEBAR);\n                if (this._titleBar.length === 0) {\n                    this.wrapper.append(templates.titleBar);\n                    this._titleBar = this.wrapper.find(DOT + TITLEBAR);\n                }\n            },\n\n            _createSlider: function() {\n                var sliderElement = this.wrapper.find(DOT + SLIDER);\n                if (!this._slider) {\n                    this._sliderDragChangeHandler = this._sliderDragChange.bind(this);\n                    this._sliderDraggingHandler = this._sliderDragging.bind(this);\n                    sliderElement = this.wrapper.find(DOT + SLIDER);\n\n                    this._slider = new ui.Slider(sliderElement[0], {\n                        smallStep: 1000,\n                        tickPlacement: \"none\",\n                        showButtons: false,\n                        change: this._sliderDragChangeHandler,\n                        slide: this._sliderDraggingHandler,\n                        tooltip: {\n                            template: templates.toolTip\n                        },\n                        dragHandleTitle: this.options.messages.time\n                    });\n                }\n            },\n\n            _createVolumeSlider: function() {\n                var volumeSliderElement = this.wrapper.find(DOT + VOLUME_SLIDER);\n                if (!this._volumeSlider) {\n                    this._volumeDraggingHandler = this._volumeDragging.bind(this);\n                    this._volumeChangeHandler = this._volumeChange.bind(this);\n                    volumeSliderElement.width(87);\n                    this._volumeSlider = new ui.Slider(volumeSliderElement[0], {\n                        smallStep: 1,\n                        min: 0,\n                        max: 100,\n                        value: this.options.volume,\n                        slide: this._volumeDraggingHandler,\n                        change: this._volumeChangeHandler,\n                        tickPlacement: \"none\",\n                        showButtons: false,\n                        tooltip: { enabled: false },\n                        dragHandleTitle: this.options.messages.volume\n                    });\n                }\n            },\n\n            _resetTime: function() {\n                if (this._youTubeVideo) {\n                    this._ytmedia.seekTo(0, true);\n                } else {\n                    this._media.currentTime = 0;\n                }\n\n                this._mediaTimeUpdate();\n                $.grep(this._toolBar.options.items, function(e) { return !!e.template; }).template = templates.toolBarTime;\n            },\n\n            _currentUrl: function() {\n                var media = this.media();\n                return isArray(media.source) ? media.source[this._currentIndex].url : media.source;\n            },\n\n            _isYouTubeUrl: function() {\n                return !!this._currentUrl().match(\"youtube.com/|youtu.be/\");\n            },\n\n            _setPlayerUrl: function() {\n                var oldPlayer = this._youTubeVideo;\n                this.stop();\n\n                this._youTubeVideo = this._isYouTubeUrl();\n\n                if (oldPlayer !== this._youTubeVideo) {\n                    this.wrapper.find(DOT + YTPLAYER).toggle();\n                    this.wrapper.find(DOT + MEDIA).toggle();\n                }\n\n                var initialized = this._media || this._ytmedia;\n\n                this._initializePlayer();\n\n                if (initialized) { //mute and volume settings should be persisted when switching between html and youtube players\n                    this.mute(this.mute());\n                    this.volume(this.volume());\n                }\n\n                if (!this._youTubeVideo) {\n                    this._videoOverlay.show();\n                    this.wrapper.find(DOT + MEDIA + \" > source\").remove();\n                    this.wrapper.find(DOT + MEDIA).attr(\"src\", this._currentUrl());\n\n                    if (this.options.autoPlay) {\n                        this.play();\n                    }\n                }\n                else if (this._ytmedia) {\n                    if (this._videoOverlay) {\n                        this._videoOverlay.hide();\n                    }\n                    if (this.options.autoPlay) {\n                        this._ytmedia.loadVideoById(this._getMediaId());\n                        this._playStateToggle(true);\n                    }\n                    else {\n                        this._ytmedia.cueVideoById(this._getMediaId());\n                        this._playStateToggle(true);\n                    }\n                }\n            },\n\n            _createToolbar: function() {\n                var toolBarElement = this.wrapper.find(DOT + TOOLBAR);\n                if (toolBarElement.length === 0) {\n                    this._toolbarClickHandler = this._toolbarClick.bind(this);\n                    this.wrapper.append(templates.toolBar);\n                    toolBarElement = this.wrapper.find(DOT + TOOLBAR);\n                    toolBarElement.width(this.wrapper.find(DOT + MEDIA).width());\n                    this._toolBar = new ui.ToolBar(toolBarElement, {\n                        click: this._toolbarClickHandler,\n                        resizable: false,\n                        items: [\n                            {\n                                type: \"button\",\n                                attributes: { \"class\": \"k-play-button\" },\n                                icon: \"play\",\n                                fillMode: \"flat\"\n                            },\n                            {\n                                template: templates.toolBarTime,\n                                attributes: { \"class\": \"k-mediaplayer-currenttime-wrap\" }\n                            },\n                            {\n                                type: \"spacer\"\n                            },\n                            {\n                                type: \"button\",\n                                attributes: { \"class\": \"k-volume-button\" },\n                                icon: \"volume-up\",\n                                fillMode: \"flat\"\n                            },\n                            {\n                                template: templates.volumeSlider,\n                                attributes: { \"class\": \"k-mediaplayer-volume-wrap\" }\n                            },\n                            {\n                                template: templates.qualityDropDown,\n                                attributes: { \"class\": \"k-mediaplayer-quality-wrap\" }\n                            },\n                            {\n                                type: \"button\",\n                                attributes: { \"class\": \"k-fullscreen-button\" },\n                                icon: \"fullscreen\",\n                                fillMode: \"flat\"\n                            }\n                        ]\n                    });\n\n                    this._toolBar.wrapper.off(\"keydown\");\n                    toolBarElement.before(templates.slider);\n\n                    this._volumeButton = toolBarElement.find(\".k-volume-button\");\n                    this._fullscreenButton = toolBarElement.find(\".k-fullscreen-button\");\n                    this._volumeButton.attr(\"title\", this.options.mute ? this.options.messages.unmute : this.options.messages.mute);\n                    this._volumeButton.attr(\"aria-label\", this.options.mute ? this.options.messages.unmute : this.options.messages.mute);\n                    this._fullscreenButton.attr(\"title\", this.options.messages.fullscreen);\n                    this._fullscreenButton.attr(\"aria-label\", this.options.messages.fullscreen);\n\n                    toolBarElement.width(\"auto\");\n                    this._currentTimeElement = toolBarElement.find(\".k-mediaplayer-currenttime\");\n                    this._durationElement = toolBarElement.find(\".k-mediaplayer-duration\");\n                    this._playButton = toolBarElement.find(\".k-play-button\");\n                    this._playButtonSpan = this._playButton.find(STATE_PLAY_SELECTOR);\n\n                    if (this.options.autoPlay) {\n                        this._playStateToggle(true);\n                    }\n\n                    if ( kendo.support.cssFlexbox === false ) {\n                        $([\n                            this._volumeButton[0],\n                            toolBarElement.find(\".k-mediaplayer-volume-wrap\")[0],\n                            toolBarElement.find(\".k-mediaplayer-quality-wrap\")[0],\n                            this._fullscreenButton[0]\n                        ]).wrapAll(\"<div class='k-align-right' />\");\n                    }\n                }\n            },\n\n            _createDropDown: function() {\n                var hdIcon = kendo.ui.icon(\"hd\");\n                var dropDownElement = this.wrapper.find(DOT + VIDEO_QUALITY);\n                var media = this.media();\n                if (typeof dropDownElement.data(\"kendoDropDownList\") === \"undefined\") {\n                    this._dropDownSelectHandler = this._dropDownSelect.bind(this);\n                    this._dropDown = new ui.DropDownList(dropDownElement, {\n                        dataTextField: \"quality\",\n                        dataValueField: \"url\",\n                        popup: {\n                            position: \"bottom\",\n                            origin: \"top\",\n                            appendTo: this.wrapper\n                        },\n                        animation: {\n                            open: {\n                                effects: \"slideIn:up\",\n                                duration: 1\n                            }\n                        },\n                        select: this._dropDownSelectHandler\n                    });\n\n                    if (media && isArray(media.source)) {\n                        this._dropDown.setDataSource(media.source);\n                        this._dropDown.select(0);\n                    }\n\n                    this._dropDown.wrapper.addClass(\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-base\");\n                    this._dropDown.wrapper.attr(\"title\", this.options.messages.quality).hide();\n                    this._dropDown.wrapper.find('span[class*=\"i-caret-alt-down\"]')\n                        .replaceWith(hdIcon);\n                    this._dropDown.list.addClass(\"k-quality-list\");\n                }\n            },\n\n            _dropDownSelect: function(e) {\n                if (this._currentIndex !== e.item.index()) {\n                    this._currentIndex = e.item.index();\n                    this._setPlayerUrl();\n                }\n            },\n\n            _toolbarClick: function(e) {\n                var target = $(e.target).children().first();\n                var isPaused = target.is(STATE_PLAY_SELECTOR);\n\n                if (!this.media()) {\n                    return;\n                }\n\n                if (target.is(STATE_PLAY_SELECTOR) || target.is(STATE_PAUSE_SELECTOR)) {\n                    if (isPaused) {\n                        this.play();\n                    }\n                    else {\n                        this.pause();\n                    }\n                }\n\n                if (target.is(FULLSCREEN_ENTER_SELECTOR) || target.is(FULLSCREEN_EXIT_SELECTOR)) {\n                    if (this._isInFullScreen) {\n                        kendo.ui.icon(target, { icon: FULLSCREEN_ENTER });\n                        this.fullScreen(false);\n                    } else {\n                        kendo.ui.icon(target, { icon: FULLSCREEN_EXIT });\n                        this.fullScreen(true);\n                    }\n                }\n\n                if (target.is(MUTE_SELECTOR) || target.is(LOW_VOLUME_SELECTOR) || target.is(HIGH_VOLUME_SELECTOR)) {\n                    var muted = this.mute();\n                    this.mute(!muted);\n                }\n            },\n\n            _sliderDragging: function() {\n                if (!this.media()) {\n                    return;\n                }\n\n                this._isDragging = true;\n            },\n\n            _sliderDragChange: function(e) {\n                var that = this;\n                var slider = e.sender;\n                var tzOffset = timeZoneSec * 1000;\n\n                if (!this.media()) {\n                    return;\n                }\n\n                that._sliderChangeFired = true;\n                that._isDragging = false;\n\n                if (!this.options.forwardSeek && slider.value() > this._seekBarLastPosition) {\n                    setTimeout(function() {\n                        slider.value(that._seekBarLastPosition);\n                    }, 1);\n                } else if (this._youTubeVideo) {\n                    that._ytmedia.seekTo(that._timeToSec(e.value - tzOffset));\n                } else {\n                    that._media.currentTime = that._timeToSec(e.value - tzOffset);\n                }\n                that.trigger(TIMECHANGE);\n                that._preventPlay = true;\n            },\n\n            _changeVolumeButtonImage: function(volume) {\n                var volumeButton = this._volumeButton;\n                var volumeElement = volumeButton.find(\"span\");\n\n                if (volume === 0) {\n                    kendo.ui.icon(volumeElement, { icon: MUTE });\n                    volumeButton.attr(\"title\", this.options.messages.unmute);\n                    volumeButton.attr(\"aria-label\", this.options.messages.unmute);\n                } else if (volume > 0 && volume < 51) {\n                    kendo.ui.icon(volumeElement, { icon: LOW_VOLUME });\n                    volumeButton.attr(\"title\", this.options.messages.mute);\n                    volumeButton.attr(\"aria-label\", this.options.messages.mute);\n                } else {\n                    kendo.ui.icon(volumeElement, { icon: HIGH_VOLUME });\n                    volumeButton.attr(\"title\", this.options.messages.mute);\n                    volumeButton.attr(\"aria-label\", this.options.messages.mute);\n                }\n            },\n\n            _volumeDragging: function(e) {\n                if (!this.media()) {\n                    return;\n                }\n                this.volume(e.value);\n                this._changeVolumeButtonImage(e.value);\n                this.trigger(VOLUMECHANGE);\n            },\n\n            _volumeChange: function(e) {\n                if (!this.media()) {\n                    return;\n                }\n                this.volume(e.value);\n                this._changeVolumeButtonImage(e.value);\n                this.trigger(VOLUMECHANGE);\n            },\n\n            _mediaTimeUpdate: function() {\n                var currentTime = (this._youTubeVideo) ? this._ytmedia.getCurrentTime() : this._media.currentTime;\n                currentTime = currentTime ? currentTime : 0;\n                var timeInMs = this._msToTime(currentTime);\n                this._currentTimeElement.text(kendo.toString(timeInMs, this._timeFormat));\n                if (!this._isDragging) {\n                    this._seekBarLastPosition = (currentTime + timeZoneSec) * 1000;\n                    this._slider.value(this._seekBarLastPosition);\n                }\n\n                return this.isPlaying();\n            },\n\n            _playStateToggle: function(play) {\n                if (typeof play === \"undefined\") {\n                    play = this._playButtonSpan.is(STATE_PLAY_SELECTOR);\n                }\n\n                if (play) {\n                    kendo.ui.icon(this._playButtonSpan, { icon: STATE_PAUSE });\n                    this._playButton.attr(\"title\", this.options.messages.pause);\n                    this._playButton.attr(\"aria-label\", this.options.messages.pause);\n                }\n                else {\n                    kendo.ui.icon(this._playButtonSpan, { icon: STATE_PLAY });\n                    this._playButton.attr(\"title\", this.options.messages.play);\n                    this._playButton.attr(\"aria-label\", this.options.messages.play);\n                }\n            },\n\n            _mediaEnded: function() {\n                this._playStateToggle(false);\n                this._currentTimeElement.text(kendo.toString(this._msToTime(0), this._timeFormat));\n                this._slider.value((0 + timeZoneSec) * 1000);\n                this.trigger(END);\n            },\n\n            _mediaPlay: function() {\n                this.trigger(PLAY);\n            },\n\n            _mediaReady: function() {\n                this.trigger(READY);\n            },\n\n            _mediaDurationChange: function() {\n                var durationTime = this._msToTime((this._youTubeVideo) ? this._ytmedia.getDuration() : this._media.duration);\n\n                this._timeFormat = durationTime.getHours() === 0 ? timeFormats.shortTime : timeFormats.longTime;\n\n                this._durationElement.text(kendo.toString(durationTime, this._timeFormat));\n                this._slider.setOptions({\n                    min: baseTime.getTime(),\n                    max: durationTime.getTime()\n                });\n\n                if (!this._isFirstRun) {\n                    this._resetTime();\n                    this._isFirstRun = true;\n                }\n            },\n\n            _createYoutubePlayer: function() {\n                this._mediaTimeUpdateHandler = this._mediaTimeUpdate.bind(this);\n                this._mediaDurationChangeHandler = this._mediaDurationChange.bind(this);\n\n                this.wrapper.prepend(templates.youtubePlayer);\n                this._ytPlayer = this.wrapper.find(DOT + YTPLAYER)[0];\n                $(this._ytPlayer)\n                    .css({\n                        width: this.wrapper.width(),\n                        height: this.wrapper.height()\n                    });\n\n                if (!window.YT || !window.YT.Player) {\n                    if (!window.onYouTubeIframeAPIReadyRegister) {\n                        window.onYouTubeIframeAPIReadyRegister = [];\n                        $.getScript(\"https://www.youtube.com/iframe_api\");\n                        window.onYouTubeIframeAPIReady =\n                            function() {\n                                if (window.onYouTubeIframeAPIReadyRegister) {\n                                    for (var i = 0; i < window.onYouTubeIframeAPIReadyRegister.length; i++) {\n                                        window.onYouTubeIframeAPIReadyRegister[i]._youtubeApiReady();\n                                    }\n                                }\n                                window.onYouTubeIframeAPIReadyRegister.length = 0;\n                                window.onYouTubeIframeAPIReadyRegister = undefined$1;\n                            };\n                    }\n                    window.onYouTubeIframeAPIReadyRegister[window.onYouTubeIframeAPIReadyRegister.length] = this;\n                }\n                else {\n                    this._configurePlayer();\n                }\n            },\n\n            _poll: function(name, callback, interval, context) {\n                var that = this;\n\n                if (that._timers[name] !== null) {\n                    clearTimeout(that._timers[name]);\n                }\n\n                that._timers[name] = setTimeout((function(context) {\n                    return function callLater() {\n                        if (callback.call(context)) {\n                            that._timers[name] = setTimeout(callLater, interval);\n                        }\n                    };\n                })(context), interval);\n\n                return that._timers[name];\n            },\n\n            _youtubeApiReady: function() {\n                this._configurePlayer();\n            },\n\n            _configurePlayer: function() {\n                var vars = {\n                    'autoplay': +this.options.autoPlay,\n                    'wmode': 'transparent',\n                    'controls': 0,\n                    'rel': 0,\n                    'showinfo': 0\n                };\n\n                this._onYouTubePlayerReady = this._onYouTubePlayerReady.bind(this);\n                window.onYouTubePlayerReady = this._onYouTubePlayerReady;\n                this._onPlayerStateChangeHandler = this._onPlayerStateChange.bind(this);\n                window.onPlayerStateChange = this._onPlayerStateChange;\n\n\n                var player = new window.YT.Player(this.wrapper.find(DOT + YTPLAYER)[0], {\n                    height: this.wrapper.height(),\n                    width: this.wrapper.width(),\n                    videoId: this._getMediaId(),\n                    playerVars: vars,\n                    events: {\n                        'onReady': this._onYouTubePlayerReady,\n                        'onStateChange': this._onPlayerStateChangeHandler\n                    }\n                });\n            },\n\n            _onYouTubePlayerReady: function(event) {\n                this._ytmedia = event.target;\n                this._ytmedia.getIframe().style.width = \"100%\";\n                this._ytmedia.getIframe().style.height = \"100%\";\n                this._youTubeVideo = true;\n                this._mediaDurationChangeHandler();\n\n                if (this.options.autoPlay) {\n                    this._playStateToggle(true);\n                    this._ytmedia.loadVideoById(this._getMediaId());\n                }\n                else {\n                    this._ytmedia.cueVideoById(this._getMediaId());\n                }\n\n                if (this.options.mute) {\n                    this.mute(true);\n                }\n\n                this.trigger(READY);\n            },\n\n            _updateTitle: function() {\n                this.titlebar().text(this.media().title || this.media().source);\n            },\n\n            _onPlayerStateChange: function(event) {\n\n                if (event.data === 0) {\n                    this._slider.value(0);\n                    this._paused = false;\n                    this._playStateToggle(true);\n                    this.trigger(END);\n                    if (this.options.autoRepeat) {\n                        this.play();\n                    }\n                }\n                else if (event.data === 1) {\n                    this._mediaDurationChange();\n                    this._ytmedia.setVolume(this.volume());\n                    if (this._sliderChangeFired) {\n                        this._sliderChangeFired = false;\n                    } else {\n                        this._uiDisplay(false);\n                    }\n                    this.trigger(PLAY);\n                    this._playStateToggle(true);\n\n                    this._poll(\"progress\", this._mediaTimeUpdate, 500, this);\n                    this._paused = false;\n                }\n                else if (event.data === 2) {\n                    if (!this._paused) {\n                        this._uiDisplay(true);\n                        this._playStateToggle(false);\n                        this.trigger(PAUSE);\n                        this._paused = true;\n                    }\n                }\n            },\n\n            _getMediaId: function() {\n                var result = this._currentUrl();\n                var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n                var match = result.match(regExp);\n\n                if (match && match[7].length === 11) {\n                    result = match[7];\n                }\n\n                return result;\n            },\n\n            _mouseClick: function() {\n                if (this.isPaused()) {\n                    this.play();\n                } else {\n                    this.pause();\n                }\n            },\n\n            _initializePlayer: function() {\n                if (!this._mouseMoveHandler) {\n                    this._mouseMoveHandler = this._mouseMove.bind(this);\n                    this._mouseInHandler = this._mouseIn.bind(this);\n                    this._mouseOutHandler = this._mouseOut.bind(this);\n\n                    $(this.wrapper)\n                        .on(\"mouseenter\" + ns, this._mouseInHandler)\n                        .on(\"mouseleave\" + ns, this._mouseOutHandler)\n                        .on(\"mousemove\" + ns, this._mouseMoveHandler);\n                }\n\n                if (!this._ytmedia && this._youTubeVideo) {\n                    this._createYoutubePlayer();\n                }\n                else if (!this._media && !this._youTubeVideo) {\n                    this._createHtmlPlayer();\n                }\n            },\n\n            _createHtmlPlayer: function() {\n                if (!this._videoOverlay) {\n                    this._mouseClickHanlder = this._mouseClick.bind(this);\n                    this.wrapper.append(\"<div class='\" + OVERLAY + \"'></div>\");\n                    this._videoOverlay = this.wrapper.find(\".k-mediaplayer-overlay\")\n                        .on(\"click\" + ns, this._mouseClickHanlder);\n                }\n\n                this._mediaTimeUpdateHandler = this._mediaTimeUpdate.bind(this);\n                this._mediaDurationChangeHandler = this._mediaDurationChange.bind(this);\n                this._mediaEndedHandler = this._mediaEnded.bind(this);\n                this._mediaCanPlayHandler = this._mediaReady.bind(this);\n                this._mediaPlayHandler = this._mediaPlay.bind(this);\n                this._videoOverlay.after(templates.htmlPlayer);\n                this._media = this.wrapper.find(DOT + MEDIA)[0];\n                $(this._media)\n                    .css({\n                        width: \"100%\",\n                        height: \"100%\"\n                    });\n\n                if (this.options.mute) {\n                    this.mute(true);\n                }\n\n                this._media.ontimeupdate = this._mediaTimeUpdateHandler;\n                this._media.ondurationchange = this._mediaDurationChangeHandler;\n                this._media.oncanplay = this._mediaCanPlayHandler;\n                this._media.onplay = this._mediaPlayHandler;\n                this._media.onended = this._mediaEndedHandler;\n                this._media.loop = this.options.autoRepeat;\n            },\n\n            _mouseIn: function() {\n                this._uiDisplay(true);\n            },\n\n            _mouseOut: function() {\n                this._poll(\"mouseIdle\", this._mouseIdle, 3000, this);\n            },\n\n            _mouseIdle: function() {\n                this._uiDisplay(false);\n                return false;\n            },\n\n            _mouseMove: function() {\n                if (!(this._titleBar.is(':animated') || this._toolBar.element.is(':animated') || this._slider.wrapper.is(':animated'))) {\n                    this._uiDisplay(true);\n                }\n                this._poll(\"mouseIdle\", this._mouseIdle, 3000, this);\n            },\n\n            _uiDisplay: function(state) {\n                var animationSpeed = 'slow';\n                var uiElements = this._titleBar\n                    .add(this._toolBar.element.parent());\n\n                if (state) {\n                    uiElements.fadeIn(animationSpeed);\n                }\n                else {\n                    uiElements.fadeOut(animationSpeed);\n                    if (this.options.navigatable) {\n                        this.wrapper.trigger(\"focus\");\n                    }\n                }\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                if (!this.isPaused()) {\n                    this.pause();\n                }\n\n                this.element.off(ns);\n                this.element.find(DOT + OVERLAY).off(ns);\n                this._timers = null;\n                this._mouseMoveHandler = null;\n                this._mouseOutHandler = null;\n                this._mouseInHandler = null;\n                this._mouseClickHanlder = null;\n                this._keyDownHandler = null;\n                this._fullscreenHandler = null;\n\n                this._toolbarClickHandler = null;\n                this._sliderDragChangeHandler = null;\n                this._sliderDraggingHandler = null;\n                this._volumeDraggingHandler = null;\n                this._volumeChangeHandler = null;\n                this._youtubeApiReadyHandler = null;\n                this._onYouTubePlayerReady = null;\n                this._onPlayerStateChangeHandler = null;\n                this._dropDownSelectHandler = null;\n\n                if (this._youTubeVideo) {\n                    this._ytmedia.destroy();\n                }\n                else {\n                    this._media.ontimeupdate = this._mediaTimeUpdateHandler = null;\n                    this._media.ondurationchange = this._mediaDurationChangeHandler = null;\n                    this._media.oncanplay = this._mediaCanPlayHandler = null;\n                    this._media.onplay = this._mediaPlayHandler = null;\n                    this._media.onended = this._mediaEndedHandler = null;\n                    this._media.src = \"\";\n                    this._media.remove();\n                }\n\n                this._mouseMoveTimer = null;\n                clearTimeout(this._mouseMoveTimer);\n\n                kendo.destroy(this.element);\n            },\n\n            seek: function(ms) {\n                if (typeof ms === 'undefined') {\n                    return 1000 * (this._youTubeVideo) ? this._ytmedia.getCurrentTime() : (this._media ? this._media.currentTime : 0);\n                }\n                var seconds = ms / 1000;\n                if (this._youTubeVideo) {\n                    if (seconds + 3 >= this._ytmedia.getDuration() | 0) {\n                        //avoid infinite bad request loop in youtube player.\n                        this._ytmedia.seekTo(this._ytmedia.getDuration() - 3 | 0, true);\n                    } else {\n                        this._ytmedia.seekTo(seconds, true);\n                    }\n                } else {\n                    this._media.currentTime = seconds;\n                }\n\n                return this;\n            },\n\n            play: function() {\n                if (this._youTubeVideo) {\n                    this._ytmedia.playVideo();\n                } else {\n                    if (kendo.support.mobileOS) {\n                        this._uiDisplay(false);\n                    }\n                    this._media.play();\n                }\n                this._paused = false;\n\n                this._playStateToggle(true);\n\n                return this;\n            },\n\n            stop: function() {\n                if (this._youTubeVideo && this._ytmedia) {\n                    this._ytmedia.stopVideo();\n                } else if (this._media && !this._youTubeVideo) {\n                    if (kendo.support.mobileOS) {\n                        this._uiDisplay(true);\n                    }\n                    this._media.pause();\n                    this._media.currentTime = 0;\n                }\n                this._paused = true;\n\n                this._playStateToggle(false);\n                return this;\n            },\n\n            pause: function() {\n                if (this._youTubeVideo) {\n                    this._ytmedia.pauseVideo();\n                } else {\n                    if (kendo.support.mobileOS) {\n                        this._uiDisplay(true);\n                    }\n                    this._media.pause();\n                }\n                this._paused = true;\n                this._playStateToggle(false);\n                this.trigger(PAUSE);\n                return this;\n            },\n\n            toolbar: function() {\n                return this._toolBar;\n            },\n\n            dropdown: function() {\n                return this._dropDown;\n            },\n\n            titlebar: function() {\n                return this._titleBar;\n            },\n\n            fullScreen: function(enterFullScreen) {\n                if (typeof enterFullScreen === 'undefined') {\n                    return this._isInFullScreen || false;\n                }\n                var element = this.element.get(0);\n                if (enterFullScreen) {\n                    // Handles the case when the action is triggered by code and not by user iteraction\n                    this.element.addClass(\"k-mediaplayer-fullscreen\");\n                    if (element.requestFullscreen) {\n                        element.requestFullscreen();\n                    } else if (element.webkitRequestFullscreen) {\n                        element.webkitRequestFullscreen();\n                    } else if (element.mozRequestFullScreen) {\n                        element.mozRequestFullScreen();\n                    } else if (element.msRequestFullscreen) {\n                        element.msRequestFullscreen();\n                    }\n                    this._isInFullScreen = true;\n                } else {\n\n                    if (document.cancelFullscreen) {\n                        document.cancelFullscreen();\n                    } else if (document.webkitCancelFullScreen) {\n                        document.webkitCancelFullScreen();\n                    } else if (document.mozCancelFullScreen) {\n                        document.mozCancelFullScreen();\n                    } else if (document.msCancelFullscreen) {\n                        document.msCancelFullscreen();\n                    } else if (document.exitFullscreen) {\n                        document.exitFullscreen();\n                    } else if (document.msExitFullscreen) {\n                        document.msExitFullscreen();\n                    }\n                    // Handles the case when the action is triggered by code and not by user iteraction\n                    this.element.removeClass(\"k-mediaplayer-fullscreen\");\n                    this._isInFullScreen = false;\n                }\n                this._slider.resize();\n            },\n\n            volume: function(value) {\n                if (typeof value === 'undefined') {\n                    return (typeof this._volume !== 'undefined') ? this._volume : this._volume = this.options.volume;\n                }\n                this._volume = value;\n                this.mute(value <= 0);\n\n                if (this._youTubeVideo) {\n                    this._ytmedia.setVolume(this._volume);\n                } else {\n                    this._media.volume = this._volume / 100;\n                }\n\n                this._volumeSlider.value(value);\n            },\n\n            mute: function(muted) {\n                var currentState = this._youTubeVideo ? (this._ytmedia && this._ytmedia.isMuted()) : (this._media && this._media.muted);\n                if (typeof muted === 'undefined' || muted === currentState) {\n                    return currentState;\n                }\n                if (this._youTubeVideo) {\n                    if (muted) {\n                        this._ytmedia.mute();\n                    }\n                    else {\n                        this._ytmedia.unMute();\n                    }\n                }\n                else {\n                    this._media.muted = muted;\n                }\n\n                if (muted) {\n                    this._volumeSlider.value(0);\n                }\n                else {\n                    this._volumeSlider.value((this._media && this._media.volume * 100) || (this._ytmedia && this._ytmedia.getVolume()));\n                }\n                this.trigger(VOLUMECHANGE);\n                this._changeVolumeButtonImage(this._volumeSlider.value());\n            },\n\n            isEnded: function() {\n                if (this._youTubeVideo) {\n                    return this._ytmedia.getPlayerState() === 0;\n                } else {\n                    return this._media.ended;\n                }\n            },\n\n            media: function(value) {\n                var dropdown = this.dropdown();\n                if (typeof value === 'undefined') {\n                    return (typeof this._mediaData !== 'undefined') ? this._mediaData : this._mediaData = this.options.media;\n                }\n\n                if (isArray(value.source)) {\n                    dropdown.setDataSource(value.source);\n                    dropdown.wrapper.show();\n                }\n                else {\n                    dropdown.wrapper.hide();\n                }\n\n                this._mediaData = value;\n\n                this._updateTitle();\n\n                this._setPlayerUrl();\n            },\n\n            isPaused: function() {\n                return this._paused;\n            },\n\n            isPlaying: function() {\n                return !this.isEnded() && !this._paused;\n            },\n\n            _aria: function() {\n                this.wrapper.attr(\"role\", \"region\");\n                //this.wrapper.attr(\"aria-labelledby\", \"mediaplayerTitleBar\");\n                //add onfocus with aria active descendant\n            },\n\n            _navigatable: function() {\n                this._fullscreenHandler = this._fullscreen.bind(this);\n                $(document)\n                    .on(\"webkitfullscreenchange mozfullscreenchange fullscreenchange\" + ns, this._fullscreenHandler);\n\n                if (this.options.navigatable) {\n                    this.wrapper.attr(\"tabIndex\", 0);\n                    this._keyDownHandler = this._keyDown.bind(this);\n                    this.wrapper\n                        .on(\"keydown\" + ns, this._keyDownHandler);\n                }\n            },\n\n            _fullscreen: function() {\n                var isFullScreen = document.fullScreen ||\n                    document.mozFullScreen ||\n                    document.webkitIsFullScreen,\n                    fullscreenSpan = this.wrapper.find(FULLSCREEN_ENTER_SELECTOR);\n\n                this._uiDisplay(true);\n                this._slider.resize();\n\n                if (!isFullScreen) {\n                    kendo.ui.icon(fullscreenSpan, { icon: FULLSCREEN_ENTER });\n                    this.fullScreen(false);\n                }\n            },\n\n            _keyDown: function(e) {\n                e.preventDefault();\n                var fsButton = this.wrapper.find(FULLSCREEN_ENTER_SELECTOR);\n\n                if (e.keyCode === keys.SPACEBAR) {\n                    if (this.isPlaying()) {\n                        this.pause();\n                    }\n                    else {\n                        this.play();\n                    }\n                }\n                else if (e.keyCode === keys.ENTER && !this._isInFullScreen) {\n                    kendo.ui.icon(fsButton, { icon: FULLSCREEN_EXIT });\n                    this.fullScreen(true);\n                }\n                else if (e.keyCode === 77) {\n                    var muted = this.mute();\n                    this.mute(!muted);\n                }\n                else if (e.keyCode === keys.ESC && this._isInFullScreen) {\n                    kendo.ui.icon(fsButton, { icon: FULLSCREEN_ENTER });\n                    this.fullScreen(false);\n                }\n            },\n\n            _error: function() {\n            },\n\n            _progress: function() {\n            }\n\n        });\n\n        ui.plugin(MediaPlayer);\n\n    })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}