{"version":3,"sources":["raw-mjs/kendo.data.signalr.js"],"names":["__meta__","id","name","category","depends","hidden","$","kendo","window","isFunction","isJQueryPromise","promise","done","fail","isNativePromise","then","catch","transport","data","RemoteTransport","extend","init","options","signalr","Error","this","hub","on","invoke","fn","call","push","callbacks","client","create","pushCreate","update","pushUpdate","destroy","pushDestroy","_crud","type","server","format","args","parameterMap","isEmptyObject","apply","success","error","read","transports","jQuery","kendo$1"],"mappings":";;;;;;;;MAAA,kBAEA,IAAAA,SAAA,CACAC,GAAA,eACAC,KAAA,UACAC,SAAA,YACAC,QAAA,CAAA,QACAC,QAAA,IAGA,SAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAE,WAEA,SAAAC,EAAAC,GACA,OAAAA,GAAAF,EAAAE,EAAAC,OAAAH,EAAAE,EAAAE,KACA,CAEA,SAAAC,EAAAH,GACA,OAAAA,GAAAF,EAAAE,EAAAI,OAAAN,EAAAE,EAAAK,MACA,CAEA,IAAAC,EAAAV,EAAAW,KAAAC,gBAAAC,OAAA,CACAC,KAAA,SAAAC,GACA,IAAAC,EAAAD,GAAAA,EAAAC,QAAAD,EAAAC,QAAA,CAAA,EAEAZ,EAAAY,EAAAZ,QAEA,IAAAA,EACA,MAAA,IAAAa,MAAA,qCAGA,IAAAd,EAAAC,KAAAG,EAAAH,GACA,MAAA,IAAAa,MAAA,2CAGAC,KAAAd,QAAAA,EAEA,IAAAe,EAAAH,EAAAG,IAEA,IAAAA,EACA,MAAA,IAAAF,MAAA,iCAGA,GAAA,mBAAAE,EAAAC,IAAA,mBAAAD,EAAAE,OACA,MAAA,IAAAJ,MAAA,sDAGAC,KAAAC,IAAAA,EAEAnB,EAAAW,KAAAC,gBAAAU,GAAAR,KAAAS,KAAAL,KAAAH,EACA,EAEAS,KAAA,SAAAC,GACA,IAAAC,EAAAR,KAAAH,QAAAC,QAAAU,QAAA,CAAA,EAEAA,EAAAC,QACAT,KAAAC,IAAAC,GAAAM,EAAAC,OAAAF,EAAAG,YAGAF,EAAAG,QACAX,KAAAC,IAAAC,GAAAM,EAAAG,OAAAJ,EAAAK,YAGAJ,EAAAK,SACAb,KAAAC,IAAAC,GAAAM,EAAAK,QAAAN,EAAAO,YAEA,EAEAC,MAAA,SAAAlB,EAAAmB,GACA,IAAAf,EAAAD,KAAAC,IACAf,EAAAc,KAAAd,QACA+B,EAAAjB,KAAAH,QAAAC,QAAAmB,OAEA,IAAAA,IAAAA,EAAAD,GACA,MAAA,IAAAjB,MAAAjB,EAAAoC,OAAA,uCAAAF,IAGA,IAAAG,EAAA,CAAAF,EAAAD,IAEAvB,EAAAO,KAAAoB,aAAAvB,EAAAJ,KAAAuB,GAEAnC,EAAAwC,cAAA5B,IACA0B,EAAAb,KAAAb,GAGAR,EAAAC,GACAA,EAAAC,MAAA,WACAc,EAAAE,OAAAmB,MAAArB,EAAAkB,GACAhC,KAAAU,EAAA0B,SACAnC,KAAAS,EAAA2B,MACA,IACAnC,EAAAH,IACAA,EAAAI,MAAA,WACAW,EAAAE,OAAAmB,MAAArB,EAAAkB,GACA7B,KAAAO,EAAA0B,SACAhC,MAAAM,EAAA2B,MACA,GAEA,EAEAC,KAAA,SAAA5B,GACAG,KAAAe,MAAAlB,EAAA,OACA,EAEAY,OAAA,SAAAZ,GACAG,KAAAe,MAAAlB,EAAA,SACA,EAEAc,OAAA,SAAAd,GACAG,KAAAe,MAAAlB,EAAA,SACA,EAEAgB,QAAA,SAAAhB,GACAG,KAAAe,MAAAlB,EAAA,UACA,IAGAhB,EAAAc,QAAA,EAAAb,EAAAW,KAAA,CACAiC,WAAA,CACA5B,QAAAN,IAIA,CAlHA,CAkHAT,OAAAD,MAAA6C,QACA,IAAAC,QAAA9C,aAEA8C","file":"kendo.data.signalr.js","sourcesContent":["import './kendo.data.js';\n\nvar __meta__ = {\n    id: \"data.signalr\",\n    name: \"SignalR\",\n    category: \"framework\",\n    depends: [ \"data\" ],\n    hidden: true\n};\n\n(function($) {\n    var kendo = window.kendo;\n    var isFunction = kendo.isFunction;\n\n    function isJQueryPromise(promise) {\n        return promise && isFunction(promise.done) && isFunction(promise.fail);\n    }\n\n    function isNativePromise(promise) {\n        return promise && isFunction(promise.then) && isFunction(promise.catch);\n    }\n\n    var transport = kendo.data.RemoteTransport.extend({\n        init: function(options) {\n            var signalr = options && options.signalr ? options.signalr : {};\n\n            var promise = signalr.promise;\n\n            if (!promise) {\n                throw new Error('The \"promise\" option must be set.');\n            }\n\n            if (!isJQueryPromise(promise) && !isNativePromise(promise)) {\n                throw new Error('The \"promise\" option must be a Promise.');\n            }\n\n            this.promise = promise;\n\n            var hub = signalr.hub;\n\n            if (!hub) {\n                throw new Error('The \"hub\" option must be set.');\n            }\n\n            if (typeof hub.on != \"function\" || typeof hub.invoke != \"function\") {\n                throw new Error('The \"hub\" option is not a valid SignalR hub proxy.');\n            }\n\n            this.hub = hub;\n\n            kendo.data.RemoteTransport.fn.init.call(this, options);\n        },\n\n        push: function(callbacks) {\n            var client = this.options.signalr.client || {};\n\n            if (client.create) {\n                this.hub.on(client.create, callbacks.pushCreate);\n            }\n\n            if (client.update) {\n                this.hub.on(client.update, callbacks.pushUpdate);\n            }\n\n            if (client.destroy) {\n                this.hub.on(client.destroy, callbacks.pushDestroy);\n            }\n        },\n\n        _crud: function(options, type) {\n            var hub = this.hub;\n            var promise = this.promise;\n            var server = this.options.signalr.server;\n\n            if (!server || !server[type]) {\n                throw new Error(kendo.format('The \"server.{0}\" option must be set.', type));\n            }\n\n            var args = [server[type]];\n\n            var data = this.parameterMap(options.data, type);\n\n            if (!$.isEmptyObject(data)) {\n                args.push(data);\n            }\n\n            if (isJQueryPromise(promise)) {\n                promise.done(function() {\n                    hub.invoke.apply(hub, args)\n                              .done(options.success)\n                              .fail(options.error);\n                });\n            } else if (isNativePromise(promise)) {\n                promise.then(function() {\n                    hub.invoke.apply(hub, args)\n                              .then(options.success)\n                              .catch(options.error);\n                });\n            }\n        },\n\n        read: function(options) {\n            this._crud(options, \"read\");\n        },\n\n        create: function(options) {\n            this._crud(options, \"create\");\n        },\n\n        update: function(options) {\n            this._crud(options, \"update\");\n        },\n\n        destroy: function(options) {\n            this._crud(options, \"destroy\");\n        }\n    });\n\n    $.extend(true, kendo.data, {\n        transports: {\n            signalr: transport\n        }\n    });\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}