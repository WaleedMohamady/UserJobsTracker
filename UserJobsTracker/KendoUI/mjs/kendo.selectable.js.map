{"version":3,"sources":["raw-mjs/kendo.selectable.js"],"names":["__meta__","id","name","category","depends","advanced","$","undefined$1","kendo","window","Widget","ui","support","abs","Math","ARIASELECTED","SELECTED","ACTIVE","CHANGE","CHANGING","UNSELECT","UNSELECTING","HOVER","MID","SPLITEND","SPLITSTART","RANGESTART","RANGEEND","START","END","INPUTSELECTOR_ICONSSELECTOR_FONT","INPUTSELECTOR_ICONSSELECTOR_SVG","replaceAll","INPUTSELECTOR_SVG_PARTS","split","map","selector","join","INPUTSELECTOR","msie","browser","supportEventDelegation","extend","on","find","trigger","end","off","Selectable","init","element","options","multiple","dragToSelect","selectableClass","that","this","fn","call","_marquee","_lastActive","addClass","relatedTarget","userEvents","UserEvents","global","allowSelection","filter","tap","_tap","bind","touchAction","_hold","_start","_move","_end","_select","events","inputSelectors","holdToDrag","noop","ignoreOverlapped","addIdToRanges","toggleable","_isElement","target","idx","elements","length","result","e","selected","ctrlKey","event","metaKey","shiftKey","selectedClass","whichCode","which","buttonCode","button","closest","_allowSelection","originalEvent","hasClass","add","_lastRange","compareElements","selectRange","_firstSelectee","_notify","_unselect","value","clear","_downTarget","_activated","_isActivated","currentElement","cancel","useAllItems","_items","sender","capture","appendTo","document","body","css","left","x","client","top","y","width","height","_selectElement","position","startLocation","location","initialDelta","_invalidateSelectables","preventDefault","rangeSelectedAttr","attr","uid","guid","remove","removeClass","i","_currentlyActive","related","toSelect","items","eq","collision","_collidesWithActiveElement","push","marqueeRect","activeElementRect","activeElements","elemRect","getBoundingClientRect","leftRight","isRtl","tempRect","right","bottom","overlaps","val","selectElement","each","selectedRanges","_","elem","rangeId","mapLocation","selectedSingleItems","toArray","preventNotify","isPrevented","aria","args","removeAttr","_activeElement","is","_allowPreventDefault","allowPaste","resetTouchEvents","start","tmp","continuousItems","inArray","destroy","RangeSelectable","ns","cellSelectorValid","widget","touch","_mouseEnter","TOUCHEND","_mouseLeave","resetOnStart","cellSelector","reverse","range","cell","currentTarget","preventFlagUpdate","mid","tables","lastCell","last","firstCell","first","clearVariables","clearStartEnd","selectFrom","startIdx","index","selectTo","endIdx","invert","_useStart","_useEnd","change","_clearFlags","currentDate","calendar","toDateObject","toCompare","elementPosition","getOffset","_outerWidth","_outerHeight","firstRect","secondRect","parseOptions","selectable","selectableMode","mode","asLowerString","toLowerCase","indexOf","single","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.selectable.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.userevents.js';\n\nlet __meta__ = {\n    id: \"selectable\",\n    name: \"Selectable\",\n    category: \"framework\",\n    depends: [ \"core\", \"userevents\" ],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    let kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        support = kendo.support,\n        abs = Math.abs,\n        ARIASELECTED = \"aria-selected\",\n        SELECTED = \"k-selected\",\n        ACTIVE = \"k-selecting\",\n        SELECTABLE = \"k-selectable\",\n        CHANGE = \"change\",\n        CHANGING = \"changing\",\n        NS = \".kendoSelectable\",\n        UNSELECT = \"unselect\",\n        UNSELECTING = \"k-unselecting\",\n        HOVER = \"k-hover\",\n        MID = \"k-range-mid\",\n        SPLITEND = \"k-range-split-end\",\n        SPLITSTART = \"k-range-split-start\",\n        RANGESTART = \"k-range-start\",\n        RANGEEND = \"k-range-end\",\n        START = \"start\",\n        END = \"end\",\n        NONE = \"none\",\n        MOUSEENTER = \"mouseenter\",\n        MOUSELEAVE = \"mouseleave\",\n        TOUCHSTART = \"touchstart\",\n        TOUCHMOVE = \"touchmove\",\n        TOUCHEND = \"touchend\",\n        INPUTSELECTOR_ICONSSELECTOR_FONT = \"span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,.k-icon.k-i-caret-alt-down,.k-icon.k-i-caret-alt-right,.k-icon.k-i-caret-alt-left\",\n        INPUTSELECTOR_ICONSSELECTOR_SVG = INPUTSELECTOR_ICONSSELECTOR_FONT.replaceAll('k-i', 'k-svg-i'),\n        INPUTSELECTOR_SVG_PARTS = INPUTSELECTOR_ICONSSELECTOR_SVG.split(\",\").map((selector) => selector + \" *\").join(\",\"),\n        INPUTSELECTOR = `input,a,textarea,.k-multiselect-wrap,select,button,${INPUTSELECTOR_ICONSSELECTOR_FONT},${INPUTSELECTOR_ICONSSELECTOR_SVG},${INPUTSELECTOR_SVG_PARTS},.k-button>span,.k-button>span *,.k-button>img,label.k-checkbox-label.k-no-text,span.k-numeric-wrap,.k-focusable`,\n        msie = kendo.support.browser.msie,\n        supportEventDelegation = false,\n        extend = $.extend;\n\n        (function($) {\n            (function() {\n                $('<div class=\"parent\"><span></span></div>')\n                .on(\"click\", \">*\", function() {\n                    supportEventDelegation = true;\n                })\n                .find(\"span\")\n                .trigger(\"click\")\n                .end()\n                .off();\n            })();\n        })($);\n\n    const Selectable = Widget.extend({\n        init: function(element, options) {\n            let that = this,\n                multiple,\n                dragToSelect,\n                selectableClass;\n\n            Widget.fn.init.call(that, element, options);\n\n            selectableClass = that.selectableClass = that.options.selectableClass || SELECTABLE;\n\n            that._marquee = $(\"<div class='k-marquee'><div class='k-marquee-color'></div></div>\");\n            that._lastActive = null;\n            that.element.addClass(selectableClass);\n\n            that.relatedTarget = that.options.relatedTarget;\n\n            multiple = that.options.multiple;\n            dragToSelect = that.options.dragToSelect;\n\n            that.userEvents = new kendo.UserEvents(that.element, {\n                global: true,\n                allowSelection: true,\n                filter: (!supportEventDelegation ? \".\" + selectableClass + \" \" : \"\") + that.options.filter,\n                tap: that._tap.bind(that),\n                touchAction: multiple ? \"none\" : \"pan-x pan-y\"\n            });\n\n            if (multiple) {\n                if (dragToSelect) {\n                    that.userEvents\n                        .bind(\"hold\", that._hold.bind(that))\n                        .bind(\"start\", that._start.bind(that))\n                        .bind(\"move\", that._move.bind(that))\n                        .bind(\"end\", that._end.bind(that));\n                }\n                that.userEvents\n                   .bind(\"select\", that._select.bind(that));\n            }\n        },\n\n        events: [CHANGE, CHANGING, UNSELECT],\n\n        options: {\n            name: \"Selectable\",\n            filter: \">*\",\n            inputSelectors: INPUTSELECTOR,\n            multiple: false,\n            holdToDrag: false,\n            dragToSelect: true,\n            relatedTarget: $.noop,\n            ignoreOverlapped: false,\n            addIdToRanges: false,\n            toggleable: false,\n            selectableClass: \"\"\n        },\n\n        _isElement: function(target) {\n            var elements = this.element;\n            var idx, length = elements.length, result = false;\n\n            target = target[0];\n\n            for (idx = 0; idx < length; idx ++) {\n                if (elements[idx] === target) {\n                    result = true;\n                    break;\n                }\n            }\n\n            return result;\n        },\n\n        _tap: function(e) {\n            let target = $(e.target),\n                that = this,\n                options = that.options,\n                ctrlKey = e.event.ctrlKey || e.event.metaKey,\n                multiple = that.options.multiple,\n                shiftKey = multiple && e.event.shiftKey,\n                selectedClass = that.options.selectedClass || SELECTED,\n                selected,\n                whichCode = e.event.which,\n                buttonCode = e.event.button;\n\n            //in case of hierarchy or right-click\n            if (!that._isElement(target.closest(\".\" + that.selectableClass)) || whichCode && whichCode == 3 || buttonCode && buttonCode == 2) {\n                return;\n            }\n\n            if (!this._allowSelection(e.event.target)) {\n                return;\n            }\n\n            if (that.trigger(CHANGING, { target: target, originalEvent: e.event })) {\n                return;\n            }\n\n            selected = target.hasClass(selectedClass);\n\n            target = target.add(that.relatedTarget(target));\n\n            if (!multiple) {\n                if (selected && ctrlKey) {\n                    that._unselect(target);\n                    that._notify(CHANGE, e);\n                } else if (!selected) {\n                    that.clear();\n                    that.value(target, e);\n                    that._notify(CHANGE, e);\n                }\n            } else {\n                if (shiftKey) {\n                    if (!that._lastRange || !compareElements(that._lastRange, target)) {\n                        that.selectRange(that._firstSelectee(), target, e);\n                        that._notify(CHANGE, e);\n                    }\n                    that._lastRange = target;\n                } else {\n                    that._lastRange = null;\n                    if (selected && (ctrlKey || options.toggleable)) {\n                        that._unselect(target);\n                        that._notify(CHANGE, e);\n                    } else if (ctrlKey || options.toggleable) {\n                        that.value(target, e);\n                        that._notify(CHANGE, e);\n                    } else if (!selected || that.value().length > 1) {\n                        that.clear();\n                        that.value(target, e);\n                        that._notify(CHANGE, e);\n                    }\n\n                    that._lastActive = that._downTarget = target;\n                }\n            }\n        },\n\n        _hold: function(e) {\n            if (this.options.holdToDrag) {\n                // serves as a drag hint to indicate start of selection\n                this._tap(e);\n            }\n\n            this._activated = true;\n        },\n\n        _isActivated: function() {\n            return this.options.holdToDrag ? this._activated : true;\n        },\n\n        _start: function(e) {\n            let that = this,\n                target = $(e.target),\n                selectedClass = that.options.selectedClass || SELECTED,\n                selected = target.hasClass(selectedClass),\n                currentElement,\n                ctrlKey = e.event.ctrlKey || e.event.metaKey;\n\n            if (!that._isActivated() || !this._allowSelection(e.event.target)) {\n                return;\n            }\n\n            if (that.trigger(CHANGING, { target: target, originalEvent: e.event })) {\n                that.userEvents.cancel();\n                return;\n            }\n\n            that._downTarget = target;\n\n            //in case of hierarchy\n            if (!that._isElement(target.closest(\".\" + that.selectableClass))) {\n                that.userEvents.cancel();\n                return;\n            }\n\n            if (that.options.useAllItems) {\n                that._items = that.element.find(that.options.filter);\n            } else {\n                currentElement = target.closest(that.element);\n                that._items = currentElement.find(that.options.filter);\n            }\n\n            e.sender.capture();\n\n            that._marquee\n                .appendTo(document.body)\n                .css({\n                    left: e.x.client + 1,\n                    top: e.y.client + 1,\n                    width: 0,\n                    height: 0\n                });\n\n            if (!ctrlKey) {\n                that.clear();\n            }\n\n            target = target.add(that.relatedTarget(target));\n            if (selected) {\n                that._selectElement(target, true);\n                if (ctrlKey) {\n                    target.addClass(UNSELECTING);\n                }\n            }\n        },\n\n        _move: function(e) {\n            var that = this,\n                position = {\n                    left: e.x.startLocation > e.x.location ? e.x.location : e.x.startLocation,\n                    top: e.y.startLocation > e.y.location ? e.y.location : e.y.startLocation,\n                    width: abs(e.x.initialDelta),\n                    height: abs(e.y.initialDelta)\n                };\n\n            if (!that._isActivated()) {\n                return;\n            }\n\n            that._marquee.css(position);\n\n            that._invalidateSelectables(position, (e.event.ctrlKey || e.event.metaKey));\n\n            e.preventDefault();\n        },\n\n        _end: function(e) {\n            var that = this,\n            rangeSelectedAttr = kendo.attr(\"range-selected\"),\n            uid = kendo.guid();\n\n            if (!that._isActivated()) {\n                return;\n            }\n\n            that._activated = false;\n\n            that._marquee.remove();\n\n            that._unselect(that.element\n                .find(that.options.filter + \".\" + UNSELECTING))\n                .removeClass(UNSELECTING);\n\n\n            var target = that.element.find(that.options.filter + \".\" + ACTIVE);\n            target = target.add(that.relatedTarget(target));\n\n            if (that.options.addIdToRanges) {\n                for (var i = 0; i < that._currentlyActive.length; i++) {\n                    $(that._currentlyActive[i]).attr(rangeSelectedAttr, uid);\n                }\n            }\n\n            if (!that._lastRange || !compareElements(that._lastRange, target)) {\n                that.value(target, e);\n                that._notify(CHANGE, e);\n            }\n            that._lastRange = target;\n            that._lastActive = that._downTarget;\n            that._items = null;\n        },\n\n        _invalidateSelectables: function(position, ctrlKey) {\n            var idx,\n                length,\n                target = this._downTarget[0],\n                items = this._items,\n                selectedClass = this.options.selectedClass || SELECTED,\n                related,\n                toSelect;\n\n            this._currentlyActive = [];\n\n            for (idx = 0, length = items.length; idx < length; idx ++) {\n                toSelect = items.eq(idx);\n                related = toSelect.add(this.relatedTarget(toSelect));\n\n                if (collision(toSelect, position)) {\n                    if (toSelect.hasClass(selectedClass)) {\n                        if (ctrlKey && target !== toSelect[0]) {\n                            related.removeClass(selectedClass).addClass(UNSELECTING);\n                        }\n                    } else if (!toSelect.hasClass(ACTIVE) && !toSelect.hasClass(UNSELECTING) && !this._collidesWithActiveElement(related, position)) {\n                        related.addClass(ACTIVE);\n                    }\n                    this._currentlyActive.push(related[0]);\n                } else {\n                    if (toSelect.hasClass(ACTIVE)) {\n                        related.removeClass(ACTIVE);\n                    } else if (ctrlKey && toSelect.hasClass(UNSELECTING)) {\n                        related.removeClass(UNSELECTING).addClass(selectedClass);\n                    }\n                }\n            }\n        },\n\n        _collidesWithActiveElement: function(element, marqueeRect) {\n            if (!this.options.ignoreOverlapped) {\n                return false;\n            }\n\n            var activeElements = this._currentlyActive;\n            var elemRect = element[0].getBoundingClientRect();\n            var activeElementRect;\n            var collision = false;\n            var isRtl = kendo.support.isRtl(element);\n            var leftRight = isRtl ? \"right\" : \"left\";\n            var tempRect = {};\n\n            marqueeRect.right = marqueeRect.left + marqueeRect.width;\n            marqueeRect.bottom = marqueeRect.top + marqueeRect.height;\n\n            for (var i = 0; i < activeElements.length; i++) {\n                activeElementRect = activeElements[i].getBoundingClientRect();\n                if (overlaps(elemRect, activeElementRect)) {\n                    tempRect[leftRight] = leftRight === \"left\" ? activeElementRect.right : activeElementRect.left;\n                    elemRect = extend({}, elemRect, tempRect);\n                    if (elemRect.left > elemRect.right) {\n                        return true;\n                    }\n                    collision = !overlaps(elemRect, marqueeRect);\n                }\n            }\n            return collision;\n        },\n\n        value: function(val) {\n            var that = this,\n                selectElement = that._selectElement.bind(that);\n\n            if (val) {\n                val.each(function() {\n                    selectElement(this);\n                });\n\n                return;\n            }\n\n            return that.element.find(that.options.filter + \".\" + (that.options.selectedClass || SELECTED));\n        },\n\n        selectedRanges: function() {\n            var that = this;\n            var rangeSelectedAttr = kendo.attr(\"range-selected\");\n            var map = {};\n\n            that.element.find(\"[\" + rangeSelectedAttr + \"]\").each(function(_, elem) {\n                var rangeId = $(elem).attr(rangeSelectedAttr);\n                var mapLocation = map[rangeId];\n\n                if (!mapLocation) {\n                    mapLocation = map[rangeId] = [];\n                }\n\n                mapLocation.push($(elem));\n            });\n\n            return map;\n        },\n\n        selectedSingleItems: function() {\n            var that = this;\n            var rangeSelectedAttr = kendo.attr(\"range-selected\");\n\n            return that.element.find(that.options.filter + \".\" + (that.options.selectedClass || SELECTED) + \":not([\" + rangeSelectedAttr + \"])\").toArray().map(function(elem) {\n                return $(elem);\n            });\n        },\n\n        _firstSelectee: function() {\n            var that = this,\n                selected;\n\n            if (that._lastActive !== null) {\n                return that._lastActive;\n            }\n\n            selected = that.value();\n            return selected.length > 0 ?\n                    selected[0] :\n                    that.element.find(that.options.filter)[0];\n        },\n\n        _selectElement: function(element, preventNotify) {\n            var toSelect = $(element),\n                selectedClass = this.options.selectedClass || SELECTED,\n                isPrevented = !preventNotify && this._notify(\"select\", { element: element });\n\n            toSelect.removeClass(ACTIVE);\n            if (!isPrevented) {\n                 toSelect.addClass(selectedClass);\n\n                if (this.options.aria) {\n                    toSelect.attr(ARIASELECTED, true);\n                }\n            }\n        },\n\n        _notify: function(name, args) {\n            args = args || { };\n            return this.trigger(name, args);\n        },\n\n        _unselect: function(element) {\n            if (this.trigger(UNSELECT, { element: element })) {\n                return;\n            }\n\n            var rangeSelectedAttr = kendo.attr(\"range-selected\");\n\n            element.removeClass(this.options.selectedClass || SELECTED).removeAttr(rangeSelectedAttr);\n\n            if (this.options.aria) {\n                element.attr(ARIASELECTED, false);\n            }\n\n            return element;\n        },\n\n        _select: function(e) {\n            if (this._allowSelection(e.event.target)) {\n                if (!msie || (msie && !$(kendo._activeElement()).is(this.options.inputSelectors))) {\n                    if (this._allowPreventDefault(e.event.target)) {\n                        e.preventDefault();\n                    }\n                }\n            }\n        },\n\n        _allowPreventDefault: function(target) {\n            var disallowedSelectors = \".k-table-td\";\n            // Required for the paste event in the Grid to work in Chrome.\n            return !$(target).is(disallowedSelectors) || !this.options.allowPaste;\n        },\n\n        _allowSelection: function(target) {\n            if ($(target).is(this.options.inputSelectors)) {\n                this.userEvents.cancel();\n                this._downTarget = null;\n                return false;\n            }\n\n            return true;\n        },\n\n        resetTouchEvents: function() {\n            this.userEvents.cancel();\n        },\n\n        clear: function() {\n            var items = this.element.find(this.options.filter + \".\" + (this.options.selectedClass || SELECTED));\n            this._unselect(items);\n        },\n\n        selectRange: function(start, end) {\n            var that = this,\n                idx,\n                tmp,\n                items;\n\n            that.clear();\n\n            if (that.element.length > 1) {\n                items = that.options.continuousItems();\n            }\n\n            if (!items || !items.length) {\n                items = that.element.find(that.options.filter);\n            }\n\n            start = $.inArray($(start)[0], items);\n            end = $.inArray($(end)[0], items);\n\n            if (start > end) {\n                tmp = start;\n                start = end;\n                end = tmp;\n            }\n\n            if (!that.options.useAllItems) {\n                end += that.element.length - 1;\n            }\n\n            for (idx = start; idx <= end; idx ++ ) {\n                that._selectElement(items[idx], true);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.element.off(NS);\n\n            that.userEvents.destroy();\n\n            that._marquee = that._lastActive = that.element = that.userEvents = null;\n        }\n    });\n\n    const RangeSelectable = Widget.extend({\n        init: function(element, options) {\n            let that = this,\n            ns,\n            cellSelectorValid;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.widget = options.widget;\n            ns = options.ns;\n            cellSelectorValid = options.filter;\n\n            that.userEvents = new kendo.UserEvents(that.element, {\n                global: true,\n                allowSelection: true,\n                filter: that.options.filter,\n                tap: that._tap.bind(that),\n                touchAction: NONE\n            });\n\n            if (support.touch) {\n                element.on(TOUCHSTART + ns, cellSelectorValid, that._mouseEnter.bind(that))\n                    .on(TOUCHEND + ns + \" \" + TOUCHMOVE + ns, cellSelectorValid, that._mouseLeave.bind(that));\n            } else {\n                element.on(MOUSEENTER + ns, cellSelectorValid, that._mouseEnter.bind(that))\n                    .on(MOUSELEAVE + ns, cellSelectorValid, that._mouseLeave.bind(that));\n            }\n        },\n\n        events: [CHANGE],\n\n        options: {\n            name: \"RangeSelectable\",\n            filter: \">*\",\n            inputSelectors: INPUTSELECTOR,\n            resetOnStart: false,\n            multiple: false,\n            dragToSelect: true,\n            cellSelector: \"*\",\n            ns: \"\",\n            reverse: false,\n            relatedTarget: $.noop\n        },\n\n        destroy: function() {\n            let that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.userEvents.destroy();\n            that.widget = null;\n\n            that._lastActive = that.element = that.userEvents = that._start = that._end = null;\n        },\n\n        _allowSelection: function(target) {\n            if ($(target).is(this.options.inputSelectors)) {\n                this.userEvents.cancel();\n                return false;\n            }\n\n            return true;\n        },\n\n        _mouseEnter: function(e) {\n            let that = this,\n                cell = $(e.currentTarget),\n                range;\n\n            cell.addClass(HOVER);\n\n            range = that.widget.selectRange();\n\n            if (that.options.resetOnStart && range.end) {\n                return;\n            }\n\n            if (range.target === START && that._end) {\n                that.range(cell, that._end, true, that.options.reverse);\n            }\n\n            if (range.target === END) {\n                that.range(that._start, cell, true, that.options.reverse);\n            }\n        },\n\n        _mouseLeave: function(e) {\n            $(e.currentTarget).removeClass(HOVER);\n        },\n\n        start: function(element, preventFlagUpdate) {\n            if (element === undefined$1 || element === null) {\n                return this._start;\n            }\n\n            element.addClass(SELECTED + \" \" + RANGESTART).attr(ARIASELECTED, true);\n\n            if (!preventFlagUpdate) {\n                this._start = element;\n            }\n        },\n\n        end: function(element, preventFlagUpdate) {\n            if (element === undefined$1 || element === null) {\n                return this._start;\n            }\n\n            element.addClass(SELECTED + \" \" + RANGEEND).attr(ARIASELECTED, true);\n\n            if (!preventFlagUpdate) {\n                this._end = element;\n            }\n        },\n\n        mid: function(elements) {\n            let tables = this.element.find(\"table\"),\n                options = this.options;\n\n            elements.addClass(MID).attr(ARIASELECTED, true);\n            tables.each(function() {\n                let that = $(this);\n                let lastCell = that.find(options.cellSelectorValid).last();\n                let firstCell = that.find(options.cellSelectorValid).first();\n\n                if (lastCell.hasClass(MID)) {\n                    lastCell.addClass(SPLITEND);\n                }\n\n                if (firstCell.hasClass(MID)) {\n                    firstCell.addClass(SPLITSTART);\n                }\n            });\n        },\n\n        clear: function(clearVariables) {\n            let options = this.options;\n            this.element.find(options.cellSelector)\n                .removeClass(MID + \" \" + SPLITEND + \" \" + SPLITSTART);\n\n            this.clearStartEnd();\n\n            if (clearVariables) {\n                this._start = this._end = null;\n            }\n        },\n\n        clearStartEnd: function() {\n            let that = this, options = that.options;\n            that.element.find(options.cellSelector).removeClass(RANGESTART + \" \" + SELECTED + \" \" + RANGEEND).removeAttr(ARIASELECTED);\n        },\n\n        selectFrom: function(start) {\n            let that = this,\n                options = this.options,\n                items,\n                startIdx;\n\n            items = that.element.find(options.cellSelector);\n\n            startIdx = $.inArray($(start)[0], items);\n\n            that.clear();\n            that.start(start);\n\n            items = items.filter(function(index) {\n                return index > startIdx;\n            });\n            that.mid(items);\n        },\n\n        selectTo: function(end) {\n            let that = this,\n                options = this.options,\n                items,\n                endIdx;\n\n            items = that.element.find(options.cellSelector);\n\n            endIdx = $.inArray($(end)[0], items);\n\n            that.clear();\n\n            items = items.filter(function(index) {\n                return index < endIdx;\n            });\n            that.mid(items);\n            that.end($(end));\n        },\n\n        range: function(start, end, preventFlagUpdate, invert) {\n            let that = this,\n                options = this.options,\n                items,\n                startIdx,\n                endIdx;\n\n            if (start === undefined$1) {\n                return { start: that._start, end: that._end };\n            }\n\n            items = that.element.find(options.cellSelector);\n\n            startIdx = $.inArray($(start)[0], items);\n            endIdx = $.inArray($(end)[0], items);\n\n            if (!start || (start && !start.length)) {\n                that._useStart = true;\n            }\n\n            that.clear();\n\n            if (start) {\n                that.start($(start), preventFlagUpdate);\n            }\n\n            items = items.filter(function(index) {\n               if (endIdx < 0 || (!start && startIdx < 0)) {\n                   return;\n               }\n\n                return (index > startIdx && index < endIdx) || options.reverse && (index < startIdx && index > endIdx);\n            });\n\n            that.mid(items);\n\n            if (end) {\n                that.end($(end), preventFlagUpdate);\n            } else {\n                that._useEnd = true;\n            }\n\n            if (startIdx > endIdx && invert) {\n                that.clearStartEnd();\n                that.start($(end), true);\n                that.end($(start), true);\n            }\n        },\n\n        change: function() {\n            this.trigger(CHANGE);\n        },\n\n        _clearFlags: function() {\n            this._useStart = this._useEnd = false;\n        },\n\n        _tap: function(e) {\n            let target = $(e.target),\n                that = this,\n                range = that.widget.selectRange() || {},\n                start = range.start,\n                end = range.end,\n                currentDate = kendo.calendar.toDateObject($(target).find(\"span\")),\n                options = that.options,\n                resetOnStart = options.resetOnStart;\n\n            that._lastActive = target;\n\n            if (!start && !end) {\n                that.clear(true);\n                if (range.target === START) {\n                    that.start(target);\n                }\n\n                if (range.target === END) {\n                    that.end(target);\n                }\n\n                that._clearFlags();\n                that.trigger(CHANGE);\n                return;\n            }\n\n            if (!start && end) {\n                if (range.target === END) {\n                    that.end(target);\n                } else {\n                    if (+currentDate > +range.end && !options.reverse) {\n                        that.clear(true);\n                        that.start(target);\n                    } else {\n                        that.range(target, that._end, false, true);\n                    }\n                }\n                that.trigger(CHANGE);\n                that._clearFlags();\n                return;\n            }\n\n            if (start && !end) {\n                if (range.target === END && !options.reverse && +start > +currentDate) {\n                    that.clear(true);\n\n                    if (resetOnStart) {\n                        that.start(target);\n                    } else {\n                        that.end(target);\n                    }\n                } else if (range.target === START) {\n                    that.start(target);\n                } else {\n                    that.range(that._start, target, false, true);\n                }\n                that.trigger(CHANGE);\n                that._clearFlags();\n                return;\n            }\n\n            if (start && end) {\n                if (!options.reverse) {\n                    if (+start > +currentDate && range.target === END) {\n                        that.clear(true);\n                        if (resetOnStart) {\n                            that.start(target);\n                            that.end(null);\n                            range.target = START;\n                        } else {\n                            that.start(null);\n                            that.end(target);\n                        }\n                        that.trigger(CHANGE);\n                        return;\n                    }\n\n                    if (+start < +currentDate && range.target === START) {\n                        if (+currentDate > +range.end) {\n                            that.clear(true);\n                            that.start(target);\n                            that.end(null);\n                        } else {\n                            that.range(target, that._end);\n                        }\n                        that.trigger(CHANGE);\n                        return;\n                    }\n\n                    if (range.target === START) {\n                        that.range(target, that._end);\n                    }\n\n                    if (range.target === END) {\n                        that.range(that._start, target);\n                    }\n\n                    that.trigger(CHANGE);\n                    return;\n                }\n\n                if (resetOnStart) {\n                    if (range.target === START) {\n                        that.range(target, that._end, false, true);\n                    } else {\n                        that.range(that._start, target, false, true);\n                    }\n                } else {\n                    if (range.target === START) {\n                        that.start(target);\n                    } else {\n                        that.end(target);\n                    }\n                }\n\n                that.trigger(CHANGE);\n            }\n        }\n    });\n\n    Selectable.parseOptions = function(selectable) {\n        var selectableMode = selectable.mode || selectable;\n        var asLowerString = typeof selectableMode === \"string\" && selectableMode.toLowerCase();\n        return {\n            multiple: asLowerString && asLowerString.indexOf(\"multiple\") > -1,\n            cell: asLowerString && asLowerString.indexOf(\"cell\") > -1,\n            range: asLowerString && asLowerString.indexOf(\"range\") > -1,\n            single: asLowerString && asLowerString.indexOf(\"single\") > -1\n        };\n    };\n\n    function compareElements(element, toCompare) {\n\n        if (element.length !== toCompare.length) {\n            return false;\n        }\n\n        for (var i = 0; i < element.length; i++) {\n            if (element[i] !== toCompare[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function collision(element, position) {\n        if (!element.is(\":visible\")) {\n            return false;\n        }\n\n        var elementPosition = kendo.getOffset(element),\n            right = position.left + position.width,\n            bottom = position.top + position.height;\n\n        elementPosition.right = elementPosition.left + kendo._outerWidth(element);\n        elementPosition.bottom = elementPosition.top + kendo._outerHeight(element);\n\n        return !(elementPosition.left > right ||\n            elementPosition.right < position.left ||\n            elementPosition.top > bottom ||\n            elementPosition.bottom < position.top);\n    }\n\n    function overlaps(firstRect, secondRect) {\n        return !(firstRect.right <= secondRect.left ||\n            firstRect.left >= secondRect.right ||\n            firstRect.bottom <= secondRect.top ||\n            firstRect.top >= secondRect.bottom);\n    }\n\n    kendo.ui.plugin(Selectable);\n    kendo.ui.plugin(RangeSelectable);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}