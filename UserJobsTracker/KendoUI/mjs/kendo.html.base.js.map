{"version":3,"sources":["raw-mjs/kendo.html.base.js"],"names":["__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","Class","html","HTMLBase","extend","init","element","options","this","_initOptions","stylingOptions","_addClasses","that","previouslyAddedClasses","wrapper","data","map","option","validFill","cssProperties","getValidClass","widget","propName","value","fillMode","length","fill","removeClass","join","addClass","outerHTML","jQuery","kendo$1"],"mappings":";;;;;;;;MAAA,kBAEA,IAAAA,SAAA,CACAC,GAAA,YACAC,KAAA,YACAC,SAAA,MACAC,YAAA,GACAC,QAAA,CAAA,QACAC,SAAA,KAGA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAE,MAEAF,EAAAG,KAAAH,EAAAG,MAAA,CAAA,EAEA,IAAAC,EAAAF,EAAAG,OAAA,CACAC,KAAA,SAAAC,EAAAC,GACAC,KACAF,QAAAT,EAAAS,UACAC,EAAAA,GAAA,CAAA,GACAf,KAHAgB,KAIAC,aAAAF,EACA,EACAA,QAAA,CACAG,eAAA,IAEAC,YAAA,WACA,IAAAC,EAAAJ,KACAD,EAAAK,EAAAL,QACAG,EAAAH,EAAAG,eACAG,EAAAD,EAAAE,QAAAC,KAAA,iBAEAL,EAAAA,EAAAM,KAAA,SAAAC,GACA,IAAAC,EAEA,MAAA,eAAAD,IACAC,EAAAnB,EAAAoB,cAAAC,cAAA,CACAC,OAAAd,EAAAf,KACA8B,SAAA,WACAC,MAAAhB,EAAAiB,aAGA,IAAAN,EAAAO,OAKA1B,EAAAoB,cAAAC,cAAA,CACAC,OAAAd,EAAAf,KACA8B,SAAAL,EACAM,MAAAhB,EAAAU,GACAS,KAAAnB,EAAAiB,WARA,EAUA,IAEAX,GACAD,EAAAE,QAAAa,YAAAd,EAAAe,KAAA,MAGAhB,EAAAE,QAAAC,KAAA,gBAAAL,GACAE,EAAAE,QAAAe,SAAAnB,EAAAkB,KAAA,KACA,EACA1B,KAAA,WAGA,OAFAM,KAEAM,QAAA,GAAAgB,SACA,IAGAjC,EAAAO,OAAAL,EAAAG,KAAA,CACAC,SAAAA,GAGA,CAhEA,CAgEAH,OAAAD,MAAAgC,QACA,IAAAC,QAAAjC,aAEAiC","file":"kendo.html.base.js","sourcesContent":["import './kendo.core.js';\n\nvar __meta__ = {\n    id: \"html.base\",\n    name: \"Html.Base\",\n    category: \"web\",\n    description: \"\",\n    depends: [\"core\"],\n    features: []\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Class = kendo.Class;\n\n    kendo.html = kendo.html || {};\n\n    var HTMLBase = Class.extend({\n        init: function(element, options) {\n            var that = this;\n            that.element = $(element);\n            options = options || {};\n            delete options.name;\n            that._initOptions(options);\n        },\n        options: {\n            stylingOptions: []\n        },\n        _addClasses: function() {\n            var that = this,\n                options = that.options,\n                stylingOptions = options.stylingOptions,\n                previouslyAddedClasses = that.wrapper.data(\"added-classes\");\n\n            stylingOptions = stylingOptions.map(function(option) {\n                var validFill;\n\n                if (option === \"themeColor\") {\n                    validFill = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"fillMode\",\n                        value: options.fillMode\n                    });\n\n                    if (!validFill || validFill.length === 0) {\n                        return \"\";\n                    }\n                }\n\n                return kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: option,\n                    value: options[option],\n                    fill: options.fillMode\n                });\n            });\n\n            if (previouslyAddedClasses) {\n                that.wrapper.removeClass(previouslyAddedClasses.join(\" \"));\n            }\n\n            that.wrapper.data(\"added-classes\", stylingOptions);\n            that.wrapper.addClass(stylingOptions.join(\" \"));\n        },\n        html: function() {\n            var that = this;\n\n            return that.wrapper[0].outerHTML;\n        }\n    });\n\n    $.extend(kendo.html, {\n        HTMLBase: HTMLBase\n    });\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}