{"version":3,"sources":["raw-mjs/kendo.aiprompt.views.js"],"names":["$","Widget","kendo","ui","AIPromptBaseView","extend","init","element","options","that","this","fn","call","aiprompt","getKendoAIPrompt","contentElement","footerElement","buttonText","buttonIcon","name","render","_renderContent","_renderFooter","_renderContentElement","content","addClass","append","_renderFooterElement","footer","destroy","off","remove","DEFAULT_PROMPT_VIEW_TEMPLATE","suggestions","promptSuggestionItemTemplate","messages","length","promptSuggestions","map","suggestion","join","DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE","generateOutput","DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE","AIPromptPromptView","template","viewTemplate","footerTemplate","setTextAreaValue","value","find","getKendoTextArea","_focusSuggestion","attr","trigger","initializeComponents","kendoTextArea","resize","placeholder","promptPlaceholder","kendoButton","icon","themeColor","rounded","click","e","isRetry","prompt","first","nextExpanderContentId","guid","expanderButton","next","fillMode","target","closest","iconEl","sender","is","toggle","on","text","keyCode","preventDefault","prev","siblings","last","DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC","output","showOutputRating","id","outputTitle","copyOutput","retryGeneration","ratePositive","rateNegative","DEFAULT_OUTPUT_VIEW_TEMPLATE","promptOutputs","AIPromptOutputView","addPromptOutput","unshift","renderPromptOutput","card","outputsContainer","_getOutputFromElement","data","parentElement","promptOutput","navigator","clipboard","writeText","rateType","AIPromptCommandsView","promptCommands","commandItems","panelBarEl","kendoPanelBar","animation","dataSource","selectable","select","ev","item","dataItem","hasChildren","EMPTY_TEMPLATE","AIPromptCustomView","window","jQuery","kendo$1"],"mappings":"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","file":"kendo.aiprompt.views.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.icons.js';\nimport './kendo.textarea.js';\nimport './kendo.button.js';\nimport './kendo.panelbar.js';\n\n(function($) {\n    let Widget = kendo.ui.Widget;\n\n    let AIPromptBaseView = kendo.ui.AIPromptBaseView = Widget.extend({\n        init: function(element, options) {\n            let that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.aiprompt = element.getKendoAIPrompt();\n\n            that.contentElement = that.options.contentElement;\n            that.footerElement = that.options.footerElement;\n            that.buttonText = that.options.buttonText;\n            that.buttonIcon = that.options.buttonIcon;\n        },\n\n        options: {\n            name: \"AIPromptBaseView\",\n            buttonText: \"\",\n            buttonIcon: \"\",\n        },\n\n        render: function() {\n            let that = this;\n\n            that._renderContent();\n            that._renderFooter();\n        },\n\n        _renderContentElement: function() {\n            let that = this;\n            let content = $(\"<div></div>\").addClass(\"k-prompt-content\");\n            that.contentElement = content;\n            that.element.append(content);\n\n            return that.contentElement;\n        },\n\n        _renderFooterElement: function() {\n            let that = this;\n            let footer = $(\"<div></div>\").addClass(\"k-prompt-footer\");\n            that.footerElement = footer;\n            that.element.append(footer);\n\n            return that.footerElement;\n        },\n\n        destroy: function() {\n            let that = this;\n            Widget.fn.destroy.call(that);\n\n            if (that.contentElement) {\n                that.contentElement.off();\n                kendo.destroy(that.contentElement);\n                that.contentElement.remove();\n            }\n\n            if (that.footerElement) {\n                that.footerElement.off();\n                kendo.destroy(that.footerElement);\n                that.footerElement.remove();\n            }\n        }\n    });\n\n    let DEFAULT_PROMPT_VIEW_TEMPLATE = ({ suggestions, promptSuggestionItemTemplate, messages }) => `<div class=\"k-prompt-view\">\n        <textarea ref-prompt-input></textarea>\n        ${suggestions?.length ?\n            `<div class=\"k-prompt-expander\">\n                <button ref-prompt-suggestions-button aria-expanded=\"true\">${messages.promptSuggestions}</button>\n                <div class=\"k-prompt-expander-content\" role=\"list\">\n                    ${suggestions.map(suggestion => promptSuggestionItemTemplate({ suggestion })).join(\"\")}\n                </div>\n            </div>` : ''\n        }\n    </div>`;\n\n    let DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE = ({ messages }) => `<div class=\"k-actions k-actions-start k-actions-horizontal k-prompt-actions\">\n        <button ref-generate-output-button>${messages.generateOutput}</button>\n    </div>`;\n\n    let DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE = ({ suggestion }) => `<div role=\"listitem\" class=\"k-prompt-suggestion\">${suggestion}</div>`;\n    kendo.ui.AIPromptPromptView = AIPromptBaseView.extend({\n        init: function(element, options) {\n            let that = this;\n\n            AIPromptBaseView.fn.init.call(that, element, options);\n            that.promptSuggestions = that.options.promptSuggestions;\n            that.promptSuggestionItemTemplate = kendo.template(that.options.promptSuggestionItemTemplate || DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE);\n        },\n        options: {\n            name: \"AIPromptPromptView\",\n            buttonIcon: \"sparkles\",\n        },\n\n        _renderContent: function() {\n            let that = this;\n            let suggestions = that.promptSuggestions;\n            let promptSuggestionItemTemplate = that.promptSuggestionItemTemplate;\n            let content = kendo.template(that.options.viewTemplate || DEFAULT_PROMPT_VIEW_TEMPLATE)({ suggestions, promptSuggestionItemTemplate, messages: that.options.messages });\n\n            that._renderContentElement();\n            that.contentElement.append(content);\n        },\n\n        _renderFooter: function() {\n            let that = this;\n            let footer = kendo.template(that.options.footerTemplate || DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE)({ messages: that.options.messages });\n\n            that._renderFooterElement();\n            that.footerElement.append(footer);\n        },\n\n        setTextAreaValue: function(value) {\n            let that = this;\n            that.contentElement.find(\"textarea[ref-prompt-input]\").getKendoTextArea().value(value);\n        },\n\n        _focusSuggestion(element) {\n            let that = this;\n            if (!element || !element.length) {\n                return;\n            }\n\n            that.contentElement.find(\".k-prompt-suggestion[tabindex=0]\").attr(\"tabindex\", \"-1\");\n            element.attr(\"tabindex\", \"0\").trigger(\"focus\");\n        },\n\n        initializeComponents: function() {\n            let that = this;\n            let suggestions = that.promptSuggestions;\n\n            that.contentElement.find(\"textarea[ref-prompt-input]\").kendoTextArea({\n                resize: \"vertical\",\n                placeholder: that.options.messages.promptPlaceholder\n            });\n\n            that.footerElement.find(\"button[ref-generate-output-button]\").kendoButton({\n                icon: \"sparkles\",\n                themeColor: \"primary\",\n                rounded: \"full\",\n                click: function(e) {\n                    that.aiprompt.trigger(\"promptRequest\", {\n                        isRetry: false,\n                        prompt: that.contentElement.find(\"textarea[ref-prompt-input]\").getKendoTextArea().value()\n                    });\n                }\n            });\n\n            if (suggestions?.length) {\n                that.contentElement.find(\".k-prompt-suggestion\").first().attr(\"tabindex\", \"0\");\n                let nextExpanderContentId = kendo.guid();\n                let expanderButton = that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\");\n\n                that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\").attr(\"aria-controls\", nextExpanderContentId);\n                expanderButton.next(\".k-prompt-expander-content\").attr(\"id\", nextExpanderContentId);\n\n                that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\").kendoButton({\n                    icon: \"chevron-up\",\n                    fillMode: \"flat\",\n                    click: function(e) {\n                        let expander = $(e.target).closest(\".k-prompt-expander\");\n                        let content = expander.find(\".k-prompt-expander-content\");\n                        let iconEl = e.sender.element.find(\".k-icon\");\n                        kendo.ui.icon(iconEl, content.is(\":visible\") ? \"chevron-down\" : \"chevron-up\");\n                        content.toggle();\n                        e.sender.element.attr(\"aria-expanded\", content.is(\":visible\"));\n                    }\n                });\n\n                that.contentElement.on(\"click\", \".k-prompt-suggestion\", function(e) {\n                    that.setTextAreaValue($(e.target).text());\n                });\n\n                that.contentElement.on(\"keydown\", \".k-prompt-suggestion\", function(e) {\n                    if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 36 || e.keyCode === 35 || e.keyCode === 13 || e.keyCode === 32) {\n                        e.preventDefault();\n                        let target = $(e.target);\n                        let siblings = target.siblings();\n                        let next, prev;\n\n                        // down arrow\n                        if (e.keyCode === 40) {\n                            next = target.next();\n                            that._focusSuggestion(next);\n                        }\n\n                        // up arrow\n                        if (e.keyCode === 38) {\n                            prev = target.prev();\n                            that._focusSuggestion(prev);\n                        }\n\n                        // home\n                        if (e.keyCode === 36) {\n                            prev = siblings.first();\n                            that._focusSuggestion(prev);\n                        }\n\n                        // end\n                        if (e.keyCode === 35) {\n                            next = siblings.last();\n                            that._focusSuggestion(next);\n                        }\n\n                        // enter or space\n                        if (e.keyCode === 13 || e.keyCode === 32) {\n                            that.setTextAreaValue($(e.target).text());\n                        }\n                    }\n                });\n            }\n        },\n\n        render: function() {\n            let that = this;\n\n            that._renderContent();\n            that._renderFooter();\n            that.initializeComponents();\n        },\n    });\n\n    let DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC = ({ output, showOutputRating, messages }) => `\n    <div role=\"listitem\" tabindex=\"0\" class=\"k-card\" data-id=\"${output.id}\" >\n        <div class=\"k-card-header\">\n            <div class=\"k-card-title\">${messages.outputTitle}</div>\n            <div class=\"k-card-subtitle\">${output.prompt}</div>\n        </div>\n        <div class=\"k-card-body\">\n            <p class=\"k-white-space-pre-line\">${output.output}</p>\n        </div>\n        <div class=\"k-actions k-actions-start k-actions-horizontal k-card-actions\">\n            <button ref-copy-button>${messages.copyOutput}</button>\n            <button ref-retry-button>${messages.retryGeneration}</button>\n\n            <span class=\"k-spacer\"></span>\n            ${showOutputRating ? `\n            <button ref-rate-positive>${messages.ratePositive}</button>\n            <button ref-rate-negative>${messages.rateNegative}</button>\n            ` : \"\"}\n        </div>\n    </div>`;\n\n    let DEFAULT_OUTPUT_VIEW_TEMPLATE = ({ promptOutputs, showOutputRating, messages }) => `<div role=\"list\" class=\"k-card-list\">\n    ${promptOutputs ? promptOutputs.map(output => DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC({ output, showOutputRating, messages })).join(\"\") : ''}\n    </div>`;\n\n    kendo.ui.AIPromptOutputView = AIPromptBaseView.extend({\n        init: function(element, options) {\n            let that = this;\n\n            AIPromptBaseView.fn.init.call(that, element, options);\n\n            that.promptOutputs = (that.options.promptOutputs || []).map(output => {\n                output.id = output.id || kendo.guid();\n                return output;\n            });\n\n            that.showOutputRating = that.options.showOutputRating;\n        },\n\n        options: {\n            name: \"AIPromptOutputView\",\n            buttonIcon: \"comment\",\n            promptOutputs: []\n        },\n\n        addPromptOutput: function(output) {\n            let that = this;\n            output.id = output.id || kendo.guid();\n            that.promptOutputs.unshift(output);\n            that.renderPromptOutput(output);\n        },\n\n        renderPromptOutput: function(output) {\n            let that = this;\n            let showOutputRating = that.options.showOutputRating;\n            let messages = that.options.messages;\n\n            let card = $(kendo.template(DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC)({ output, showOutputRating, messages }));\n            that.outputsContainer.append(card);\n            that.initializeComponents(card);\n        },\n\n        _renderContent: function() {\n            let that = this;\n            let promptOutputs = that.promptOutputs;\n            let showOutputRating = that.options.showOutputRating;\n            let messages = that.options.messages;\n\n            let outputsContainer = kendo.template(that.viewTemplate || DEFAULT_OUTPUT_VIEW_TEMPLATE)({ promptOutputs, showOutputRating, messages });\n            that.outputsContainer = $(outputsContainer);\n            that._renderContentElement();\n            that.contentElement.append(that.outputsContainer);\n        },\n\n        _getOutputFromElement: function(element) {\n            let that = this;\n            let card = $(element).closest(\".k-card\");\n            let id = card.data(\"id\");\n\n            let promptOutput = that.promptOutputs.find(output => output.id === id);\n\n            return promptOutput;\n        },\n\n        initializeComponents: function(parentElement) {\n            let that = this;\n            parentElement = parentElement || that.contentElement;\n\n            parentElement.find(\"[ref-copy-button]\").kendoButton({\n                icon: \"copy\",\n                fillMode: \"flat\",\n                themeColor: \"primary\",\n                click: function(e) {\n                    let promptOutput = that._getOutputFromElement(e.target);\n                    if (!that.aiprompt.trigger(\"outputCopy\", { output: promptOutput, prompt: promptOutput.prompt })) {\n                        if (navigator.clipboard && typeof navigator.clipboard.writeText === \"function\") {\n                            navigator.clipboard.writeText(promptOutput.output);\n                        }\n                    }\n                }\n            });\n\n            parentElement.find(\"[ref-retry-button]\").kendoButton({\n                icon: \"arrow-rotate-cw\",\n                fillMode: \"flat\",\n                click: function(e) {\n                    let promptOutput = that._getOutputFromElement(e.target);\n\n                    that.aiprompt.trigger(\"promptRequest\", { isRetry: true, prompt: promptOutput.prompt, output: promptOutput });\n                }\n            });\n\n            if (that.options.showOutputRating) {\n                parentElement.find(\"[ref-rate-positive]\").kendoButton({\n                    icon: \"thumb-up-outline\",\n                    fillMode: \"flat\",\n                    click: function(e) {\n                        let promptOutput = that._getOutputFromElement(e.target);\n                        let rateType = \"positive\";\n\n                        that.aiprompt.trigger(\"outputRatingChange\", { rateType, output: promptOutput });\n\n                        kendo.ui.icon(e.sender.element.find(\".k-icon\"), \"thumb-up\");\n                        kendo.ui.icon(e.target.next(\"[ref-rate-negative]\").find(\".k-icon\"), \"thumb-down-outline\");\n                    }\n                });\n\n                parentElement.find(\"[ref-rate-negative]\").kendoButton({\n                    icon: \"thumb-down-outline\",\n                    fillMode: \"flat\",\n                    click: function(e) {\n                        let promptOutput = that._getOutputFromElement(e.target);\n                        let rateType = \"negative\";\n                        that.aiprompt.trigger(\"outputRatingChange\", { rateType, output: promptOutput });\n\n                        kendo.ui.icon(e.sender.element.find(\".k-icon\"), \"thumb-down\");\n                        kendo.ui.icon(e.target.prev(\"[ref-rate-positive]\").find(\".k-icon\"), \"thumb-up-outline\");\n                    }\n                });\n            }\n        },\n\n        render: function() {\n            let that = this;\n            that._renderContent();\n            that.initializeComponents();\n\n            that.contentElement.on(\"keydown\", \".k-card\", function(e) {\n                let target = $(e.target);\n\n                // if up or down arrow, focus next or previous card\n                // if home or end, focus first or last card\n                if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 36 || e.keyCode === 35) {\n                    e.preventDefault();\n\n                    // down arrow\n                    if (e.keyCode === 40) {\n                        target.next(\".k-card\").trigger(\"focus\");\n                    }\n\n                    // up arrow\n                    if (e.keyCode === 38) {\n                        target.prev(\".k-card\").trigger(\"focus\");\n                    }\n\n                    // home\n                    if (e.keyCode === 36) {\n                        that.contentElement.find(\".k-card\").first().trigger(\"focus\");\n                    }\n\n                    // end\n                    if (e.keyCode === 35) {\n                        that.contentElement.find(\".k-card\").last().trigger(\"focus\");\n                    }\n                }\n            });\n        }\n    });\n\n    kendo.ui.AIPromptCommandsView = AIPromptBaseView.extend({\n        options: {\n            name: \"AIPromptCommandsView\",\n            buttonText: \"\",\n            buttonIcon: \"more-horizontal\",\n            promptCommands: []\n        },\n\n        initializeComponents: function() {\n            let that = this;\n            let commandItems = that.options.promptCommands;\n\n            let panelBarEl = $(\"<div></div>\").kendoPanelBar({\n                animation: false,\n                dataSource: commandItems,\n                selectable: false,\n                select: function(ev) {\n                    let item = $(ev.item);\n                    let dataItem = this.dataItem(item);\n                    if (dataItem.hasChildren) {\n                        return;\n                    }\n\n                    that.aiprompt.trigger(\"commandExecute\", { sender: that.aiprompt, item: dataItem });\n                }\n            });\n\n            that.contentElement.append(panelBarEl);\n        },\n\n        render: function() {\n            let that = this;\n            that._renderContentElement();\n            that.initializeComponents();\n        },\n    });\n\n    let EMPTY_TEMPLATE = () => \"\";\n    kendo.ui.AIPromptCustomView = AIPromptBaseView.extend({\n        options: {\n            name: \"AIPromptCustomView\",\n            buttonText: \"\",\n            buttonIcon: \"\",\n            viewTemplate: EMPTY_TEMPLATE,\n            footerTemplate: EMPTY_TEMPLATE,\n        },\n\n        initializeComponents: function() {\n            let that = this;\n            if (typeof that.options.initializeComponents === \"function\") {\n                that.options.initializeComponents.call(that);\n            }\n        },\n\n        _renderContent: function() {\n            let that = this;\n            let content = kendo.template(that.options.viewTemplate)({ aiprompt: that });\n\n            that._renderContentElement();\n            that.contentElement.append(content);\n        },\n\n        _renderFooter: function() {\n            let that = this;\n            if (that.options.footerTemplate === EMPTY_TEMPLATE) {\n                return;\n            }\n\n            let footer = kendo.template(that.options.footerTemplate)({ messages: that.options.messages });\n\n            that._renderFooterElement();\n            that.footerElement.append(footer);\n        },\n        render: function() {\n            let that = this;\n            that._renderContent();\n            that._renderFooter();\n            that.initializeComponents();\n        },\n    });\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}