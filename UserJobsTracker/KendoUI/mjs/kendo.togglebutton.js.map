{"version":3,"sources":["raw-mjs/kendo.togglebutton.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Button","ui","CLICK","TOGGLE","ARIA_PRESSED","SELECTED","ToggleButton","extend","init","element","options","that","this","fn","call","wrapper","_selected","selected","toggle","group","attr","notify","destroy","off","events","addClass","removeClass","_click","e","enable","trigger","event","target","preventDefault","checked","cssProperties","registerPrefix","registerValues","prop","values","fillModeValues","concat","roundedValues","plugin","jQuery","kendo$1"],"mappings":";;;;;;;;MAAA,wBACA,oBAEA,IAAAA,SAAA,CACAC,GAAA,eACAC,KAAA,eACAC,SAAA,MACAC,YAAA,uEACAC,QAAA,CAAA,OAAA,YAGA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAG,GAAAD,OACAE,EAAA,QACAC,EAAA,SAEAC,EAAA,eACAC,EAAA,aAIAC,EAAAN,EAAAO,OAAA,CACAC,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,KAEAZ,EAAAa,GAAAL,KAAAM,KAAAH,EAAAF,EAAAC,GAEAD,EAAAE,EAAAI,QAAAJ,EAAAF,QACAC,EAAAC,EAAAD,QAGAC,EAAAK,WAAA,IAAAN,EAAAO,SACAN,EAAAO,OAAAP,EAAAK,WAEAN,EAAAS,OACAV,EAAAW,KAjBA,aAiBAV,EAAAS,OAGArB,EAAAuB,OAAAV,EACA,EAEAW,QAAA,WACAV,KAEAG,QAAAQ,IA7BA,sBA8BAvB,EAAAa,GAAAS,QAAAR,KAHAF,KAIA,EAEAY,OAAA,CACAtB,EACAC,GAGAO,QAAA,CACAlB,KAAA,eACA2B,MAAAtB,EACAoB,UAAA,GAGAC,OAAA,SAAAA,GACAA,IAAArB,IACAqB,GAAAN,KAAAI,WAGAJ,KAAAI,UAAAE,GAEA,IAAAA,GACAN,KAAAH,QAAAW,KAAAhB,GAAA,GACAQ,KAAAH,QAAAgB,SAAApB,KACA,IAAAa,IACAN,KAAAH,QAAAW,KAAAhB,GAAA,GACAQ,KAAAH,QAAAiB,YAAArB,GAEA,EAEAsB,OAAA,SAAAC,GACAhB,KAAAF,QAAAmB,SACAjB,KAAAkB,QAAA5B,EAAA,CACA6B,MAAAH,EACArC,GAAAqB,KAAAH,QAAAW,KA5DA,MA6DAY,OAAApB,KAAAH,UAEAmB,EAAAK,kBAEArB,KAAAM,SAEAN,KAAAkB,QAAA3B,EAAA,CACA4B,MAAAH,EACAM,QAAAtB,KAAAI,UACAG,MAAAP,KAAAF,QAAAS,MACA5B,GAAAqB,KAAAH,QAAAW,KAvEA,MAwEAY,OAAApB,KAAAH,WAIA,IAGAX,EAAAqC,cAAAC,eAAA,eAAA,aAEAtC,EAAAqC,cAAAE,eAAA,eAAA,CAAA,CACAC,KAAA,WACAC,OAAAzC,EAAAqC,cAAAK,eAAAC,OAAA,CAAA,UACA,CACAH,KAAA,UACAC,OAAAzC,EAAAqC,cAAAO,cAAAD,OAAA,CAAA,CAAA,OAAA,aAGA3C,EAAAG,GAAA0C,OAAArC,EAEA,CApGA,CAoGAP,OAAAD,MAAA8C,QACA,IAAAC,QAAA/C,aAEA+C","file":"kendo.togglebutton.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.button.js';\n\nvar __meta__ = {\n        id: \"togglebutton\",\n        name: \"ToggleButton\",\n        category: \"web\",\n        description: \"The ToggleButton widget displays styled buttons with selected state.\",\n        depends: [\"core\", \"button\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Button = kendo.ui.Button,\n            CLICK = \"click\",\n            TOGGLE = \"toggle\",\n            NS = \".kendoToggleButton\",\n            ARIA_PRESSED = \"aria-pressed\",\n            SELECTED = \"k-selected\",\n            DATA_GROUP = \"data-group\",\n            ID = \"id\";\n\n        var ToggleButton = Button.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Button.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n                options = that.options;\n\n\n                that._selected = options.selected === true ? true : false;\n                that.toggle(that._selected);\n\n                if (options.group) {\n                    element.attr(DATA_GROUP, options.group);\n                }\n\n                kendo.notify(that);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n                Button.fn.destroy.call(that);\n            },\n\n            events: [\n                CLICK,\n                TOGGLE\n            ],\n\n            options: {\n                name: \"ToggleButton\",\n                group: undefined$1,\n                selected: false\n            },\n\n            toggle: function(toggle) {\n                if (toggle === undefined$1) {\n                    toggle = !this._selected;\n                }\n\n                this._selected = toggle;\n\n                if (toggle === true) {\n                    this.element.attr(ARIA_PRESSED, true);\n                    this.element.addClass(SELECTED);\n                } else if (toggle === false) {\n                    this.element.attr(ARIA_PRESSED, false);\n                    this.element.removeClass(SELECTED);\n                }\n            },\n\n            _click: function(e) {\n                if (this.options.enable) {\n                    if (this.trigger(CLICK, {\n                        event: e,\n                        id: this.element.attr(ID),\n                        target: this.element\n                    })) {\n                        e.preventDefault();\n                    } else {\n                        this.toggle();\n\n                        this.trigger(TOGGLE, {\n                            event: e,\n                            checked: this._selected,\n                            group: this.options.group,\n                            id: this.element.attr(ID),\n                            target: this.element\n                        });\n                    }\n                }\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"ToggleButton\", \"k-button-\");\n\n        kendo.cssProperties.registerValues(\"ToggleButton\", [{\n            prop: \"fillMode\",\n            values: kendo.cssProperties.fillModeValues.concat([\"link\"])\n        }, {\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        kendo.ui.plugin(ToggleButton);\n\n    })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}