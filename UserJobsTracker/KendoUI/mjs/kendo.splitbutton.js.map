{"version":3,"sources":["raw-mjs/kendo.splitbutton.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","NS","extend","html","outerWidth","_outerWidth","keys","ID","ARIA_DISABLED","ARIA_LABEL","ARIA_EXPANDED","DISABLED","DISABLEDSTATE","FOCUSSTATE","CLICK","OPEN","CLOSE","FOCUS","cssClasses","SplitButton","init","element","options","that","this","enabled","prop","fn","call","_wrapper","_renderButtons","_renderMenu","_enable","_aria","_attachEvents","notify","_applyCssClasses","items","rounded","size","fillMode","themeColor","icon","popup","arrowIcon","messages","labelSuffix","events","wrapperId","attr","guid","wrapper","wrap","parent","arrowButton","appendTo","addClass","_getAppearanceClasses","_clearCssClasses","removeClass","widgetName","__proto__","cssProperties","getValidClass","widget","propName","value","_mainButton","_arrowButton","type","click","renderButton","text","imageUrl","iconClass","menu","list","length","kendoButtonMenu","mainButton","toggleTarget","menuOpen","menuOpenHandler","bind","menuClose","menuCloseHandler","menuClick","_click","data","ev","computedWidth","trigger","target","preventDefault","sender","adjustPopupWidth","on","_keydown","_focus","_blur","closest","originalEvent","close","is","keyCode","ENTER","SPACEBAR","focus","enable","soft","add","toggleClass","removeAttr","menuItem","hide","show","open","_popup","setOptions","destroy","off","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","kendo$1"],"mappings":";;;;;;;;MAAA,+BACA,yBAEA,IAAAA,SAAA,CACAC,GAAA,cACAC,KAAA,cACAC,SAAA,MACAC,YAAA,iJACAC,QAAA,CAAA,cAAA,iBAGA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAG,GAAAD,OACAE,EAAA,oBACAD,EAAAH,EAAAG,GACAE,EAAAP,EAAAO,OACAC,EAAAN,EAAAM,KACAC,EAAAP,EAAAQ,YACAC,EAAAT,EAAAS,KAGAC,EAAA,KAGAC,EAAA,gBAEAC,EAAA,aACAC,EAAA,gBAEAC,EAAA,WACAC,EAAA,aACAC,EAAA,UAEAC,EAAA,QAEAC,EAAA,OACAC,EAAA,QAEAC,EAAA,QAGAC,EACA,gCAGAC,EAAApB,EAAAG,OAAA,CACAkB,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,MAEAF,EAAAA,GAAA,CAAA,GACAG,SAAA,IAAAH,EAAAG,UAAA9B,EAAA0B,GAAAK,KAAAf,GACAZ,EAAA4B,GAAAP,KAAAQ,KAAAL,EAAAF,EAAAC,GAEAC,EAAAM,WACAN,EAAAO,iBACAP,EAAAQ,cAEAR,EAAAS,QAAAT,EAAAD,QAAAG,SAEAF,EAAAU,QAEAV,EAAAW,gBAEArC,EAAAsC,OAAAZ,GAEAA,EAAAa,kBACA,EAEAd,QAAA,CACA/B,KAAA,cACAkC,SAAA,EACAY,MAAA,GACAC,QAAA,SACAC,KAAA,SACAC,SAAA,QACAC,WAAA,OACAC,KAAA,KACAC,MAAA,KACAC,UAAA,iBACAC,SAAA,CACAC,YAAA,gBAIAC,OAAA,CACAjC,EACAC,EACAC,GAGAa,SAAA,WACA,IAAAN,EAAAC,KAEAwB,GADAzB,EAAAF,QAAA4B,KAAA1C,IAAAV,EAAAqD,QACA,WAEA3B,EAAA4B,QAAA5B,EAAAF,QACA+B,KAAA,YAAAJ,EAAA,YAAA9B,EAAA,YACAmC,OAAA,mBAEA9B,EAAA+B,YAAA3D,EAAA,0FAAA4D,SAAAhC,EAAA4B,QACA,EAEAf,iBAAA,WACAZ,KAEA2B,QAAAK,SAFAhC,KAEAiC,wBACA,EAEAC,iBAAA,WACAlC,KAEA2B,QAAAQ,YAFAnC,KAEAiC,wBACA,EAEAA,sBAAA,WACA,IACAG,EADApC,KACAqC,UAAAvC,QAAA/B,KAOA,OANAM,EAAAiE,cAAAC,cAAA,CACAC,OAAAJ,EACAK,SAAA,UACAC,MALA1C,KAKAF,QAAAgB,SAIA,EAEAR,eAAA,WACAN,KAEA2C,cAFA3C,KAGA4C,cACA,EAEAD,YAAA,WACA,IAAA5C,EAAAC,KACAF,EAAApB,EAAA,CAAA,EAAAqB,EAAAD,QAAA,CACA+C,KAAA9C,EAAAF,QAAA4B,KAAA,SAAA,kBAGA3B,EAAAgD,MAEAnE,EAAAoE,aAAAhD,EAAAF,QAAAC,EACA,EAEA8C,aAAA,WACA,IAAA7C,EAAAC,KACAF,EAAApB,EAAA,CAAA,EAAAqB,EAAAD,QAAA,CACA+C,KAAA,SACA3B,KAAAnB,EAAAD,QAAAsB,mBAGAtB,EAAAkD,YACAlD,EAAAmD,gBACAnD,EAAAgD,aACAhD,EAAAoD,UAEAvE,EAAAoE,aAAAhD,EAAA+B,YAAAhC,EACA,EAEAW,MAAA,WACA,IAAAV,EAAAC,KACAH,EAAAE,EAAAF,QACAsD,EAAApD,EAAAoD,KAEAtD,EAAA4B,KA7IA,gBA6IA0B,EAAA,OAAA,MACAtD,EAAA4B,KAAAvC,GAAAiE,GAAA,MACAtD,EAAA4B,KA7IA,gBA6IA0B,EAAAA,EAAAC,KAAA3B,KAAA1C,GAAA,MAEAc,EAAA4B,KAAAxC,IACAY,EAAA4B,KAAAxC,EAAAY,EAAAmD,OAAA,IAAAjD,EAAAD,QAAAuB,SAAAC,YAEA,EAEAf,YAAA,WACA,IAAAR,EAAAC,KACAF,EAAApB,EAAA,CAAA,EAAAqB,EAAAD,SACAqD,EAAAhF,EAAA,sBAEA2B,EAAAgD,aACAhD,EAAA/B,KAEA+B,EAAAe,MAAAwC,SAIAtD,EAAAoD,KAAAA,EAAApB,SAAAhC,EAAA4B,SAAA2B,gBAAA5E,EAAA,CACA6E,WAAAxD,EAAAF,QACA2D,aAAAzD,EAAA+B,YACA2B,SAAA1D,EAAA2D,gBAAAC,KAAA5D,GACA6D,UAAA7D,EAAA8D,iBAAAF,KAAA5D,GACA+D,UAAA/D,EAAAgE,OAAAJ,KAAA5D,IACAD,IAAAkE,KAAA,mBACA,EAEAN,gBAAA,SAAAO,GACA,IAAAlE,EAAAC,KACAkE,EAAAtF,EAAAmB,EAAA4B,SAEA5B,EAAAoE,QAAA5E,EAAA,CAAA6E,OAAArE,EAAAF,UAEAoE,EAAAI,kBAIAJ,EAAAK,OAAAC,iBAAAL,GACAnE,EAAAF,QAAA4B,KAAAvC,GAAA,GACA,EAEA2E,iBAAA,SAAAI,GACA,IAAAlE,EAAAC,KACAD,EAAAoE,QAAA3E,EAAA,CAAA4E,OAAArE,EAAAF,UAGAoE,EAAAI,kBAIAtE,EAAAF,QAAA4B,KAAAvC,GAAA,GACAa,EAAAF,QAAAsE,QAAA1E,GACA,EAEAiB,cAAA,WACA,IAAAX,EAAAC,KAEAD,EAAAF,QAAA2E,GAAAlF,EAAAb,EAAAsB,EAAAgE,OAAAJ,KAAA5D,IACAA,EAAAF,QAAA2E,GA/LA,UA+LA/F,EAAAsB,EAAA0E,SAAAd,KAAA5D,IACAA,EAAAF,QAAA2E,GAAA/E,EAAAhB,EAAAsB,EAAA2E,OAAAf,KAAA5D,IACAA,EAAAF,QAAA2E,GA5LA,OA4LA/F,EAAAsB,EAAA4E,MAAAhB,KAAA5D,GACA,EAEA2E,OAAA,WACA1E,KAAA2B,QAAAK,SAAA3C,EACA,EAEAsF,MAAA,WACA3E,KAAA2B,QAAAQ,YAAA9C,EACA,EAEA0E,OAAA,SAAAE,GACA,IACAG,EAAAjG,EAAA8F,EAAAG,QAAAQ,QAAA,aACA9G,EAAAsG,EAAA3C,KAAA1C,GACA8F,EAAAZ,EAEA,eAAAA,EAAApB,OACA/E,EAAAmG,EAAAnG,GACAsG,EAAAH,EAAAG,OACAS,EAAAZ,EAAAY,eARA7E,KAWAmD,KAAA2B,QAXA9E,KAaAmE,QAAA7E,EAAA,CAAAxB,GAAAA,EAAAsG,OAAAA,EAAAS,cAAAA,GACA,EAEAJ,SAAA,SAAAR,IACAjE,KAEAH,QAAAkF,GA9OA,IA8OA3F,IAAA6E,EAAAe,UAAAlG,EAAAmG,OAAAhB,EAAAe,UAAAlG,EAAAoG,UACAjB,EAAAI,gBAEA,EAEAc,MAAA,WACAnF,KACAH,QAAAsE,QAAA1E,EACA,EAEAe,QAAA,SAAA4E,EAAAC,GACArF,KAAAH,QAAAyF,IAAAtF,KAAA8B,aACAyD,YAAAnG,GAAAgG,GAEAA,EACApF,KAAAH,QAAA2F,WAAAxG,GAEAgB,KAAAH,QAAA4B,KAAAzC,GAAAoG,GAGAC,GACArF,KAAAH,QAAA4B,KAAAtC,GAAAiG,GAGApF,KAAA8B,YAAAL,KAAAtC,GAAAiG,EACA,EAEAA,OAAA,SAAAA,EAAAK,EAAAJ,GACA,IAAAtF,EAAAC,KApRA,YAsRAoF,IACAA,GAAA,GAGAK,GAAAA,EAAApC,OACAtD,EAAAoD,KAAAiC,OAAAA,EAAAK,IAIA1F,EAAAD,QAAAG,QAAAmF,EAEArF,EAAAS,QAAA4E,EAAAC,GACAtF,EAAAoD,KAAAiC,OAAAA,GACA,EAEAM,KAAA,SAAAD,GAGAA,GAAAA,EAAApC,QAFArD,KAGAmD,KAAAuC,KAAAD,EAEA,EAEAE,KAAA,SAAAF,GAGAA,GAAAA,EAAApC,QAFArD,KAGAmD,KAAAwC,KAAAF,EAEA,EAEAG,KAAA,WACA5F,KAAAmD,KAAA0C,OAAAD,MACA,EAEAd,MAAA,WACA9E,KAAAmD,KAAA0C,OAAAf,OACA,EAEAjE,MAAA,WACA,OAAAb,KAAAmD,KAAAtC,OACA,EAEAiF,WAAA,SAAAhG,GACA,IAAAC,EAAAC,KAEAzB,EAAA4B,GAAA2F,WAAA1F,KAAAL,EAAAD,IAEAA,EAAAqB,OAAArB,EAAAe,OAAAf,EAAAiB,QACAhB,EAAAoD,KAAA4C,UACAhG,EAAAQ,eAGAR,EAAAO,iBAEAP,EAAAU,OACA,EAEAsF,QAAA,WACA,IAAAhG,EAAAC,KAEAD,EAAAoD,MACApD,EAAAoD,KAAA4C,UAGAhG,EAAAF,QAAAmG,IAAAvH,GAEAF,EAAA4B,GAAA4F,QAAA3F,KAAAL,EACA,IAGA1B,EAAAiE,cAAA2D,eAAA,cAAA,kBAEA5H,EAAAiE,cAAA4D,eAAA,cAAA,CAAA,CACAhG,KAAA,UACAiG,OAAA9H,EAAAiE,cAAA8D,cAAAC,OAAA,CAAA,CAAA,OAAA,aAGA7H,EAAA8H,OAAA3G,EAEA,CAtWA,CAsWArB,OAAAD,MAAAkI,QACA,IAAAC,QAAAnI,aAEAmI","file":"kendo.splitbutton.js","sourcesContent":["import './kendo.html.button.js';\nimport './kendo.button.menu.js';\n\nvar __meta__ = {\n    id: \"splitbutton\",\n    name: \"SplitButton\",\n    category: \"web\",\n    description: \"The SplitButton allows the user to execute a default action which is bound to a Button or to choose a predefined action from a drop-down list.\",\n    depends: [\"button.menu\", \"html.button\"]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        NS = \".kendoSplitButton\",\n        ui = kendo.ui,\n        extend = $.extend,\n        html = kendo.html,\n        outerWidth = kendo._outerWidth,\n        keys = kendo.keys,\n\n        DOT = \".\",\n        ID = \"id\",\n\n        ARIA_HASPOPUP = \"aria-haspopup\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_CONTROLS = \"aria-controls\",\n        ARIA_LABEL = \"aria-label\",\n        ARIA_EXPANDED = \"aria-expanded\",\n\n        DISABLED = \"disabled\",\n        DISABLEDSTATE = \"k-disabled\",\n        FOCUSSTATE = \"k-focus\",\n\n        CLICK = \"click\",\n        KEYDOWN = \"keydown\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n\n        FOCUS = \"focus\",\n        BLUR = \"blur\";\n\n    var cssClasses = {\n        widget: \"k-split-button k-button-group\"\n    };\n\n    var SplitButton = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options = options || {};\n            options.enabled = options.enabled !== false && !$(element).prop(DISABLED);\n            Widget.fn.init.call(that, element, options);\n\n            that._wrapper();\n            that._renderButtons();\n            that._renderMenu();\n\n            that._enable(that.options.enabled);\n\n            that._aria();\n\n            that._attachEvents();\n\n            kendo.notify(that);\n\n            that._applyCssClasses();\n        },\n\n        options: {\n            name: \"SplitButton\",\n            enabled: true,\n            items: [],\n            rounded: \"medium\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            themeColor: \"base\",\n            icon: null,\n            popup: null,\n            arrowIcon: \"caret-alt-down\",\n            messages: {\n                labelSuffix: \"splitbutton\"\n            }\n        },\n\n        events: [\n            CLICK,\n            OPEN,\n            CLOSE\n        ],\n\n        _wrapper: function() {\n            var that = this,\n                id = that.element.attr(ID) || kendo.guid(),\n                wrapperId = id + \"_wrapper\";\n\n            that.wrapper = that.element\n                .wrap(\"<div id=\\\"\" + wrapperId + \"\\\" class=\\\"\" + cssClasses.widget + \"\\\"></div>\")\n                .parent(\".k-split-button\");\n\n            that.arrowButton = $(\"<button tabindex=\\\"-1\\\" aria-label=\\\"arrow-button\\\" class=\\\"k-split-button-arrow\\\"></button>\").appendTo(that.wrapper);\n        },\n\n        _applyCssClasses: function() {\n            var that = this;\n\n            that.wrapper.addClass(that._getAppearanceClasses());\n        },\n\n        _clearCssClasses: function() {\n            var that = this;\n\n            that.wrapper.removeClass(that._getAppearanceClasses());\n        },\n\n        _getAppearanceClasses: function() {\n            var that = this,\n                widgetName = that.__proto__.options.name,\n                roundedClass = kendo.cssProperties.getValidClass({\n                    widget: widgetName,\n                    propName: \"rounded\",\n                    value: that.options.rounded\n                });\n\n            return roundedClass;\n        },\n\n        _renderButtons: function() {\n            var that = this;\n\n            that._mainButton();\n            that._arrowButton();\n        },\n\n        _mainButton: function() {\n            var that = this,\n                options = extend({}, that.options, {\n                    type: that.element.attr(\"type\") || \"button\"\n                });\n\n            delete options.click;\n\n            html.renderButton(that.element, options);\n        },\n\n        _arrowButton: function() {\n            var that = this,\n                options = extend({}, that.options, {\n                    type: \"button\",\n                    icon: that.options.arrowIcon,\n                });\n\n            delete options.text;\n            delete options.imageUrl;\n            delete options.click;\n            delete options.iconClass;\n\n            html.renderButton(that.arrowButton, options);\n        },\n\n        _aria: function() {\n            var that = this,\n                element = that.element,\n                menu = that.menu;\n\n            element.attr(ARIA_HASPOPUP, menu ? \"menu\" : null);\n            element.attr(ARIA_EXPANDED, menu ? false : null);\n            element.attr(ARIA_CONTROLS, menu ? menu.list.attr(ID) : null);\n\n            if (!element.attr(ARIA_LABEL)) {\n                element.attr(ARIA_LABEL, element.text() + \" \" + that.options.messages.labelSuffix);\n            }\n        },\n\n        _renderMenu: function() {\n            var that = this,\n                options = extend({}, that.options),\n                menu = $(\"<div></div>\");\n\n            delete options.click;\n            delete options.name;\n\n            if (!options.items.length) {\n                return;\n            }\n\n            that.menu = menu.appendTo(that.wrapper).kendoButtonMenu(extend({\n                mainButton: that.element,\n                toggleTarget: that.arrowButton,\n                menuOpen: that.menuOpenHandler.bind(that),\n                menuClose: that.menuCloseHandler.bind(that),\n                menuClick: that._click.bind(that)\n            }, options)).data(\"kendoButtonMenu\");\n        },\n\n        menuOpenHandler: function(ev) {\n            var that = this,\n                computedWidth = outerWidth(that.wrapper);\n\n            var isDefaultPrevented = that.trigger(OPEN, { target: that.element });\n            if (isDefaultPrevented) {\n                ev.preventDefault();\n                return;\n            }\n\n            ev.sender.adjustPopupWidth(computedWidth);\n            that.element.attr(ARIA_EXPANDED, true);\n        },\n\n        menuCloseHandler: function(ev) {\n            var that = this,\n                isDefaultPrevented = that.trigger(CLOSE, { target: that.element });\n\n            if (isDefaultPrevented) {\n                ev.preventDefault();\n                return;\n            }\n\n            that.element.attr(ARIA_EXPANDED, false);\n            that.element.trigger(FOCUS);\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.element.on(CLICK + NS, that._click.bind(that));\n            that.element.on(KEYDOWN + NS, that._keydown.bind(that));\n            that.element.on(FOCUS + NS, that._focus.bind(that));\n            that.element.on(BLUR + NS, that._blur.bind(that));\n        },\n\n        _focus: function() {\n            this.wrapper.addClass(FOCUSSTATE);\n        },\n\n        _blur: function() {\n            this.wrapper.removeClass(FOCUSSTATE);\n        },\n\n        _click: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\".k-button\"),\n                id = target.attr(ID),\n                originalEvent = ev;\n\n            if (ev.type === \"menu-click\") {\n                id = ev.id;\n                target = ev.target;\n                originalEvent = ev.originalEvent;\n            }\n\n            that.menu.close();\n\n            that.trigger(CLICK, { id: id, target: target, originalEvent: originalEvent });\n        },\n\n        _keydown: function(ev) {\n            var that = this;\n\n            if (that.element.is(DOT + DISABLEDSTATE) && (ev.keyCode === keys.ENTER || ev.keyCode === keys.SPACEBAR)) {\n                ev.preventDefault();\n            }\n        },\n\n        focus: function() {\n            var that = this;\n            that.element.trigger(FOCUS);\n        },\n\n        _enable: function(enable, soft) {\n            this.element.add(this.arrowButton)\n                .toggleClass(DISABLEDSTATE, !enable);\n\n            if (enable) {\n                this.element.removeAttr(ARIA_DISABLED);\n            } else {\n                this.element.attr(ARIA_DISABLED, !enable);\n            }\n\n            if (!soft) {\n                this.element.attr(DISABLED, !enable);\n            }\n\n            this.arrowButton.attr(DISABLED, !enable);\n        },\n\n        enable: function(enable, menuItem, soft) {\n            var that = this;\n\n            if (enable === undefined$1) {\n                enable = true;\n            }\n\n            if (menuItem && menuItem.length) {\n                that.menu.enable(enable, menuItem);\n                return;\n            }\n\n            that.options.enabled = enable;\n\n            that._enable(enable, soft);\n            that.menu.enable(enable);\n        },\n\n        hide: function(menuItem) {\n            var that = this;\n\n            if (menuItem && menuItem.length) {\n                that.menu.hide(menuItem);\n            }\n        },\n\n        show: function(menuItem) {\n            var that = this;\n\n            if (menuItem && menuItem.length) {\n                that.menu.show(menuItem);\n            }\n        },\n\n        open: function() {\n            this.menu._popup.open();\n        },\n\n        close: function() {\n            this.menu._popup.close();\n        },\n\n        items: function() {\n            return this.menu.items();\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(that, options);\n\n            if (options.popup || options.items || options.size) {\n                that.menu.destroy();\n                that._renderMenu();\n            }\n\n            that._renderButtons();\n\n            that._aria();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.menu) {\n                that.menu.destroy();\n            }\n\n            that.element.off(NS);\n\n            Widget.fn.destroy.call(that);\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"SplitButton\", \"k-splitbutton-\");\n\n    kendo.cssProperties.registerValues(\"SplitButton\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([[\"full\", \"full\"]])\n    }]);\n\n    ui.plugin(SplitButton);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}