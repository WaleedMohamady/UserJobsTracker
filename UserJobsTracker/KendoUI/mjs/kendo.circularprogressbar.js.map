{"version":3,"sources":["raw-mjs/kendo.circularprogressbar.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","window","kendo","dataviz","interpolateValue","drawing","ui","Widget","Surface","geometry","Animation","Arc","limitValue","round","DrawingGroup","Group","PointerAnimation","extend","init","element","options","fn","call","this","animationOptions","color","endColor","startColor","duration","Math","abs","newAngle","oldAngle","Color","step","pos","that","angle","setEndAngle","r","g","b","stroke","toHex","CircularProgressBar","userOptions","theme","themes","themeName","lowerName","toLowerCase","SASS_THEMES","indexOf","autoTheme","gauge","themeOptions","_value","value","addClass","redraw","_centerTemplate","_aria","ariaRole","centerTemplate","colors","transitions","pointerWidth","indeterminate","label","labelId","events","_restrictValue","_centerSvgElements","_pointerChange","_updateProgress","_initSurface","_buildVisual","_draw","resize","destroy","announce","remove","wrapper","attr","role","appendTo","text","center","_getCenter","circle","_geometry","x","y","arc","geometryChange","position","template","centerElement","_getCenterElement","html","_getColor","_centerTemplatePosition","width","height","css","_centerElement","append","oldValue","newValue","_slotAngle","play","surface","clear","draw","_visuals","find","innerHTML","format","visuals","pointer","radius","min","circleGeometry","Circle","fill","scale","rangePlaceholderColor","_createArc","currentValue","isNumber","idx","length","range","rangeColor","from","to","endAngle","rangeRadius","rangeSize","rangeGeom","radiusX","radiusY","startAngle","opacity","right","bottom","size","_getSize","left","top","max","Point","defaultSize","offsetWidth","offsetHeight","_surfaceElement","surfaceElement","document","createElement","appendChild","elementSize","create","type","renderAs","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.circularprogressbar.js","sourcesContent":["import './kendo.dataviz.themes.js';\n\nvar __meta__ = {\n    id: \"circularprogressBar\",\n    name: \"CircularProgressBar\",\n    category: \"web\",\n    description: \"The Circular ProgressBar component represents an SVG loader\",\n    depends: [ \"core\", \"dataviz.themes\" ]\n};\n\n(function($, undefined$1) {\n\n    window.kendo.dataviz = window.kendo.dataviz || {};\n    var dataviz = kendo.dataviz;\n    var interpolateValue = dataviz.interpolateValue;\n    var drawing = kendo.drawing;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var Surface = drawing.Surface;\n    var geometry = kendo.geometry;\n    var Animation = drawing.Animation;\n    var Arc = drawing.Arc;\n    var limitValue = dataviz.limitValue;\n    var round = dataviz.round;\n    var DrawingGroup = drawing.Group;\n    var DEFAULT_HEIGHT = 200;\n    var GEO_ARC_ADJUST_ANGLE = 180;\n    var MINVALUE = 0;\n    var MAXVALUE = 100;\n    var DEFAULT_MARGIN = 5;\n    var ANGULAR_SPEED = 150;\n    var DEFAULT_WIDTH = 200;\n    var MAX_DURATION = 800;\n    var announceElement = '<span aria-live=\"polite\" class=\"k-sr-only k-progress-announce\"></span>';\n\n    var PointerAnimation = Animation.extend({\n        init: function(element, options) {\n            Animation.fn.init.call(this, element, options);\n\n            var animationOptions = this.options;\n            var color = options.endColor;\n            var startColor = options.startColor;\n            var duration = (Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration) * 1000;\n            animationOptions.duration = limitValue(duration, ANGULAR_SPEED, MAX_DURATION);\n\n            this.element = element;\n\n            if (startColor !== color) {\n                this.startColor = new kendo.Color(startColor);\n                this.color = new kendo.Color(color);\n            }\n        },\n\n        step: function(pos) {\n            var that = this;\n            var options = that.options;\n            var startColor = that.startColor;\n            var color = that.color;\n            var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n\n            this.element.geometry().setEndAngle(angle);\n\n            if (color) {\n                var r = round(interpolateValue(startColor.r, color.r, pos));\n                var g = round(interpolateValue(startColor.g, color.g, pos));\n                var b = round(interpolateValue(startColor.b, color.b, pos));\n\n                this.element.stroke(new kendo.Color(r, g, b).toHex());\n            }\n        },\n    });\n\n    var CircularProgressBar = Widget.extend({\n        init: function(element, userOptions) {\n\n            var that = this;\n            Widget.fn.init.call(that, element, userOptions);\n            this.theme = themeOptions(this.options);\n            this._value = this.options.value;\n            this.element.addClass(\"k-gauge\");\n\n            this.redraw();\n            this._centerTemplate();\n            this._aria();\n        },\n\n        options: {\n            name: \"CircularProgressBar\",\n            ariaRole: false,\n            theme: \"sass\",\n            centerTemplate: '',\n            color: \"\",\n            colors: [],\n            transitions: true,\n            pointerWidth: 5,\n            indeterminate: false,\n            label: null,\n            labelId: null\n        },\n\n        events: [ ],\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            value = that._restrictValue(value);\n\n            that._centerSvgElements();\n            that._pointerChange(that._value, value);\n            that._value = value;\n            that._centerTemplate();\n            that._updateProgress();\n        },\n\n        redraw: function() {\n            this._initSurface();\n            this._buildVisual();\n            this._draw();\n        },\n\n        resize: function() {\n            var transitions = this.options.transitions;\n\n            this.options.transitions = false;\n            this._initSurface();\n            this._buildVisual();\n            this._draw();\n            this._centerTemplate();\n            this.options.transitions = transitions;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.announce) {\n                that.announce.remove();\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        _aria: function() {\n            var that = this,\n                options = that.options,\n                value = that.value() || 0,\n                wrapper = that.element;\n\n            if (!options.ariaRole) {\n                return;\n            }\n\n            wrapper.attr({\n                \"role\": \"progressbar\"\n            });\n\n            if (!options.indeterminate) {\n                wrapper.attr({\n                    \"aria-valuemin\": 0,\n                    \"aria-valuemax\": 100\n                });\n            }\n\n            if (!!options.labelId) {\n                wrapper.attr(\"aria-labelledby\", options.labelId);\n            } else if (!!options.label) {\n                wrapper.attr(\"aria-label\", options.label);\n            }\n\n            that.announce = $(announceElement);\n            that.announce.appendTo($(\"body\"));\n\n            if (!options.indeterminate) {\n                wrapper.attr(\"aria-valuenow\", value);\n\n                that.announce.text(value + \"%\");\n            } else {\n                that.announce.text(\"Loading...\");\n            }\n        },\n\n        _restrictValue: function(value) {\n\n            if (value < MINVALUE) {\n                return MINVALUE;\n            }\n\n            if (value > MAXVALUE) {\n                return MAXVALUE;\n            }\n\n            return value;\n        },\n\n        _updateProgress: function() {\n            var that = this;\n            var options = that.options;\n            var value = that.value() || 0;\n\n            if (options.ariaRole && !options.indeterminate) {\n                that.element.attr(\"aria-valuenow\", value);\n\n                if (that.announce) {\n                    that.announce.text(value + \"%\");\n                }\n            }\n        },\n\n        _centerSvgElements: function() {\n            var center = this._getCenter();\n\n            if (this.circle._geometry.center.x !== center.x ||\n                this.circle._geometry.center.y !== center.y) {\n\n                    this.circle._geometry.center.x = center.x;\n                    this.circle._geometry.center.y = center.y;\n                    this.arc._geometry.center.x = center.x;\n                    this.arc._geometry.center.y = center.y;\n                    this.circle.geometryChange();\n                    this.arc.geometryChange();\n            }\n        },\n\n        _centerTemplate: function() {\n            var position;\n            var template;\n            var centerElement;\n\n            if (this.options.centerTemplate) {\n                template = kendo.template(this.options.centerTemplate);\n\n                centerElement = this._getCenterElement();\n\n                centerElement.html(template({ color: this._getColor(this.value()), value: this.value() }));\n\n                position = this._centerTemplatePosition(centerElement.width(), centerElement.height());\n\n                centerElement.css(position);\n            } else if (this._centerElement) {\n                this._centerElement.remove();\n                this._centerElement = null;\n            }\n        },\n\n        _getCenterElement: function() {\n            var centerElement = this._centerElement;\n            if (!centerElement) {\n                centerElement = this._centerElement = $('<div></div>').addClass('k-arcgauge-label');\n                this.element.append(centerElement);\n            }\n\n            return centerElement;\n        },\n\n        _pointerChange: function(oldValue, newValue) {\n            var animation;\n\n            if (this.options.transitions) {\n                animation = new PointerAnimation(this.arc, {\n                    oldAngle: this._slotAngle(oldValue),\n                    startColor: this._getColor(oldValue),\n                    newAngle: this._slotAngle(newValue),\n                    endColor: this._getColor(newValue)\n                });\n                animation.play();\n            } else {\n                this.arc.stroke(this._getColor(newValue));\n                this.arc.geometry().setEndAngle(this._slotAngle(newValue));\n            }\n        },\n\n        _draw: function() {\n            var arc;\n            var center;\n            var animation;\n            var surface = this.surface;\n\n            surface.clear();\n            surface.draw(this._visuals);\n\n            if (this.options.indeterminate) {\n                arc = surface.element.find(\"path\");\n                center = this._getCenter();\n                arc[0].innerHTML = kendo.format('<animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 {0} {1}\" to=\"360 {0} {1}\" dur=\"1s\" repeatCount=\"indefinite\" />', center.x, center.y);\n            } else if (this.options.transitions) {\n                animation = new PointerAnimation(this.arc, {\n                    oldAngle: this._slotAngle(0),\n                    startColor: this._getColor(0),\n                    newAngle: this._slotAngle(this.value()),\n                    endColor: this._getColor(this.value()),\n                });\n                animation.play();\n            }\n        },\n\n\n        _buildVisual: function() {\n            var visuals = this._visuals = new DrawingGroup();\n            var center = this._getCenter();\n            var color = this._getColor(this.value()) || this.theme.pointer.color;\n            var radius = Math.min(center.x, center.y) - DEFAULT_MARGIN - this.options.pointerWidth;\n\n            var circleGeometry = new geometry.Circle([center.x, center.y], radius + (this.options.pointerWidth / 2));\n            var circle = this.circle = new drawing.Circle(circleGeometry, {\n                fill: { color: \"none\" },\n                stroke: { color: this.theme.scale.rangePlaceholderColor, width: this.options.pointerWidth }\n            });\n\n            visuals.append(circle);\n\n            if (this.options.indeterminate) {\n                this.arc = this._createArc(360, radius, center, color);\n            } else {\n                this.arc = this._createArc(this._slotAngle(this.value()), radius, center, color);\n            }\n\n            visuals.append(this.arc);\n        },\n\n        _slotAngle: function(value) {\n            var result;\n\n            result = ((value - MINVALUE) / (MAXVALUE) * 360) + 90;\n\n            return result + GEO_ARC_ADJUST_ANGLE;\n        },\n\n        _getColor: function(value) {\n            var options = this.options;\n            var colors = options.colors;\n            var color = options.color;\n            var currentValue = dataviz.isNumber(value) ? value : 0;\n\n            if (colors) {\n                for (var idx = 0; idx < colors.length; idx++) {\n                    var range = colors[idx];\n                    var rangeColor = range.color;\n                    var from = range.from; if (from === void 0) { from = 0; }\n                    var to = range.to; if (to === void 0) { to = 100; }\n\n                    if (from <= currentValue && currentValue <= to) {\n                        return rangeColor;\n                    }\n                }\n            }\n\n            return color;\n        },\n\n        _createArc: function(endAngle, rangeRadius, center, color) {\n            var rangeSize = this.options.pointerWidth;\n            var rangeGeom = new geometry.Arc([center.x, center.y], {\n                radiusX: rangeRadius + (rangeSize / 2),\n                radiusY: rangeRadius + (rangeSize / 2),\n                startAngle: 270,\n                endAngle: endAngle\n            });\n\n            return new Arc(rangeGeom, {\n                stroke: {\n                    width: rangeSize,\n                    color: this.options.color || color,\n                    opacity: this.options.opacity\n                }\n            });\n        },\n\n        _centerTemplatePosition: function(width, height) {\n            var size = this._getSize();\n            var center = this._getCenter();\n\n            var left = center.x - width / 2;\n            var top = center.y - height / 2;\n            var right;\n            var bottom;\n\n            if (width < size.width) {\n                right = left + width;\n\n                left = Math.max(left, 0);\n\n                if (right > size.width) {\n                    left -= right - size.width;\n                }\n            }\n\n            if (height < size.height) {\n                bottom = top + height;\n\n                if (bottom > size.height) {\n                    top -= bottom - size.height;\n                }\n            }\n\n            return {\n                left: left,\n                top: top\n            };\n        },\n\n        _getCenter: function() {\n            var size = this._getSize();\n            return new dataviz.Point(size.width / 2, size.height / 2);\n        },\n\n        _getSize: function() {\n            var element = this.element;\n            var defaultSize = {\n                width: DEFAULT_WIDTH,\n                height: DEFAULT_HEIGHT\n            };\n            var width = element[0].offsetWidth;\n            var height = element[0].offsetHeight;\n\n            if (!width) {\n                width = defaultSize.width;\n            }\n\n            if (!height) {\n                height = defaultSize.height;\n            }\n\n            return { width: width, height: height };\n        },\n\n        _surfaceElement: function() {\n            if (!this.surfaceElement) {\n                this.surfaceElement = document.createElement('div');\n                this.element[0].appendChild(this.surfaceElement);\n            }\n\n            return this.surfaceElement;\n        },\n\n        _initSurface: function() {\n            var that = this;\n            var options = that.options;\n            var surface = that.surface;\n            var element = this._surfaceElement();\n            var size = this._getSize();\n\n            dataviz.elementSize(element, size);\n\n            if (!surface) {\n                this.surface = Surface.create(element, {\n                    type: options.renderAs\n                });\n            } else {\n                this.surface.clear();\n                this.surface.resize();\n            }\n        }\n\n    });\n\n    function themeOptions(options) {\n        var themes = dataviz.ui.themes || {};\n        var themeName = options.theme || \"\";\n        var lowerName = themeName.toLowerCase();\n\n        if (dataviz.SASS_THEMES.indexOf(lowerName) != -1) {\n            return dataviz.autoTheme().gauge;\n        }\n\n        return (themes[themeName] || themes[lowerName] || {}).gauge;\n    }\n\n    ui.plugin(CircularProgressBar);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}