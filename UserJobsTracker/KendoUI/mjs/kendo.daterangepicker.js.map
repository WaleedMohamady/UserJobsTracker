{"version":3,"sources":["raw-mjs/kendo.daterangepicker.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","ui","html","keys","mediaQuery","Widget","MONTH","OPEN","CLOSE","CHANGE","template","extend","support","mobileOS","ARIA_EXPANDED","ARIA_DISABLED","ARIA_ACTIVEDESCENDANT","STATEDISABLED","HIDDEN","DISABLED","READONLY","ARIA_HIDDEN","START","END","ns","CLICK","MOUSEDOWN","UP","mouseAndTouchPresent","applyEventMap","slice","parse","parseDate","DateRangeView","options","DateView","call","this","preventDefault","e","prototype","Object","create","_calendar","div","that","calendar","contentElement","popup","_content","element","adaptiveMode","bigScreenMQL","mediaQueryList","matches","append","find","attr","guid","appendTo","MultiViewCalendar","size","orientation","views","_setOptions","navigate","_value","_current","start","_range","range","on","_click","bind","selectRange","setOptions","allowReverse","focusOnNav","change","culture","dates","depth","footer","format","selectable","max","min","month","weekNumber","disableDates","end","rangeSelectable","clear","move","key","keyCode","selectIsClicked","ctrlKey","DOWN","ENTER","handled","altKey","open","close","visible","ESC","_cell","hasClass","_move","autoClose","ios","android","browser","currentTarget","closest","is","DateRangePicker","init","fn","disabled","_initialOptions","_buildHTML","_changeTriggered","_initializeDateView","_initializeDateViewProxy","onChange","_ariaTemplate","ARIATemplate","_reset","_aria","_inputs","_keydown","_initializeDateInputs","_expandButton","_clearButton","enable","readonly","labels","calendarButton","clearButton","Date","animation","startField","endField","valueType","text","messages","startLabel","endLabel","fillMode","rounded","events","off","dateView","role","_dateViewID","autocomplete","startInput","_startInput","endInput","_endInput","_startClearButton","icon","tabIndex","insertAfter","_clearValue","_endClearButton","startInputButton","endInputButton","next","renderButton","shape","_startDateButton","_expandButtonClick","_endDateButton","_preventInputAction","_toggleClearButton","target","state","toggleClass","type","data","startDateInput","_startDateInput","endDateInput","_endDateInput","value","focus","stopImmediatePropagation","_updateARIA","date","length","removeAttr","_dateInViews","contains","document","activeElement","_updateAria","_inputFocus","_currentTarget","_startChange","startValue","sender","endValue","trigger","_endChange","blur","dateInputInstance","destroy","anchor","wrapper","mode","reverse","resetOnStart","setTimeout","inputOptions","empty","kendoDateInput","getKendoDateInput","_startChangeHandler","_endChangeHandler","addClass","htmlEncode","eq","add","_option","option","parseFormats","formId","form","_resetHandler","_form","_editable","inputs","disable","removeClass","each","item","removeAttribute","unbind","_startDateClear","_endDateClear","_createDateViewProxy","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.daterangepicker.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.multiviewcalendar.js';\nimport './kendo.datepicker.js';\nimport './kendo.html.button.js';\n\nlet __meta__ = {\n    id: \"daterangepicker\",\n    name: \"DateRangePicker\",\n    category: \"web\",\n    description: \"Date range picker.\",\n    depends: [ \"core\", \"multiviewcalendar\", \"datepicker\", \"html.button\",]\n};\n\n(function($, undefined$1) {\n    let kendo = window.kendo,\n        ui = kendo.ui,\n        html = kendo.html,\n        keys = kendo.keys,\n        mediaQuery = kendo.mediaQuery,\n        Widget = ui.Widget,\n        MONTH = \"month\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CHANGE = \"change\",\n        DIV = \"<div />\",\n        MIN = \"min\",\n        MAX = \"max\",\n        template = kendo.template,\n        extend = $.extend,\n        ID = \"id\",\n        support = kendo.support,\n        mobileOS = support.mobileOS,\n        SELECTED = \"k-selected\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        STATEDISABLED = \"k-disabled\",\n        HIDDEN = \"k-hidden\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        START = \"start\",\n        END = \"end\",\n        ns = \".kendoDateRangePicker\",\n        CLICK = \"click\" + ns,\n        MOUSEDOWN = \"mousedown\" + ns,\n        UP = support.mouseAndTouchPresent ? kendo.applyEventMap(\"up\", ns.slice(1)) : CLICK,\n        parse = kendo.parseDate;\n\n    var DateRangeView = function(options) {\n        kendo.DateView.call(this, options);\n    };\n\n    DateRangeView.prototype = Object.create(kendo.DateView.prototype);\n\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n\n    DateRangeView.prototype._calendar = function() {\n        var that = this;\n        var calendar = that.calendar;\n        var options = that.options;\n        var div;\n\n        if (!calendar) {\n            var contentElement = that.popup._content || that.popup.element;\n            if (options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches) {\n                contentElement = contentElement.append($('<div class=\"k-scrollable-wrap\"></div>')).find(\".k-scrollable-wrap\");\n            }\n\n            div = $(DIV).attr(ID, kendo.guid())\n                        .appendTo(contentElement);\n\n            that.calendar = calendar = new ui.MultiViewCalendar(div, {\n                size: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? \"large\" : options.size || \"medium\",\n                orientation: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? \"vertical\" : \"horizontal\",\n                views: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? 1 : 2,\n            });\n\n            that._setOptions(options);\n\n            calendar.navigate(that._value || that._current, options.start);\n\n            that._range = that._range || options.range || {};\n\n            div.on(MOUSEDOWN, preventDefault)\n               .on(CLICK, \"td:has(.k-link)\", that._click.bind(that));\n\n            that.calendar.selectRange(that._range);\n        }\n    };\n\n    DateRangeView.prototype._setOptions = function(options) {\n        var that = this;\n        this.calendar.setOptions({\n            allowReverse: options.allowReverse,\n            focusOnNav: false,\n            change: options.change,\n            culture: options.culture,\n            dates: options.dates,\n            depth: options.depth,\n            footer: options.footer,\n            format: options.format,\n            selectable: options.selectable,\n            max: options.max,\n            min: options.min,\n            month: options.month,\n            weekNumber: options.weekNumber,\n            start: options.start,\n            disableDates: options.disableDates,\n            range: options.range,\n            size: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? \"large\" : options.size || \"medium\"\n        });\n    };\n\n    DateRangeView.prototype.range = function(range) {\n        this._range = range;\n\n        if (this.calendar) {\n            if (!range.start && !range.end) {\n                this.calendar.selectRange(range);\n                this.calendar.rangeSelectable.clear();\n            } else {\n                this.calendar.selectRange(range);\n            }\n        }\n    };\n\n    DateRangeView.prototype.move = function(e) {\n        var that = this;\n        var key = e.keyCode;\n        var calendar = that.calendar;\n        var selectIsClicked = e.ctrlKey && key == keys.DOWN || key == keys.ENTER;\n        var handled = false;\n\n        if (e.altKey) {\n            if (key == keys.DOWN) {\n                that.open();\n                e.preventDefault();\n                handled = true;\n            } else if (key == keys.UP) {\n                that.close();\n                e.preventDefault();\n                handled = true;\n            }\n\n        } else if (that.popup.visible()) {\n\n            if (key == keys.ESC || (selectIsClicked && calendar._cell.hasClass(SELECTED))) {\n                that.close();\n                e.preventDefault();\n                return true;\n            }\n\n            that._current = calendar._move(e);\n\n            handled = true;\n        }\n\n        return handled;\n    };\n\n    DateRangeView.prototype._click = function(e) {\n\n        if (!this.options.autoClose) {\n            return;\n        }\n\n        if (mobileOS.ios || (mobileOS.android && (mobileOS.browser == \"firefox\" || mobileOS.browser == \"chrome\"))) {\n            if (this._range && this._range.end) {\n                this.close();\n            }\n        }\n        else if (this._range && this._range.start && this._range.end && $(e.currentTarget).closest(\".k-calendar-view\").is(\".k-calendar-monthview\")) {\n            this.close();\n        }\n    };\n\n    kendo.DateRangeView = DateRangeView;\n\n    var DateRangePicker = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var disabled;\n\n            Widget.fn.init.call(that, element, options);\n            element = that.element;\n            options = that.options;\n            options.disableDates = kendo.calendar.disabled(options.disableDates);\n\n            options.min = parse(element.attr(\"min\")) || parse(options.min);\n            options.max = parse(element.attr(\"max\")) || parse(options.max);\n\n            that._initialOptions = extend({}, options);\n\n            that._buildHTML();\n\n            that._range = that.options.range;\n            that._changeTriggered = false;\n\n            that._initializeDateView();\n            that._initializeDateViewProxy = that._initializeDateView.bind(that);\n\n            that.bigScreenMQL = mediaQuery(\"large\");\n            that.bigScreenMQL.onChange(()=> {\n                that._initializeDateViewProxy();\n            });\n\n            that._ariaTemplate = template(this.options.ARIATemplate).bind(that);\n            that._reset();\n            that._aria();\n\n            that._inputs\n                .on(UP + ns, that._click.bind(that))\n                .on(\"keydown\" + ns, that._keydown.bind(that));\n\n            that._initializeDateInputs();\n\n            that._expandButton();\n            that._clearButton();\n\n            disabled = element.is(\"[disabled]\");\n            if (disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(element.is(\"[readonly]\"));\n            }\n        },\n\n        options: {\n            name: \"DateRangePicker\",\n            labels: true,\n            allowReverse: false,\n            autoClose: true,\n            calendarButton: false,\n            clearButton: false,\n            footer: \"\",\n            format: \"\",\n            culture: \"\",\n            min: new Date(1900, 0, 1),\n            max: new Date(2099, 11, 31),\n            start: MONTH,\n            depth: MONTH,\n            adaptiveMode: \"none\",\n            animation: {},\n            month: {},\n            startField: \"\",\n            endField: \"\",\n            dates: [],\n            disableDates: null,\n            range: null,\n            ARIATemplate: ({ valueType, text }) => `Current focused ${valueType} is ${text}`,\n            weekNumber: false,\n            messages: {\n                startLabel: \"Start\",\n                endLabel: \"End\"\n            },\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\"\n        },\n\n        events: [\n            OPEN,\n            CLOSE,\n            CHANGE\n        ],\n\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(that, options);\n\n            options = that.options;\n\n            options.min = parse(options.min);\n            options.max = parse(options.max);\n            that._inputs.off(ns);\n\n            that._initializeDateInputs();\n            that.dateView.setOptions(options);\n            that._expandButton();\n            that._clearButton();\n            that._range = options.range;\n        },\n\n        _aria: function() {\n            this._inputs\n                .attr({\n                    role: \"combobox\",\n                    \"aria-haspopup\": \"grid\",\n                    \"aria-expanded\": false,\n                    \"aria-controls\": this.dateView._dateViewID,\n                    \"autocomplete\": \"off\"\n                });\n        },\n\n        _clearButton: function() {\n            let that = this,\n                options = that.options,\n                startInput = that._startInput,\n                endInput = that._endInput,\n                range = that.range();\n\n            if (!options.clearButton) {\n                return;\n            }\n\n            if (!that._startClearButton) {\n                that._startClearButton = $(`<span unselectable=\"on\" class=\"k-clear-value ${range && range.start ? '' : 'k-hidden'}\" title=\"Clear the start date value\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                    \"role\": \"button\",\n                    \"tabIndex\": -1\n                }).insertAfter(startInput).on(\"click\", that._clearValue.bind(that));\n            }\n\n            if (!that._endClearButton) {\n                that._endClearButton = $(`<span unselectable=\"on\" class=\"k-clear-value ${range && range.start ? '' : 'k-hidden'}\" title=\"Clear the end date value\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                    \"role\": \"button\",\n                    \"tabIndex\": -1\n                }).insertAfter(endInput).on(\"click\", that._clearValue.bind(that));\n            }\n        },\n\n        _expandButton: function() {\n            let that = this,\n                startInput = that._startInput,\n                endInput = that._endInput,\n                options = that.options,\n                startInputButton,\n                endInputButton;\n\n            if (!options.calendarButton) {\n                return;\n            }\n\n            startInputButton = startInput.next(\"button.k-input-button\");\n            endInputButton = endInput.next(\"button.k-input-button\");\n\n            if (!startInputButton[0]) {\n                startInputButton = $(html.renderButton('<button aria-label=\"select\" tabindex=\"-1\" class=\"k-input-button k-button k-icon-button\"></button>', {\n                    icon: \"calendar\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\"\n                })).insertAfter(startInput);\n            }\n\n            if (!endInputButton[0]) {\n                endInputButton = $(html.renderButton('<button aria-label=\"select\" tabindex=\"-1\" class=\"k-input-button k-button k-icon-button\"></button>', {\n                    icon: \"calendar\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\"\n                })).insertAfter(endInput);\n            }\n\n            that._startDateButton = startInputButton.attr({\n                \"role\": \"button\"\n            }).on(CLICK, that._expandButtonClick.bind(that));\n\n            that._endDateButton = endInputButton.attr({\n                \"role\": \"button\"\n            }).on(CLICK, that._expandButtonClick.bind(that));\n        },\n\n        _click: function() {\n            let that = this,\n                options = that.options;\n\n            if (options.calendarButton) {\n                return;\n            }\n\n            if (!that._preventInputAction && !that.dateView.popup.visible()) {\n                that.dateView.open();\n            }\n        },\n\n        _toggleClearButton: function(target, state) {\n            let that = this;\n\n            if (!target || !that.options.clearButton) {\n                return;\n            }\n\n            if (target === START) {\n                that._startClearButton.toggleClass(HIDDEN, !state);\n            }\n\n            if (target === END) {\n                that._endClearButton.toggleClass(HIDDEN, !state);\n            }\n        },\n\n        _clearValue: function(e) {\n            let that = this,\n                target = $(e.target),\n                type = target.closest(\".k-input\").find(\".k-input-inner\").data(\"input\"),\n                startDateInput = that._startDateInput,\n                endDateInput = that._endDateInput,\n                range = that.range();\n\n            if (type === START) {\n                startDateInput.value(null);\n                that.range({ start: null, end: range.end });\n            }\n\n            if (type === END) {\n                endDateInput.value(null);\n                that.range({ start: range.start, end: null });\n            }\n\n            that._toggleClearButton(type, false);\n        },\n\n        _expandButtonClick: function(e) {\n            let that = this;\n\n            if (!that._preventInputAction && !that.dateView.popup.visible()) {\n                that.dateView.open();\n                $(e.target).closest(\".k-input\").find(\".k-input-inner\").focus();\n            }\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                dateView = that.dateView,\n                handled = false;\n\n            if (that._preventInputAction) {\n                e.stopImmediatePropagation();\n                return;\n            }\n\n            handled = dateView.move(e);\n            that._updateARIA(dateView._current);\n\n            if (handled && e.stopImmediatePropagation) {\n                e.stopImmediatePropagation();\n            }\n        },\n\n        _updateARIA: function(date) {\n            var that = this;\n            var calendar = that.dateView.calendar;\n\n            if (that._inputs && that._inputs.length) {\n                that._inputs.removeAttr(ARIA_ACTIVEDESCENDANT);\n            }\n\n            if (calendar) {\n                if (date && !calendar._dateInViews(date)) {\n                    calendar.navigate(date);\n                }\n\n                if ($.contains(that.element[0], document.activeElement)) {\n                    that._inputs.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n                }\n            }\n        },\n\n        _inputFocus: function(e) {\n            let that = this, range = that.range();\n\n            if (that._currentTarget !== $(e.target).data(\"input\")) {\n                that._currentTarget = $(e.target).data(\"input\");\n\n                if (range) {\n                    range.start = that._startDateInput.value();\n                    range.end = that._endDateInput.value();\n                    that.range(range);\n                } else {\n                    that.range({ start: null, end: null });\n                }\n            }\n        },\n\n        _startChange: function(e) {\n            var that = this;\n            var input = e.sender;\n            var startValue = input.value();\n            var endValue = that._endDateInput.value();\n\n            if (that.options.disableDates(startValue)) {\n                e.sender.value(null);\n                startValue = null;\n            }\n\n            that.range({ start: startValue, end: endValue });\n\n            if (!that._changeTriggered) {\n                that.trigger(CHANGE);\n            }\n\n            that._toggleClearButton(START, startValue !== null);\n        },\n\n        _endChange: function(e) {\n            var that = this;\n            var input = e.sender;\n            var endValue = input.value();\n            var startValue = that._startDateInput.value();\n\n            if (that.options.disableDates(endValue)) {\n                e.sender.value(null);\n                endValue = null;\n            }\n\n            that.range({ start: startValue, end: endValue });\n\n            if (!that._changeTriggered) {\n                that.trigger(CHANGE);\n            }\n\n            if (!e.blur) {\n                if (that._currentTarget === END) {\n                    if (!startValue || !that.options.autoClose) {\n                        that._startDateInput.dateInputInstance.focus();\n                    } else {\n                        that._endDateInput.dateInputInstance.focus();\n                    }\n                } else {\n                    if (!endValue || !that.options.autoClose) {\n                        that._endDateInput.dateInputInstance.focus();\n                    } else {\n                        that._startDateInput.dateInputInstance.focus();\n                    }\n                }\n            }\n\n            that._toggleClearButton(END, endValue !== null);\n        },\n        _initializeDateView: function() {\n            var that = this;\n            var div;\n\n            if (that.dateView) {\n                that.dateView.destroy();\n                that.dateView = null;\n            }\n\n            that.dateView = new DateRangeView(extend({}, that.options, {\n                id: that.element.attr(ID),\n                anchor: that.wrapper,\n                views: 2,\n                selectable: {\n                    mode: \"range\",\n                    reverse: that.options.allowReverse,\n                    resetOnStart: false\n                },\n                range: that._range,\n                change: function() {\n                    var range = this.selectRange();\n                    that.range(range);\n                    that.trigger(CHANGE);\n                    that._changeTriggered = true;\n                    that._startDateInput.trigger(CHANGE);\n                    that._endDateInput.trigger(CHANGE);\n                    that._changeTriggered = false;\n                },\n                close: function(e) {\n                    let range = that.range();\n                    if (that.trigger(CLOSE)) {\n                        e.preventDefault();\n                    } else {\n                        that._inputs.attr(ARIA_EXPANDED, false);\n                        div.attr(ARIA_HIDDEN, true);\n\n                        setTimeout(function() {\n                            if (that._inputs) {\n                                that._inputs.removeAttr(ARIA_ACTIVEDESCENDANT);\n                            }\n\n                            if (range) {\n                                that.range(range);\n                            }\n                        });\n                    }\n                },\n                open: function(e) {\n                    if (that.trigger(OPEN)) {\n                        e.preventDefault();\n                    } else {\n                        that._inputs.attr(ARIA_EXPANDED, true);\n                        div.attr(ARIA_HIDDEN, false);\n                        that._updateARIA();\n                    }\n                }\n            }));\n\n            div = that.dateView.div;\n        },\n        _initializeDateInputs: function() {\n            var that = this;\n            var options = that.options;\n            var range = options.range || {};\n            var inputOptions = {\n                footer: options.footer,\n                format: options.format,\n                culture: options.culture,\n                min: options.min,\n                max: options.max,\n                start: options.start,\n                startField: options.startField,\n                endField: options.endField,\n                depth: options.depth,\n                animation: options.animation,\n                month: options.month,\n                dates: options.dates,\n                disableDates: options.disableDates,\n                ARIATemplate: options.ARIATemplate,\n                weekNumber: options.weekNumber,\n                size: options.size,\n                fillMode: options.fillMode,\n                rounded: options.rounded\n            };\n\n            if (that._startDateInput) {\n                that._startDateInput.destroy();\n                that._endDateInput.destroy();\n                that.wrapper.empty();\n                that._buildHTML();\n                that._inputs\n                    .on(UP + ns, that._click.bind(that))\n                    .on(\"keydown\" + ns, that._keydown.bind(that));\n            }\n            that._startDateInput = that._startInput.kendoDateInput(extend(true, inputOptions, { value: range.start })).getKendoDateInput();\n            that._endDateInput = that._endInput.kendoDateInput(extend(true, inputOptions, { value: range.end })).getKendoDateInput();\n\n            that._startChangeHandler = that._startChange.bind(that);\n            that._startDateInput.bind(CHANGE, that._startChangeHandler);\n\n            that._endChangeHandler = that._endChange.bind(that);\n            that._endDateInput.bind(CHANGE, that._endChangeHandler);\n\n            that._inputs.on(\"focus\" + ns, that._inputFocus.bind(that));\n        },\n\n        _buildHTML: function() {\n            var that = this;\n            var element = that.element;\n            var id;\n\n            if (!that.wrapper) {\n                that.wrapper = element.addClass(\"k-daterangepicker\");\n            }\n\n            if (that.options.labels) {\n                id = kendo.guid();\n                $('<span class=\"k-floating-label-container\"><input data-input=\"' + START + '\" id=\"' + id + '\"/><label for=\"' + id + '\" class=\"k-floating-label\">' + kendo.htmlEncode(that.options.messages.startLabel) + '</label></span>').appendTo(that.wrapper);\n                id = kendo.guid();\n                $('<span>&nbsp;</span><span class=\"k-floating-label-container\"><input data-input=\"' + END + '\" id=\"' + id + '\"/><label for=\"' + id + '\" class=\"k-floating-label\">' + kendo.htmlEncode(that.options.messages.endLabel) + '</label></span>').appendTo(that.wrapper);\n            } else {\n                $('<input data-input=\"' + START + '\" /><span>&nbsp;</span><input data-input=\"' + END + '\" />').appendTo(that.wrapper);\n            }\n\n            that._startInput = that.wrapper.find(\"input\").eq(0);\n            that._endInput = that.wrapper.find(\"input\").eq(1);\n\n            if (that.options.startField !== \"\") {\n                that._startInput.attr(kendo.attr(\"bind\"), \"value: \" + that.options.startField);\n\t\t\t\tthat._startInput.attr(\"name\", that.options.startField);\n            }\n\n            if (that.options.endField !== \"\") {\n                that._endInput.attr(kendo.attr(\"bind\"), \"value: \" + that.options.endField);\n\t\t\t\tthat._endInput.attr(\"name\", that.options.endField);\n            }\n\n            that._inputs = that._startInput.add(that._endInput);\n        },\n\n        _option: function(option, value) {\n            var that = this,\n                options = that.options;\n\n            if (value === undefined$1) {\n                return options[option];\n            }\n\n            value = parse(value, options.parseFormats, options.culture);\n\n            if (!value) {\n                return;\n            }\n\n            options[option] = new Date(+value);\n            that.dateView[option](value);\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    that.max(that._initialOptions.max);\n                    that.min(that._initialOptions.min);\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _editable: function(options) {\n            var that = this,\n                inputs = that._inputs,\n                readonly = options.readonly,\n                disable = options.disable;\n\n            if (!readonly && !disable) {\n                that.wrapper\n                    .removeClass(STATEDISABLED);\n\n                $.each(inputs, function(key, item) {\n                    item.removeAttribute(DISABLED);\n                    item.removeAttribute(READONLY);\n                });\n\n                inputs.attr(ARIA_DISABLED, false);\n                that._preventInputAction = false;\n            } else {\n                that.wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    inputs.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable);\n\n                that._preventInputAction = true;\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that._startDateInput) {\n                that._startDateInput.unbind(CHANGE, that._startChangeHandler);\n                that._startDateInput.destroy();\n                that._startChangeHandler = null;\n            }\n\n            if (that._endDateInput) {\n                that._endDateInput.unbind(CHANGE, that._endChangeHandler);\n                that._endDateInput.destroy();\n                that._endChangeHandler = null;\n            }\n\n            if (that._startDateButton) {\n                that._startDateButton.off(CLICK, that._expandButtonClick);\n            }\n\n            if (that._endDateButton) {\n                that._endDateButton.off(CLICK, that._expandButtonClick);\n            }\n\n            if (that._startDateClear) {\n                that._startDateClear.off(CLICK, that._clearValue);\n            }\n\n            if (that._endDateClear) {\n                that._endDateClear.off(CLICK, that._clearValue);\n            }\n\n            if (that._form) {\n                that._form.off(\"reset\", that._resetHandler);\n            }\n\n            that._inputs.off(ns);\n            that._inputs = null;\n\n            if (that.bigScreenMQL) {\n                that.bigScreenMQL.destroy();\n            }\n\n            that._createDateViewProxy = null;\n\n            that.dateView.destroy();\n\n            that.element.off(ns);\n\n            Widget.fn.destroy.call(that);\n        },\n\n        range: function(range) {\n            let that = this, target = that._currentTarget || START;\n\n            if (range === undefined$1) {\n                return that._range;\n            }\n\n            that._range = range;\n            that._range[\"target\"] = target;\n            that.dateView.range({ start: null, end: null, target: target });\n            if (!range) {\n                that._startDateInput.value(null);\n                that._endDateInput.value(null);\n            }\n\n            that._startDateInput.value(range.start ? range.start : null);\n            that._endDateInput.value(range.end ? range.end : null);\n\n            if (target === START) {\n                that.dateView.range({ start: range.start, end: range.end || null, target: target });\n            }\n\n            if (target === END) {\n                that.dateView.range({ start: range.start || null, end: range.end, target: target });\n            }\n        },\n\n        open: function() {\n            this.dateView.open();\n        },\n\n        close: function() {\n            this.dateView.close();\n        },\n\n        min: function(value) {\n            return this._option(MIN, value);\n        },\n\n        max: function(value) {\n            return this._option(MAX, value);\n        },\n\n        readonly: function(readonly) {\n            this._startDateInput.readonly(readonly);\n            this._endDateInput.readonly(readonly);\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n        },\n\n        enable: function(enable) {\n            this._startDateInput.enable(enable);\n            this._endDateInput.enable(enable);\n\n            if (!enable) {\n                this.close();\n            }\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n        }\n    });\n\n    kendo.ui.plugin(DateRangePicker);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}